

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Feb 10 10:47:32 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292  0000                     	;# 
   293  0001                     	;# 
   294  0002                     	;# 
   295  0003                     	;# 
   296  0004                     	;# 
   297  0005                     	;# 
   298  0006                     	;# 
   299  0007                     	;# 
   300  0008                     	;# 
   301  0009                     	;# 
   302  000A                     	;# 
   303  000B                     	;# 
   304  000C                     	;# 
   305  000D                     	;# 
   306  000E                     	;# 
   307  000E                     	;# 
   308  000F                     	;# 
   309  0010                     	;# 
   310  0011                     	;# 
   311  0012                     	;# 
   312  0013                     	;# 
   313  0014                     	;# 
   314  0015                     	;# 
   315  0015                     	;# 
   316  0016                     	;# 
   317  0017                     	;# 
   318  0018                     	;# 
   319  0019                     	;# 
   320  001A                     	;# 
   321  001B                     	;# 
   322  001B                     	;# 
   323  001C                     	;# 
   324  001D                     	;# 
   325  001E                     	;# 
   326  001F                     	;# 
   327  0081                     	;# 
   328  0085                     	;# 
   329  0086                     	;# 
   330  0087                     	;# 
   331  0088                     	;# 
   332  0089                     	;# 
   333  008C                     	;# 
   334  008D                     	;# 
   335  008E                     	;# 
   336  008F                     	;# 
   337  0090                     	;# 
   338  0091                     	;# 
   339  0092                     	;# 
   340  0093                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0095                     	;# 
   345  0096                     	;# 
   346  0097                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009A                     	;# 
   350  009B                     	;# 
   351  009C                     	;# 
   352  009D                     	;# 
   353  009E                     	;# 
   354  009F                     	;# 
   355  0105                     	;# 
   356  0107                     	;# 
   357  0108                     	;# 
   358  0109                     	;# 
   359  010C                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  0185                     	;# 
   365  0187                     	;# 
   366  0188                     	;# 
   367  0189                     	;# 
   368  018C                     	;# 
   369  018D                     	;# 
   370  000B                     _INTCONbits	set	11
   371  0008                     _PORTD	set	8
   372  0006                     _PORTB	set	6
   373  001E                     _ADRESH	set	30
   374  001F                     _ADCON0bits	set	31
   375  000C                     _PIR1bits	set	12
   376  0047                     _RD7	set	71
   377  0045                     _RD5	set	69
   378  0037                     _RB7	set	55
   379  0036                     _RB6	set	54
   380  0035                     _RB5	set	53
   381  0034                     _RB4	set	52
   382  0033                     _RB3	set	51
   383  0032                     _RB2	set	50
   384  0031                     _RB1	set	49
   385  0030                     _RB0	set	48
   386  009F                     _ADCON1bits	set	159
   387  008C                     _PIE1bits	set	140
   388  0088                     _TRISD	set	136
   389  0086                     _TRISB	set	134
   390  0085                     _TRISA	set	133
   391  0189                     _ANSELH	set	393
   392  0188                     _ANSELbits	set	392
   393                           
   394                           	psect	strings
   395  0254                     __pstrings:	
   396  0254                     stringtab:	
   397  0254                     __stringtab:	
   398  0254                     stringcode:	
   399                           ;	String table - string pointers are 1 byte each
   400                           
   401  0254                     stringdir:	
   402  0254  3002               	movlw	high stringdir
   403  0255  008A               	movwf	10
   404  0256  0804               	movf	4,w
   405  0257  0A84               	incf	4,f
   406  0258  0782               	addwf	2,f
   407  0259                     __stringbase:	
   408  0259  3400               	retlw	0
   409  025A                     __end_of__stringtab:	
   410  025A                     STR_1:	
   411  025A  3456               	retlw	86	;'V'
   412  025B  3431               	retlw	49	;'1'
   413  025C  3420               	retlw	32	;' '
   414  025D  3420               	retlw	32	;' '
   415  025E  3420               	retlw	32	;' '
   416  025F  3456               	retlw	86	;'V'
   417  0260  3432               	retlw	50	;'2'
   418  0261  3400               	retlw	0
   419                           
   420                           ; #config settings
   421  0000                     
   422                           	psect	cinit
   423  000F                     start_initialization:	
   424  000F                     __initialization:	
   425                           
   426                           ; Clear objects allocated to COMMON
   427  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   428  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   429  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   430  0012                     end_of_initialization:	
   431                           ;End of C runtime variable initialization code
   432                           
   433  0012                     __end_of__initialization:	
   434  0012  0183               	clrf	3
   435  0013  120A  118A  296B   	ljmp	_main	;jump to C main() function
   436                           
   437                           	psect	bssCOMMON
   438  0078                     __pbssCOMMON:	
   439  0078                     _start_another:	
   440  0078                     	ds	1
   441  0079                     _pot2:	
   442  0079                     	ds	1
   443  007A                     _pot1:	
   444  007A                     	ds	1
   445                           
   446                           	psect	cstackCOMMON
   447  0070                     __pcstackCOMMON:	
   448  0070                     ?_Port_init:	
   449  0070                     ?_start_conversion:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_LCD_PORT:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_LCD_CMD:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_LCD_CLR:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_LCD_INIT:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_LCD_WRITE_CHAR:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_LCD_WRITE_STRING:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_isr:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ??_isr:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_main:	
   477                           ; 1 bytes @ 0x0
   478                           
   479                           
   480                           ; 1 bytes @ 0x0
   481  0070                     	ds	3
   482  0073                     ??_Port_init:	
   483  0073                     ?_ADC_init:	
   484                           ; 1 bytes @ 0x3
   485                           
   486  0073                     ??_start_conversion:	
   487                           ; 1 bytes @ 0x3
   488                           
   489  0073                     ??_LCD_PORT:	
   490                           ; 1 bytes @ 0x3
   491                           
   492  0073                     LCD_PORT@a:	
   493                           ; 1 bytes @ 0x3
   494                           
   495  0073                     ADC_init@channel:	
   496                           ; 1 bytes @ 0x3
   497                           
   498                           
   499                           ; 1 bytes @ 0x3
   500  0073                     	ds	1
   501  0074                     ??_LCD_CMD:	
   502  0074                     ??_LCD_WRITE_CHAR:	
   503                           ; 1 bytes @ 0x4
   504                           
   505  0074                     ADC_init@int_on:	
   506                           ; 1 bytes @ 0x4
   507                           
   508                           
   509                           ; 1 bytes @ 0x4
   510  0074                     	ds	1
   511  0075                     LCD_WRITE_CHAR@a:	
   512  0075                     ADC_init@left_or_right:	
   513                           ; 1 bytes @ 0x5
   514                           
   515                           
   516                           ; 1 bytes @ 0x5
   517  0075                     	ds	1
   518  0076                     ??_ADC_init:	
   519  0076                     ??_LCD_WRITE_STRING:	
   520                           ; 1 bytes @ 0x6
   521                           
   522  0076                     LCD_CMD@a:	
   523                           ; 1 bytes @ 0x6
   524                           
   525                           
   526                           ; 1 bytes @ 0x6
   527  0076                     	ds	1
   528  0077                     ??_LCD_CLR:	
   529  0077                     ?_LCD_SET_CURSOR:	
   530                           ; 1 bytes @ 0x7
   531                           
   532  0077                     LCD_SET_CURSOR@b:	
   533                           ; 1 bytes @ 0x7
   534                           
   535                           
   536                           ; 1 bytes @ 0x7
   537  0077                     	ds	1
   538  0078                     ??_main:	
   539                           
   540                           	psect	cstackBANK0
   541  0020                     __pcstackBANK0:	
   542                           ; 1 bytes @ 0x8
   543                           
   544  0020                     ??_LCD_SET_CURSOR:	
   545  0020                     ??_LCD_INIT:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0020                     LCD_WRITE_STRING@a:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0020                     ADC_init@Fosc:	
   552                           ; 1 bytes @ 0x0
   553                           
   554                           
   555                           ; 1 bytes @ 0x0
   556  0020                     	ds	1
   557  0021                     LCD_SET_CURSOR@a:	
   558  0021                     LCD_WRITE_STRING@i:	
   559                           ; 1 bytes @ 0x1
   560                           
   561                           
   562                           ; 2 bytes @ 0x1
   563  0021                     	ds	1
   564  0022                     LCD_SET_CURSOR@temporal:	
   565                           
   566                           ; 1 bytes @ 0x2
   567  0022                     	ds	1
   568                           
   569                           	psect	maintext
   570  016B                     __pmaintext:	
   571 ;;
   572 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   573 ;;
   574 ;; *************** function _main *****************
   575 ;; Defined at:
   576 ;;		line 56 in file "main_lab3.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : B00/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels required when called:    4
   596 ;; This function calls:
   597 ;;		_ADC_init
   598 ;;		_LCD_CLR
   599 ;;		_LCD_INIT
   600 ;;		_LCD_SET_CURSOR
   601 ;;		_LCD_WRITE_STRING
   602 ;;		_Port_init
   603 ;;		_start_conversion
   604 ;; This function is called by:
   605 ;;		Startup code after reset
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           
   609                           
   610                           ;psect for function _main
   611  016B                     _main:	
   612  016B                     l1208:	
   613                           ;incstack = 0
   614                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   615                           
   616                           
   617                           ;main_lab3.c: 57:     Port_init();
   618  016B  120A  118A  2229  120A  118A  	fcall	_Port_init
   619  0170                     l1210:	
   620                           
   621                           ;main_lab3.c: 58:     ADC_init(1,0,1,0);
   622  0170  01F3               	clrf	ADC_init@channel
   623  0171  01F4               	clrf	ADC_init@int_on
   624  0172  0AF4               	incf	ADC_init@int_on,f
   625  0173  01F5               	clrf	ADC_init@left_or_right
   626  0174  3001               	movlw	1
   627  0175  120A  118A  2016  120A  118A  	fcall	_ADC_init
   628  017A                     l1212:	
   629                           
   630                           ;main_lab3.c: 59:     LCD_INIT();
   631  017A  120A  118A  20D2  120A  118A  	fcall	_LCD_INIT
   632  017F                     l1214:	
   633                           
   634                           ;main_lab3.c: 61:         if (start_another == 1){
   635  017F  0378               	decf	_start_another,w
   636  0180  1D03               	btfss	3,2
   637  0181  2983               	goto	u331
   638  0182  2984               	goto	u330
   639  0183                     u331:	
   640  0183  298A               	goto	l1220
   641  0184                     u330:	
   642  0184                     l1216:	
   643                           
   644                           ;main_lab3.c: 62:             start_conversion();
   645  0184  120A  118A  226F  120A  118A  	fcall	_start_conversion
   646  0189                     l1218:	
   647                           
   648                           ;main_lab3.c: 63:             start_another = 0;
   649  0189  01F8               	clrf	_start_another
   650  018A                     l1220:	
   651                           
   652                           ;main_lab3.c: 65:         LCD_CLR();
   653  018A  120A  118A  2262  120A  118A  	fcall	_LCD_CLR
   654  018F                     l1222:	
   655                           
   656                           ;main_lab3.c: 66:         LCD_SET_CURSOR(1,1);
   657  018F  01F7               	clrf	LCD_SET_CURSOR@b
   658  0190  0AF7               	incf	LCD_SET_CURSOR@b,f
   659  0191  3001               	movlw	1
   660  0192  120A  118A  21CA  120A  118A  	fcall	_LCD_SET_CURSOR
   661  0197                     l1224:	
   662                           
   663                           ;main_lab3.c: 67:         LCD_WRITE_STRING("V1   V2");
   664  0197  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   665  0198  120A  118A  21A1  120A  118A  	fcall	_LCD_WRITE_STRING
   666  019D  297F               	goto	l1214
   667  019E  120A  118A  280C   	ljmp	start
   668  01A1                     __end_of_main:	
   669                           
   670                           	psect	text1
   671  026F                     __ptext1:	
   672 ;; *************** function _start_conversion *****************
   673 ;; Defined at:
   674 ;;		line 24 in file "../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		None
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   688 ;;      Params:         0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0
   691 ;;      Totals:         0       0       0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels used:    1
   694 ;; Hardware stack levels required when called:    1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _start_conversion
   704  026F                     _start_conversion:	
   705  026F                     l898:	
   706                           ;incstack = 0
   707                           ; Regs used in _start_conversion: []
   708                           
   709                           
   710                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 25:     _delay((unsigned l
      +                          ong)((5)*(4000000/4000000.0)));
   711  026F  2A70               	nop2	;2 cycle nop
   712  0270  2A71               	nop2	;2 cycle nop
   713  0271  0000               	nop
   714                           
   715                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 26:     ADCON0bits.GO_DONE
      +                           = 1;
   716  0272  1283               	bcf	3,5	;RP0=0, select bank0
   717  0273  1303               	bcf	3,6	;RP1=0, select bank0
   718  0274  149F               	bsf	31,1	;volatile
   719  0275                     l151:	
   720  0275  0008               	return
   721  0276                     __end_of_start_conversion:	
   722                           
   723                           	psect	text2
   724  0229                     __ptext2:	
   725 ;; *************** function _Port_init *****************
   726 ;; Defined at:
   727 ;;		line 73 in file "main_lab3.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;		None
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   741 ;;      Params:         0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0
   744 ;;      Totals:         0       0       0       0       0
   745 ;;Total ram usage:        0 bytes
   746 ;; Hardware stack levels used:    1
   747 ;; Hardware stack levels required when called:    1
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755                           
   756                           ;psect for function _Port_init
   757  0229                     _Port_init:	
   758  0229                     l852:	
   759                           ;incstack = 0
   760                           ; Regs used in _Port_init: [wreg+status,2]
   761                           
   762                           
   763                           ;main_lab3.c: 74:     TRISA = 1;
   764  0229  3001               	movlw	1
   765  022A  1683               	bsf	3,5	;RP0=1, select bank1
   766  022B  1303               	bcf	3,6	;RP1=0, select bank1
   767  022C  0085               	movwf	5	;volatile
   768  022D                     l854:	
   769                           
   770                           ;main_lab3.c: 75:     ANSELbits.ANS0 = 1;
   771  022D  1683               	bsf	3,5	;RP0=1, select bank3
   772  022E  1703               	bsf	3,6	;RP1=1, select bank3
   773  022F  1408               	bsf	8,0	;volatile
   774  0230                     l856:	
   775                           
   776                           ;main_lab3.c: 76:     ANSELbits.ANS1 = 1;
   777  0230  1488               	bsf	8,1	;volatile
   778  0231                     l858:	
   779                           
   780                           ;main_lab3.c: 77:     ANSELH = 0;
   781  0231  0189               	clrf	9	;volatile
   782  0232                     l860:	
   783                           
   784                           ;main_lab3.c: 78:     TRISB = 0;
   785  0232  1683               	bsf	3,5	;RP0=1, select bank1
   786  0233  1303               	bcf	3,6	;RP1=0, select bank1
   787  0234  0186               	clrf	6	;volatile
   788  0235                     l862:	
   789                           
   790                           ;main_lab3.c: 79:     PORTB = 0;
   791  0235  1283               	bcf	3,5	;RP0=0, select bank0
   792  0236  1303               	bcf	3,6	;RP1=0, select bank0
   793  0237  0186               	clrf	6	;volatile
   794  0238                     l864:	
   795                           
   796                           ;main_lab3.c: 80:     TRISD = 0;
   797  0238  1683               	bsf	3,5	;RP0=1, select bank1
   798  0239  1303               	bcf	3,6	;RP1=0, select bank1
   799  023A  0188               	clrf	8	;volatile
   800  023B                     l866:	
   801                           
   802                           ;main_lab3.c: 81:     PORTD = 0;
   803  023B  1283               	bcf	3,5	;RP0=0, select bank0
   804  023C  1303               	bcf	3,6	;RP1=0, select bank0
   805  023D  0188               	clrf	8	;volatile
   806  023E                     l131:	
   807  023E  0008               	return
   808  023F                     __end_of_Port_init:	
   809                           
   810                           	psect	text3
   811  01A1                     __ptext3:	
   812 ;; *************** function _LCD_WRITE_STRING *****************
   813 ;; Defined at:
   814 ;;		line 106 in file "LCD_8bits_main.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  a               1    wreg     PTR unsigned char 
   817 ;;		 -> STR_1(8), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  a               1    0[BANK0 ] PTR unsigned char 
   820 ;;		 -> STR_1(8), 
   821 ;;  i               2    1[BANK0 ] int 
   822 ;; Return value:  Size  Location     Type
   823 ;;                  1    wreg      void 
   824 ;; Registers used:
   825 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   826 ;; Tracked objects:
   827 ;;		On entry : 0/0
   828 ;;		On exit  : 0/0
   829 ;;		Unchanged: 0/0
   830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   831 ;;      Params:         0       0       0       0       0
   832 ;;      Locals:         0       3       0       0       0
   833 ;;      Temps:          0       0       0       0       0
   834 ;;      Totals:         0       3       0       0       0
   835 ;;Total ram usage:        3 bytes
   836 ;; Hardware stack levels used:    1
   837 ;; Hardware stack levels required when called:    3
   838 ;; This function calls:
   839 ;;		_LCD_WRITE_CHAR
   840 ;; This function is called by:
   841 ;;		_main
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _LCD_WRITE_STRING
   847  01A1                     _LCD_WRITE_STRING:	
   848                           
   849                           ;incstack = 0
   850                           ; Regs used in _LCD_WRITE_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   851                           ;LCD_WRITE_STRING@a stored from wreg
   852  01A1  1283               	bcf	3,5	;RP0=0, select bank0
   853  01A2  1303               	bcf	3,6	;RP1=0, select bank0
   854  01A3  00A0               	movwf	LCD_WRITE_STRING@a
   855  01A4                     l1162:	
   856                           
   857                           ;LCD_8bits_main.c: 107:     int i;;LCD_8bits_main.c: 108:     for(i=0; a[i]!='\0'; i++)
   858  01A4  01A1               	clrf	LCD_WRITE_STRING@i
   859  01A5  01A2               	clrf	LCD_WRITE_STRING@i+1
   860  01A6  29BC               	goto	l1168
   861  01A7                     l1164:	
   862                           
   863                           ;LCD_8bits_main.c: 109:         LCD_WRITE_CHAR(a[i]);
   864  01A7  0821               	movf	LCD_WRITE_STRING@i,w
   865  01A8  0720               	addwf	LCD_WRITE_STRING@a,w
   866  01A9  0084               	movwf	4
   867  01AA  120A  118A  2254  120A  118A  	fcall	stringdir
   868  01AF  120A  118A  223F  120A  118A  	fcall	_LCD_WRITE_CHAR
   869  01B4                     l1166:	
   870  01B4  3001               	movlw	1
   871  01B5  1283               	bcf	3,5	;RP0=0, select bank0
   872  01B6  1303               	bcf	3,6	;RP1=0, select bank0
   873  01B7  07A1               	addwf	LCD_WRITE_STRING@i,f
   874  01B8  1803               	skipnc
   875  01B9  0AA2               	incf	LCD_WRITE_STRING@i+1,f
   876  01BA  3000               	movlw	0
   877  01BB  07A2               	addwf	LCD_WRITE_STRING@i+1,f
   878  01BC                     l1168:	
   879  01BC  0821               	movf	LCD_WRITE_STRING@i,w
   880  01BD  0720               	addwf	LCD_WRITE_STRING@a,w
   881  01BE  0084               	movwf	4
   882  01BF  120A  118A  2254  120A  118A  	fcall	stringdir
   883  01C4  3A00               	xorlw	0
   884  01C5  1D03               	skipz
   885  01C6  29C8               	goto	u311
   886  01C7  29C9               	goto	u310
   887  01C8                     u311:	
   888  01C8  29A7               	goto	l1164
   889  01C9                     u310:	
   890  01C9                     l65:	
   891  01C9  0008               	return
   892  01CA                     __end_of_LCD_WRITE_STRING:	
   893                           
   894                           	psect	text4
   895  023F                     __ptext4:	
   896 ;; *************** function _LCD_WRITE_CHAR *****************
   897 ;; Defined at:
   898 ;;		line 98 in file "LCD_8bits_main.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  a               1    wreg     unsigned char 
   901 ;; Auto vars:     Size  Location     Type
   902 ;;  a               1    5[COMMON] unsigned char 
   903 ;; Return value:  Size  Location     Type
   904 ;;                  1    wreg      void 
   905 ;; Registers used:
   906 ;;		wreg, status,2, status,0, pclath, cstack
   907 ;; Tracked objects:
   908 ;;		On entry : 0/0
   909 ;;		On exit  : 0/0
   910 ;;		Unchanged: 0/0
   911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   912 ;;      Params:         0       0       0       0       0
   913 ;;      Locals:         1       0       0       0       0
   914 ;;      Temps:          1       0       0       0       0
   915 ;;      Totals:         2       0       0       0       0
   916 ;;Total ram usage:        2 bytes
   917 ;; Hardware stack levels used:    1
   918 ;; Hardware stack levels required when called:    2
   919 ;; This function calls:
   920 ;;		_LCD_PORT
   921 ;; This function is called by:
   922 ;;		_LCD_WRITE_STRING
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           
   927                           ;psect for function _LCD_WRITE_CHAR
   928  023F                     _LCD_WRITE_CHAR:	
   929                           
   930                           ;incstack = 0
   931                           ; Regs used in _LCD_WRITE_CHAR: [wreg+status,2+status,0+pclath+cstack]
   932                           ;LCD_WRITE_CHAR@a stored from wreg
   933  023F  00F5               	movwf	LCD_WRITE_CHAR@a
   934  0240                     l1116:	
   935                           
   936                           ;LCD_8bits_main.c: 99:     RD5 = 1;
   937  0240  1283               	bcf	3,5	;RP0=0, select bank0
   938  0241  1303               	bcf	3,6	;RP1=0, select bank0
   939  0242  1688               	bsf	8,5	;volatile
   940  0243                     l1118:	
   941                           
   942                           ;LCD_8bits_main.c: 100:     LCD_PORT (a);
   943  0243  0875               	movf	LCD_WRITE_CHAR@a,w
   944  0244  120A  118A  212D  120A  118A  	fcall	_LCD_PORT
   945  0249                     l1120:	
   946                           
   947                           ;LCD_8bits_main.c: 101:     RD7 = 1;
   948  0249  1283               	bcf	3,5	;RP0=0, select bank0
   949  024A  1303               	bcf	3,6	;RP1=0, select bank0
   950  024B  1788               	bsf	8,7	;volatile
   951  024C                     l1122:	
   952                           
   953                           ;LCD_8bits_main.c: 102:     _delay((unsigned long)((40)*(4000000/4000000.0)));
   954  024C  300D               	movlw	13
   955  024D  00F4               	movwf	??_LCD_WRITE_CHAR
   956  024E                     u347:	
   957  024E  0BF4               	decfsz	??_LCD_WRITE_CHAR,f
   958  024F  2A4E               	goto	u347
   959  0250                     l1124:	
   960                           
   961                           ;LCD_8bits_main.c: 103:     RD7 = 0;
   962  0250  1283               	bcf	3,5	;RP0=0, select bank0
   963  0251  1303               	bcf	3,6	;RP1=0, select bank0
   964  0252  1388               	bcf	8,7	;volatile
   965  0253                     l59:	
   966  0253  0008               	return
   967  0254                     __end_of_LCD_WRITE_CHAR:	
   968                           
   969                           	psect	text5
   970  01CA                     __ptext5:	
   971 ;; *************** function _LCD_SET_CURSOR *****************
   972 ;; Defined at:
   973 ;;		line 68 in file "LCD_8bits_main.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  a               1    wreg     unsigned char 
   976 ;;  b               1    7[COMMON] unsigned char 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  a               1    1[BANK0 ] unsigned char 
   979 ;;  temporal        1    2[BANK0 ] unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0, pclath, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         1       0       0       0       0
   990 ;;      Locals:         0       2       0       0       0
   991 ;;      Temps:          0       1       0       0       0
   992 ;;      Totals:         1       3       0       0       0
   993 ;;Total ram usage:        4 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    3
   996 ;; This function calls:
   997 ;;		_LCD_CMD
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _LCD_SET_CURSOR
  1005  01CA                     _LCD_SET_CURSOR:	
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _LCD_SET_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  1009                           ;LCD_SET_CURSOR@a stored from wreg
  1010  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1011  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1012  01CC  00A1               	movwf	LCD_SET_CURSOR@a
  1013  01CD                     l1128:	
  1014                           
  1015                           ;LCD_8bits_main.c: 69:     uint8_t temporal;;LCD_8bits_main.c: 70:     if (a == 1) {
  1016  01CD  0321               	decf	LCD_SET_CURSOR@a,w
  1017  01CE  1D03               	btfss	3,2
  1018  01CF  29D1               	goto	u291
  1019  01D0  29D2               	goto	u290
  1020  01D1                     u291:	
  1021  01D1  29DE               	goto	l1134
  1022  01D2                     u290:	
  1023  01D2                     l1130:	
  1024                           
  1025                           ;LCD_8bits_main.c: 71:         temporal = 0x80 + b - 1;
  1026  01D2  0877               	movf	LCD_SET_CURSOR@b,w
  1027  01D3  3E7F               	addlw	127
  1028  01D4  00A0               	movwf	??_LCD_SET_CURSOR
  1029  01D5  0820               	movf	??_LCD_SET_CURSOR,w
  1030  01D6  00A2               	movwf	LCD_SET_CURSOR@temporal
  1031  01D7                     l1132:	
  1032                           
  1033                           ;LCD_8bits_main.c: 72:         LCD_CMD(temporal);
  1034  01D7  0822               	movf	LCD_SET_CURSOR@temporal,w
  1035  01D8  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1036                           
  1037                           ;LCD_8bits_main.c: 73:     }
  1038  01DD  29EF               	goto	l53
  1039  01DE                     l1134:	
  1040  01DE  3002               	movlw	2
  1041  01DF  0621               	xorwf	LCD_SET_CURSOR@a,w
  1042  01E0  1D03               	btfss	3,2
  1043  01E1  29E3               	goto	u301
  1044  01E2  29E4               	goto	u300
  1045  01E3                     u301:	
  1046  01E3  29EF               	goto	l53
  1047  01E4                     u300:	
  1048  01E4                     l1136:	
  1049                           
  1050                           ;LCD_8bits_main.c: 75:         temporal = 0xC0 + b - 1;
  1051  01E4  0877               	movf	LCD_SET_CURSOR@b,w
  1052  01E5  3EBF               	addlw	191
  1053  01E6  00A0               	movwf	??_LCD_SET_CURSOR
  1054  01E7  0820               	movf	??_LCD_SET_CURSOR,w
  1055  01E8  00A2               	movwf	LCD_SET_CURSOR@temporal
  1056  01E9                     l1138:	
  1057                           
  1058                           ;LCD_8bits_main.c: 76:         LCD_CMD(temporal);
  1059  01E9  0822               	movf	LCD_SET_CURSOR@temporal,w
  1060  01EA  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1061  01EF                     l53:	
  1062  01EF  0008               	return
  1063  01F0                     __end_of_LCD_SET_CURSOR:	
  1064                           
  1065                           	psect	text6
  1066  00D2                     __ptext6:	
  1067 ;; *************** function _LCD_INIT *****************
  1068 ;; Defined at:
  1069 ;;		line 80 in file "LCD_8bits_main.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0, pclath, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0
  1085 ;;      Temps:          0       2       0       0       0
  1086 ;;      Totals:         0       2       0       0       0
  1087 ;;Total ram usage:        2 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    3
  1090 ;; This function calls:
  1091 ;;		_LCD_CMD
  1092 ;;		_LCD_PORT
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _LCD_INIT
  1100  00D2                     _LCD_INIT:	
  1101  00D2                     l1140:	
  1102                           ;incstack = 0
  1103                           ; Regs used in _LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
  1104                           
  1105                           
  1106                           ;LCD_8bits_main.c: 81:     LCD_PORT(0x00);
  1107  00D2  3000               	movlw	0
  1108  00D3  120A  118A  212D  120A  118A  	fcall	_LCD_PORT
  1109  00D8                     l1142:	
  1110                           
  1111                           ;LCD_8bits_main.c: 82:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1112  00D8  301A               	movlw	26
  1113  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  1114  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  1115  00DB  00A1               	movwf	??_LCD_INIT+1
  1116  00DC  30F7               	movlw	247
  1117  00DD  00A0               	movwf	??_LCD_INIT
  1118  00DE                     u357:	
  1119  00DE  0BA0               	decfsz	??_LCD_INIT,f
  1120  00DF  28DE               	goto	u357
  1121  00E0  0BA1               	decfsz	??_LCD_INIT+1,f
  1122  00E1  28DE               	goto	u357
  1123  00E2  28E3               	nop2
  1124  00E3                     l1144:	
  1125                           
  1126                           ;LCD_8bits_main.c: 83:     LCD_CMD(0x03);
  1127  00E3  3003               	movlw	3
  1128  00E4  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1129                           
  1130                           ;LCD_8bits_main.c: 84:     _delay((unsigned long)((5)*(4000000/4000.0)));
  1131  00E9  3007               	movlw	7
  1132  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1133  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1134  00EC  00A1               	movwf	??_LCD_INIT+1
  1135  00ED  307C               	movlw	124
  1136  00EE  00A0               	movwf	??_LCD_INIT
  1137  00EF                     u367:	
  1138  00EF  0BA0               	decfsz	??_LCD_INIT,f
  1139  00F0  28EF               	goto	u367
  1140  00F1  0BA1               	decfsz	??_LCD_INIT+1,f
  1141  00F2  28EF               	goto	u367
  1142  00F3  0000               	nop
  1143  00F4                     l1146:	
  1144                           
  1145                           ;LCD_8bits_main.c: 85:     LCD_CMD(0x03);
  1146  00F4  3003               	movlw	3
  1147  00F5  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1148  00FA                     l1148:	
  1149                           
  1150                           ;LCD_8bits_main.c: 86:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1151  00FA  3034               	movlw	52
  1152  00FB  1283               	bcf	3,5	;RP0=0, select bank0
  1153  00FC  1303               	bcf	3,6	;RP1=0, select bank0
  1154  00FD  00A0               	movwf	??_LCD_INIT
  1155  00FE                     u377:	
  1156  00FE  0BA0               	decfsz	??_LCD_INIT,f
  1157  00FF  28FE               	goto	u377
  1158  0100  0000               	nop
  1159                           
  1160                           ;LCD_8bits_main.c: 87:     LCD_CMD(0x03);
  1161  0101  3003               	movlw	3
  1162  0102  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1163  0107                     l1150:	
  1164                           
  1165                           ;LCD_8bits_main.c: 88:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  1166  0107  3034               	movlw	52
  1167  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1168  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1169  010A  00A0               	movwf	??_LCD_INIT
  1170  010B                     u387:	
  1171  010B  0BA0               	decfsz	??_LCD_INIT,f
  1172  010C  290B               	goto	u387
  1173  010D  0000               	nop
  1174  010E                     l1152:	
  1175                           
  1176                           ;LCD_8bits_main.c: 90:     LCD_CMD(0x38);
  1177  010E  3038               	movlw	56
  1178  010F  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1179  0114                     l1154:	
  1180                           
  1181                           ;LCD_8bits_main.c: 91:     LCD_CMD(0x08);
  1182  0114  3008               	movlw	8
  1183  0115  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1184  011A                     l1156:	
  1185                           
  1186                           ;LCD_8bits_main.c: 92:     LCD_CMD(0x01);
  1187  011A  3001               	movlw	1
  1188  011B  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1189  0120                     l1158:	
  1190                           
  1191                           ;LCD_8bits_main.c: 93:     LCD_CMD(0x06);
  1192  0120  3006               	movlw	6
  1193  0121  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1194  0126                     l1160:	
  1195                           
  1196                           ;LCD_8bits_main.c: 94:     LCD_CMD(0x0C);
  1197  0126  300C               	movlw	12
  1198  0127  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1199  012C                     l56:	
  1200  012C  0008               	return
  1201  012D                     __end_of_LCD_INIT:	
  1202                           
  1203                           	psect	text7
  1204  0262                     __ptext7:	
  1205 ;; *************** function _LCD_CLR *****************
  1206 ;; Defined at:
  1207 ;;		line 63 in file "LCD_8bits_main.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;		None
  1210 ;; Auto vars:     Size  Location     Type
  1211 ;;		None
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  1    wreg      void 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, pclath, cstack
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1221 ;;      Params:         0       0       0       0       0
  1222 ;;      Locals:         0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0
  1224 ;;      Totals:         0       0       0       0       0
  1225 ;;Total ram usage:        0 bytes
  1226 ;; Hardware stack levels used:    1
  1227 ;; Hardware stack levels required when called:    3
  1228 ;; This function calls:
  1229 ;;		_LCD_CMD
  1230 ;; This function is called by:
  1231 ;;		_main
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           
  1236                           ;psect for function _LCD_CLR
  1237  0262                     _LCD_CLR:	
  1238  0262                     l1126:	
  1239                           ;incstack = 0
  1240                           ; Regs used in _LCD_CLR: [wreg+status,2+status,0+pclath+cstack]
  1241                           
  1242                           
  1243                           ;LCD_8bits_main.c: 64:     LCD_CMD(0);
  1244  0262  3000               	movlw	0
  1245  0263  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1246                           
  1247                           ;LCD_8bits_main.c: 65:     LCD_CMD(1);
  1248  0268  3001               	movlw	1
  1249  0269  120A  118A  220F  120A  118A  	fcall	_LCD_CMD
  1250  026E                     l47:	
  1251  026E  0008               	return
  1252  026F                     __end_of_LCD_CLR:	
  1253                           
  1254                           	psect	text8
  1255  020F                     __ptext8:	
  1256 ;; *************** function _LCD_CMD *****************
  1257 ;; Defined at:
  1258 ;;		line 55 in file "LCD_8bits_main.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  a               1    wreg     unsigned char 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  a               1    6[COMMON] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, status,2, status,0, pclath, cstack
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0       0       0       0       0
  1273 ;;      Locals:         1       0       0       0       0
  1274 ;;      Temps:          2       0       0       0       0
  1275 ;;      Totals:         3       0       0       0       0
  1276 ;;Total ram usage:        3 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    2
  1279 ;; This function calls:
  1280 ;;		_LCD_PORT
  1281 ;; This function is called by:
  1282 ;;		_LCD_CLR
  1283 ;;		_LCD_SET_CURSOR
  1284 ;;		_LCD_INIT
  1285 ;;		_LCD_SHIFT_RIGHT
  1286 ;;		_LCD_SHIFT_LEFT
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function _LCD_CMD
  1292  020F                     _LCD_CMD:	
  1293                           
  1294                           ;incstack = 0
  1295                           ; Regs used in _LCD_CMD: [wreg+status,2+status,0+pclath+cstack]
  1296                           ;LCD_CMD@a stored from wreg
  1297  020F  00F6               	movwf	LCD_CMD@a
  1298  0210                     l1106:	
  1299                           
  1300                           ;LCD_8bits_main.c: 56:     RD5 = 0;
  1301  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0212  1288               	bcf	8,5	;volatile
  1304  0213                     l1108:	
  1305                           
  1306                           ;LCD_8bits_main.c: 57:     LCD_PORT(a);
  1307  0213  0876               	movf	LCD_CMD@a,w
  1308  0214  120A  118A  212D  120A  118A  	fcall	_LCD_PORT
  1309  0219                     l1110:	
  1310                           
  1311                           ;LCD_8bits_main.c: 58:     RD7 = 1;
  1312  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1313  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1314  021B  1788               	bsf	8,7	;volatile
  1315  021C                     l1112:	
  1316                           
  1317                           ;LCD_8bits_main.c: 59:     _delay((unsigned long)((4)*(4000000/4000.0)));
  1318  021C  3006               	movlw	6
  1319  021D  00F5               	movwf	??_LCD_CMD+1
  1320  021E  3030               	movlw	48
  1321  021F  00F4               	movwf	??_LCD_CMD
  1322  0220                     u397:	
  1323  0220  0BF4               	decfsz	??_LCD_CMD,f
  1324  0221  2A20               	goto	u397
  1325  0222  0BF5               	decfsz	??_LCD_CMD+1,f
  1326  0223  2A20               	goto	u397
  1327  0224  0000               	nop
  1328  0225                     l1114:	
  1329                           
  1330                           ;LCD_8bits_main.c: 60:     RD7 = 0;
  1331  0225  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0226  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0227  1388               	bcf	8,7	;volatile
  1334  0228                     l44:	
  1335  0228  0008               	return
  1336  0229                     __end_of_LCD_CMD:	
  1337                           
  1338                           	psect	text9
  1339  012D                     __ptext9:	
  1340 ;; *************** function _LCD_PORT *****************
  1341 ;; Defined at:
  1342 ;;		line 12 in file "LCD_8bits_main.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  a               1    wreg     unsigned char 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  a               1    3[COMMON] unsigned char 
  1347 ;; Return value:  Size  Location     Type
  1348 ;;                  1    wreg      void 
  1349 ;; Registers used:
  1350 ;;		wreg
  1351 ;; Tracked objects:
  1352 ;;		On entry : 0/0
  1353 ;;		On exit  : 0/0
  1354 ;;		Unchanged: 0/0
  1355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1356 ;;      Params:         0       0       0       0       0
  1357 ;;      Locals:         1       0       0       0       0
  1358 ;;      Temps:          0       0       0       0       0
  1359 ;;      Totals:         1       0       0       0       0
  1360 ;;Total ram usage:        1 bytes
  1361 ;; Hardware stack levels used:    1
  1362 ;; Hardware stack levels required when called:    1
  1363 ;; This function calls:
  1364 ;;		Nothing
  1365 ;; This function is called by:
  1366 ;;		_LCD_CMD
  1367 ;;		_LCD_INIT
  1368 ;;		_LCD_WRITE_CHAR
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           
  1373                           ;psect for function _LCD_PORT
  1374  012D                     _LCD_PORT:	
  1375                           
  1376                           ;incstack = 0
  1377                           ; Regs used in _LCD_PORT: [wreg]
  1378                           ;LCD_PORT@a stored from wreg
  1379  012D  00F3               	movwf	LCD_PORT@a
  1380  012E                     l1088:	
  1381                           
  1382                           ;LCD_8bits_main.c: 12: void LCD_PORT(uint8_t a);LCD_8bits_main.c: 13: {;LCD_8bits_main.c
      +                          : 14:  if(a & 1)
  1383  012E  1C73               	btfss	LCD_PORT@a,0
  1384  012F  2931               	goto	u211
  1385  0130  2932               	goto	u210
  1386  0131                     u211:	
  1387  0131  2936               	goto	l25
  1388  0132                     u210:	
  1389  0132                     l1090:	
  1390                           
  1391                           ;LCD_8bits_main.c: 15:   RB0 = 1;
  1392  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0134  1406               	bsf	6,0	;volatile
  1395  0135  2939               	goto	l26
  1396  0136                     l25:	
  1397                           ;LCD_8bits_main.c: 16:  else
  1398                           
  1399                           
  1400                           ;LCD_8bits_main.c: 17:   RB0 = 0;
  1401  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0138  1006               	bcf	6,0	;volatile
  1404  0139                     l26:	
  1405                           
  1406                           ;LCD_8bits_main.c: 19:  if(a & 2)
  1407  0139  1CF3               	btfss	LCD_PORT@a,1
  1408  013A  293C               	goto	u221
  1409  013B  293D               	goto	u220
  1410  013C                     u221:	
  1411  013C  293F               	goto	l27
  1412  013D                     u220:	
  1413  013D                     l1092:	
  1414                           
  1415                           ;LCD_8bits_main.c: 20:   RB1 = 1;
  1416  013D  1486               	bsf	6,1	;volatile
  1417  013E  2940               	goto	l28
  1418  013F                     l27:	
  1419                           ;LCD_8bits_main.c: 21:  else
  1420                           
  1421                           
  1422                           ;LCD_8bits_main.c: 22:   RB1 = 0;
  1423  013F  1086               	bcf	6,1	;volatile
  1424  0140                     l28:	
  1425                           
  1426                           ;LCD_8bits_main.c: 24:  if(a & 4)
  1427  0140  1D73               	btfss	LCD_PORT@a,2
  1428  0141  2943               	goto	u231
  1429  0142  2944               	goto	u230
  1430  0143                     u231:	
  1431  0143  2946               	goto	l29
  1432  0144                     u230:	
  1433  0144                     l1094:	
  1434                           
  1435                           ;LCD_8bits_main.c: 25:   RB2 = 1;
  1436  0144  1506               	bsf	6,2	;volatile
  1437  0145  2947               	goto	l30
  1438  0146                     l29:	
  1439                           ;LCD_8bits_main.c: 26:  else
  1440                           
  1441                           
  1442                           ;LCD_8bits_main.c: 27:   RB2 = 0;
  1443  0146  1106               	bcf	6,2	;volatile
  1444  0147                     l30:	
  1445                           
  1446                           ;LCD_8bits_main.c: 29:  if(a & 8)
  1447  0147  1DF3               	btfss	LCD_PORT@a,3
  1448  0148  294A               	goto	u241
  1449  0149  294B               	goto	u240
  1450  014A                     u241:	
  1451  014A  294D               	goto	l31
  1452  014B                     u240:	
  1453  014B                     l1096:	
  1454                           
  1455                           ;LCD_8bits_main.c: 30:   RB3 = 1;
  1456  014B  1586               	bsf	6,3	;volatile
  1457  014C  294E               	goto	l32
  1458  014D                     l31:	
  1459                           ;LCD_8bits_main.c: 31:  else
  1460                           
  1461                           
  1462                           ;LCD_8bits_main.c: 32:   RB3 = 0;
  1463  014D  1186               	bcf	6,3	;volatile
  1464  014E                     l32:	
  1465                           
  1466                           ;LCD_8bits_main.c: 34:     if(a & 16)
  1467  014E  1E73               	btfss	LCD_PORT@a,4
  1468  014F  2951               	goto	u251
  1469  0150  2952               	goto	u250
  1470  0151                     u251:	
  1471  0151  2954               	goto	l33
  1472  0152                     u250:	
  1473  0152                     l1098:	
  1474                           
  1475                           ;LCD_8bits_main.c: 35:   RB4 = 1;
  1476  0152  1606               	bsf	6,4	;volatile
  1477  0153  2955               	goto	l34
  1478  0154                     l33:	
  1479                           ;LCD_8bits_main.c: 36:  else
  1480                           
  1481                           
  1482                           ;LCD_8bits_main.c: 37:   RB4 = 0;
  1483  0154  1206               	bcf	6,4	;volatile
  1484  0155                     l34:	
  1485                           
  1486                           ;LCD_8bits_main.c: 39:  if(a & 32)
  1487  0155  1EF3               	btfss	LCD_PORT@a,5
  1488  0156  2958               	goto	u261
  1489  0157  2959               	goto	u260
  1490  0158                     u261:	
  1491  0158  295B               	goto	l35
  1492  0159                     u260:	
  1493  0159                     l1100:	
  1494                           
  1495                           ;LCD_8bits_main.c: 40:   RB5 = 1;
  1496  0159  1686               	bsf	6,5	;volatile
  1497  015A  295C               	goto	l36
  1498  015B                     l35:	
  1499                           ;LCD_8bits_main.c: 41:  else
  1500                           
  1501                           
  1502                           ;LCD_8bits_main.c: 42:   RB5 = 0;
  1503  015B  1286               	bcf	6,5	;volatile
  1504  015C                     l36:	
  1505                           
  1506                           ;LCD_8bits_main.c: 44:  if(a & 64)
  1507  015C  1F73               	btfss	LCD_PORT@a,6
  1508  015D  295F               	goto	u271
  1509  015E  2960               	goto	u270
  1510  015F                     u271:	
  1511  015F  2962               	goto	l37
  1512  0160                     u270:	
  1513  0160                     l1102:	
  1514                           
  1515                           ;LCD_8bits_main.c: 45:   RB6 = 1;
  1516  0160  1706               	bsf	6,6	;volatile
  1517  0161  2963               	goto	l38
  1518  0162                     l37:	
  1519                           ;LCD_8bits_main.c: 46:  else
  1520                           
  1521                           
  1522                           ;LCD_8bits_main.c: 47:   RB6 = 0;
  1523  0162  1306               	bcf	6,6	;volatile
  1524  0163                     l38:	
  1525                           
  1526                           ;LCD_8bits_main.c: 49:  if(a & 128)
  1527  0163  1FF3               	btfss	LCD_PORT@a,7
  1528  0164  2966               	goto	u281
  1529  0165  2967               	goto	u280
  1530  0166                     u281:	
  1531  0166  2969               	goto	l39
  1532  0167                     u280:	
  1533  0167                     l1104:	
  1534                           
  1535                           ;LCD_8bits_main.c: 50:   RB7 = 1;
  1536  0167  1786               	bsf	6,7	;volatile
  1537  0168  296A               	goto	l41
  1538  0169                     l39:	
  1539                           ;LCD_8bits_main.c: 51:  else
  1540                           
  1541                           
  1542                           ;LCD_8bits_main.c: 52:   RB7 = 0;
  1543  0169  1386               	bcf	6,7	;volatile
  1544  016A                     l41:	
  1545  016A  0008               	return
  1546  016B                     __end_of_LCD_PORT:	
  1547                           
  1548                           	psect	text10
  1549  0016                     __ptext10:	
  1550 ;; *************** function _ADC_init *****************
  1551 ;; Defined at:
  1552 ;;		line 29 in file "../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  Fosc            1    wreg     unsigned char 
  1555 ;;  channel         1    3[COMMON] unsigned char 
  1556 ;;  int_on          1    4[COMMON] unsigned char 
  1557 ;;  left_or_righ    1    5[COMMON] unsigned char 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  Fosc            1    0[BANK0 ] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1569 ;;      Params:         3       0       0       0       0
  1570 ;;      Locals:         0       1       0       0       0
  1571 ;;      Temps:          2       0       0       0       0
  1572 ;;      Totals:         5       1       0       0       0
  1573 ;;Total ram usage:        6 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    1
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		_main
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           
  1584                           ;psect for function _ADC_init
  1585  0016                     _ADC_init:	
  1586                           
  1587                           ;incstack = 0
  1588                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
  1589                           ;ADC_init@Fosc stored from wreg
  1590  0016  1283               	bcf	3,5	;RP0=0, select bank0
  1591  0017  1303               	bcf	3,6	;RP1=0, select bank0
  1592  0018  00A0               	movwf	ADC_init@Fosc
  1593  0019                     l1170:	
  1594                           
  1595                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 30:     switch (Fosc) {
  1596  0019  2829               	goto	l1174
  1597  001A                     l155:	
  1598                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 31:         case 0:
  1599                           
  1600                           
  1601                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 32:             ADCON0bits
      +                          .ADCS1 = 0;
  1602  001A  139F               	bcf	31,7	;volatile
  1603                           
  1604                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 33:             ADCON0bits
      +                          .ADCS0 = 0;
  1605  001B  131F               	bcf	31,6	;volatile
  1606                           
  1607                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 34:             break;
  1608  001C  2885               	goto	l1178
  1609  001D                     l157:	
  1610                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 35:         case 1:
  1611                           
  1612                           
  1613                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 36:             ADCON0bits
      +                          .ADCS1 = 0;
  1614  001D  139F               	bcf	31,7	;volatile
  1615                           
  1616                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 37:             ADCON0bits
      +                          .ADCS0 = 1;
  1617  001E  171F               	bsf	31,6	;volatile
  1618                           
  1619                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 38:             break;
  1620  001F  2885               	goto	l1178
  1621  0020                     l158:	
  1622                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 39:         case 2:
  1623                           
  1624                           
  1625                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 40:             ADCON0bits
      +                          .ADCS1 = 1;
  1626  0020  179F               	bsf	31,7	;volatile
  1627                           
  1628                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 41:             ADCON0bits
      +                          .ADCS0 = 0;
  1629  0021  131F               	bcf	31,6	;volatile
  1630                           
  1631                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 42:             break;
  1632  0022  2885               	goto	l1178
  1633  0023                     l159:	
  1634                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 43:         case 3:
  1635                           
  1636                           
  1637                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 44:             ADCON0bits
      +                          .ADCS1 = 1;
  1638  0023  179F               	bsf	31,7	;volatile
  1639                           
  1640                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 45:             ADCON0bits
      +                          .ADCS0 = 1;
  1641  0024  171F               	bsf	31,6	;volatile
  1642                           
  1643                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 46:             break;
  1644  0025  2885               	goto	l1178
  1645  0026                     l160:	
  1646                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 47:         default:
  1647                           
  1648                           
  1649                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 48:             ADCON0bits
      +                          .ADCS1 = 0;
  1650  0026  139F               	bcf	31,7	;volatile
  1651                           
  1652                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 49:             ADCON0bits
      +                          .ADCS0 = 1;
  1653  0027  171F               	bsf	31,6	;volatile
  1654                           
  1655                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 50:             break;
  1656  0028  2885               	goto	l1178
  1657  0029                     l1174:	
  1658  0029  0820               	movf	ADC_init@Fosc,w
  1659  002A  00F6               	movwf	??_ADC_init
  1660  002B  01F7               	clrf	??_ADC_init+1
  1661                           
  1662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1663                           ; Switch size 1, requested type "simple"
  1664                           ; Number of cases is 1, Range of values is 0 to 0
  1665                           ; switch strategies available:
  1666                           ; Name         Instructions Cycles
  1667                           ; simple_byte            4     3 (average)
  1668                           ; direct_byte           11     8 (fixed)
  1669                           ; jumptable            260     6 (fixed)
  1670                           ;	Chosen strategy is simple_byte
  1671  002C  0877               	movf	??_ADC_init+1,w
  1672  002D  3A00               	xorlw	0	; case 0
  1673  002E  1903               	skipnz
  1674  002F  2831               	goto	l1286
  1675  0030  2826               	goto	l160
  1676  0031                     l1286:	
  1677                           
  1678                           ; Switch size 1, requested type "simple"
  1679                           ; Number of cases is 4, Range of values is 0 to 3
  1680                           ; switch strategies available:
  1681                           ; Name         Instructions Cycles
  1682                           ; simple_byte           13     7 (average)
  1683                           ; direct_byte           20     8 (fixed)
  1684                           ; jumptable            260     6 (fixed)
  1685                           ;	Chosen strategy is simple_byte
  1686  0031  0876               	movf	??_ADC_init,w
  1687  0032  3A00               	xorlw	0	; case 0
  1688  0033  1903               	skipnz
  1689  0034  281A               	goto	l155
  1690  0035  3A01               	xorlw	1	; case 1
  1691  0036  1903               	skipnz
  1692  0037  281D               	goto	l157
  1693  0038  3A03               	xorlw	3	; case 2
  1694  0039  1903               	skipnz
  1695  003A  2820               	goto	l158
  1696  003B  3A01               	xorlw	1	; case 3
  1697  003C  1903               	skipnz
  1698  003D  2823               	goto	l159
  1699  003E  2826               	goto	l160
  1700  003F                     l162:	
  1701                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 54:         case 0:
  1702                           
  1703                           
  1704                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 55:             ADCON0bits
      +                          .CHS0 = 0;
  1705  003F  111F               	bcf	31,2	;volatile
  1706                           
  1707                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 56:             ADCON0bits
      +                          .CHS1 = 0;
  1708  0040  119F               	bcf	31,3	;volatile
  1709                           
  1710                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 57:             ADCON0bits
      +                          .CHS2 = 0;
  1711  0041  121F               	bcf	31,4	;volatile
  1712                           
  1713                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 58:             ADCON0bits
      +                          .CHS3 = 0;
  1714  0042  129F               	bcf	31,5	;volatile
  1715                           
  1716                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 59:             break;
  1717  0043  28B9               	goto	l163
  1718  0044                     l164:	
  1719                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 60:         case 1:
  1720                           
  1721                           
  1722                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 61:             ADCON0bits
      +                          .CHS0 = 1;
  1723  0044  151F               	bsf	31,2	;volatile
  1724                           
  1725                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 62:             ADCON0bits
      +                          .CHS1 = 0;
  1726  0045  119F               	bcf	31,3	;volatile
  1727                           
  1728                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 63:             ADCON0bits
      +                          .CHS2 = 0;
  1729  0046  121F               	bcf	31,4	;volatile
  1730                           
  1731                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 64:             ADCON0bits
      +                          .CHS3 = 0;
  1732  0047  129F               	bcf	31,5	;volatile
  1733                           
  1734                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 65:             break;
  1735  0048  28B9               	goto	l163
  1736  0049                     l165:	
  1737                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 66:         case 2:
  1738                           
  1739                           
  1740                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 67:             ADCON0bits
      +                          .CHS0 = 0;
  1741  0049  111F               	bcf	31,2	;volatile
  1742                           
  1743                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 68:             ADCON0bits
      +                          .CHS1 = 1;
  1744  004A  159F               	bsf	31,3	;volatile
  1745                           
  1746                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 69:             ADCON0bits
      +                          .CHS2 = 0;
  1747  004B  121F               	bcf	31,4	;volatile
  1748                           
  1749                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 70:             ADCON0bits
      +                          .CHS3 = 0;
  1750  004C  129F               	bcf	31,5	;volatile
  1751                           
  1752                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 71:             break;
  1753  004D  28B9               	goto	l163
  1754  004E                     l166:	
  1755                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 72:         case 3:
  1756                           
  1757                           
  1758                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 73:             ADCON0bits
      +                          .CHS0 = 1;
  1759  004E  151F               	bsf	31,2	;volatile
  1760                           
  1761                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 74:             ADCON0bits
      +                          .CHS1 = 1;
  1762  004F  159F               	bsf	31,3	;volatile
  1763                           
  1764                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 75:             ADCON0bits
      +                          .CHS2 = 0;
  1765  0050  121F               	bcf	31,4	;volatile
  1766                           
  1767                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 76:             ADCON0bits
      +                          .CHS3 = 0;
  1768  0051  129F               	bcf	31,5	;volatile
  1769                           
  1770                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 77:             break;
  1771  0052  28B9               	goto	l163
  1772  0053                     l167:	
  1773                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 78:         case 4:
  1774                           
  1775                           
  1776                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 79:             ADCON0bits
      +                          .CHS0 = 0;
  1777  0053  111F               	bcf	31,2	;volatile
  1778                           
  1779                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 80:             ADCON0bits
      +                          .CHS1 = 0;
  1780  0054  119F               	bcf	31,3	;volatile
  1781                           
  1782                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 81:             ADCON0bits
      +                          .CHS2 = 1;
  1783  0055  161F               	bsf	31,4	;volatile
  1784                           
  1785                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 82:             ADCON0bits
      +                          .CHS3 = 0;
  1786  0056  129F               	bcf	31,5	;volatile
  1787                           
  1788                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 83:             break;
  1789  0057  28B9               	goto	l163
  1790  0058                     l168:	
  1791                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 84:         case 5:
  1792                           
  1793                           
  1794                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 85:             ADCON0bits
      +                          .CHS0 = 1;
  1795  0058  151F               	bsf	31,2	;volatile
  1796                           
  1797                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 86:             ADCON0bits
      +                          .CHS1 = 0;
  1798  0059  119F               	bcf	31,3	;volatile
  1799                           
  1800                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 87:             ADCON0bits
      +                          .CHS2 = 1;
  1801  005A  161F               	bsf	31,4	;volatile
  1802                           
  1803                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 88:             ADCON0bits
      +                          .CHS3 = 0;
  1804  005B  129F               	bcf	31,5	;volatile
  1805                           
  1806                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 89:             break;
  1807  005C  28B9               	goto	l163
  1808  005D                     l169:	
  1809                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 90:         case 6:
  1810                           
  1811                           
  1812                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 91:             ADCON0bits
      +                          .CHS0 = 0;
  1813  005D  111F               	bcf	31,2	;volatile
  1814                           
  1815                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 92:             ADCON0bits
      +                          .CHS1 = 1;
  1816  005E  159F               	bsf	31,3	;volatile
  1817                           
  1818                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 93:             ADCON0bits
      +                          .CHS2 = 1;
  1819  005F  161F               	bsf	31,4	;volatile
  1820                           
  1821                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 94:             ADCON0bits
      +                          .CHS3 = 0;
  1822  0060  129F               	bcf	31,5	;volatile
  1823                           
  1824                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 95:             break;
  1825  0061  28B9               	goto	l163
  1826  0062                     l170:	
  1827                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 96:         case 7:
  1828                           
  1829                           
  1830                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 97:             ADCON0bits
      +                          .CHS0 = 1;
  1831  0062  151F               	bsf	31,2	;volatile
  1832                           
  1833                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 98:             ADCON0bits
      +                          .CHS1 = 1;
  1834  0063  159F               	bsf	31,3	;volatile
  1835                           
  1836                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 99:             ADCON0bits
      +                          .CHS2 = 1;
  1837  0064  161F               	bsf	31,4	;volatile
  1838                           
  1839                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 100:             ADCON0bit
      +                          s.CHS3 = 0;
  1840  0065  129F               	bcf	31,5	;volatile
  1841                           
  1842                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 101:             break;
  1843  0066  28B9               	goto	l163
  1844  0067                     l171:	
  1845                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 102:         case 8:
  1846                           
  1847                           
  1848                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 103:             ADCON0bit
      +                          s.CHS0 = 0;
  1849  0067  111F               	bcf	31,2	;volatile
  1850                           
  1851                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 104:             ADCON0bit
      +                          s.CHS1 = 0;
  1852  0068  119F               	bcf	31,3	;volatile
  1853                           
  1854                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 105:             ADCON0bit
      +                          s.CHS2 = 0;
  1855  0069  121F               	bcf	31,4	;volatile
  1856                           
  1857                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 106:             ADCON0bit
      +                          s.CHS3 = 1;
  1858  006A  169F               	bsf	31,5	;volatile
  1859                           
  1860                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 107:             break;
  1861  006B  28B9               	goto	l163
  1862  006C                     l172:	
  1863                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 108:         case 9:
  1864                           
  1865                           
  1866                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 109:             ADCON0bit
      +                          s.CHS0 = 1;
  1867  006C  151F               	bsf	31,2	;volatile
  1868                           
  1869                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 110:             ADCON0bit
      +                          s.CHS1 = 0;
  1870  006D  119F               	bcf	31,3	;volatile
  1871                           
  1872                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 111:             ADCON0bit
      +                          s.CHS2 = 0;
  1873  006E  121F               	bcf	31,4	;volatile
  1874                           
  1875                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 112:             ADCON0bit
      +                          s.CHS3 = 1;
  1876  006F  169F               	bsf	31,5	;volatile
  1877                           
  1878                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 113:             break;
  1879  0070  28B9               	goto	l163
  1880  0071                     l173:	
  1881                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 114:         case 10:
  1882                           
  1883                           
  1884                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 115:             ADCON0bit
      +                          s.CHS0 = 0;
  1885  0071  111F               	bcf	31,2	;volatile
  1886                           
  1887                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 116:             ADCON0bit
      +                          s.CHS1 = 1;
  1888  0072  159F               	bsf	31,3	;volatile
  1889                           
  1890                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 117:             ADCON0bit
      +                          s.CHS2 = 0;
  1891  0073  121F               	bcf	31,4	;volatile
  1892                           
  1893                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 118:             ADCON0bit
      +                          s.CHS3 = 1;
  1894  0074  169F               	bsf	31,5	;volatile
  1895                           
  1896                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 119:             break;
  1897  0075  28B9               	goto	l163
  1898  0076                     l174:	
  1899                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 120:         case 11:
  1900                           
  1901                           
  1902                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 121:             ADCON0bit
      +                          s.CHS0 = 1;
  1903  0076  151F               	bsf	31,2	;volatile
  1904                           
  1905                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 122:             ADCON0bit
      +                          s.CHS1 = 1;
  1906  0077  159F               	bsf	31,3	;volatile
  1907                           
  1908                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 123:             ADCON0bit
      +                          s.CHS2 = 0;
  1909  0078  121F               	bcf	31,4	;volatile
  1910                           
  1911                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 124:             ADCON0bit
      +                          s.CHS3 = 1;
  1912  0079  169F               	bsf	31,5	;volatile
  1913                           
  1914                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 125:             break;
  1915  007A  28B9               	goto	l163
  1916  007B                     l175:	
  1917                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 126:         case 12:
  1918                           
  1919                           
  1920                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 127:             ADCON0bit
      +                          s.CHS0 = 0;
  1921  007B  111F               	bcf	31,2	;volatile
  1922                           
  1923                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 128:             ADCON0bit
      +                          s.CHS1 = 0;
  1924  007C  119F               	bcf	31,3	;volatile
  1925                           
  1926                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 129:             ADCON0bit
      +                          s.CHS2 = 1;
  1927  007D  161F               	bsf	31,4	;volatile
  1928                           
  1929                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 130:             ADCON0bit
      +                          s.CHS3 = 1;
  1930  007E  169F               	bsf	31,5	;volatile
  1931                           
  1932                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 131:             break;
  1933  007F  28B9               	goto	l163
  1934  0080                     l176:	
  1935                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 132:         case 13:
  1936                           
  1937                           
  1938                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 133:             ADCON0bit
      +                          s.CHS0 = 1;
  1939  0080  151F               	bsf	31,2	;volatile
  1940                           
  1941                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 134:             ADCON0bit
      +                          s.CHS1 = 0;
  1942  0081  119F               	bcf	31,3	;volatile
  1943                           
  1944                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 135:             ADCON0bit
      +                          s.CHS2 = 1;
  1945  0082  161F               	bsf	31,4	;volatile
  1946                           
  1947                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 136:             ADCON0bit
      +                          s.CHS3 = 1;
  1948  0083  169F               	bsf	31,5	;volatile
  1949                           
  1950                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 137:             break;
  1951  0084  28B9               	goto	l163
  1952  0085                     l1178:	
  1953  0085  0873               	movf	ADC_init@channel,w
  1954  0086  00F6               	movwf	??_ADC_init
  1955  0087  01F7               	clrf	??_ADC_init+1
  1956                           
  1957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1958                           ; Switch size 1, requested type "simple"
  1959                           ; Number of cases is 1, Range of values is 0 to 0
  1960                           ; switch strategies available:
  1961                           ; Name         Instructions Cycles
  1962                           ; simple_byte            4     3 (average)
  1963                           ; direct_byte           11     8 (fixed)
  1964                           ; jumptable            260     6 (fixed)
  1965                           ;	Chosen strategy is simple_byte
  1966  0088  0877               	movf	??_ADC_init+1,w
  1967  0089  3A00               	xorlw	0	; case 0
  1968  008A  1903               	skipnz
  1969  008B  288D               	goto	l1288
  1970  008C  28B9               	goto	l163
  1971  008D                     l1288:	
  1972                           
  1973                           ; Switch size 1, requested type "simple"
  1974                           ; Number of cases is 14, Range of values is 0 to 13
  1975                           ; switch strategies available:
  1976                           ; Name         Instructions Cycles
  1977                           ; simple_byte           43    22 (average)
  1978                           ; direct_byte           50     8 (fixed)
  1979                           ; jumptable            260     6 (fixed)
  1980                           ;	Chosen strategy is simple_byte
  1981  008D  0876               	movf	??_ADC_init,w
  1982  008E  3A00               	xorlw	0	; case 0
  1983  008F  1903               	skipnz
  1984  0090  283F               	goto	l162
  1985  0091  3A01               	xorlw	1	; case 1
  1986  0092  1903               	skipnz
  1987  0093  2844               	goto	l164
  1988  0094  3A03               	xorlw	3	; case 2
  1989  0095  1903               	skipnz
  1990  0096  2849               	goto	l165
  1991  0097  3A01               	xorlw	1	; case 3
  1992  0098  1903               	skipnz
  1993  0099  284E               	goto	l166
  1994  009A  3A07               	xorlw	7	; case 4
  1995  009B  1903               	skipnz
  1996  009C  2853               	goto	l167
  1997  009D  3A01               	xorlw	1	; case 5
  1998  009E  1903               	skipnz
  1999  009F  2858               	goto	l168
  2000  00A0  3A03               	xorlw	3	; case 6
  2001  00A1  1903               	skipnz
  2002  00A2  285D               	goto	l169
  2003  00A3  3A01               	xorlw	1	; case 7
  2004  00A4  1903               	skipnz
  2005  00A5  2862               	goto	l170
  2006  00A6  3A0F               	xorlw	15	; case 8
  2007  00A7  1903               	skipnz
  2008  00A8  2867               	goto	l171
  2009  00A9  3A01               	xorlw	1	; case 9
  2010  00AA  1903               	skipnz
  2011  00AB  286C               	goto	l172
  2012  00AC  3A03               	xorlw	3	; case 10
  2013  00AD  1903               	skipnz
  2014  00AE  2871               	goto	l173
  2015  00AF  3A01               	xorlw	1	; case 11
  2016  00B0  1903               	skipnz
  2017  00B1  2876               	goto	l174
  2018  00B2  3A07               	xorlw	7	; case 12
  2019  00B3  1903               	skipnz
  2020  00B4  287B               	goto	l175
  2021  00B5  3A01               	xorlw	1	; case 13
  2022  00B6  1903               	skipnz
  2023  00B7  2880               	goto	l176
  2024  00B8  28B9               	goto	l163
  2025  00B9                     l163:	
  2026                           
  2027                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 141:     ADCON0bits.ADON =
      +                           1;
  2028  00B9  141F               	bsf	31,0	;volatile
  2029  00BA                     l1180:	
  2030                           
  2031                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 142:     if (int_on == 1){
  2032  00BA  0374               	decf	ADC_init@int_on,w
  2033  00BB  1D03               	btfss	3,2
  2034  00BC  28BE               	goto	u321
  2035  00BD  28BF               	goto	u320
  2036  00BE                     u321:	
  2037  00BE  28C5               	goto	l1184
  2038  00BF                     u320:	
  2039  00BF                     l1182:	
  2040                           
  2041                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 143:         PIR1bits.ADIF
      +                           = 0;
  2042  00BF  130C               	bcf	12,6	;volatile
  2043                           
  2044                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 144:         PIE1bits.ADIE
      +                           = 1;
  2045  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  2046  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  2047  00C2  170C               	bsf	12,6	;volatile
  2048                           
  2049                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 145:         INTCONbits.PE
      +                          IE = 1;
  2050  00C3  170B               	bsf	11,6	;volatile
  2051                           
  2052                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 146:         INTCONbits.GI
      +                          E = 1;
  2053  00C4  178B               	bsf	11,7	;volatile
  2054  00C5                     l1184:	
  2055                           
  2056                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 148:     ADCON1bits.ADFM =
      +                           left_or_right;
  2057  00C5  0C75               	rrf	ADC_init@left_or_right,w
  2058  00C6  1683               	bsf	3,5	;RP0=1, select bank1
  2059  00C7  1303               	bcf	3,6	;RP1=0, select bank1
  2060  00C8  1C03               	skipc
  2061  00C9  139F               	bcf	31,7	;volatile
  2062  00CA  1803               	skipnc
  2063  00CB  179F               	bsf	31,7	;volatile
  2064  00CC                     l1186:	
  2065                           
  2066                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 149:     ADCON1bits.VCFG0 
      +                          = 0;
  2067  00CC  121F               	bcf	31,4	;volatile
  2068  00CD                     l1188:	
  2069                           
  2070                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 150:     ADCON1bits.VCFG1 
      +                          = 0;
  2071  00CD  129F               	bcf	31,5	;volatile
  2072  00CE                     l1190:	
  2073                           
  2074                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 151:     ADCON0bits.GO_DON
      +                          E = 1;
  2075  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  2076  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  2077  00D0  149F               	bsf	31,1	;volatile
  2078  00D1                     l178:	
  2079  00D1  0008               	return
  2080  00D2                     __end_of_ADC_init:	
  2081                           
  2082                           	psect	text11
  2083  01F0                     __ptext11:	
  2084 ;; *************** function _isr *****************
  2085 ;; Defined at:
  2086 ;;		line 42 in file "main_lab3.c"
  2087 ;; Parameters:    Size  Location     Type
  2088 ;;		None
  2089 ;; Auto vars:     Size  Location     Type
  2090 ;;		None
  2091 ;; Return value:  Size  Location     Type
  2092 ;;                  1    wreg      void 
  2093 ;; Registers used:
  2094 ;;		wreg
  2095 ;; Tracked objects:
  2096 ;;		On entry : 0/0
  2097 ;;		On exit  : 0/0
  2098 ;;		Unchanged: 0/0
  2099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2100 ;;      Params:         0       0       0       0       0
  2101 ;;      Locals:         0       0       0       0       0
  2102 ;;      Temps:          3       0       0       0       0
  2103 ;;      Totals:         3       0       0       0       0
  2104 ;;Total ram usage:        3 bytes
  2105 ;; Hardware stack levels used:    1
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		Interrupt level 1
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           
  2114                           ;psect for function _isr
  2115  01F0                     _isr:	
  2116  01F0                     i1l904:	
  2117                           
  2118                           ;main_lab3.c: 43:     if (PIR1bits.ADIF == 1){
  2119  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  2120  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  2121  01F2  1F0C               	btfss	12,6	;volatile
  2122  01F3  29F5               	goto	u13_21
  2123  01F4  29F6               	goto	u13_20
  2124  01F5                     u13_21:	
  2125  01F5  2A08               	goto	i1l119
  2126  01F6                     u13_20:	
  2127  01F6                     i1l906:	
  2128                           
  2129                           ;main_lab3.c: 44:         PIR1bits.ADIF = 0;
  2130  01F6  130C               	bcf	12,6	;volatile
  2131                           
  2132                           ;main_lab3.c: 45:         start_another = 1;
  2133  01F7  01F8               	clrf	_start_another
  2134  01F8  0AF8               	incf	_start_another,f
  2135                           
  2136                           ;main_lab3.c: 46:         if (ADCON0bits.CHS0 == 0){
  2137  01F9  191F               	btfsc	31,2	;volatile
  2138  01FA  29FC               	goto	u14_21
  2139  01FB  29FD               	goto	u14_20
  2140  01FC                     u14_21:	
  2141  01FC  2A03               	goto	i1l912
  2142  01FD                     u14_20:	
  2143  01FD                     i1l908:	
  2144                           
  2145                           ;main_lab3.c: 47:             pot1 = ADRESH;
  2146  01FD  081E               	movf	30,w	;volatile
  2147  01FE  00F0               	movwf	??_isr
  2148  01FF  0870               	movf	??_isr,w
  2149  0200  00FA               	movwf	_pot1
  2150  0201                     i1l910:	
  2151                           
  2152                           ;main_lab3.c: 48:             ADCON0bits.CHS0 = 1;
  2153  0201  151F               	bsf	31,2	;volatile
  2154                           
  2155                           ;main_lab3.c: 49:         }else{
  2156  0202  2A08               	goto	i1l119
  2157  0203                     i1l912:	
  2158                           
  2159                           ;main_lab3.c: 50:             pot2 = ADRESH;
  2160  0203  081E               	movf	30,w	;volatile
  2161  0204  00F0               	movwf	??_isr
  2162  0205  0870               	movf	??_isr,w
  2163  0206  00F9               	movwf	_pot2
  2164  0207                     i1l914:	
  2165                           
  2166                           ;main_lab3.c: 51:             ADCON0bits.CHS0 = 0;
  2167  0207  111F               	bcf	31,2	;volatile
  2168  0208                     i1l119:	
  2169  0208  0872               	movf	??_isr+2,w
  2170  0209  008A               	movwf	10
  2171  020A  0E71               	swapf	(??_isr+1)^(0+4294967168),w
  2172  020B  0083               	movwf	3
  2173  020C  0EFE               	swapf	btemp,f
  2174  020D  0E7E               	swapf	btemp,w
  2175  020E  0009               	retfie
  2176  020F                     __end_of_isr:	
  2177  007E                     btemp	set	126	;btemp
  2178  007E                     wtemp0	set	126
  2179                           
  2180                           	psect	intentry
  2181  0004                     __pintentry:	
  2182                           ;incstack = 0
  2183                           ; Regs used in _isr: [wreg]
  2184                           
  2185  0004                     interrupt_function:	
  2186  007E                     saved_w	set	btemp
  2187  0004  00FE               	movwf	btemp
  2188  0005  0E03               	swapf	3,w
  2189  0006  00F1               	movwf	??_isr+1
  2190  0007  080A               	movf	10,w
  2191  0008  00F2               	movwf	??_isr+2
  2192  0009  120A  118A  29F0   	ljmp	_isr


Data Sizes:
    Strings     8
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_WRITE_STRING@a	PTR unsigned char  size(1) Largest target is 8
		 -> STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_ADC_init
    _main->_LCD_SET_CURSOR
    _LCD_WRITE_STRING->_LCD_WRITE_CHAR
    _LCD_WRITE_CHAR->_LCD_PORT
    _LCD_SET_CURSOR->_LCD_CMD
    _LCD_INIT->_LCD_CMD
    _LCD_CLR->_LCD_CMD
    _LCD_CMD->_LCD_PORT

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LCD_SET_CURSOR
    _main->_LCD_WRITE_STRING

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1810
                           _ADC_init
                            _LCD_CLR
                           _LCD_INIT
                     _LCD_SET_CURSOR
                   _LCD_WRITE_STRING
                          _Port_init
                   _start_conversion
 ---------------------------------------------------------------------------------
 (1) _start_conversion                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_WRITE_STRING                                     3     3      0     364
                                              0 BANK0      3     3      0
                     _LCD_WRITE_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_WRITE_CHAR                                       2     2      0     198
                                              4 COMMON     2     2      0
                           _LCD_PORT
 ---------------------------------------------------------------------------------
 (1) _LCD_SET_CURSOR                                       4     3      1     480
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             2     2      0     374
                                              0 BANK0      2     2      0
                            _LCD_CMD
                           _LCD_PORT
 ---------------------------------------------------------------------------------
 (1) _LCD_CLR                                              0     0      0     198
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0     198
                                              4 COMMON     3     3      0
                           _LCD_PORT
 ---------------------------------------------------------------------------------
 (3) _LCD_PORT                                             1     1      0     176
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     394
                                              3 COMMON     5     2      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _LCD_CLR
     _LCD_CMD
       _LCD_PORT
   _LCD_INIT
     _LCD_CMD
       _LCD_PORT
     _LCD_PORT
   _LCD_SET_CURSOR
     _LCD_CMD
       _LCD_PORT
   _LCD_WRITE_STRING
     _LCD_WRITE_CHAR
       _LCD_PORT
   _Port_init
   _start_conversion

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Feb 10 10:47:32 2020

          ?_LCD_WRITE_CHAR 0070                          pc 0002                __CFG_CP$OFF 0000  
                       l30 0147                         l31 014D                         l32 014E  
                       l41 016A                         l33 0154                         l25 0136  
                       l34 0155                         l26 0139                         l35 015B  
                       l27 013F                         l36 015C                         l28 0140  
                       l44 0228                         l37 0162                         l29 0146  
                       l53 01EF                         l38 0163                         l39 0169  
                       l47 026E                         l56 012C                         l65 01C9  
                       l59 0253                         fsr 0004          ?_LCD_WRITE_STRING 0070  
                      l131 023E                        l151 0275                        l160 0026  
                      l170 0062                        l162 003F                        l171 0067  
                      l163 00B9                        l155 001A                        l172 006C  
                      l164 0044                        l173 0071                        l165 0049  
                      l157 001D                        l174 0076                        l166 004E  
                      l158 0020                        l175 007B                        l167 0053  
                      l159 0023                        l176 0080                        l168 0058  
                      l169 005D                        l178 00D1                        l860 0232  
                      l852 0229                        l862 0235                        l854 022D  
                      l864 0238                        l856 0230                        l866 023B  
                      l858 0231                        l898 026F                        _RB0 0030  
                      _RB1 0031                        _RB2 0032                        _RB3 0033  
                      _RB4 0034                        _RB5 0035                        _RB6 0036  
                      _RB7 0037                        _RD5 0045                        _RD7 0047  
                      u210 0132                        u211 0131                        u220 013D  
                      u300 01E4                        u221 013C                        u301 01E3  
                      u230 0144                        u310 01C9                        u231 0143  
                      u311 01C8                        u320 00BF                        u240 014B  
                      u321 00BE                        u241 014A                        u250 0152  
                      u330 0184                        u251 0151                        u331 0183  
                      u260 0159                        u261 0158                        u270 0160  
                      u271 015F                        u280 0167                        u281 0166  
                      u290 01D2               __CFG_CPD$OFF 0000                        u291 01D1  
                      u347 024E                        u357 00DE                        u367 00EF  
                      u377 00FE                        u387 010B                        u397 0220  
                      _isr 01F0                        fsr0 0004         ??_LCD_WRITE_STRING 0076  
 __end_of_start_conversion 0276            __end_of_LCD_CMD 0229            __end_of_LCD_CLR 026F  
             __CFG_LVP$OFF 0000                       l1100 0159                       l1102 0160  
                     l1110 0219                       l1104 0167                       l1112 021C  
                     l1120 0249                       l1114 0225                       l1106 0210  
                     l1130 01D2                       l1122 024C                       l1210 0170  
                     l1108 0213                       l1140 00D2                       l1132 01D7  
                     l1124 0250                       l1116 0240                       l1220 018A  
                     l1212 017A                       l1126 0262                       l1150 0107  
                     l1142 00D8                       l1134 01DE                       l1118 0243  
                     l1222 018F                       l1214 017F                       l1160 0126  
                     l1152 010E                       l1144 00E3                       l1136 01E4  
                     l1128 01CD                       l1224 0197                       l1216 0184  
                     l1208 016B                       l1170 0019                       l1090 0132  
                     l1154 0114                       l1146 00F4                       l1138 01E9  
                     l1162 01A4                       l1218 0189                       l1180 00BA  
                     l1092 013D                       l1156 011A                       l1148 00FA  
                     l1164 01A7                       l1190 00CE                       l1182 00BF  
                     l1174 0029                       l1094 0144                       l1158 0120  
                     l1166 01B4                       l1184 00C5                       l1096 014B  
                     l1088 012E                       l1168 01BC                       l1186 00CC  
                     l1178 0085                       l1098 0152                       l1188 00CD  
                     l1286 0031                       l1288 008D                       ?_isr 0070  
                     STR_1 025A               __CFG_WRT$OFF 0000                       _main 016B  
                     _pot1 007A                       _pot2 0079                       btemp 007E  
                     start 000C           __end_of_ADC_init 00D2              __CFG_IESO$OFF 0000  
         __end_of_LCD_INIT 012D           __end_of_LCD_PORT 016B                      ??_isr 0070  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      i1l119 0208  
                    i1l910 0201                      i1l912 0203                      i1l904 01F0  
                    i1l914 0207                      i1l906 01F6                      i1l908 01FD  
                    u13_20 01F6                      u13_21 01F5                      u14_20 01FD  
                    u14_21 01FC                      _PORTB 0006                      _PORTD 0008  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
            _start_another 0078             __CFG_FCMEN$OFF 0000             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
           __CFG_MCLRE$OFF 0000            __initialization 000F               __end_of_main 01A1  
           ADC_init@int_on 0074                     ??_main 0078                  ??_LCD_CMD 0074  
                ??_LCD_CLR 0077                     _ADRESH 001E                     _ANSELH 0189  
           __CFG_PWRTE$OFF 0000           ??_LCD_SET_CURSOR 0020                     saved_w 007E  
       __size_of_Port_init 0016                  ?_ADC_init 0073                  ?_LCD_INIT 0070  
                ?_LCD_PORT 0070    __end_of__initialization 0012           ??_LCD_WRITE_CHAR 0074  
                LCD_PORT@a 0073             __pcstackCOMMON 0070            ADC_init@channel 0073  
               ??_ADC_init 0076          ?_start_conversion 0070         ??_start_conversion 0073  
               ??_LCD_INIT 0020                 ??_LCD_PORT 0073  __size_of_LCD_WRITE_STRING 0029  
        __end_of_Port_init 023F                 __pmaintext 016B                 __pintentry 0004  
                  _LCD_CMD 020F                    _LCD_CLR 0262            LCD_SET_CURSOR@a 0021  
          LCD_SET_CURSOR@b 0077                 __stringtab 0254          LCD_WRITE_STRING@a 0020  
        LCD_WRITE_STRING@i 0021      ADC_init@left_or_right 0075                  _ANSELbits 0188  
                  __ptext1 026F                    __ptext2 0229                    __ptext3 01A1  
                  __ptext4 023F                    __ptext5 01CA                    __ptext6 00D2  
                  __ptext7 0262                    __ptext8 020F                    __ptext9 012D  
             __size_of_isr 001F       end_of_initialization 0012          __size_of_ADC_init 00BC  
         _LCD_WRITE_STRING 01A1          __size_of_LCD_INIT 005B          __size_of_LCD_PORT 003E  
             ADC_init@Fosc 0020        start_initialization 000F                __end_of_isr 020F  
          LCD_WRITE_CHAR@a 0075  __size_of_start_conversion 0007                  _Port_init 0229  
                 LCD_CMD@a 0076                   ?_LCD_CMD 0070                   ?_LCD_CLR 0070  
  __size_of_LCD_SET_CURSOR 0026                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0020    __size_of_LCD_WRITE_CHAR 0015                 ?_Port_init 0070  
                __pstrings 0254                   _ADC_init 0016     LCD_SET_CURSOR@temporal 0022  
                 _LCD_INIT 00D2                   _LCD_PORT 012D          interrupt_function 0004  
                 _PIE1bits 008C   __CFG_FOSC$EXTRC_NOCLKOUT 0000                   _PIR1bits 000C  
 __end_of_LCD_WRITE_STRING 01CA                 _ADCON0bits 001F                __stringbase 0259  
               _ADCON1bits 009F           __size_of_LCD_CMD 001A           __size_of_LCD_CLR 000D  
         _start_conversion 026F                ??_Port_init 0073         __end_of__stringtab 025A  
           _LCD_SET_CURSOR 01CA                   __ptext10 0016                   __ptext11 01F0  
        __CFG_BOR4V$BOR40V 0000              __size_of_main 0036             _LCD_WRITE_CHAR 023F  
   __end_of_LCD_SET_CURSOR 01F0                 _INTCONbits 000B                   intlevel1 0000  
                stringcode 0254     __end_of_LCD_WRITE_CHAR 0254            ?_LCD_SET_CURSOR 0077  
                 stringdir 0254                   stringtab 0254  

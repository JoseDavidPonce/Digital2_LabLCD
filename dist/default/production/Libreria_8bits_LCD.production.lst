

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 23:34:56 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	intentry,global,class=CODE,delta=2
    48                           	psect	text2_split_1,local,class=CODE,merge=1,delta=2
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.10
    52                           ; Generated 31/07/2019 GMT
    53                           ; 
    54                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000E                     	;# 
   335  000F                     	;# 
   336  0010                     	;# 
   337  0011                     	;# 
   338  0012                     	;# 
   339  0013                     	;# 
   340  0014                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001B                     	;# 
   350  001C                     	;# 
   351  001D                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  0081                     	;# 
   355  0085                     	;# 
   356  0086                     	;# 
   357  0087                     	;# 
   358  0088                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  0105                     	;# 
   383  0107                     	;# 
   384  0108                     	;# 
   385  0109                     	;# 
   386  010C                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  0185                     	;# 
   392  0187                     	;# 
   393  0188                     	;# 
   394  0189                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  000E                     	;# 
   413  000F                     	;# 
   414  0010                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001D                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  0081                     	;# 
   433  0085                     	;# 
   434  0086                     	;# 
   435  0087                     	;# 
   436  0088                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  008F                     	;# 
   442  0090                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  0105                     	;# 
   461  0107                     	;# 
   462  0108                     	;# 
   463  0109                     	;# 
   464  010C                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  0185                     	;# 
   470  0187                     	;# 
   471  0188                     	;# 
   472  0189                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475                           
   476                           	psect	strings
   477  1800                     __pstrings:	
   478  1800                     stringtab:	
   479  1800                     __stringtab:	
   480                           
   481                           ;	String table - string pointers are 1 byte each
   482  1800  1BFF               	btfsc	btemp+1,7
   483  1801  280A               	ljmp	stringcode
   484  1802  1383               	bcf	3,7
   485  1803  187F               	btfsc	btemp+1,0
   486  1804  1783               	bsf	3,7
   487  1805  0800               	movf	0,w
   488  1806  0A84               	incf	4,f
   489  1807  1903               	skipnz
   490  1808  0AFF               	incf	btemp+1,f
   491  1809  0008               	return
   492  180A                     stringcode:	
   493  180A                     stringdir:	
   494  180A  3018               	movlw	high stringdir
   495  180B  008A               	movwf	10
   496  180C  0804               	movf	4,w
   497  180D  0A84               	incf	4,f
   498  180E  0782               	addwf	2,f
   499  180F                     __stringbase:	
   500  180F  3400               	retlw	0
   501  1810                     __end_of__stringtab:	
   502  1810                     __powers_:	
   503  1810  3400               	retlw	0
   504  1811  3400               	retlw	0
   505  1812  3480               	retlw	128
   506  1813  343F               	retlw	63
   507  1814  3400               	retlw	0
   508  1815  3400               	retlw	0
   509  1816  3420               	retlw	32
   510  1817  3441               	retlw	65
   511  1818  3400               	retlw	0
   512  1819  3400               	retlw	0
   513  181A  34C8               	retlw	200
   514  181B  3442               	retlw	66
   515  181C  3400               	retlw	0
   516  181D  3400               	retlw	0
   517  181E  347A               	retlw	122
   518  181F  3444               	retlw	68
   519  1820  3400               	retlw	0
   520  1821  3440               	retlw	64
   521  1822  341C               	retlw	28
   522  1823  3446               	retlw	70
   523  1824  3400               	retlw	0
   524  1825  3450               	retlw	80
   525  1826  34C3               	retlw	195
   526  1827  3447               	retlw	71
   527  1828  3400               	retlw	0
   528  1829  3424               	retlw	36
   529  182A  3474               	retlw	116
   530  182B  3449               	retlw	73
   531  182C  3480               	retlw	128
   532  182D  3496               	retlw	150
   533  182E  3418               	retlw	24
   534  182F  344B               	retlw	75
   535  1830  3420               	retlw	32
   536  1831  34BC               	retlw	188
   537  1832  34BE               	retlw	190
   538  1833  344C               	retlw	76
   539  1834  3428               	retlw	40
   540  1835  346B               	retlw	107
   541  1836  346E               	retlw	110
   542  1837  344E               	retlw	78
   543  1838  34F9               	retlw	249
   544  1839  3402               	retlw	2
   545  183A  3415               	retlw	21
   546  183B  3450               	retlw	80
   547  183C  34EC               	retlw	236
   548  183D  3478               	retlw	120
   549  183E  34AD               	retlw	173
   550  183F  3460               	retlw	96
   551  1840  34CA               	retlw	202
   552  1841  34F2               	retlw	242
   553  1842  3449               	retlw	73
   554  1843  3471               	retlw	113
   555  1844                     __end_of__powers_:	
   556  1844                     __npowers_:	
   557  1844  3400               	retlw	0
   558  1845  3400               	retlw	0
   559  1846  3480               	retlw	128
   560  1847  343F               	retlw	63
   561  1848  34CD               	retlw	205
   562  1849  34CC               	retlw	204
   563  184A  34CC               	retlw	204
   564  184B  343D               	retlw	61
   565  184C  340A               	retlw	10
   566  184D  34D7               	retlw	215
   567  184E  3423               	retlw	35
   568  184F  343C               	retlw	60
   569  1850  346F               	retlw	111
   570  1851  3412               	retlw	18
   571  1852  3483               	retlw	131
   572  1853  343A               	retlw	58
   573  1854  3417               	retlw	23
   574  1855  34B7               	retlw	183
   575  1856  34D1               	retlw	209
   576  1857  3438               	retlw	56
   577  1858  34AC               	retlw	172
   578  1859  34C5               	retlw	197
   579  185A  3427               	retlw	39
   580  185B  3437               	retlw	55
   581  185C  34BD               	retlw	189
   582  185D  3437               	retlw	55
   583  185E  3486               	retlw	134
   584  185F  3435               	retlw	53
   585  1860  3495               	retlw	149
   586  1861  34BF               	retlw	191
   587  1862  34D6               	retlw	214
   588  1863  3433               	retlw	51
   589  1864  3477               	retlw	119
   590  1865  34CC               	retlw	204
   591  1866  342B               	retlw	43
   592  1867  3432               	retlw	50
   593  1868  345F               	retlw	95
   594  1869  3470               	retlw	112
   595  186A  3489               	retlw	137
   596  186B  3430               	retlw	48
   597  186C  34FF               	retlw	255
   598  186D  34E6               	retlw	230
   599  186E  34DB               	retlw	219
   600  186F  342E               	retlw	46
   601  1870  3408               	retlw	8
   602  1871  34E5               	retlw	229
   603  1872  343C               	retlw	60
   604  1873  341E               	retlw	30
   605  1874  3460               	retlw	96
   606  1875  3442               	retlw	66
   607  1876  34A2               	retlw	162
   608  1877  340D               	retlw	13
   609  1878                     __end_of__npowers_:	
   610  1878                     _dpowers:	
   611  1878  3401               	retlw	1
   612  1879  3400               	retlw	0
   613  187A  3400               	retlw	0
   614  187B  3400               	retlw	0
   615  187C  340A               	retlw	10
   616  187D  3400               	retlw	0
   617  187E  3400               	retlw	0
   618  187F  3400               	retlw	0
   619  1880  3464               	retlw	100
   620  1881  3400               	retlw	0
   621  1882  3400               	retlw	0
   622  1883  3400               	retlw	0
   623  1884  34E8               	retlw	232
   624  1885  3403               	retlw	3
   625  1886  3400               	retlw	0
   626  1887  3400               	retlw	0
   627  1888  3410               	retlw	16
   628  1889  3427               	retlw	39
   629  188A  3400               	retlw	0
   630  188B  3400               	retlw	0
   631  188C  34A0               	retlw	160
   632  188D  3486               	retlw	134
   633  188E  3401               	retlw	1
   634  188F  3400               	retlw	0
   635  1890  3440               	retlw	64
   636  1891  3442               	retlw	66
   637  1892  340F               	retlw	15
   638  1893  3400               	retlw	0
   639  1894  3480               	retlw	128
   640  1895  3496               	retlw	150
   641  1896  3498               	retlw	152
   642  1897  3400               	retlw	0
   643  1898  3400               	retlw	0
   644  1899  34E1               	retlw	225
   645  189A  34F5               	retlw	245
   646  189B  3405               	retlw	5
   647  189C  3400               	retlw	0
   648  189D  34CA               	retlw	202
   649  189E  349A               	retlw	154
   650  189F  343B               	retlw	59
   651  18A0                     __end_of_dpowers:	
   652  0018                     _RCSTAbits	set	24
   653  000B                     _INTCONbits	set	11
   654  0005                     _PORTA	set	5
   655  0008                     _PORTD	set	8
   656  0019                     _TXREG	set	25
   657  001A                     _RCREG	set	26
   658  001E                     _ADRESH	set	30
   659  001F                     _ADCON0bits	set	31
   660  000C                     _PIR1bits	set	12
   661  0006                     _PORTB	set	6
   662  0008                     _PORTDbits	set	8
   663  0099                     _SPBRG	set	153
   664  0098                     _TXSTAbits	set	152
   665  009F                     _ADCON1bits	set	159
   666  008C                     _PIE1bits	set	140
   667  0088                     _TRISD	set	136
   668  0086                     _TRISB	set	134
   669  0085                     _TRISA	set	133
   670  0187                     _BAUDCTLbits	set	391
   671  0189                     _ANSELH	set	393
   672  0188                     _ANSEL	set	392
   673  18A0                     STR_4:	
   674  18A0  3456               	retlw	86	;'V'
   675  18A1  3431               	retlw	49	;'1'
   676  18A2  3420               	retlw	32	;' '
   677  18A3  3420               	retlw	32	;' '
   678  18A4  3420               	retlw	32	;' '
   679  18A5  3456               	retlw	86	;'V'
   680  18A6  3432               	retlw	50	;'2'
   681  18A7  3420               	retlw	32	;' '
   682  18A8  3420               	retlw	32	;' '
   683  18A9  3443               	retlw	67	;'C'
   684  18AA  346F               	retlw	111	;'o'
   685  18AB  346E               	retlw	110	;'n'
   686  18AC  3474               	retlw	116	;'t'
   687  18AD  342E               	retlw	46	;'.'
   688  18AE  3400               	retlw	0
   689  18AF                     STR_1:	
   690  18AF  3425               	retlw	37	;'%'
   691  18B0  3431               	retlw	49	;'1'
   692  18B1  342E               	retlw	46	;'.'
   693  18B2  3431               	retlw	49	;'1'
   694  18B3  3466               	retlw	102	;'f'
   695  18B4  3400               	retlw	0
   696  18B5                     STR_3:	
   697  18B5  3425               	retlw	37	;'%'
   698  18B6  3464               	retlw	100	;'d'
   699  18B7  3400               	retlw	0
   700  18AF                     
   701                           ; #config settings
   702  0000                     
   703                           	psect	cinit
   704  000F                     start_initialization:	
   705  000F                     __initialization:	
   706                           
   707                           ; Clear objects allocated to BANK0
   708  000F  1283               	bcf	3,5	;RP0=0, select bank0
   709  0010  1303               	bcf	3,6	;RP1=0, select bank0
   710  0011  01EF               	clrf	__pbssBANK0& (0+127)
   711                           
   712                           ; Clear objects allocated to BANK1
   713  0012  1383               	bcf	3,7	;select IRP bank0
   714  0013  30CC               	movlw	low __pbssBANK1
   715  0014  0084               	movwf	4
   716  0015  30E4               	movlw	low (__pbssBANK1+24)
   717  0016  160A  158A  213F  120A  118A  	fcall	clear_ram0
   718  001B                     end_of_initialization:	
   719                           ;End of C runtime variable initialization code
   720                           
   721  001B                     __end_of__initialization:	
   722  001B  0183               	clrf	3
   723  001C  120A  118A  2E0B   	ljmp	_main	;jump to C main() function
   724                           
   725                           	psect	bssBANK0
   726  006F                     __pbssBANK0:	
   727  006F                     _Contador:	
   728  006F                     	ds	1
   729                           
   730                           	psect	bssBANK1
   731  00CC                     __pbssBANK1:	
   732  00CC                     _volt2:	
   733  00CC                     	ds	4
   734  00D0                     _volt1:	
   735  00D0                     	ds	4
   736  00D4                     _valor:	
   737  00D4                     	ds	2
   738  00D6                     _start_another:	
   739  00D6                     	ds	1
   740  00D7                     _pot2:	
   741  00D7                     	ds	1
   742  00D8                     _pot1:	
   743  00D8                     	ds	1
   744  00D9                     _string2:	
   745  00D9                     	ds	4
   746  00DD                     _string1:	
   747  00DD                     	ds	4
   748  00E1                     _string3:	
   749  00E1                     	ds	3
   750                           
   751                           	psect	clrtext
   752  193F                     clear_ram0:	
   753                           ;	Called with FSR containing the base address, and
   754                           ;	W with the last address+1
   755                           
   756  193F  0064               	clrwdt	;clear the watchdog before getting into this loop
   757  1940                     clrloop0:	
   758  1940  0180               	clrf	0	;clear RAM location pointed to by FSR
   759  1941  0A84               	incf	4,f	;increment pointer
   760  1942  0604               	xorwf	4,w	;XOR with final address
   761  1943  1903               	btfsc	3,2	;have we reached the end yet?
   762  1944  3400               	retlw	0	;all done for this memory range, return
   763  1945  0604               	xorwf	4,w	;XOR again to restore value
   764  1946  2940               	goto	clrloop0	;do the next byte
   765                           
   766                           	psect	cstackBANK1
   767  00A0                     __pcstackBANK1:	
   768  00A0                     ?___flsub:	
   769  00A0                     ___flsub@a:	
   770                           ; 4 bytes @ 0x0
   771                           
   772                           
   773                           ; 4 bytes @ 0x0
   774  00A0                     	ds	4
   775  00A4                     ___flsub@b:	
   776                           
   777                           ; 4 bytes @ 0x4
   778  00A4                     	ds	4
   779  00A8                     ??_sprintf:	
   780                           
   781                           ; 1 bytes @ 0x8
   782  00A8                     	ds	5
   783  00AD                     _sprintf$1234:	
   784                           
   785                           ; 4 bytes @ 0xD
   786  00AD                     	ds	4
   787  00B1                     sprintf@ap:	
   788                           
   789                           ; 1 bytes @ 0x11
   790  00B1                     	ds	1
   791  00B2                     sprintf@flag:	
   792                           
   793                           ; 2 bytes @ 0x12
   794  00B2                     	ds	2
   795  00B4                     sprintf@width:	
   796                           
   797                           ; 2 bytes @ 0x14
   798  00B4                     	ds	2
   799  00B6                     sprintf@tmpval:	
   800                           
   801                           ; 4 bytes @ 0x16
   802  00B6                     	ds	4
   803  00BA                     sprintf@val:	
   804                           
   805                           ; 4 bytes @ 0x1A
   806  00BA                     	ds	4
   807  00BE                     sprintf@eexp:	
   808                           
   809                           ; 2 bytes @ 0x1E
   810  00BE                     	ds	2
   811  00C0                     sprintf@fval:	
   812                           
   813                           ; 4 bytes @ 0x20
   814  00C0                     	ds	4
   815  00C4                     sprintf@sp:	
   816                           
   817                           ; 1 bytes @ 0x24
   818  00C4                     	ds	1
   819  00C5                     sprintf@prec:	
   820                           
   821                           ; 2 bytes @ 0x25
   822  00C5                     	ds	2
   823  00C7                     sprintf@c:	
   824                           
   825                           ; 1 bytes @ 0x27
   826  00C7                     	ds	1
   827  00C8                     ??_main:	
   828                           
   829                           ; 1 bytes @ 0x28
   830  00C8                     	ds	4
   831                           
   832                           	psect	cstackCOMMON
   833  0070                     __pcstackCOMMON:	
   834  0070                     ?_isdigit:	
   835  0070                     ?_Port_init:	
   836                           ; 1 bit 
   837                           
   838  0070                     ?_start_conversion:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_SEND_STRING:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_SEND_CHAR:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?_LCD_CMD:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_LCD_INIT:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_LCD_WRITE_CHAR:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_isr:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ??_isr:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_main:	
   863                           ; 1 bytes @ 0x0
   864                           
   865                           
   866                           ; 1 bytes @ 0x0
   867  0070                     	ds	3
   868  0073                     ?___fleq:	
   869  0073                     ?___flge:	
   870                           ; 1 bit 
   871                           
   872  0073                     ??_Port_init:	
   873                           ; 1 bit 
   874                           
   875  0073                     ?_ADC_init:	
   876                           ; 1 bytes @ 0x3
   877                           
   878  0073                     ?_EUSART_Init:	
   879                           ; 1 bytes @ 0x3
   880                           
   881  0073                     ??_start_conversion:	
   882                           ; 1 bytes @ 0x3
   883                           
   884  0073                     ??_SEND_CHAR:	
   885                           ; 1 bytes @ 0x3
   886                           
   887  0073                     ??_isdigit:	
   888                           ; 1 bytes @ 0x3
   889                           
   890  0073                     ??_LCD_CMD:	
   891                           ; 1 bytes @ 0x3
   892                           
   893  0073                     ??_LCD_WRITE_CHAR:	
   894                           ; 1 bytes @ 0x3
   895                           
   896  0073                     ?__Umul8_16:	
   897                           ; 1 bytes @ 0x3
   898                           
   899  0073                     ?___wmul:	
   900                           ; 2 bytes @ 0x3
   901                           
   902  0073                     ?___awmod:	
   903                           ; 2 bytes @ 0x3
   904                           
   905  0073                     ?___lwmod:	
   906                           ; 2 bytes @ 0x3
   907                           
   908  0073                     ?__tdiv_to_l_:	
   909                           ; 2 bytes @ 0x3
   910                           
   911  0073                     ?__div_to_l_:	
   912                           ; 4 bytes @ 0x3
   913                           
   914  0073                     ?___lldiv:	
   915                           ; 4 bytes @ 0x3
   916                           
   917  0073                     ?___flneg:	
   918                           ; 4 bytes @ 0x3
   919                           
   920  0073                     ?___xxtofl:	
   921                           ; 4 bytes @ 0x3
   922                           
   923  0073                     ADC_init@channel:	
   924                           ; 4 bytes @ 0x3
   925                           
   926  0073                     EUSART_Init@b:	
   927                           ; 1 bytes @ 0x3
   928                           
   929  0073                     SEND_CHAR@a:	
   930                           ; 1 bytes @ 0x3
   931                           
   932  0073                     _isdigit$1032:	
   933                           ; 1 bytes @ 0x3
   934                           
   935  0073                     __Umul8_16@multiplicand:	
   936                           ; 1 bytes @ 0x3
   937                           
   938  0073                     ___wmul@multiplier:	
   939                           ; 1 bytes @ 0x3
   940                           
   941  0073                     ___awmod@divisor:	
   942                           ; 2 bytes @ 0x3
   943                           
   944  0073                     ___lwmod@divisor:	
   945                           ; 2 bytes @ 0x3
   946                           
   947  0073                     ___lldiv@divisor:	
   948                           ; 2 bytes @ 0x3
   949                           
   950  0073                     __div_to_l_@f1:	
   951                           ; 4 bytes @ 0x3
   952                           
   953  0073                     ___fleq@ff1:	
   954                           ; 4 bytes @ 0x3
   955                           
   956  0073                     ___flge@ff1:	
   957                           ; 4 bytes @ 0x3
   958                           
   959  0073                     ___flneg@f1:	
   960                           ; 4 bytes @ 0x3
   961                           
   962  0073                     __tdiv_to_l_@f1:	
   963                           ; 4 bytes @ 0x3
   964                           
   965  0073                     ___xxtofl@val:	
   966                           ; 4 bytes @ 0x3
   967                           
   968                           
   969                           ; 4 bytes @ 0x3
   970  0073                     	ds	1
   971  0074                     ??_EUSART_Init:	
   972  0074                     ??_SEND_STRING:	
   973                           ; 1 bytes @ 0x4
   974                           
   975  0074                     ADC_init@int_on:	
   976                           ; 1 bytes @ 0x4
   977                           
   978  0074                     EUSART_Init@a:	
   979                           ; 1 bytes @ 0x4
   980                           
   981  0074                     isdigit@c:	
   982                           ; 1 bytes @ 0x4
   983                           
   984                           
   985                           ; 1 bytes @ 0x4
   986  0074                     	ds	1
   987  0075                     ??__Umul8_16:	
   988  0075                     LCD_CMD@a:	
   989                           ; 1 bytes @ 0x5
   990                           
   991  0075                     LCD_WRITE_CHAR@a:	
   992                           ; 1 bytes @ 0x5
   993                           
   994  0075                     ADC_init@left_or_right:	
   995                           ; 1 bytes @ 0x5
   996                           
   997  0075                     SEND_STRING@i:	
   998                           ; 1 bytes @ 0x5
   999                           
  1000  0075                     ___wmul@multiplicand:	
  1001                           ; 2 bytes @ 0x5
  1002                           
  1003  0075                     ___awmod@dividend:	
  1004                           ; 2 bytes @ 0x5
  1005                           
  1006  0075                     ___lwmod@dividend:	
  1007                           ; 2 bytes @ 0x5
  1008                           
  1009                           
  1010                           ; 2 bytes @ 0x5
  1011  0075                     	ds	1
  1012  0076                     ??_ADC_init:	
  1013  0076                     ?_LCD_SET_CURSOR:	
  1014                           ; 1 bytes @ 0x6
  1015                           
  1016  0076                     ??_LCD_INIT:	
  1017                           ; 1 bytes @ 0x6
  1018                           
  1019  0076                     ?_LCD_WRITE_STRING:	
  1020                           ; 1 bytes @ 0x6
  1021                           
  1022  0076                     LCD_SET_CURSOR@b:	
  1023                           ; 1 bytes @ 0x6
  1024                           
  1025  0076                     LCD_WRITE_STRING@a:	
  1026                           ; 1 bytes @ 0x6
  1027                           
  1028                           
  1029                           ; 2 bytes @ 0x6
  1030  0076                     	ds	1
  1031  0077                     ??_LCD_SET_CURSOR:	
  1032  0077                     ??___wmul:	
  1033                           ; 1 bytes @ 0x7
  1034                           
  1035  0077                     ??___awmod:	
  1036                           ; 1 bytes @ 0x7
  1037                           
  1038  0077                     ??___flneg:	
  1039                           ; 1 bytes @ 0x7
  1040                           
  1041  0077                     ??___lwmod:	
  1042                           ; 1 bytes @ 0x7
  1043                           
  1044  0077                     ??___xxtofl:	
  1045                           ; 1 bytes @ 0x7
  1046                           
  1047  0077                     SEND_STRING@a:	
  1048                           ; 1 bytes @ 0x7
  1049                           
  1050  0077                     ___wmul@product:	
  1051                           ; 1 bytes @ 0x7
  1052                           
  1053  0077                     ___lldiv@dividend:	
  1054                           ; 2 bytes @ 0x7
  1055                           
  1056  0077                     __div_to_l_@f2:	
  1057                           ; 4 bytes @ 0x7
  1058                           
  1059  0077                     ___fleq@ff2:	
  1060                           ; 4 bytes @ 0x7
  1061                           
  1062  0077                     ___flge@ff2:	
  1063                           ; 4 bytes @ 0x7
  1064                           
  1065  0077                     __tdiv_to_l_@f2:	
  1066                           ; 4 bytes @ 0x7
  1067                           
  1068                           
  1069                           ; 4 bytes @ 0x7
  1070  0077                     	ds	1
  1071  0078                     ??_LCD_WRITE_STRING:	
  1072  0078                     LCD_SET_CURSOR@a:	
  1073                           ; 1 bytes @ 0x8
  1074                           
  1075  0078                     ADC_init@Fosc:	
  1076                           ; 1 bytes @ 0x8
  1077                           
  1078  0078                     ___awmod@counter:	
  1079                           ; 1 bytes @ 0x8
  1080                           
  1081  0078                     ___lwmod@counter:	
  1082                           ; 1 bytes @ 0x8
  1083                           
  1084                           
  1085                           ; 1 bytes @ 0x8
  1086  0078                     	ds	1
  1087  0079                     ??___lwdiv:	
  1088  0079                     LCD_SET_CURSOR@temporal:	
  1089                           ; 1 bytes @ 0x9
  1090                           
  1091  0079                     ___awmod@sign:	
  1092                           ; 1 bytes @ 0x9
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x9
  1096  0079                     	ds	1
  1097  007A                     ??___awdiv:	
  1098                           
  1099                           ; 1 bytes @ 0xA
  1100  007A                     	ds	1
  1101  007B                     ??___flsub:	
  1102                           
  1103                           	psect	cstackBANK0
  1104  0020                     __pcstackBANK0:	
  1105                           ; 1 bytes @ 0xB
  1106                           
  1107  0020                     ??__tdiv_to_l_:	
  1108  0020                     ??__div_to_l_:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0020                     ??___lldiv:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0020                     ??___fleq:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0020                     ??___flge:	
  1118                           ; 1 bytes @ 0x0
  1119                           
  1120  0020                     ?___awdiv:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0020                     ?___lwdiv:	
  1124                           ; 2 bytes @ 0x0
  1125                           
  1126  0020                     ___xxtofl@sign:	
  1127                           ; 2 bytes @ 0x0
  1128                           
  1129  0020                     LCD_WRITE_STRING@i:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0020                     ___awdiv@divisor:	
  1133                           ; 2 bytes @ 0x0
  1134                           
  1135  0020                     ___lwdiv@divisor:	
  1136                           ; 2 bytes @ 0x0
  1137                           
  1138  0020                     __Umul8_16@product:	
  1139                           ; 2 bytes @ 0x0
  1140                           
  1141                           
  1142                           ; 2 bytes @ 0x0
  1143  0020                     	ds	1
  1144  0021                     ___xxtofl@exp:	
  1145  0021                     ___lldiv@quotient:	
  1146                           ; 1 bytes @ 0x1
  1147                           
  1148  0021                     __div_to_l_@quot:	
  1149                           ; 4 bytes @ 0x1
  1150                           
  1151                           
  1152                           ; 4 bytes @ 0x1
  1153  0021                     	ds	1
  1154  0022                     ___awdiv@dividend:	
  1155  0022                     ___lwdiv@dividend:	
  1156                           ; 2 bytes @ 0x2
  1157                           
  1158  0022                     __Umul8_16@word_mpld:	
  1159                           ; 2 bytes @ 0x2
  1160                           
  1161  0022                     ___xxtofl@arg:	
  1162                           ; 2 bytes @ 0x2
  1163                           
  1164                           
  1165                           ; 4 bytes @ 0x2
  1166  0022                     	ds	2
  1167  0024                     ___awdiv@counter:	
  1168  0024                     __Umul8_16@multiplier:	
  1169                           ; 1 bytes @ 0x4
  1170                           
  1171  0024                     ___lwdiv@quotient:	
  1172                           ; 1 bytes @ 0x4
  1173                           
  1174  0024                     __tdiv_to_l_@quot:	
  1175                           ; 2 bytes @ 0x4
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0x4
  1179  0024                     	ds	1
  1180  0025                     ___lldiv@counter:	
  1181  0025                     ___awdiv@sign:	
  1182                           ; 1 bytes @ 0x5
  1183                           
  1184  0025                     __div_to_l_@cntr:	
  1185                           ; 1 bytes @ 0x5
  1186                           
  1187                           
  1188                           ; 1 bytes @ 0x5
  1189  0025                     	ds	1
  1190  0026                     ?___llmod:	
  1191  0026                     __div_to_l_@exp1:	
  1192                           ; 4 bytes @ 0x6
  1193                           
  1194  0026                     ___lwdiv@counter:	
  1195                           ; 1 bytes @ 0x6
  1196                           
  1197  0026                     ___awdiv@quotient:	
  1198                           ; 1 bytes @ 0x6
  1199                           
  1200  0026                     ___llmod@divisor:	
  1201                           ; 2 bytes @ 0x6
  1202                           
  1203                           
  1204                           ; 4 bytes @ 0x6
  1205  0026                     	ds	2
  1206  0028                     ?___flmul:	
  1207  0028                     __tdiv_to_l_@cntr:	
  1208                           ; 4 bytes @ 0x8
  1209                           
  1210  0028                     ___flmul@b:	
  1211                           ; 1 bytes @ 0x8
  1212                           
  1213                           
  1214                           ; 4 bytes @ 0x8
  1215  0028                     	ds	1
  1216  0029                     __tdiv_to_l_@exp1:	
  1217                           
  1218                           ; 1 bytes @ 0x9
  1219  0029                     	ds	1
  1220  002A                     ___llmod@dividend:	
  1221                           
  1222                           ; 4 bytes @ 0xA
  1223  002A                     	ds	2
  1224  002C                     ___flmul@a:	
  1225                           
  1226                           ; 4 bytes @ 0xC
  1227  002C                     	ds	2
  1228  002E                     ??___llmod:	
  1229                           
  1230                           ; 1 bytes @ 0xE
  1231  002E                     	ds	1
  1232  002F                     ___llmod@counter:	
  1233                           
  1234                           ; 1 bytes @ 0xF
  1235  002F                     	ds	1
  1236  0030                     ??___flmul:	
  1237                           
  1238                           ; 1 bytes @ 0x10
  1239  0030                     	ds	5
  1240  0035                     ___flmul@sign:	
  1241                           
  1242                           ; 1 bytes @ 0x15
  1243  0035                     	ds	1
  1244  0036                     ___flmul@grs:	
  1245                           
  1246                           ; 4 bytes @ 0x16
  1247  0036                     	ds	4
  1248  003A                     ___flmul@aexp:	
  1249                           
  1250                           ; 1 bytes @ 0x1A
  1251  003A                     	ds	1
  1252  003B                     ___flmul@bexp:	
  1253                           
  1254                           ; 1 bytes @ 0x1B
  1255  003B                     	ds	1
  1256  003C                     ___flmul@prod:	
  1257                           
  1258                           ; 4 bytes @ 0x1C
  1259  003C                     	ds	4
  1260  0040                     ___flmul@temp:	
  1261                           
  1262                           ; 2 bytes @ 0x20
  1263  0040                     	ds	2
  1264  0042                     ?_fround:	
  1265  0042                     ?_scale:	
  1266                           ; 4 bytes @ 0x22
  1267                           
  1268                           
  1269                           ; 4 bytes @ 0x22
  1270  0042                     	ds	4
  1271  0046                     ??_fround:	
  1272  0046                     ??_scale:	
  1273                           ; 1 bytes @ 0x26
  1274                           
  1275                           
  1276                           ; 1 bytes @ 0x26
  1277  0046                     	ds	7
  1278  004D                     _fround$1232:	
  1279                           
  1280                           ; 4 bytes @ 0x2D
  1281  004D                     	ds	3
  1282  0050                     _scale$1233:	
  1283                           
  1284                           ; 4 bytes @ 0x30
  1285  0050                     	ds	1
  1286  0051                     _fround$1231:	
  1287                           
  1288                           ; 4 bytes @ 0x31
  1289  0051                     	ds	3
  1290  0054                     scale@scl:	
  1291                           
  1292                           ; 1 bytes @ 0x34
  1293  0054                     	ds	1
  1294  0055                     ?___fltol:	
  1295  0055                     fround@prec:	
  1296                           ; 4 bytes @ 0x35
  1297                           
  1298  0055                     ___fltol@f1:	
  1299                           ; 1 bytes @ 0x35
  1300                           
  1301                           
  1302                           ; 4 bytes @ 0x35
  1303  0055                     	ds	1
  1304  0056                     ?___fladd:	
  1305  0056                     ___fladd@b:	
  1306                           ; 4 bytes @ 0x36
  1307                           
  1308                           
  1309                           ; 4 bytes @ 0x36
  1310  0056                     	ds	3
  1311  0059                     ??___fltol:	
  1312                           
  1313                           ; 1 bytes @ 0x39
  1314  0059                     	ds	1
  1315  005A                     ___fladd@a:	
  1316                           
  1317                           ; 4 bytes @ 0x3A
  1318  005A                     	ds	4
  1319  005E                     ??___fladd:	
  1320  005E                     ___fltol@sign1:	
  1321                           ; 1 bytes @ 0x3E
  1322                           
  1323                           
  1324                           ; 1 bytes @ 0x3E
  1325  005E                     	ds	1
  1326  005F                     ___fltol@exp1:	
  1327                           
  1328                           ; 1 bytes @ 0x3F
  1329  005F                     	ds	7
  1330  0066                     ___fladd@signs:	
  1331                           
  1332                           ; 1 bytes @ 0x46
  1333  0066                     	ds	1
  1334  0067                     ___fladd@aexp:	
  1335                           
  1336                           ; 1 bytes @ 0x47
  1337  0067                     	ds	1
  1338  0068                     ___fladd@bexp:	
  1339                           
  1340                           ; 1 bytes @ 0x48
  1341  0068                     	ds	1
  1342  0069                     ___fladd@grs:	
  1343                           
  1344                           ; 1 bytes @ 0x49
  1345  0069                     	ds	1
  1346  006A                     ?_sprintf:	
  1347  006A                     sprintf@f:	
  1348                           ; 2 bytes @ 0x4A
  1349                           
  1350                           
  1351                           ; 1 bytes @ 0x4A
  1352  006A                     	ds	5
  1353                           
  1354                           	psect	maintext
  1355  060B                     __pmaintext:	
  1356 ;;
  1357 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1358 ;;
  1359 ;; *************** function _main *****************
  1360 ;; Defined at:
  1361 ;;		line 58 in file "main_lab3.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;		None
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1370 ;; Tracked objects:
  1371 ;;		On entry : B00/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0
  1377 ;;      Temps:          0       0       4       0       0
  1378 ;;      Totals:         0       0       4       0       0
  1379 ;;Total ram usage:        4 bytes
  1380 ;; Hardware stack levels required when called:    5
  1381 ;; This function calls:
  1382 ;;		_ADC_init
  1383 ;;		_EUSART_Init
  1384 ;;		_LCD_INIT
  1385 ;;		_LCD_SET_CURSOR
  1386 ;;		_LCD_WRITE_STRING
  1387 ;;		_Port_init
  1388 ;;		_SEND_STRING
  1389 ;;		___flmul
  1390 ;;		___xxtofl
  1391 ;;		_sprintf
  1392 ;;		_start_conversion
  1393 ;; This function is called by:
  1394 ;;		Startup code after reset
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           
  1399                           ;psect for function _main
  1400  060B                     _main:	
  1401  060B                     l3691:	
  1402                           ;incstack = 0
  1403                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1404                           
  1405                           
  1406                           ;main_lab3.c: 59:     Port_init();
  1407  060B  160A  158A  2190  120A  118A  	fcall	_Port_init
  1408                           
  1409                           ;main_lab3.c: 60:     LCD_INIT();
  1410  0610  160A  158A  23BB  120A  118A  	fcall	_LCD_INIT
  1411  0615                     l3693:	
  1412                           
  1413                           ;main_lab3.c: 61:     ADC_init(1,1,1,0);
  1414  0615  01F3               	clrf	ADC_init@channel
  1415  0616  0AF3               	incf	ADC_init@channel,f
  1416  0617  01F4               	clrf	ADC_init@int_on
  1417  0618  0AF4               	incf	ADC_init@int_on,f
  1418  0619  01F5               	clrf	ADC_init@left_or_right
  1419  061A  3001               	movlw	1
  1420  061B  120A  158A  2078  120A  118A  	fcall	_ADC_init
  1421  0620                     l3695:	
  1422                           
  1423                           ;main_lab3.c: 62:     EUSART_Init(1, 0);
  1424  0620  01F3               	clrf	EUSART_Init@b
  1425  0621  3001               	movlw	1
  1426  0622  160A  158A  223B  120A  118A  	fcall	_EUSART_Init
  1427  0627                     l3697:	
  1428                           
  1429                           ;main_lab3.c: 64:         if (start_another == 1){
  1430  0627  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0628  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0629  0356               	decf	_start_another^(0+128),w
  1433  062A  1D03               	btfss	3,2
  1434  062B  2E2D               	goto	u5831
  1435  062C  2E2E               	goto	u5830
  1436  062D                     u5831:	
  1437  062D  2E36               	goto	l3703
  1438  062E                     u5830:	
  1439  062E                     l3699:	
  1440                           
  1441                           ;main_lab3.c: 65:             start_conversion();
  1442  062E  120A  158A  2000  120A  118A  	fcall	_start_conversion
  1443  0633                     l3701:	
  1444                           
  1445                           ;main_lab3.c: 66:             start_another = 0;
  1446  0633  1683               	bsf	3,5	;RP0=1, select bank1
  1447  0634  1303               	bcf	3,6	;RP1=0, select bank1
  1448  0635  01D6               	clrf	_start_another^(0+128)
  1449  0636                     l3703:	
  1450                           
  1451                           ;main_lab3.c: 68:         if (Contador == 0x2B){
  1452  0636  302B               	movlw	43
  1453  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0639  066F               	xorwf	_Contador,w
  1456  063A  1D03               	btfss	3,2
  1457  063B  2E3D               	goto	u5841
  1458  063C  2E3E               	goto	u5840
  1459  063D                     u5841:	
  1460  063D  2E4A               	goto	l3709
  1461  063E                     u5840:	
  1462  063E                     l3705:	
  1463                           
  1464                           ;main_lab3.c: 69:             valor++;
  1465  063E  3001               	movlw	1
  1466  063F  1683               	bsf	3,5	;RP0=1, select bank1
  1467  0640  1303               	bcf	3,6	;RP1=0, select bank1
  1468  0641  07D4               	addwf	_valor^(0+128),f
  1469  0642  1803               	skipnc
  1470  0643  0AD5               	incf	(_valor+1)^(0+128),f
  1471  0644  3000               	movlw	0
  1472  0645  07D5               	addwf	(_valor+1)^(0+128),f
  1473  0646                     l3707:	
  1474                           
  1475                           ;main_lab3.c: 70:             Contador = 0;
  1476  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1478  0648  01EF               	clrf	_Contador
  1479                           
  1480                           ;main_lab3.c: 71:         }else if (Contador == 0x2D){
  1481  0649  2E59               	goto	l3715
  1482  064A                     l3709:	
  1483  064A  302D               	movlw	45
  1484  064B  066F               	xorwf	_Contador,w
  1485  064C  1D03               	btfss	3,2
  1486  064D  2E4F               	goto	u5851
  1487  064E  2E50               	goto	u5850
  1488  064F                     u5851:	
  1489  064F  2E59               	goto	l3715
  1490  0650                     u5850:	
  1491  0650                     l3711:	
  1492                           
  1493                           ;main_lab3.c: 72:             valor--;
  1494  0650  30FF               	movlw	255
  1495  0651  1683               	bsf	3,5	;RP0=1, select bank1
  1496  0652  1303               	bcf	3,6	;RP1=0, select bank1
  1497  0653  07D4               	addwf	_valor^(0+128),f
  1498  0654  1803               	skipnc
  1499  0655  0AD5               	incf	(_valor+1)^(0+128),f
  1500  0656  30FF               	movlw	255
  1501  0657  07D5               	addwf	(_valor+1)^(0+128),f
  1502  0658  2E46               	goto	l3707
  1503  0659                     l3715:	
  1504                           
  1505                           ;main_lab3.c: 75:         valor = Contador;
  1506  0659  086F               	movf	_Contador,w
  1507  065A  1683               	bsf	3,5	;RP0=1, select bank1
  1508  065B  1303               	bcf	3,6	;RP1=0, select bank1
  1509  065C  00C8               	movwf	??_main^(0+128)
  1510  065D  01C9               	clrf	(??_main^(0+128)+1)
  1511  065E  0848               	movf	??_main^(0+128),w
  1512  065F  00D4               	movwf	_valor^(0+128)
  1513  0660  0849               	movf	(??_main+1)^(0+128),w
  1514  0661  00D5               	movwf	(_valor+1)^(0+128)
  1515  0662                     l3717:	
  1516                           
  1517                           ;main_lab3.c: 76:         volt1 = pot1*(5.0/255);
  1518  0662  303C               	movlw	60
  1519  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1520  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1521  0665  00AB               	movwf	___flmul@b+3
  1522  0666  30A0               	movlw	160
  1523  0667  00AA               	movwf	___flmul@b+2
  1524  0668  30A0               	movlw	160
  1525  0669  00A9               	movwf	___flmul@b+1
  1526  066A  30A1               	movlw	161
  1527  066B  00A8               	movwf	___flmul@b
  1528  066C  1683               	bsf	3,5	;RP0=1, select bank1
  1529  066D  1303               	bcf	3,6	;RP1=0, select bank1
  1530  066E  0858               	movf	_pot1^(0+128),w
  1531  066F  00C8               	movwf	??_main^(0+128)
  1532  0670  01C9               	clrf	(??_main^(0+128)+1)
  1533  0671  01CA               	clrf	(??_main^(0+128)+2)
  1534  0672  01CB               	clrf	(??_main^(0+128)+3)
  1535  0673  084B               	movf	(??_main+3)^(0+128),w
  1536  0674  00F6               	movwf	___xxtofl@val+3
  1537  0675  084A               	movf	(??_main+2)^(0+128),w
  1538  0676  00F5               	movwf	___xxtofl@val+2
  1539  0677  0849               	movf	(??_main+1)^(0+128),w
  1540  0678  00F4               	movwf	___xxtofl@val+1
  1541  0679  0848               	movf	??_main^(0+128),w
  1542  067A  00F3               	movwf	___xxtofl@val
  1543  067B  3001               	movlw	1
  1544  067C  160A  158A  25C9  120A  118A  	fcall	___xxtofl
  1545  0681  0876               	movf	?___xxtofl+3,w
  1546  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0684  00AF               	movwf	___flmul@a+3
  1549  0685  0875               	movf	?___xxtofl+2,w
  1550  0686  00AE               	movwf	___flmul@a+2
  1551  0687  0874               	movf	?___xxtofl+1,w
  1552  0688  00AD               	movwf	___flmul@a+1
  1553  0689  0873               	movf	?___xxtofl,w
  1554  068A  00AC               	movwf	___flmul@a
  1555  068B  120A  158A  213C  120A  118A  	fcall	___flmul
  1556  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1557  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1558  0692  082B               	movf	?___flmul+3,w
  1559  0693  1683               	bsf	3,5	;RP0=1, select bank1
  1560  0694  1303               	bcf	3,6	;RP1=0, select bank1
  1561  0695  00D3               	movwf	(_volt1+3)^(0+128)
  1562  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1564  0698  082A               	movf	?___flmul+2,w
  1565  0699  1683               	bsf	3,5	;RP0=1, select bank1
  1566  069A  1303               	bcf	3,6	;RP1=0, select bank1
  1567  069B  00D2               	movwf	(_volt1+2)^(0+128)
  1568  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1569  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1570  069E  0829               	movf	?___flmul+1,w
  1571  069F  1683               	bsf	3,5	;RP0=1, select bank1
  1572  06A0  1303               	bcf	3,6	;RP1=0, select bank1
  1573  06A1  00D1               	movwf	(_volt1+1)^(0+128)
  1574  06A2  1283               	bcf	3,5	;RP0=0, select bank0
  1575  06A3  1303               	bcf	3,6	;RP1=0, select bank0
  1576  06A4  0828               	movf	?___flmul,w
  1577  06A5  1683               	bsf	3,5	;RP0=1, select bank1
  1578  06A6  1303               	bcf	3,6	;RP1=0, select bank1
  1579  06A7  00D0               	movwf	_volt1^(0+128)
  1580  06A8                     l3719:	
  1581                           
  1582                           ;main_lab3.c: 77:         volt2 = pot2*(5.0/255);
  1583  06A8  303C               	movlw	60
  1584  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  1585  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  1586  06AB  00AB               	movwf	___flmul@b+3
  1587  06AC  30A0               	movlw	160
  1588  06AD  00AA               	movwf	___flmul@b+2
  1589  06AE  30A0               	movlw	160
  1590  06AF  00A9               	movwf	___flmul@b+1
  1591  06B0  30A1               	movlw	161
  1592  06B1  00A8               	movwf	___flmul@b
  1593  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  1594  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  1595  06B4  0857               	movf	_pot2^(0+128),w
  1596  06B5  00C8               	movwf	??_main^(0+128)
  1597  06B6  01C9               	clrf	(??_main^(0+128)+1)
  1598  06B7  01CA               	clrf	(??_main^(0+128)+2)
  1599  06B8  01CB               	clrf	(??_main^(0+128)+3)
  1600  06B9  084B               	movf	(??_main+3)^(0+128),w
  1601  06BA  00F6               	movwf	___xxtofl@val+3
  1602  06BB  084A               	movf	(??_main+2)^(0+128),w
  1603  06BC  00F5               	movwf	___xxtofl@val+2
  1604  06BD  0849               	movf	(??_main+1)^(0+128),w
  1605  06BE  00F4               	movwf	___xxtofl@val+1
  1606  06BF  0848               	movf	??_main^(0+128),w
  1607  06C0  00F3               	movwf	___xxtofl@val
  1608  06C1  3001               	movlw	1
  1609  06C2  160A  158A  25C9  120A  118A  	fcall	___xxtofl
  1610  06C7  0876               	movf	?___xxtofl+3,w
  1611  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  1612  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  1613  06CA  00AF               	movwf	___flmul@a+3
  1614  06CB  0875               	movf	?___xxtofl+2,w
  1615  06CC  00AE               	movwf	___flmul@a+2
  1616  06CD  0874               	movf	?___xxtofl+1,w
  1617  06CE  00AD               	movwf	___flmul@a+1
  1618  06CF  0873               	movf	?___xxtofl,w
  1619  06D0  00AC               	movwf	___flmul@a
  1620  06D1  120A  158A  213C  120A  118A  	fcall	___flmul
  1621  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  1622  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  1623  06D8  082B               	movf	?___flmul+3,w
  1624  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  1625  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  1626  06DB  00CF               	movwf	(_volt2+3)^(0+128)
  1627  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  1628  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  1629  06DE  082A               	movf	?___flmul+2,w
  1630  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  1631  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  1632  06E1  00CE               	movwf	(_volt2+2)^(0+128)
  1633  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  1634  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  1635  06E4  0829               	movf	?___flmul+1,w
  1636  06E5  1683               	bsf	3,5	;RP0=1, select bank1
  1637  06E6  1303               	bcf	3,6	;RP1=0, select bank1
  1638  06E7  00CD               	movwf	(_volt2+1)^(0+128)
  1639  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  1640  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  1641  06EA  0828               	movf	?___flmul,w
  1642  06EB  1683               	bsf	3,5	;RP0=1, select bank1
  1643  06EC  1303               	bcf	3,6	;RP1=0, select bank1
  1644  06ED  00CC               	movwf	_volt2^(0+128)
  1645  06EE                     l3721:	
  1646                           
  1647                           ;main_lab3.c: 78:         sprintf(string1,"%1.1f", volt1);
  1648  06EE  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1649  06EF  00C8               	movwf	??_main^(0+128)
  1650  06F0  0848               	movf	??_main^(0+128),w
  1651  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  1652  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  1653  06F3  00EA               	movwf	sprintf@f
  1654  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  1655  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  1656  06F6  0853               	movf	(_volt1+3)^(0+128),w
  1657  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1658  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1659  06F9  00EE               	movwf	?_sprintf+4
  1660  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  1661  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  1662  06FC  0852               	movf	(_volt1+2)^(0+128),w
  1663  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1664  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1665  06FF  00ED               	movwf	?_sprintf+3
  1666  0700  1683               	bsf	3,5	;RP0=1, select bank1
  1667  0701  1303               	bcf	3,6	;RP1=0, select bank1
  1668  0702  0851               	movf	(_volt1+1)^(0+128),w
  1669  0703  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0704  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0705  00EC               	movwf	?_sprintf+2
  1672  0706  1683               	bsf	3,5	;RP0=1, select bank1
  1673  0707  1303               	bcf	3,6	;RP1=0, select bank1
  1674  0708  0850               	movf	_volt1^(0+128),w
  1675  0709  1283               	bcf	3,5	;RP0=0, select bank0
  1676  070A  1303               	bcf	3,6	;RP1=0, select bank0
  1677  070B  00EB               	movwf	?_sprintf+1
  1678  070C  30DD               	movlw	(low (_string1| 0))& (0+255)
  1679  070D  160A  118A  2515  120A  118A  	fcall	_sprintf
  1680  0712                     l3723:	
  1681                           
  1682                           ;main_lab3.c: 79:         sprintf(string2, "%1.1f", volt2);
  1683  0712  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1684  0713  1683               	bsf	3,5	;RP0=1, select bank1
  1685  0714  1303               	bcf	3,6	;RP1=0, select bank1
  1686  0715  00C8               	movwf	??_main^(0+128)
  1687  0716  0848               	movf	??_main^(0+128),w
  1688  0717  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0718  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0719  00EA               	movwf	sprintf@f
  1691  071A  1683               	bsf	3,5	;RP0=1, select bank1
  1692  071B  1303               	bcf	3,6	;RP1=0, select bank1
  1693  071C  084F               	movf	(_volt2+3)^(0+128),w
  1694  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1695  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1696  071F  00EE               	movwf	?_sprintf+4
  1697  0720  1683               	bsf	3,5	;RP0=1, select bank1
  1698  0721  1303               	bcf	3,6	;RP1=0, select bank1
  1699  0722  084E               	movf	(_volt2+2)^(0+128),w
  1700  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0725  00ED               	movwf	?_sprintf+3
  1703  0726  1683               	bsf	3,5	;RP0=1, select bank1
  1704  0727  1303               	bcf	3,6	;RP1=0, select bank1
  1705  0728  084D               	movf	(_volt2+1)^(0+128),w
  1706  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1707  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1708  072B  00EC               	movwf	?_sprintf+2
  1709  072C  1683               	bsf	3,5	;RP0=1, select bank1
  1710  072D  1303               	bcf	3,6	;RP1=0, select bank1
  1711  072E  084C               	movf	_volt2^(0+128),w
  1712  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0731  00EB               	movwf	?_sprintf+1
  1715  0732  30D9               	movlw	(low (_string2| 0))& (0+255)
  1716  0733  160A  118A  2515  120A  118A  	fcall	_sprintf
  1717  0738                     l3725:	
  1718                           
  1719                           ;main_lab3.c: 80:         sprintf(string3, "%d", valor);
  1720  0738  30A6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1721  0739  1683               	bsf	3,5	;RP0=1, select bank1
  1722  073A  1303               	bcf	3,6	;RP1=0, select bank1
  1723  073B  00C8               	movwf	??_main^(0+128)
  1724  073C  0848               	movf	??_main^(0+128),w
  1725  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1726  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1727  073F  00EA               	movwf	sprintf@f
  1728  0740  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0741  1303               	bcf	3,6	;RP1=0, select bank1
  1730  0742  0855               	movf	(_valor+1)^(0+128),w
  1731  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1732  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1733  0745  00EC               	movwf	?_sprintf+2
  1734  0746  1683               	bsf	3,5	;RP0=1, select bank1
  1735  0747  1303               	bcf	3,6	;RP1=0, select bank1
  1736  0748  0854               	movf	_valor^(0+128),w
  1737  0749  1283               	bcf	3,5	;RP0=0, select bank0
  1738  074A  1303               	bcf	3,6	;RP1=0, select bank0
  1739  074B  00EB               	movwf	?_sprintf+1
  1740  074C  30E1               	movlw	(low (_string3| 0))& (0+255)
  1741  074D  160A  118A  2515  120A  118A  	fcall	_sprintf
  1742  0752                     l3727:	
  1743                           
  1744                           ;main_lab3.c: 81:         LCD_SET_CURSOR(1,1);
  1745  0752  01F6               	clrf	LCD_SET_CURSOR@b
  1746  0753  0AF6               	incf	LCD_SET_CURSOR@b,f
  1747  0754  3001               	movlw	1
  1748  0755  160A  158A  21C9  120A  118A  	fcall	_LCD_SET_CURSOR
  1749  075A                     l3729:	
  1750                           
  1751                           ;main_lab3.c: 82:         LCD_WRITE_STRING("V1   V2  Cont.");
  1752  075A  3091               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1753  075B  00F6               	movwf	LCD_WRITE_STRING@a
  1754  075C  3080               	movlw	128
  1755  075D  00F7               	movwf	LCD_WRITE_STRING@a+1
  1756  075E  160A  158A  22D5  120A  118A  	fcall	_LCD_WRITE_STRING
  1757  0763                     l3731:	
  1758                           
  1759                           ;main_lab3.c: 83:         LCD_SET_CURSOR(2,1);
  1760  0763  01F6               	clrf	LCD_SET_CURSOR@b
  1761  0764  0AF6               	incf	LCD_SET_CURSOR@b,f
  1762  0765  3002               	movlw	2
  1763  0766  160A  158A  21C9  120A  118A  	fcall	_LCD_SET_CURSOR
  1764  076B                     l3733:	
  1765                           
  1766                           ;main_lab3.c: 84:         LCD_WRITE_STRING(string1);
  1767  076B  30DD               	movlw	(low (_string1| 0))& (0+255)
  1768  076C  00F6               	movwf	LCD_WRITE_STRING@a
  1769  076D  3000               	movlw	0
  1770  076E  00F7               	movwf	LCD_WRITE_STRING@a+1
  1771  076F  160A  158A  22D5  120A  118A  	fcall	_LCD_WRITE_STRING
  1772  0774                     l3735:	
  1773                           
  1774                           ;main_lab3.c: 85:         LCD_SET_CURSOR(2,6);
  1775  0774  3006               	movlw	6
  1776  0775  1683               	bsf	3,5	;RP0=1, select bank1
  1777  0776  1303               	bcf	3,6	;RP1=0, select bank1
  1778  0777  00C8               	movwf	??_main^(0+128)
  1779  0778  0848               	movf	??_main^(0+128),w
  1780  0779  00F6               	movwf	LCD_SET_CURSOR@b
  1781  077A  3002               	movlw	2
  1782  077B  160A  158A  21C9  120A  118A  	fcall	_LCD_SET_CURSOR
  1783  0780                     l3737:	
  1784                           
  1785                           ;main_lab3.c: 86:         LCD_WRITE_STRING(string2);
  1786  0780  30D9               	movlw	(low (_string2| 0))& (0+255)
  1787  0781  00F6               	movwf	LCD_WRITE_STRING@a
  1788  0782  3000               	movlw	0
  1789  0783  00F7               	movwf	LCD_WRITE_STRING@a+1
  1790  0784  160A  158A  22D5  120A  118A  	fcall	_LCD_WRITE_STRING
  1791  0789                     l3739:	
  1792                           
  1793                           ;main_lab3.c: 87:         LCD_SET_CURSOR(2, 11);
  1794  0789  300B               	movlw	11
  1795  078A  1683               	bsf	3,5	;RP0=1, select bank1
  1796  078B  1303               	bcf	3,6	;RP1=0, select bank1
  1797  078C  00C8               	movwf	??_main^(0+128)
  1798  078D  0848               	movf	??_main^(0+128),w
  1799  078E  00F6               	movwf	LCD_SET_CURSOR@b
  1800  078F  3002               	movlw	2
  1801  0790  160A  158A  21C9  120A  118A  	fcall	_LCD_SET_CURSOR
  1802  0795                     l3741:	
  1803                           
  1804                           ;main_lab3.c: 88:         LCD_WRITE_STRING(string3);
  1805  0795  30E1               	movlw	(low (_string3| 0))& (0+255)
  1806  0796  00F6               	movwf	LCD_WRITE_STRING@a
  1807  0797  3000               	movlw	0
  1808  0798  00F7               	movwf	LCD_WRITE_STRING@a+1
  1809  0799  160A  158A  22D5  120A  118A  	fcall	_LCD_WRITE_STRING
  1810  079E                     l3743:	
  1811                           
  1812                           ;main_lab3.c: 89:         TXREG = 0x45;
  1813  079E  3045               	movlw	69
  1814  079F  1283               	bcf	3,5	;RP0=0, select bank0
  1815  07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1816  07A1  0099               	movwf	25	;volatile
  1817  07A2                     l3745:	
  1818                           
  1819                           ;main_lab3.c: 90:         SEND_STRING(string1);
  1820  07A2  30DD               	movlw	(low (_string1| 0))& (0+255)
  1821  07A3  160A  158A  21A8  120A  118A  	fcall	_SEND_STRING
  1822  07A8                     l3747:	
  1823                           
  1824                           ;main_lab3.c: 91:         SEND_STRING(string2);
  1825  07A8  30D9               	movlw	(low (_string2| 0))& (0+255)
  1826  07A9  160A  158A  21A8  120A  118A  	fcall	_SEND_STRING
  1827  07AE                     l3749:	
  1828                           
  1829                           ;main_lab3.c: 92:         SEND_STRING(string3);
  1830  07AE  30E1               	movlw	(low (_string3| 0))& (0+255)
  1831  07AF  160A  158A  21A8  120A  118A  	fcall	_SEND_STRING
  1832  07B4  2E27               	goto	l3697
  1833  07B5  120A  118A  280C   	ljmp	start
  1834  07B8                     __end_of_main:	
  1835                           
  1836                           	psect	text1
  1837  0800                     __ptext1:	
  1838 ;; *************** function _start_conversion *****************
  1839 ;; Defined at:
  1840 ;;		line 24 in file "../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;		None
  1843 ;; Auto vars:     Size  Location     Type
  1844 ;;		None
  1845 ;; Return value:  Size  Location     Type
  1846 ;;                  1    wreg      void 
  1847 ;; Registers used:
  1848 ;;		None
  1849 ;; Tracked objects:
  1850 ;;		On entry : 0/0
  1851 ;;		On exit  : 0/0
  1852 ;;		Unchanged: 0/0
  1853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1854 ;;      Params:         0       0       0       0       0
  1855 ;;      Locals:         0       0       0       0       0
  1856 ;;      Temps:          0       0       0       0       0
  1857 ;;      Totals:         0       0       0       0       0
  1858 ;;Total ram usage:        0 bytes
  1859 ;; Hardware stack levels used:    1
  1860 ;; Hardware stack levels required when called:    1
  1861 ;; This function calls:
  1862 ;;		Nothing
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           
  1869                           ;psect for function _start_conversion
  1870  0800                     _start_conversion:	
  1871  0800                     l3363:	
  1872                           ;incstack = 0
  1873                           ; Regs used in _start_conversion: []
  1874                           
  1875                           
  1876                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 25:     ADCON0bits.GO_DONE
      +                           = 1;
  1877  0800  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0801  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0802  149F               	bsf	31,1	;volatile
  1880  0803                     l142:	
  1881  0803  0008               	return
  1882  0804                     __end_of_start_conversion:	
  1883                           
  1884                           	psect	text2
  1885  1515                     __ptext2:	
  1886 ;; *************** function _sprintf *****************
  1887 ;; Defined at:
  1888 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  sp              1    wreg     PTR unsigned char 
  1891 ;;		 -> string3(3), string2(4), string1(4), 
  1892 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1893 ;;		 -> STR_3(3), STR_2(6), STR_1(6), 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;  sp              1   36[BANK1 ] PTR unsigned char 
  1896 ;;		 -> string3(3), string2(4), string1(4), 
  1897 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1898 ;;  val             4   26[BANK1 ] unsigned long 
  1899 ;;  tmpval          4   22[BANK1 ] struct .
  1900 ;;  prec            2   37[BANK1 ] int 
  1901 ;;  eexp            2   30[BANK1 ] int 
  1902 ;;  width           2   20[BANK1 ] int 
  1903 ;;  flag            2   18[BANK1 ] unsigned short 
  1904 ;;  cp              2    0        PTR const unsigned char 
  1905 ;;  len             2    0        unsigned int 
  1906 ;;  c               1   39[BANK1 ] unsigned char 
  1907 ;;  ap              1   17[BANK1 ] PTR void [1]
  1908 ;;		 -> ?_sprintf(2), 
  1909 ;;  d               1    0        unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  2   74[BANK0 ] int 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1919 ;;      Params:         0       5       0       0       0
  1920 ;;      Locals:         0       0      27       0       0
  1921 ;;      Temps:          0       0       5       0       0
  1922 ;;      Totals:         0       5      32       0       0
  1923 ;;Total ram usage:       37 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    4
  1926 ;; This function calls:
  1927 ;;		___awdiv
  1928 ;;		___fladd
  1929 ;;		___fleq
  1930 ;;		___flge
  1931 ;;		___flmul
  1932 ;;		___flneg
  1933 ;;		___flsub
  1934 ;;		___fltol
  1935 ;;		___lldiv
  1936 ;;		___llmod
  1937 ;;		___wmul
  1938 ;;		___xxtofl
  1939 ;;		__div_to_l_
  1940 ;;		__tdiv_to_l_
  1941 ;;		_fround
  1942 ;;		_isdigit
  1943 ;;		_scale
  1944 ;; This function is called by:
  1945 ;;		_main
  1946 ;; This function uses a non-reentrant model
  1947 ;;
  1948                           
  1949                           
  1950                           ;psect for function _sprintf
  1951  1515                     _sprintf:	
  1952                           
  1953                           ;incstack = 0
  1954                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1955                           ;sprintf@sp stored from wreg
  1956  1515  1683               	bsf	3,5	;RP0=1, select bank1
  1957  1516  1303               	bcf	3,6	;RP1=0, select bank1
  1958  1517  00C4               	movwf	sprintf@sp^(0+128)
  1959  1518                     l3365:	
  1960                           
  1961                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1962  1518  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1963  1519  00A8               	movwf	??_sprintf^(0+128)
  1964  151A  0828               	movf	??_sprintf^(0+128),w
  1965  151B  00B1               	movwf	sprintf@ap^(0+128)
  1966  151C                     L1:	
  1967                           
  1968                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1969  151C  120A  118A  2DEE   	goto	l3647
  1970  151F                     l3367:	
  1971                           
  1972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1973  151F  3025               	movlw	37
  1974  1520  0647               	xorwf	sprintf@c^(0+128),w
  1975  1521  1903               	btfsc	3,2
  1976  1522  2D24               	goto	u5261
  1977  1523  2D25               	goto	u5260
  1978  1524                     u5261:	
  1979  1524  2D31               	goto	l3373
  1980  1525                     u5260:	
  1981  1525                     l3369:	
  1982                           
  1983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1984  1525  0847               	movf	sprintf@c^(0+128),w
  1985  1526  00A8               	movwf	??_sprintf^(0+128)
  1986  1527  0844               	movf	sprintf@sp^(0+128),w
  1987  1528  0084               	movwf	4
  1988  1529  0828               	movf	??_sprintf^(0+128),w
  1989  152A  1383               	bcf	3,7	;select IRP bank0
  1990  152B  0080               	movwf	0
  1991  152C                     l3371:	
  1992  152C  3001               	movlw	1
  1993  152D  00A8               	movwf	??_sprintf^(0+128)
  1994  152E  0828               	movf	??_sprintf^(0+128),w
  1995  152F  07C4               	addwf	sprintf@sp^(0+128),f
  1996                           
  1997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1998  1530  2D1C               	goto	L1
  1999  1531                     l3373:	
  2000                           
  2001                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  2002  1531  01B4               	clrf	sprintf@width^(0+128)
  2003  1532  01B5               	clrf	(sprintf@width+1)^(0+128)
  2004                           
  2005                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  2006  1533  01B2               	clrf	sprintf@flag^(0+128)
  2007  1534  01B3               	clrf	(sprintf@flag+1)^(0+128)
  2008  1535                     l3375:	
  2009                           
  2010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  2011  1535  1283               	bcf	3,5	;RP0=0, select bank0
  2012  1536  1303               	bcf	3,6	;RP1=0, select bank0
  2013  1537  086A               	movf	sprintf@f,w
  2014  1538  0084               	movwf	4
  2015  1539  160A  158A  200A  160A  118A  	fcall	stringdir
  2016  153E  160A  158A  2151  160A  118A  	fcall	_isdigit
  2017  1543  1C03               	btfss	3,0
  2018  1544  2D46               	goto	u5271
  2019  1545  2D47               	goto	u5270
  2020  1546                     u5271:	
  2021  1546  2D8D               	goto	l3387
  2022  1547                     u5270:	
  2023  1547                     l3377:	
  2024                           
  2025                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  2026  1547  1683               	bsf	3,5	;RP0=1, select bank1
  2027  1548  1303               	bcf	3,6	;RP1=0, select bank1
  2028  1549  01B4               	clrf	sprintf@width^(0+128)
  2029  154A  01B5               	clrf	(sprintf@width+1)^(0+128)
  2030  154B                     l3379:	
  2031                           
  2032                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  2033  154B  300A               	movlw	10
  2034  154C  00F3               	movwf	___wmul@multiplier
  2035  154D  3000               	movlw	0
  2036  154E  00F4               	movwf	___wmul@multiplier+1
  2037  154F  1683               	bsf	3,5	;RP0=1, select bank1
  2038  1550  1303               	bcf	3,6	;RP1=0, select bank1
  2039  1551  0835               	movf	(sprintf@width+1)^(0+128),w
  2040  1552  00F6               	movwf	___wmul@multiplicand+1
  2041  1553  0834               	movf	sprintf@width^(0+128),w
  2042  1554  00F5               	movwf	___wmul@multiplicand
  2043  1555  160A  158A  21ED  160A  118A  	fcall	___wmul
  2044  155A  0874               	movf	?___wmul+1,w
  2045  155B  1683               	bsf	3,5	;RP0=1, select bank1
  2046  155C  1303               	bcf	3,6	;RP1=0, select bank1
  2047  155D  00B5               	movwf	(sprintf@width+1)^(0+128)
  2048  155E  0873               	movf	?___wmul,w
  2049  155F  00B4               	movwf	sprintf@width^(0+128)
  2050  1560                     l3381:	
  2051                           
  2052                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  2053  1560  1283               	bcf	3,5	;RP0=0, select bank0
  2054  1561  1303               	bcf	3,6	;RP1=0, select bank0
  2055  1562  086A               	movf	sprintf@f,w
  2056  1563  0084               	movwf	4
  2057  1564  160A  158A  200A  160A  118A  	fcall	stringdir
  2058  1569  3ED0               	addlw	208
  2059  156A  1683               	bsf	3,5	;RP0=1, select bank1
  2060  156B  1303               	bcf	3,6	;RP1=0, select bank1
  2061  156C  00A8               	movwf	??_sprintf^(0+128)
  2062  156D  30FF               	movlw	255
  2063  156E  1803               	skipnc
  2064  156F  3000               	movlw	0
  2065  1570  00A9               	movwf	(??_sprintf^(0+128)+1)
  2066  1571  0828               	movf	??_sprintf^(0+128),w
  2067  1572  07B4               	addwf	sprintf@width^(0+128),f
  2068  1573  1803               	skipnc
  2069  1574  0AB5               	incf	(sprintf@width+1)^(0+128),f
  2070  1575  0829               	movf	(??_sprintf+1)^(0+128),w
  2071  1576  07B5               	addwf	(sprintf@width+1)^(0+128),f
  2072  1577                     l3383:	
  2073  1577  3001               	movlw	1
  2074  1578  00A8               	movwf	??_sprintf^(0+128)
  2075  1579  0828               	movf	??_sprintf^(0+128),w
  2076  157A  1283               	bcf	3,5	;RP0=0, select bank0
  2077  157B  1303               	bcf	3,6	;RP1=0, select bank0
  2078  157C  07EA               	addwf	sprintf@f,f
  2079  157D                     l3385:	
  2080                           
  2081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  2082  157D  086A               	movf	sprintf@f,w
  2083  157E  0084               	movwf	4
  2084  157F  160A  158A  200A  160A  118A  	fcall	stringdir
  2085  1584  160A  158A  2151  160A  118A  	fcall	_isdigit
  2086  1589  1803               	btfsc	3,0
  2087  158A  2D8C               	goto	u5281
  2088  158B  2D8D               	goto	u5280
  2089  158C                     u5281:	
  2090  158C  2D4B               	goto	l3379
  2091  158D                     u5280:	
  2092  158D                     l3387:	
  2093                           
  2094                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  2095  158D  1283               	bcf	3,5	;RP0=0, select bank0
  2096  158E  1303               	bcf	3,6	;RP1=0, select bank0
  2097  158F  086A               	movf	sprintf@f,w
  2098  1590  0084               	movwf	4
  2099  1591  160A  158A  200A  160A  118A  	fcall	stringdir
  2100  1596  3A2E               	xorlw	46
  2101  1597  1D03               	skipz
  2102  1598  2D9A               	goto	u5291
  2103  1599  2D9B               	goto	u5290
  2104  159A                     u5291:	
  2105  159A  2DED               	goto	l3403
  2106  159B                     u5290:	
  2107  159B                     l3389:	
  2108                           
  2109                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  2110  159B  1683               	bsf	3,5	;RP0=1, select bank1
  2111  159C  1303               	bcf	3,6	;RP1=0, select bank1
  2112  159D  1733               	bsf	(sprintf@flag^(0+128)+1),6
  2113  159E                     l3391:	
  2114                           
  2115                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  2116  159E  3001               	movlw	1
  2117  159F  00A8               	movwf	??_sprintf^(0+128)
  2118  15A0  0828               	movf	??_sprintf^(0+128),w
  2119  15A1  1283               	bcf	3,5	;RP0=0, select bank0
  2120  15A2  1303               	bcf	3,6	;RP1=0, select bank0
  2121  15A3  07EA               	addwf	sprintf@f,f
  2122  15A4                     l3393:	
  2123                           
  2124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  2125  15A4  1683               	bsf	3,5	;RP0=1, select bank1
  2126  15A5  1303               	bcf	3,6	;RP1=0, select bank1
  2127  15A6  01C5               	clrf	sprintf@prec^(0+128)
  2128  15A7  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2129                           
  2130                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2131  15A8  2DDB               	goto	l3401
  2132  15A9                     l3395:	
  2133                           
  2134                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  2135  15A9  300A               	movlw	10
  2136  15AA  00F3               	movwf	___wmul@multiplier
  2137  15AB  3000               	movlw	0
  2138  15AC  00F4               	movwf	___wmul@multiplier+1
  2139  15AD  1683               	bsf	3,5	;RP0=1, select bank1
  2140  15AE  1303               	bcf	3,6	;RP1=0, select bank1
  2141  15AF  0846               	movf	(sprintf@prec+1)^(0+128),w
  2142  15B0  00F6               	movwf	___wmul@multiplicand+1
  2143  15B1  0845               	movf	sprintf@prec^(0+128),w
  2144  15B2  00F5               	movwf	___wmul@multiplicand
  2145  15B3  160A  158A  21ED  160A  118A  	fcall	___wmul
  2146  15B8  0874               	movf	?___wmul+1,w
  2147  15B9  1683               	bsf	3,5	;RP0=1, select bank1
  2148  15BA  1303               	bcf	3,6	;RP1=0, select bank1
  2149  15BB  00C6               	movwf	(sprintf@prec+1)^(0+128)
  2150  15BC  0873               	movf	?___wmul,w
  2151  15BD  00C5               	movwf	sprintf@prec^(0+128)
  2152  15BE                     l3397:	
  2153                           
  2154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  2155  15BE  1283               	bcf	3,5	;RP0=0, select bank0
  2156  15BF  1303               	bcf	3,6	;RP1=0, select bank0
  2157  15C0  086A               	movf	sprintf@f,w
  2158  15C1  0084               	movwf	4
  2159  15C2  160A  158A  200A  160A  118A  	fcall	stringdir
  2160  15C7  3ED0               	addlw	208
  2161  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  2162  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  2163  15CA  00A8               	movwf	??_sprintf^(0+128)
  2164  15CB  30FF               	movlw	255
  2165  15CC  1803               	skipnc
  2166  15CD  3000               	movlw	0
  2167  15CE  00A9               	movwf	(??_sprintf^(0+128)+1)
  2168  15CF  0828               	movf	??_sprintf^(0+128),w
  2169  15D0  07C5               	addwf	sprintf@prec^(0+128),f
  2170  15D1  1803               	skipnc
  2171  15D2  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  2172  15D3  0829               	movf	(??_sprintf+1)^(0+128),w
  2173  15D4  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  2174  15D5                     l3399:	
  2175  15D5  3001               	movlw	1
  2176  15D6  00A8               	movwf	??_sprintf^(0+128)
  2177  15D7  0828               	movf	??_sprintf^(0+128),w
  2178  15D8  1283               	bcf	3,5	;RP0=0, select bank0
  2179  15D9  1303               	bcf	3,6	;RP1=0, select bank0
  2180  15DA  07EA               	addwf	sprintf@f,f
  2181  15DB                     l3401:	
  2182                           
  2183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2184  15DB  1283               	bcf	3,5	;RP0=0, select bank0
  2185  15DC  086A               	movf	sprintf@f,w
  2186  15DD  0084               	movwf	4
  2187  15DE  160A  158A  200A  160A  118A  	fcall	stringdir
  2188  15E3  160A  158A  2151  160A  118A  	fcall	_isdigit
  2189  15E8  1803               	btfsc	3,0
  2190  15E9  2DEB               	goto	u5301
  2191  15EA  2DEC               	goto	u5300
  2192  15EB                     u5301:	
  2193  15EB  2DA9               	goto	l3395
  2194  15EC                     u5300:	
  2195  15EC  2DF5               	goto	l3409
  2196  15ED                     l3403:	
  2197                           
  2198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  2199  15ED  1683               	bsf	3,5	;RP0=1, select bank1
  2200  15EE  1303               	bcf	3,6	;RP1=0, select bank1
  2201  15EF  01C5               	clrf	sprintf@prec^(0+128)
  2202  15F0  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2203  15F1                     l3405:	
  2204                           
  2205                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  2206  15F1  1633               	bsf	(sprintf@flag^(0+128)+1),4
  2207  15F2  2DF5               	goto	l3409
  2208  15F3                     l342:	
  2209                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  2210                           
  2211                           
  2212                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  2213  15F3  1533               	bsf	(sprintf@flag^(0+128)+1),2
  2214                           
  2215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  2216  15F4  2E19               	goto	l3411
  2217  15F5                     l3409:	
  2218  15F5  3001               	movlw	1
  2219  15F6  1283               	bcf	3,5	;RP0=0, select bank0
  2220  15F7  1303               	bcf	3,6	;RP1=0, select bank0
  2221  15F8  07EA               	addwf	sprintf@f,f
  2222  15F9  30FF               	movlw	-1
  2223  15FA  076A               	addwf	sprintf@f,w
  2224  15FB  0084               	movwf	4
  2225  15FC  160A  158A  200A  160A  118A  	fcall	stringdir
  2226  1601  1683               	bsf	3,5	;RP0=1, select bank1
  2227  1602  1303               	bcf	3,6	;RP1=0, select bank1
  2228  1603  00C7               	movwf	sprintf@c^(0+128)
  2229  1604  00A8               	movwf	??_sprintf^(0+128)
  2230  1605  01A9               	clrf	(??_sprintf^(0+128)+1)
  2231                           
  2232                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2233                           ; Switch size 1, requested type "simple"
  2234                           ; Number of cases is 1, Range of values is 0 to 0
  2235                           ; switch strategies available:
  2236                           ; Name         Instructions Cycles
  2237                           ; simple_byte            4     3 (average)
  2238                           ; direct_byte           11     8 (fixed)
  2239                           ; jumptable            260     6 (fixed)
  2240                           ;	Chosen strategy is simple_byte
  2241  1606  0829               	movf	(??_sprintf+1)^(0+128),w
  2242  1607  3A00               	xorlw	0	; case 0
  2243  1608  1903               	skipnz
  2244  1609  2E0B               	goto	l3821
  2245  160A  2D1C               	goto	L1
  2246  160B                     l3821:	
  2247                           
  2248                           ; Switch size 1, requested type "simple"
  2249                           ; Number of cases is 4, Range of values is 0 to 105
  2250                           ; switch strategies available:
  2251                           ; Name         Instructions Cycles
  2252                           ; simple_byte           13     7 (average)
  2253                           ; jumptable            260     6 (fixed)
  2254                           ;	Chosen strategy is simple_byte
  2255  160B  0828               	movf	??_sprintf^(0+128),w
  2256  160C  3A00               	xorlw	0	; case 0
  2257  160D  1903               	skipnz
  2258  160E  2FFD               	goto	L3
  2259  160F  3A64               	xorlw	100	; case 100
  2260  1610  1903               	skipnz
  2261  1611  2E19               	goto	l3411
  2262  1612  3A02               	xorlw	2	; case 102
  2263  1613  1903               	skipnz
  2264  1614  2DF3               	goto	l342
  2265  1615  3A0F               	xorlw	15	; case 105
  2266  1616  1903               	skipnz
  2267  1617  2E19               	goto	l3411
  2268  1618  2D1C               	goto	L1
  2269  1619                     l3411:	
  2270                           
  2271                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  2272  1619  3000               	movlw	0
  2273  161A  0532               	andwf	sprintf@flag^(0+128),w
  2274  161B  00A8               	movwf	??_sprintf^(0+128)
  2275  161C  3007               	movlw	7
  2276  161D  0533               	andwf	(sprintf@flag+1)^(0+128),w
  2277  161E  00A9               	movwf	(??_sprintf+1)^(0+128)
  2278  161F  0828               	movf	??_sprintf^(0+128),w
  2279  1620  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2280  1621  1903               	btfsc	3,2
  2281  1622  2E24               	goto	u5311
  2282  1623  2E27               	goto	u5310
  2283  1624                     u5311:	
  2284  1624  120A  118A  2C51   	goto	l3569
  2285  1627                     u5310:	
  2286  1627                     l3413:	
  2287                           
  2288                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  2289  1627  1E33               	btfss	(sprintf@flag+1)^(0+128),4
  2290  1628  2E2A               	goto	u5321
  2291  1629  2E2B               	goto	u5320
  2292  162A                     u5321:	
  2293  162A  2E2F               	goto	l3417
  2294  162B                     u5320:	
  2295  162B                     l3415:	
  2296                           
  2297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  2298  162B  3006               	movlw	6
  2299  162C  00C5               	movwf	sprintf@prec^(0+128)
  2300  162D  3000               	movlw	0
  2301  162E  00C6               	movwf	(sprintf@prec^(0+128)+1)
  2302  162F                     l3417:	
  2303                           
  2304                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2305  162F  0831               	movf	sprintf@ap^(0+128),w
  2306  1630  0084               	movwf	4
  2307  1631  1383               	bcf	3,7	;select IRP bank0
  2308  1632  0800               	movf	0,w
  2309  1633  00C0               	movwf	sprintf@fval^(0+128)
  2310  1634  0A84               	incf	4,f
  2311  1635  0800               	movf	0,w
  2312  1636  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2313  1637  0A84               	incf	4,f
  2314  1638  0800               	movf	0,w
  2315  1639  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2316  163A  0A84               	incf	4,f
  2317  163B  0800               	movf	0,w
  2318  163C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2319  163D                     l3419:	
  2320  163D  3004               	movlw	4
  2321  163E  00A8               	movwf	??_sprintf^(0+128)
  2322  163F  0828               	movf	??_sprintf^(0+128),w
  2323  1640  07B1               	addwf	sprintf@ap^(0+128),f
  2324  1641                     l3421:	
  2325                           
  2326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  2327  1641  0843               	movf	(sprintf@fval+3)^(0+128),w
  2328  1642  00F6               	movwf	___flge@ff1+3
  2329  1643  0842               	movf	(sprintf@fval+2)^(0+128),w
  2330  1644  00F5               	movwf	___flge@ff1+2
  2331  1645  0841               	movf	(sprintf@fval+1)^(0+128),w
  2332  1646  00F4               	movwf	___flge@ff1+1
  2333  1647  0840               	movf	sprintf@fval^(0+128),w
  2334  1648  00F3               	movwf	___flge@ff1
  2335  1649  3000               	movlw	0
  2336  164A  00FA               	movwf	___flge@ff2+3
  2337  164B  3000               	movlw	0
  2338  164C  00F9               	movwf	___flge@ff2+2
  2339  164D  3000               	movlw	0
  2340  164E  00F8               	movwf	___flge@ff2+1
  2341  164F  3000               	movlw	0
  2342  1650  00F7               	movwf	___flge@ff2
  2343  1651  160A  158A  2525  160A  118A  	fcall	___flge
  2344  1656  1803               	btfsc	3,0
  2345  1657  2E59               	goto	u5331
  2346  1658  2E5A               	goto	u5330
  2347  1659                     u5331:	
  2348  1659  2E77               	goto	l3427
  2349  165A                     u5330:	
  2350  165A                     l3423:	
  2351                           
  2352                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  2353  165A  1683               	bsf	3,5	;RP0=1, select bank1
  2354  165B  1303               	bcf	3,6	;RP1=0, select bank1
  2355  165C  0843               	movf	(sprintf@fval+3)^(0+128),w
  2356  165D  00F6               	movwf	___flneg@f1+3
  2357  165E  0842               	movf	(sprintf@fval+2)^(0+128),w
  2358  165F  00F5               	movwf	___flneg@f1+2
  2359  1660  0841               	movf	(sprintf@fval+1)^(0+128),w
  2360  1661  00F4               	movwf	___flneg@f1+1
  2361  1662  0840               	movf	sprintf@fval^(0+128),w
  2362  1663  00F3               	movwf	___flneg@f1
  2363  1664  120A  158A  2004  160A  118A  	fcall	___flneg
  2364  1669  0876               	movf	?___flneg+3,w
  2365  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2366  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2367  166C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2368  166D  0875               	movf	?___flneg+2,w
  2369  166E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2370  166F  0874               	movf	?___flneg+1,w
  2371  1670  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2372  1671  0873               	movf	?___flneg,w
  2373  1672  00C0               	movwf	sprintf@fval^(0+128)
  2374  1673                     l3425:	
  2375                           
  2376                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2377  1673  3003               	movlw	3
  2378  1674  04B2               	iorwf	sprintf@flag^(0+128),f
  2379  1675  3000               	movlw	0
  2380  1676  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
  2381  1677                     l3427:	
  2382                           
  2383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2384  1677  1683               	bsf	3,5	;RP0=1, select bank1
  2385  1678  1303               	bcf	3,6	;RP1=0, select bank1
  2386  1679  01BE               	clrf	sprintf@eexp^(0+128)
  2387  167A  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  2388  167B                     l3429:	
  2389                           
  2390                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2391  167B  0843               	movf	(sprintf@fval+3)^(0+128),w
  2392  167C  00F6               	movwf	___fleq@ff1+3
  2393  167D  0842               	movf	(sprintf@fval+2)^(0+128),w
  2394  167E  00F5               	movwf	___fleq@ff1+2
  2395  167F  0841               	movf	(sprintf@fval+1)^(0+128),w
  2396  1680  00F4               	movwf	___fleq@ff1+1
  2397  1681  0840               	movf	sprintf@fval^(0+128),w
  2398  1682  00F3               	movwf	___fleq@ff1
  2399  1683  3000               	movlw	0
  2400  1684  00FA               	movwf	___fleq@ff2+3
  2401  1685  3000               	movlw	0
  2402  1686  00F9               	movwf	___fleq@ff2+2
  2403  1687  3000               	movlw	0
  2404  1688  00F8               	movwf	___fleq@ff2+1
  2405  1689  3000               	movlw	0
  2406  168A  00F7               	movwf	___fleq@ff2
  2407  168B  160A  158A  231B  160A  118A  	fcall	___fleq
  2408  1690  1803               	btfsc	3,0
  2409  1691  2E93               	goto	u5341
  2410  1692  2E94               	goto	u5340
  2411  1693                     u5341:	
  2412  1693  2F94               	goto	l3455
  2413  1694                     u5340:	
  2414  1694                     l3431:	
  2415                           
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2417  1694  1003               	clrc
  2418  1695  1683               	bsf	3,5	;RP0=1, select bank1
  2419  1696  1303               	bcf	3,6	;RP1=0, select bank1
  2420  1697  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  2421  1698  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  2422  1699  3E82               	addlw	130
  2423  169A  00BE               	movwf	sprintf@eexp^(0+128)
  2424  169B  30FF               	movlw	255
  2425  169C  1803               	skipnc
  2426  169D  3000               	movlw	0
  2427  169E  00BF               	movwf	(sprintf@eexp^(0+128)+1)
  2428  169F                     l3433:	
  2429                           
  2430                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2431  169F  30FF               	movlw	255
  2432  16A0  07BE               	addwf	sprintf@eexp^(0+128),f
  2433  16A1  1803               	skipnc
  2434  16A2  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2435  16A3  30FF               	movlw	255
  2436  16A4  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2437  16A5                     l3435:	
  2438                           
  2439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2440  16A5  3003               	movlw	3
  2441  16A6  00F3               	movwf	___wmul@multiplier
  2442  16A7  3000               	movlw	0
  2443  16A8  00F4               	movwf	___wmul@multiplier+1
  2444  16A9  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2445  16AA  00F6               	movwf	___wmul@multiplicand+1
  2446  16AB  083E               	movf	sprintf@eexp^(0+128),w
  2447  16AC  00F5               	movwf	___wmul@multiplicand
  2448  16AD  160A  158A  21ED  160A  118A  	fcall	___wmul
  2449  16B2  0874               	movf	?___wmul+1,w
  2450  16B3  1683               	bsf	3,5	;RP0=1, select bank1
  2451  16B4  1303               	bcf	3,6	;RP1=0, select bank1
  2452  16B5  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  2453  16B6  0873               	movf	?___wmul,w
  2454  16B7  00BE               	movwf	sprintf@eexp^(0+128)
  2455  16B8                     l3437:	
  2456                           
  2457                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2458  16B8  300A               	movlw	10
  2459  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2460  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2461  16BB  00A0               	movwf	___awdiv@divisor
  2462  16BC  3000               	movlw	0
  2463  16BD  00A1               	movwf	___awdiv@divisor+1
  2464  16BE  1683               	bsf	3,5	;RP0=1, select bank1
  2465  16BF  1303               	bcf	3,6	;RP1=0, select bank1
  2466  16C0  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2467  16C1  1283               	bcf	3,5	;RP0=0, select bank0
  2468  16C2  1303               	bcf	3,6	;RP1=0, select bank0
  2469  16C3  00A3               	movwf	___awdiv@dividend+1
  2470  16C4  1683               	bsf	3,5	;RP0=1, select bank1
  2471  16C5  1303               	bcf	3,6	;RP1=0, select bank1
  2472  16C6  083E               	movf	sprintf@eexp^(0+128),w
  2473  16C7  1283               	bcf	3,5	;RP0=0, select bank0
  2474  16C8  1303               	bcf	3,6	;RP1=0, select bank0
  2475  16C9  00A2               	movwf	___awdiv@dividend
  2476  16CA  120A  158A  200F  160A  118A  	fcall	___awdiv
  2477  16CF  1283               	bcf	3,5	;RP0=0, select bank0
  2478  16D0  1303               	bcf	3,6	;RP1=0, select bank0
  2479  16D1  0821               	movf	?___awdiv+1,w
  2480  16D2  1683               	bsf	3,5	;RP0=1, select bank1
  2481  16D3  1303               	bcf	3,6	;RP1=0, select bank1
  2482  16D4  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  2483  16D5  1283               	bcf	3,5	;RP0=0, select bank0
  2484  16D6  1303               	bcf	3,6	;RP1=0, select bank0
  2485  16D7  0820               	movf	?___awdiv,w
  2486  16D8  1683               	bsf	3,5	;RP0=1, select bank1
  2487  16D9  1303               	bcf	3,6	;RP1=0, select bank1
  2488  16DA  00BE               	movwf	sprintf@eexp^(0+128)
  2489  16DB                     l3439:	
  2490                           
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2492  16DB  1FBF               	btfss	(sprintf@eexp+1)^(0+128),7
  2493  16DC  2EDE               	goto	u5351
  2494  16DD  2EDF               	goto	u5350
  2495  16DE                     u5351:	
  2496  16DE  2EE5               	goto	l3443
  2497  16DF                     u5350:	
  2498  16DF                     l3441:	
  2499                           
  2500                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2501  16DF  30FF               	movlw	255
  2502  16E0  07BE               	addwf	sprintf@eexp^(0+128),f
  2503  16E1  1803               	skipnc
  2504  16E2  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2505  16E3  30FF               	movlw	255
  2506  16E4  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2507  16E5                     l3443:	
  2508                           
  2509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2510  16E5  033E               	decf	sprintf@eexp^(0+128),w
  2511  16E6  3AFF               	xorlw	255
  2512  16E7  120A  158A  249D  160A  118A  	fcall	_scale
  2513  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2514  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2515  16EE  0845               	movf	?_scale+3,w
  2516  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2517  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2518  16F1  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2519  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2520  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2521  16F4  0844               	movf	?_scale+2,w
  2522  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2523  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2524  16F7  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2525  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2526  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2527  16FA  0843               	movf	?_scale+1,w
  2528  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2529  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2530  16FD  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2531  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2532  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2533  1700  0842               	movf	?_scale,w
  2534  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2535  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2536  1703  00B6               	movwf	sprintf@tmpval^(0+128)
  2537  1704                     l3445:	
  2538                           
  2539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2540  1704  0843               	movf	(sprintf@fval+3)^(0+128),w
  2541  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2542  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2543  1707  00AB               	movwf	___flmul@b+3
  2544  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2545  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2546  170A  0842               	movf	(sprintf@fval+2)^(0+128),w
  2547  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2548  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2549  170D  00AA               	movwf	___flmul@b+2
  2550  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2551  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2552  1710  0841               	movf	(sprintf@fval+1)^(0+128),w
  2553  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2554  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2555  1713  00A9               	movwf	___flmul@b+1
  2556  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2557  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2558  1716  0840               	movf	sprintf@fval^(0+128),w
  2559  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2560  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2561  1719  00A8               	movwf	___flmul@b
  2562  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2563  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2564  171C  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2565  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2566  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2567  171F  00AF               	movwf	___flmul@a+3
  2568  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2569  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2570  1722  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2571  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2572  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2573  1725  00AE               	movwf	___flmul@a+2
  2574  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2575  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2576  1728  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2577  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2578  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2579  172B  00AD               	movwf	___flmul@a+1
  2580  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2581  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2582  172E  0836               	movf	sprintf@tmpval^(0+128),w
  2583  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2584  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2585  1731  00AC               	movwf	___flmul@a
  2586  1732  120A  158A  213C  160A  118A  	fcall	___flmul
  2587  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2588  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2589  1739  082B               	movf	?___flmul+3,w
  2590  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2591  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2592  173C  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
  2593  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2594  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2595  173F  082A               	movf	?___flmul+2,w
  2596  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2597  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2598  1742  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
  2599  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2600  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2601  1745  0829               	movf	?___flmul+1,w
  2602  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2603  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2604  1748  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
  2605  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2606  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2607  174B  0828               	movf	?___flmul,w
  2608  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2609  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2610  174E  00B6               	movwf	sprintf@tmpval^(0+128)
  2611  174F                     l3447:	
  2612                           
  2613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2614  174F  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2615  1750  00F6               	movwf	___flge@ff1+3
  2616  1751  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2617  1752  00F5               	movwf	___flge@ff1+2
  2618  1753  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2619  1754  00F4               	movwf	___flge@ff1+1
  2620  1755  0836               	movf	sprintf@tmpval^(0+128),w
  2621  1756  00F3               	movwf	___flge@ff1
  2622  1757  303F               	movlw	63
  2623  1758  00FA               	movwf	___flge@ff2+3
  2624  1759  3080               	movlw	128
  2625  175A  00F9               	movwf	___flge@ff2+2
  2626  175B  3000               	movlw	0
  2627  175C  00F8               	movwf	___flge@ff2+1
  2628  175D  3000               	movlw	0
  2629  175E  00F7               	movwf	___flge@ff2
  2630  175F  160A  158A  2525  160A  118A  	fcall	___flge
  2631  1764  1803               	btfsc	3,0
  2632  1765  2F67               	goto	u5361
  2633  1766  2F68               	goto	u5360
  2634  1767                     u5361:	
  2635  1767  2F71               	goto	l3451
  2636  1768                     u5360:	
  2637  1768                     l3449:	
  2638                           
  2639                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2640  1768  30FF               	movlw	255
  2641  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2642  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2643  176B  07BE               	addwf	sprintf@eexp^(0+128),f
  2644  176C  1803               	skipnc
  2645  176D  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2646  176E  30FF               	movlw	255
  2647  176F  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2648  1770  2F94               	goto	l3455
  2649  1771                     l3451:	
  2650  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2651  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2652  1773  0839               	movf	(sprintf@tmpval+3)^(0+128),w
  2653  1774  00F6               	movwf	___flge@ff1+3
  2654  1775  0838               	movf	(sprintf@tmpval+2)^(0+128),w
  2655  1776  00F5               	movwf	___flge@ff1+2
  2656  1777  0837               	movf	(sprintf@tmpval+1)^(0+128),w
  2657  1778  00F4               	movwf	___flge@ff1+1
  2658  1779  0836               	movf	sprintf@tmpval^(0+128),w
  2659  177A  00F3               	movwf	___flge@ff1
  2660  177B  3041               	movlw	65
  2661  177C  00FA               	movwf	___flge@ff2+3
  2662  177D  3020               	movlw	32
  2663  177E  00F9               	movwf	___flge@ff2+2
  2664  177F  3000               	movlw	0
  2665  1780  00F8               	movwf	___flge@ff2+1
  2666  1781  3000               	movlw	0
  2667  1782  00F7               	movwf	___flge@ff2
  2668  1783  160A  158A  2525  160A  118A  	fcall	___flge
  2669  1788  1C03               	btfss	3,0
  2670  1789  2F8B               	goto	u5371
  2671  178A  2F8C               	goto	u5370
  2672  178B                     u5371:	
  2673  178B  2F94               	goto	l3455
  2674  178C                     u5370:	
  2675  178C                     l3453:	
  2676                           
  2677                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2678  178C  3001               	movlw	1
  2679  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2680  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2681  178F  07BE               	addwf	sprintf@eexp^(0+128),f
  2682  1790  1803               	skipnc
  2683  1791  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2684  1792  3000               	movlw	0
  2685  1793  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2686  1794                     l3455:	
  2687                           
  2688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2689  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2690  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2691  1796  0846               	movf	(sprintf@prec+1)^(0+128),w
  2692  1797  3A80               	xorlw	128
  2693  1798  00FF               	movwf	btemp+1
  2694  1799  3080               	movlw	128
  2695  179A  027F               	subwf	btemp+1,w
  2696  179B  1D03               	skipz
  2697  179C  2F9F               	goto	u5385
  2698  179D  300D               	movlw	13
  2699  179E  0245               	subwf	sprintf@prec^(0+128),w
  2700  179F                     u5385:	
  2701  179F  1803               	skipnc
  2702  17A0  2FA2               	goto	u5381
  2703  17A1  2FA3               	goto	u5380
  2704  17A2                     u5381:	
  2705  17A2  2FEA               	goto	l3459
  2706  17A3                     u5380:	
  2707  17A3                     l3457:	
  2708                           
  2709                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2710  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2711  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2712  17A5  0845               	movf	sprintf@prec^(0+128),w
  2713  17A6  160A  118A  2080  160A  118A  	fcall	_fround
  2714  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2715  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2716  17AD  0845               	movf	?_fround+3,w
  2717  17AE  00D9               	movwf	___fladd@b+3
  2718  17AF  0844               	movf	?_fround+2,w
  2719  17B0  00D8               	movwf	___fladd@b+2
  2720  17B1  0843               	movf	?_fround+1,w
  2721  17B2  00D7               	movwf	___fladd@b+1
  2722  17B3  0842               	movf	?_fround,w
  2723  17B4  00D6               	movwf	___fladd@b
  2724  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2725  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2726  17B7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2727  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2728  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2729  17BA  00DD               	movwf	___fladd@a+3
  2730  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2731  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2732  17BD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2733  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2734  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2735  17C0  00DC               	movwf	___fladd@a+2
  2736  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2737  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2738  17C3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2739  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2740  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2741  17C6  00DB               	movwf	___fladd@a+1
  2742  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2743  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2744  17C9  0840               	movf	sprintf@fval^(0+128),w
  2745  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2746  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2747  17CC  00DA               	movwf	___fladd@a
  2748  17CD  160A  118A  228D  160A  118A  	fcall	___fladd
  2749  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2750  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2751  17D4  0859               	movf	?___fladd+3,w
  2752  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2753  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2754  17D7  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2755  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2756  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2757  17DA  0858               	movf	?___fladd+2,w
  2758  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2759  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2760  17DD  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2761  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2762  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2763  17E0  0857               	movf	?___fladd+1,w
  2764  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2765  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2766  17E3  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2767  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2768  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2769  17E6  0856               	movf	?___fladd,w
  2770  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2771  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2772  17E9  00C0               	movwf	sprintf@fval^(0+128)
  2773  17EA                     l3459:	
  2774                           
  2775                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2776  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2777  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2778  17EC  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2779  17ED  3A80               	xorlw	128
  2780  17EE  00FF               	movwf	btemp+1
  2781  17EF  3080               	movlw	128
  2782  17F0  027F               	subwf	btemp+1,w
  2783  17F1  1D03               	skipz
  2784  17F2  2FF5               	goto	u5395
  2785  17F3  300A               	movlw	10
  2786  17F4  023E               	subwf	sprintf@eexp^(0+128),w
  2787  17F5                     u5395:	
  2788  17F5  1803               	skipnc
  2789  17F6  2FFA               	goto	u5391
  2790  17F7  120A  118A  281F   	goto	u5390
  2791  17FA                     u5391:	
  2792  17FA  120A  118A  2870   	goto	l3467
  2793  17FD                     L3:	
  2794  17FD                     L2:	
  2795  17FD  120A  118A  2E06   	ljmp	l3649
  2796                           
  2797                           	psect	text3
  2798  0C9D                     __ptext3:	
  2799 ;; *************** function _scale *****************
  2800 ;; Defined at:
  2801 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  scl             1    wreg     char 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  scl             1   52[BANK0 ] char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  4   34[BANK0 ] char 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2815 ;;      Params:         0       4       0       0       0
  2816 ;;      Locals:         0       5       0       0       0
  2817 ;;      Temps:          0      10       0       0       0
  2818 ;;      Totals:         0      19       0       0       0
  2819 ;;Total ram usage:       19 bytes
  2820 ;; Hardware stack levels used:    1
  2821 ;; Hardware stack levels required when called:    3
  2822 ;; This function calls:
  2823 ;;		___awdiv
  2824 ;;		___awmod
  2825 ;;		___flmul
  2826 ;; This function is called by:
  2827 ;;		_sprintf
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           
  2832                           ;psect for function _scale
  2833  0C9D                     _scale:	
  2834                           
  2835                           ;incstack = 0
  2836                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2837                           ;scale@scl stored from wreg
  2838  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2839  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2840  0C9F  00D4               	movwf	scale@scl
  2841  0CA0                     l2927:	
  2842                           
  2843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  2844  0CA0  1FD4               	btfss	scale@scl,7
  2845  0CA1  2CA3               	goto	u4211
  2846  0CA2  2CA4               	goto	u4210
  2847  0CA3                     u4211:	
  2848  0CA3  2E53               	goto	l2949
  2849  0CA4                     u4210:	
  2850  0CA4                     l2929:	
  2851                           
  2852                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  2853  0CA4  09D4               	comf	scale@scl,f
  2854  0CA5  0AD4               	incf	scale@scl,f
  2855  0CA6                     l2931:	
  2856                           
  2857                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  2858  0CA6  0854               	movf	scale@scl,w
  2859  0CA7  3A80               	xorlw	128
  2860  0CA8  3E12               	addlw	-238
  2861  0CA9  1C03               	skipc
  2862  0CAA  2CAC               	goto	u4221
  2863  0CAB  2CAD               	goto	u4220
  2864  0CAC                     u4221:	
  2865  0CAC  2D97               	goto	l2939
  2866  0CAD                     u4220:	
  2867  0CAD                     l2933:	
  2868                           
  2869                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2870  0CAD  300A               	movlw	10
  2871  0CAE  00A0               	movwf	___awdiv@divisor
  2872  0CAF  3000               	movlw	0
  2873  0CB0  00A1               	movwf	___awdiv@divisor+1
  2874  0CB1  0854               	movf	scale@scl,w
  2875  0CB2  00F5               	movwf	___awmod@dividend
  2876  0CB3  01F6               	clrf	___awmod@dividend+1
  2877  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2878  0CB5  03F6               	decf	___awmod@dividend+1,f
  2879  0CB6  3064               	movlw	100
  2880  0CB7  00F3               	movwf	___awmod@divisor
  2881  0CB8  3000               	movlw	0
  2882  0CB9  00F4               	movwf	___awmod@divisor+1
  2883  0CBA  160A  158A  2464  120A  158A  	fcall	___awmod
  2884  0CBF  0874               	movf	?___awmod+1,w
  2885  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2886  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2887  0CC2  00A3               	movwf	___awdiv@dividend+1
  2888  0CC3  0873               	movf	?___awmod,w
  2889  0CC4  00A2               	movwf	___awdiv@dividend
  2890  0CC5  120A  158A  200F  120A  158A  	fcall	___awdiv
  2891  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2892  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2893  0CCC  0820               	movf	?___awdiv,w
  2894  0CCD  00C6               	movwf	??_scale
  2895  0CCE  3001               	movlw	1
  2896  0CCF                     u4235:	
  2897  0CCF  1003               	clrc
  2898  0CD0  0DC6               	rlf	??_scale,f
  2899  0CD1  3EFF               	addlw	-1
  2900  0CD2  1D03               	skipz
  2901  0CD3  2CCF               	goto	u4235
  2902  0CD4  1003               	clrc
  2903  0CD5  0D46               	rlf	??_scale,w
  2904  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2905  0CD7  0084               	movwf	4
  2906  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  2907  0CDD  00C7               	movwf	??_scale+1
  2908  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  2909  0CE3  00C8               	movwf	??_scale+2
  2910  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  2911  0CE9  00C9               	movwf	??_scale+3
  2912  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  2913  0CEF  00CA               	movwf	??_scale+4
  2914  0CF0  084A               	movf	??_scale+4,w
  2915  0CF1  00AB               	movwf	___flmul@b+3
  2916  0CF2  0849               	movf	??_scale+3,w
  2917  0CF3  00AA               	movwf	___flmul@b+2
  2918  0CF4  0848               	movf	??_scale+2,w
  2919  0CF5  00A9               	movwf	___flmul@b+1
  2920  0CF6  0847               	movf	??_scale+1,w
  2921  0CF7  00A8               	movwf	___flmul@b
  2922  0CF8  3064               	movlw	100
  2923  0CF9  00A0               	movwf	___awdiv@divisor
  2924  0CFA  3000               	movlw	0
  2925  0CFB  00A1               	movwf	___awdiv@divisor+1
  2926  0CFC  0854               	movf	scale@scl,w
  2927  0CFD  00A2               	movwf	___awdiv@dividend
  2928  0CFE  01A3               	clrf	___awdiv@dividend+1
  2929  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2930  0D00  03A3               	decf	___awdiv@dividend+1,f
  2931  0D01  120A  158A  200F  120A  158A  	fcall	___awdiv
  2932  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2933  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2934  0D08  0820               	movf	?___awdiv,w
  2935  0D09  00CB               	movwf	??_scale+5
  2936  0D0A  3001               	movlw	1
  2937  0D0B                     u4245:	
  2938  0D0B  1003               	clrc
  2939  0D0C  0DCB               	rlf	??_scale+5,f
  2940  0D0D  3EFF               	addlw	-1
  2941  0D0E  1D03               	skipz
  2942  0D0F  2D0B               	goto	u4245
  2943  0D10  1003               	clrc
  2944  0D11  0D4B               	rlf	??_scale+5,w
  2945  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2946  0D13  0084               	movwf	4
  2947  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  2948  0D19  00CC               	movwf	??_scale+6
  2949  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  2950  0D1F  00CD               	movwf	??_scale+7
  2951  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  2952  0D25  00CE               	movwf	??_scale+8
  2953  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  2954  0D2B  00CF               	movwf	??_scale+9
  2955  0D2C  084F               	movf	??_scale+9,w
  2956  0D2D  00AF               	movwf	___flmul@a+3
  2957  0D2E  084E               	movf	??_scale+8,w
  2958  0D2F  00AE               	movwf	___flmul@a+2
  2959  0D30  084D               	movf	??_scale+7,w
  2960  0D31  00AD               	movwf	___flmul@a+1
  2961  0D32  084C               	movf	??_scale+6,w
  2962  0D33  00AC               	movwf	___flmul@a
  2963  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2964  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2965  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2966  0D3B  082B               	movf	?___flmul+3,w
  2967  0D3C  00D3               	movwf	_scale$1233+3
  2968  0D3D  082A               	movf	?___flmul+2,w
  2969  0D3E  00D2               	movwf	_scale$1233+2
  2970  0D3F  0829               	movf	?___flmul+1,w
  2971  0D40  00D1               	movwf	_scale$1233+1
  2972  0D41  0828               	movf	?___flmul,w
  2973  0D42  00D0               	movwf	_scale$1233
  2974                           
  2975                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2976  0D43  300A               	movlw	10
  2977  0D44  00F3               	movwf	___awmod@divisor
  2978  0D45  3000               	movlw	0
  2979  0D46  00F4               	movwf	___awmod@divisor+1
  2980  0D47  0854               	movf	scale@scl,w
  2981  0D48  00F5               	movwf	___awmod@dividend
  2982  0D49  01F6               	clrf	___awmod@dividend+1
  2983  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2984  0D4B  03F6               	decf	___awmod@dividend+1,f
  2985  0D4C  160A  158A  2464  120A  158A  	fcall	___awmod
  2986  0D51  0873               	movf	?___awmod,w
  2987  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0D54  00C6               	movwf	??_scale
  2990  0D55  3001               	movlw	1
  2991  0D56                     u4255:	
  2992  0D56  1003               	clrc
  2993  0D57  0DC6               	rlf	??_scale,f
  2994  0D58  3EFF               	addlw	-1
  2995  0D59  1D03               	skipz
  2996  0D5A  2D56               	goto	u4255
  2997  0D5B  1003               	clrc
  2998  0D5C  0D46               	rlf	??_scale,w
  2999  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3000  0D5E  0084               	movwf	4
  3001  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  3002  0D64  00C7               	movwf	??_scale+1
  3003  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  3004  0D6A  00C8               	movwf	??_scale+2
  3005  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  3006  0D70  00C9               	movwf	??_scale+3
  3007  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  3008  0D76  00CA               	movwf	??_scale+4
  3009  0D77  084A               	movf	??_scale+4,w
  3010  0D78  00AB               	movwf	___flmul@b+3
  3011  0D79  0849               	movf	??_scale+3,w
  3012  0D7A  00AA               	movwf	___flmul@b+2
  3013  0D7B  0848               	movf	??_scale+2,w
  3014  0D7C  00A9               	movwf	___flmul@b+1
  3015  0D7D  0847               	movf	??_scale+1,w
  3016  0D7E  00A8               	movwf	___flmul@b
  3017  0D7F  0853               	movf	_scale$1233+3,w
  3018  0D80  00AF               	movwf	___flmul@a+3
  3019  0D81  0852               	movf	_scale$1233+2,w
  3020  0D82  00AE               	movwf	___flmul@a+2
  3021  0D83  0851               	movf	_scale$1233+1,w
  3022  0D84  00AD               	movwf	___flmul@a+1
  3023  0D85  0850               	movf	_scale$1233,w
  3024  0D86  00AC               	movwf	___flmul@a
  3025  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3026  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0D8E  082B               	movf	?___flmul+3,w
  3029  0D8F  00C5               	movwf	?_scale+3
  3030  0D90  082A               	movf	?___flmul+2,w
  3031  0D91  00C4               	movwf	?_scale+2
  3032  0D92  0829               	movf	?___flmul+1,w
  3033  0D93  00C3               	movwf	?_scale+1
  3034  0D94  0828               	movf	?___flmul,w
  3035  0D95  00C2               	movwf	?_scale
  3036  0D96  2FFF               	goto	l320
  3037  0D97                     l2939:	
  3038  0D97  0854               	movf	scale@scl,w
  3039  0D98  3A80               	xorlw	128
  3040  0D99  3E75               	addlw	-139
  3041  0D9A  1C03               	skipc
  3042  0D9B  2D9D               	goto	u4261
  3043  0D9C  2D9E               	goto	u4260
  3044  0D9D                     u4261:	
  3045  0D9D  2E26               	goto	l2945
  3046  0D9E                     u4260:	
  3047  0D9E                     l2941:	
  3048                           
  3049                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3050  0D9E  300A               	movlw	10
  3051  0D9F  00F3               	movwf	___awmod@divisor
  3052  0DA0  3000               	movlw	0
  3053  0DA1  00F4               	movwf	___awmod@divisor+1
  3054  0DA2  0854               	movf	scale@scl,w
  3055  0DA3  00F5               	movwf	___awmod@dividend
  3056  0DA4  01F6               	clrf	___awmod@dividend+1
  3057  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3058  0DA6  03F6               	decf	___awmod@dividend+1,f
  3059  0DA7  160A  158A  2464  120A  158A  	fcall	___awmod
  3060  0DAC  0873               	movf	?___awmod,w
  3061  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3062  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3063  0DAF  00C6               	movwf	??_scale
  3064  0DB0  3001               	movlw	1
  3065  0DB1                     u4275:	
  3066  0DB1  1003               	clrc
  3067  0DB2  0DC6               	rlf	??_scale,f
  3068  0DB3  3EFF               	addlw	-1
  3069  0DB4  1D03               	skipz
  3070  0DB5  2DB1               	goto	u4275
  3071  0DB6  1003               	clrc
  3072  0DB7  0D46               	rlf	??_scale,w
  3073  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3074  0DB9  0084               	movwf	4
  3075  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  3076  0DBF  00C7               	movwf	??_scale+1
  3077  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  3078  0DC5  00C8               	movwf	??_scale+2
  3079  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  3080  0DCB  00C9               	movwf	??_scale+3
  3081  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  3082  0DD1  00CA               	movwf	??_scale+4
  3083  0DD2  084A               	movf	??_scale+4,w
  3084  0DD3  00AB               	movwf	___flmul@b+3
  3085  0DD4  0849               	movf	??_scale+3,w
  3086  0DD5  00AA               	movwf	___flmul@b+2
  3087  0DD6  0848               	movf	??_scale+2,w
  3088  0DD7  00A9               	movwf	___flmul@b+1
  3089  0DD8  0847               	movf	??_scale+1,w
  3090  0DD9  00A8               	movwf	___flmul@b
  3091  0DDA  300A               	movlw	10
  3092  0DDB  00A0               	movwf	___awdiv@divisor
  3093  0DDC  3000               	movlw	0
  3094  0DDD  00A1               	movwf	___awdiv@divisor+1
  3095  0DDE  0854               	movf	scale@scl,w
  3096  0DDF  00A2               	movwf	___awdiv@dividend
  3097  0DE0  01A3               	clrf	___awdiv@dividend+1
  3098  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3099  0DE2  03A3               	decf	___awdiv@dividend+1,f
  3100  0DE3  120A  158A  200F  120A  158A  	fcall	___awdiv
  3101  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0DEA  0820               	movf	?___awdiv,w
  3104  0DEB  00CB               	movwf	??_scale+5
  3105  0DEC  3001               	movlw	1
  3106  0DED                     u4285:	
  3107  0DED  1003               	clrc
  3108  0DEE  0DCB               	rlf	??_scale+5,f
  3109  0DEF  3EFF               	addlw	-1
  3110  0DF0  1D03               	skipz
  3111  0DF1  2DED               	goto	u4285
  3112  0DF2  1003               	clrc
  3113  0DF3  0D4B               	rlf	??_scale+5,w
  3114  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3115  0DF5  0084               	movwf	4
  3116  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  3117  0DFB  00CC               	movwf	??_scale+6
  3118  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  3119  0E01  00CD               	movwf	??_scale+7
  3120  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  3121  0E07  00CE               	movwf	??_scale+8
  3122  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  3123  0E0D  00CF               	movwf	??_scale+9
  3124  0E0E  084F               	movf	??_scale+9,w
  3125  0E0F  00AF               	movwf	___flmul@a+3
  3126  0E10  084E               	movf	??_scale+8,w
  3127  0E11  00AE               	movwf	___flmul@a+2
  3128  0E12  084D               	movf	??_scale+7,w
  3129  0E13  00AD               	movwf	___flmul@a+1
  3130  0E14  084C               	movf	??_scale+6,w
  3131  0E15  00AC               	movwf	___flmul@a
  3132  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3133  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3134  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3135  0E1D  082B               	movf	?___flmul+3,w
  3136  0E1E  00C5               	movwf	?_scale+3
  3137  0E1F  082A               	movf	?___flmul+2,w
  3138  0E20  00C4               	movwf	?_scale+2
  3139  0E21  0829               	movf	?___flmul+1,w
  3140  0E22  00C3               	movwf	?_scale+1
  3141  0E23  0828               	movf	?___flmul,w
  3142  0E24  00C2               	movwf	?_scale
  3143  0E25  2FFF               	goto	l320
  3144  0E26                     l2945:	
  3145                           
  3146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3147  0E26  0854               	movf	scale@scl,w
  3148  0E27  00C6               	movwf	??_scale
  3149  0E28  3001               	movlw	1
  3150  0E29                     u4295:	
  3151  0E29  1003               	clrc
  3152  0E2A  0DC6               	rlf	??_scale,f
  3153  0E2B  3EFF               	addlw	-1
  3154  0E2C  1D03               	skipz
  3155  0E2D  2E29               	goto	u4295
  3156  0E2E  1003               	clrc
  3157  0E2F  0D46               	rlf	??_scale,w
  3158  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3159  0E31  0084               	movwf	4
  3160  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  3161  0E37  00C7               	movwf	??_scale+1
  3162  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  3163  0E3D  00C8               	movwf	??_scale+2
  3164  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  3165  0E43  00C9               	movwf	??_scale+3
  3166  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  3167  0E49  00CA               	movwf	??_scale+4
  3168  0E4A  084A               	movf	??_scale+4,w
  3169  0E4B  00C5               	movwf	?_scale+3
  3170  0E4C  0849               	movf	??_scale+3,w
  3171  0E4D  00C4               	movwf	?_scale+2
  3172  0E4E  0848               	movf	??_scale+2,w
  3173  0E4F  00C3               	movwf	?_scale+1
  3174  0E50  0847               	movf	??_scale+1,w
  3175  0E51  00C2               	movwf	?_scale
  3176  0E52  2FFF               	goto	l320
  3177  0E53                     l2949:	
  3178                           
  3179                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3180  0E53  0854               	movf	scale@scl,w
  3181  0E54  3A80               	xorlw	128
  3182  0E55  3E12               	addlw	-238
  3183  0E56  1C03               	skipc
  3184  0E57  2E59               	goto	u4301
  3185  0E58  2E5A               	goto	u4300
  3186  0E59                     u4301:	
  3187  0E59  2F44               	goto	l2957
  3188  0E5A                     u4300:	
  3189  0E5A                     l2951:	
  3190                           
  3191                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3192  0E5A  300A               	movlw	10
  3193  0E5B  00A0               	movwf	___awdiv@divisor
  3194  0E5C  3000               	movlw	0
  3195  0E5D  00A1               	movwf	___awdiv@divisor+1
  3196  0E5E  0854               	movf	scale@scl,w
  3197  0E5F  00F5               	movwf	___awmod@dividend
  3198  0E60  01F6               	clrf	___awmod@dividend+1
  3199  0E61  1BF5               	btfsc	___awmod@dividend,7
  3200  0E62  03F6               	decf	___awmod@dividend+1,f
  3201  0E63  3064               	movlw	100
  3202  0E64  00F3               	movwf	___awmod@divisor
  3203  0E65  3000               	movlw	0
  3204  0E66  00F4               	movwf	___awmod@divisor+1
  3205  0E67  160A  158A  2464  120A  158A  	fcall	___awmod
  3206  0E6C  0874               	movf	?___awmod+1,w
  3207  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0E6F  00A3               	movwf	___awdiv@dividend+1
  3210  0E70  0873               	movf	?___awmod,w
  3211  0E71  00A2               	movwf	___awdiv@dividend
  3212  0E72  120A  158A  200F  120A  158A  	fcall	___awdiv
  3213  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3214  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3215  0E79  0820               	movf	?___awdiv,w
  3216  0E7A  00C6               	movwf	??_scale
  3217  0E7B  3001               	movlw	1
  3218  0E7C                     u4315:	
  3219  0E7C  1003               	clrc
  3220  0E7D  0DC6               	rlf	??_scale,f
  3221  0E7E  3EFF               	addlw	-1
  3222  0E7F  1D03               	skipz
  3223  0E80  2E7C               	goto	u4315
  3224  0E81  1003               	clrc
  3225  0E82  0D46               	rlf	??_scale,w
  3226  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3227  0E84  0084               	movwf	4
  3228  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  3229  0E8A  00C7               	movwf	??_scale+1
  3230  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  3231  0E90  00C8               	movwf	??_scale+2
  3232  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  3233  0E96  00C9               	movwf	??_scale+3
  3234  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  3235  0E9C  00CA               	movwf	??_scale+4
  3236  0E9D  084A               	movf	??_scale+4,w
  3237  0E9E  00AB               	movwf	___flmul@b+3
  3238  0E9F  0849               	movf	??_scale+3,w
  3239  0EA0  00AA               	movwf	___flmul@b+2
  3240  0EA1  0848               	movf	??_scale+2,w
  3241  0EA2  00A9               	movwf	___flmul@b+1
  3242  0EA3  0847               	movf	??_scale+1,w
  3243  0EA4  00A8               	movwf	___flmul@b
  3244  0EA5  3064               	movlw	100
  3245  0EA6  00A0               	movwf	___awdiv@divisor
  3246  0EA7  3000               	movlw	0
  3247  0EA8  00A1               	movwf	___awdiv@divisor+1
  3248  0EA9  0854               	movf	scale@scl,w
  3249  0EAA  00A2               	movwf	___awdiv@dividend
  3250  0EAB  01A3               	clrf	___awdiv@dividend+1
  3251  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3252  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3253  0EAE  120A  158A  200F  120A  158A  	fcall	___awdiv
  3254  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3255  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3256  0EB5  0820               	movf	?___awdiv,w
  3257  0EB6  00CB               	movwf	??_scale+5
  3258  0EB7  3001               	movlw	1
  3259  0EB8                     u4325:	
  3260  0EB8  1003               	clrc
  3261  0EB9  0DCB               	rlf	??_scale+5,f
  3262  0EBA  3EFF               	addlw	-1
  3263  0EBB  1D03               	skipz
  3264  0EBC  2EB8               	goto	u4325
  3265  0EBD  1003               	clrc
  3266  0EBE  0D4B               	rlf	??_scale+5,w
  3267  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3268  0EC0  0084               	movwf	4
  3269  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  3270  0EC6  00CC               	movwf	??_scale+6
  3271  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  3272  0ECC  00CD               	movwf	??_scale+7
  3273  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  3274  0ED2  00CE               	movwf	??_scale+8
  3275  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  3276  0ED8  00CF               	movwf	??_scale+9
  3277  0ED9  084F               	movf	??_scale+9,w
  3278  0EDA  00AF               	movwf	___flmul@a+3
  3279  0EDB  084E               	movf	??_scale+8,w
  3280  0EDC  00AE               	movwf	___flmul@a+2
  3281  0EDD  084D               	movf	??_scale+7,w
  3282  0EDE  00AD               	movwf	___flmul@a+1
  3283  0EDF  084C               	movf	??_scale+6,w
  3284  0EE0  00AC               	movwf	___flmul@a
  3285  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3286  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3288  0EE8  082B               	movf	?___flmul+3,w
  3289  0EE9  00D3               	movwf	_scale$1233+3
  3290  0EEA  082A               	movf	?___flmul+2,w
  3291  0EEB  00D2               	movwf	_scale$1233+2
  3292  0EEC  0829               	movf	?___flmul+1,w
  3293  0EED  00D1               	movwf	_scale$1233+1
  3294  0EEE  0828               	movf	?___flmul,w
  3295  0EEF  00D0               	movwf	_scale$1233
  3296                           
  3297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3298  0EF0  300A               	movlw	10
  3299  0EF1  00F3               	movwf	___awmod@divisor
  3300  0EF2  3000               	movlw	0
  3301  0EF3  00F4               	movwf	___awmod@divisor+1
  3302  0EF4  0854               	movf	scale@scl,w
  3303  0EF5  00F5               	movwf	___awmod@dividend
  3304  0EF6  01F6               	clrf	___awmod@dividend+1
  3305  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3306  0EF8  03F6               	decf	___awmod@dividend+1,f
  3307  0EF9  160A  158A  2464  120A  158A  	fcall	___awmod
  3308  0EFE  0873               	movf	?___awmod,w
  3309  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3311  0F01  00C6               	movwf	??_scale
  3312  0F02  3001               	movlw	1
  3313  0F03                     u4335:	
  3314  0F03  1003               	clrc
  3315  0F04  0DC6               	rlf	??_scale,f
  3316  0F05  3EFF               	addlw	-1
  3317  0F06  1D03               	skipz
  3318  0F07  2F03               	goto	u4335
  3319  0F08  1003               	clrc
  3320  0F09  0D46               	rlf	??_scale,w
  3321  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3322  0F0B  0084               	movwf	4
  3323  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3324  0F11  00C7               	movwf	??_scale+1
  3325  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3326  0F17  00C8               	movwf	??_scale+2
  3327  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3328  0F1D  00C9               	movwf	??_scale+3
  3329  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3330  0F23  00CA               	movwf	??_scale+4
  3331  0F24  084A               	movf	??_scale+4,w
  3332  0F25  00AB               	movwf	___flmul@b+3
  3333  0F26  0849               	movf	??_scale+3,w
  3334  0F27  00AA               	movwf	___flmul@b+2
  3335  0F28  0848               	movf	??_scale+2,w
  3336  0F29  00A9               	movwf	___flmul@b+1
  3337  0F2A  0847               	movf	??_scale+1,w
  3338  0F2B  00A8               	movwf	___flmul@b
  3339  0F2C  0853               	movf	_scale$1233+3,w
  3340  0F2D  00AF               	movwf	___flmul@a+3
  3341  0F2E  0852               	movf	_scale$1233+2,w
  3342  0F2F  00AE               	movwf	___flmul@a+2
  3343  0F30  0851               	movf	_scale$1233+1,w
  3344  0F31  00AD               	movwf	___flmul@a+1
  3345  0F32  0850               	movf	_scale$1233,w
  3346  0F33  00AC               	movwf	___flmul@a
  3347  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3348  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3349  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3350  0F3B  082B               	movf	?___flmul+3,w
  3351  0F3C  00C5               	movwf	?_scale+3
  3352  0F3D  082A               	movf	?___flmul+2,w
  3353  0F3E  00C4               	movwf	?_scale+2
  3354  0F3F  0829               	movf	?___flmul+1,w
  3355  0F40  00C3               	movwf	?_scale+1
  3356  0F41  0828               	movf	?___flmul,w
  3357  0F42  00C2               	movwf	?_scale
  3358  0F43  2FFF               	goto	l320
  3359  0F44                     l2957:	
  3360  0F44  0854               	movf	scale@scl,w
  3361  0F45  3A80               	xorlw	128
  3362  0F46  3E75               	addlw	-139
  3363  0F47  1C03               	skipc
  3364  0F48  2F4A               	goto	u4341
  3365  0F49  2F4B               	goto	u4340
  3366  0F4A                     u4341:	
  3367  0F4A  2FD3               	goto	l2963
  3368  0F4B                     u4340:	
  3369  0F4B                     l2959:	
  3370                           
  3371                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3372  0F4B  300A               	movlw	10
  3373  0F4C  00F3               	movwf	___awmod@divisor
  3374  0F4D  3000               	movlw	0
  3375  0F4E  00F4               	movwf	___awmod@divisor+1
  3376  0F4F  0854               	movf	scale@scl,w
  3377  0F50  00F5               	movwf	___awmod@dividend
  3378  0F51  01F6               	clrf	___awmod@dividend+1
  3379  0F52  1BF5               	btfsc	___awmod@dividend,7
  3380  0F53  03F6               	decf	___awmod@dividend+1,f
  3381  0F54  160A  158A  2464  120A  158A  	fcall	___awmod
  3382  0F59  0873               	movf	?___awmod,w
  3383  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3384  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3385  0F5C  00C6               	movwf	??_scale
  3386  0F5D  3001               	movlw	1
  3387  0F5E                     u4355:	
  3388  0F5E  1003               	clrc
  3389  0F5F  0DC6               	rlf	??_scale,f
  3390  0F60  3EFF               	addlw	-1
  3391  0F61  1D03               	skipz
  3392  0F62  2F5E               	goto	u4355
  3393  0F63  1003               	clrc
  3394  0F64  0D46               	rlf	??_scale,w
  3395  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3396  0F66  0084               	movwf	4
  3397  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  3398  0F6C  00C7               	movwf	??_scale+1
  3399  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3400  0F72  00C8               	movwf	??_scale+2
  3401  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  3402  0F78  00C9               	movwf	??_scale+3
  3403  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  3404  0F7E  00CA               	movwf	??_scale+4
  3405  0F7F  084A               	movf	??_scale+4,w
  3406  0F80  00AB               	movwf	___flmul@b+3
  3407  0F81  0849               	movf	??_scale+3,w
  3408  0F82  00AA               	movwf	___flmul@b+2
  3409  0F83  0848               	movf	??_scale+2,w
  3410  0F84  00A9               	movwf	___flmul@b+1
  3411  0F85  0847               	movf	??_scale+1,w
  3412  0F86  00A8               	movwf	___flmul@b
  3413  0F87  300A               	movlw	10
  3414  0F88  00A0               	movwf	___awdiv@divisor
  3415  0F89  3000               	movlw	0
  3416  0F8A  00A1               	movwf	___awdiv@divisor+1
  3417  0F8B  0854               	movf	scale@scl,w
  3418  0F8C  00A2               	movwf	___awdiv@dividend
  3419  0F8D  01A3               	clrf	___awdiv@dividend+1
  3420  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3421  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3422  0F90  120A  158A  200F  120A  158A  	fcall	___awdiv
  3423  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3425  0F97  0820               	movf	?___awdiv,w
  3426  0F98  00CB               	movwf	??_scale+5
  3427  0F99  3001               	movlw	1
  3428  0F9A                     u4365:	
  3429  0F9A  1003               	clrc
  3430  0F9B  0DCB               	rlf	??_scale+5,f
  3431  0F9C  3EFF               	addlw	-1
  3432  0F9D  1D03               	skipz
  3433  0F9E  2F9A               	goto	u4365
  3434  0F9F  1003               	clrc
  3435  0FA0  0D4B               	rlf	??_scale+5,w
  3436  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3437  0FA2  0084               	movwf	4
  3438  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3439  0FA8  00CC               	movwf	??_scale+6
  3440  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3441  0FAE  00CD               	movwf	??_scale+7
  3442  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  3443  0FB4  00CE               	movwf	??_scale+8
  3444  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  3445  0FBA  00CF               	movwf	??_scale+9
  3446  0FBB  084F               	movf	??_scale+9,w
  3447  0FBC  00AF               	movwf	___flmul@a+3
  3448  0FBD  084E               	movf	??_scale+8,w
  3449  0FBE  00AE               	movwf	___flmul@a+2
  3450  0FBF  084D               	movf	??_scale+7,w
  3451  0FC0  00AD               	movwf	___flmul@a+1
  3452  0FC1  084C               	movf	??_scale+6,w
  3453  0FC2  00AC               	movwf	___flmul@a
  3454  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3455  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0FCA  082B               	movf	?___flmul+3,w
  3458  0FCB  00C5               	movwf	?_scale+3
  3459  0FCC  082A               	movf	?___flmul+2,w
  3460  0FCD  00C4               	movwf	?_scale+2
  3461  0FCE  0829               	movf	?___flmul+1,w
  3462  0FCF  00C3               	movwf	?_scale+1
  3463  0FD0  0828               	movf	?___flmul,w
  3464  0FD1  00C2               	movwf	?_scale
  3465  0FD2  2FFF               	goto	l320
  3466  0FD3                     l2963:	
  3467                           
  3468                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3469  0FD3  0854               	movf	scale@scl,w
  3470  0FD4  00C6               	movwf	??_scale
  3471  0FD5  3001               	movlw	1
  3472  0FD6                     u4375:	
  3473  0FD6  1003               	clrc
  3474  0FD7  0DC6               	rlf	??_scale,f
  3475  0FD8  3EFF               	addlw	-1
  3476  0FD9  1D03               	skipz
  3477  0FDA  2FD6               	goto	u4375
  3478  0FDB  1003               	clrc
  3479  0FDC  0D46               	rlf	??_scale,w
  3480  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3481  0FDE  0084               	movwf	4
  3482  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  3483  0FE4  00C7               	movwf	??_scale+1
  3484  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  3485  0FEA  00C8               	movwf	??_scale+2
  3486  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  3487  0FF0  00C9               	movwf	??_scale+3
  3488  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  3489  0FF6  00CA               	movwf	??_scale+4
  3490  0FF7  084A               	movf	??_scale+4,w
  3491  0FF8  00C5               	movwf	?_scale+3
  3492  0FF9  0849               	movf	??_scale+3,w
  3493  0FFA  00C4               	movwf	?_scale+2
  3494  0FFB  0848               	movf	??_scale+2,w
  3495  0FFC  00C3               	movwf	?_scale+1
  3496  0FFD  0847               	movf	??_scale+1,w
  3497  0FFE  00C2               	movwf	?_scale
  3498  0FFF                     l320:	
  3499  0FFF  0008               	return
  3500  1000                     __end_of_scale:	
  3501                           
  3502                           	psect	text4
  3503  1C64                     __ptext4:	
  3504 ;; *************** function ___awmod *****************
  3505 ;; Defined at:
  3506 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3507 ;; Parameters:    Size  Location     Type
  3508 ;;  divisor         2    3[COMMON] int 
  3509 ;;  dividend        2    5[COMMON] int 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  sign            1    9[COMMON] unsigned char 
  3512 ;;  counter         1    8[COMMON] unsigned char 
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  2    3[COMMON] int 
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3522 ;;      Params:         4       0       0       0       0
  3523 ;;      Locals:         2       0       0       0       0
  3524 ;;      Temps:          1       0       0       0       0
  3525 ;;      Totals:         7       0       0       0       0
  3526 ;;Total ram usage:        7 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:    1
  3529 ;; This function calls:
  3530 ;;		Nothing
  3531 ;; This function is called by:
  3532 ;;		_scale
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           
  3537                           ;psect for function ___awmod
  3538  1C64                     ___awmod:	
  3539  1C64                     l2469:	
  3540                           ;incstack = 0
  3541                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3542                           
  3543  1C64  01F9               	clrf	___awmod@sign
  3544  1C65                     l2471:	
  3545  1C65  1FF6               	btfss	___awmod@dividend+1,7
  3546  1C66  2C68               	goto	u3071
  3547  1C67  2C69               	goto	u3070
  3548  1C68                     u3071:	
  3549  1C68  2C70               	goto	l2477
  3550  1C69                     u3070:	
  3551  1C69                     l2473:	
  3552  1C69  09F5               	comf	___awmod@dividend,f
  3553  1C6A  09F6               	comf	___awmod@dividend+1,f
  3554  1C6B  0AF5               	incf	___awmod@dividend,f
  3555  1C6C  1903               	skipnz
  3556  1C6D  0AF6               	incf	___awmod@dividend+1,f
  3557  1C6E                     l2475:	
  3558  1C6E  01F9               	clrf	___awmod@sign
  3559  1C6F  0AF9               	incf	___awmod@sign,f
  3560  1C70                     l2477:	
  3561  1C70  1FF4               	btfss	___awmod@divisor+1,7
  3562  1C71  2C73               	goto	u3081
  3563  1C72  2C74               	goto	u3080
  3564  1C73                     u3081:	
  3565  1C73  2C79               	goto	l2481
  3566  1C74                     u3080:	
  3567  1C74                     l2479:	
  3568  1C74  09F3               	comf	___awmod@divisor,f
  3569  1C75  09F4               	comf	___awmod@divisor+1,f
  3570  1C76  0AF3               	incf	___awmod@divisor,f
  3571  1C77  1903               	skipnz
  3572  1C78  0AF4               	incf	___awmod@divisor+1,f
  3573  1C79                     l2481:	
  3574  1C79  0873               	movf	___awmod@divisor,w
  3575  1C7A  0474               	iorwf	___awmod@divisor+1,w
  3576  1C7B  1903               	btfsc	3,2
  3577  1C7C  2C7E               	goto	u3091
  3578  1C7D  2C7F               	goto	u3090
  3579  1C7E                     u3091:	
  3580  1C7E  2CAE               	goto	l2499
  3581  1C7F                     u3090:	
  3582  1C7F                     l2483:	
  3583  1C7F  01F8               	clrf	___awmod@counter
  3584  1C80  0AF8               	incf	___awmod@counter,f
  3585  1C81  2C8D               	goto	l2489
  3586  1C82                     l2485:	
  3587  1C82  3001               	movlw	1
  3588  1C83                     u3105:	
  3589  1C83  1003               	clrc
  3590  1C84  0DF3               	rlf	___awmod@divisor,f
  3591  1C85  0DF4               	rlf	___awmod@divisor+1,f
  3592  1C86  3EFF               	addlw	-1
  3593  1C87  1D03               	skipz
  3594  1C88  2C83               	goto	u3105
  3595  1C89                     l2487:	
  3596  1C89  3001               	movlw	1
  3597  1C8A  00F7               	movwf	??___awmod
  3598  1C8B  0877               	movf	??___awmod,w
  3599  1C8C  07F8               	addwf	___awmod@counter,f
  3600  1C8D                     l2489:	
  3601  1C8D  1FF4               	btfss	___awmod@divisor+1,7
  3602  1C8E  2C90               	goto	u3111
  3603  1C8F  2C91               	goto	u3110
  3604  1C90                     u3111:	
  3605  1C90  2C82               	goto	l2485
  3606  1C91                     u3110:	
  3607  1C91                     l2491:	
  3608  1C91  0874               	movf	___awmod@divisor+1,w
  3609  1C92  0276               	subwf	___awmod@dividend+1,w
  3610  1C93  1D03               	skipz
  3611  1C94  2C97               	goto	u3125
  3612  1C95  0873               	movf	___awmod@divisor,w
  3613  1C96  0275               	subwf	___awmod@dividend,w
  3614  1C97                     u3125:	
  3615  1C97  1C03               	skipc
  3616  1C98  2C9A               	goto	u3121
  3617  1C99  2C9B               	goto	u3120
  3618  1C9A                     u3121:	
  3619  1C9A  2CA1               	goto	l2495
  3620  1C9B                     u3120:	
  3621  1C9B                     l2493:	
  3622  1C9B  0873               	movf	___awmod@divisor,w
  3623  1C9C  02F5               	subwf	___awmod@dividend,f
  3624  1C9D  0874               	movf	___awmod@divisor+1,w
  3625  1C9E  1C03               	skipc
  3626  1C9F  03F6               	decf	___awmod@dividend+1,f
  3627  1CA0  02F6               	subwf	___awmod@dividend+1,f
  3628  1CA1                     l2495:	
  3629  1CA1  3001               	movlw	1
  3630  1CA2                     u3135:	
  3631  1CA2  1003               	clrc
  3632  1CA3  0CF4               	rrf	___awmod@divisor+1,f
  3633  1CA4  0CF3               	rrf	___awmod@divisor,f
  3634  1CA5  3EFF               	addlw	-1
  3635  1CA6  1D03               	skipz
  3636  1CA7  2CA2               	goto	u3135
  3637  1CA8                     l2497:	
  3638  1CA8  3001               	movlw	1
  3639  1CA9  02F8               	subwf	___awmod@counter,f
  3640  1CAA  1D03               	btfss	3,2
  3641  1CAB  2CAD               	goto	u3141
  3642  1CAC  2CAE               	goto	u3140
  3643  1CAD                     u3141:	
  3644  1CAD  2C91               	goto	l2491
  3645  1CAE                     u3140:	
  3646  1CAE                     l2499:	
  3647  1CAE  0879               	movf	___awmod@sign,w
  3648  1CAF  1903               	btfsc	3,2
  3649  1CB0  2CB2               	goto	u3151
  3650  1CB1  2CB3               	goto	u3150
  3651  1CB2                     u3151:	
  3652  1CB2  2CB8               	goto	l2503
  3653  1CB3                     u3150:	
  3654  1CB3                     l2501:	
  3655  1CB3  09F5               	comf	___awmod@dividend,f
  3656  1CB4  09F6               	comf	___awmod@dividend+1,f
  3657  1CB5  0AF5               	incf	___awmod@dividend,f
  3658  1CB6  1903               	skipnz
  3659  1CB7  0AF6               	incf	___awmod@dividend+1,f
  3660  1CB8                     l2503:	
  3661  1CB8  0876               	movf	___awmod@dividend+1,w
  3662  1CB9  00F4               	movwf	?___awmod+1
  3663  1CBA  0875               	movf	___awmod@dividend,w
  3664  1CBB  00F3               	movwf	?___awmod
  3665  1CBC                     l582:	
  3666  1CBC  0008               	return
  3667  1CBD                     __end_of___awmod:	
  3668                           
  3669                           	psect	text5
  3670  080F                     __ptext5:	
  3671 ;; *************** function ___awdiv *****************
  3672 ;; Defined at:
  3673 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  divisor         2    0[BANK0 ] int 
  3676 ;;  dividend        2    2[BANK0 ] int 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  quotient        2    6[BANK0 ] int 
  3679 ;;  sign            1    5[BANK0 ] unsigned char 
  3680 ;;  counter         1    4[BANK0 ] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  2    0[BANK0 ] int 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3690 ;;      Params:         0       4       0       0       0
  3691 ;;      Locals:         0       4       0       0       0
  3692 ;;      Temps:          1       0       0       0       0
  3693 ;;      Totals:         1       8       0       0       0
  3694 ;;Total ram usage:        9 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    1
  3697 ;; This function calls:
  3698 ;;		Nothing
  3699 ;; This function is called by:
  3700 ;;		_scale
  3701 ;;		_sprintf
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           
  3706                           ;psect for function ___awdiv
  3707  080F                     ___awdiv:	
  3708  080F                     l2425:	
  3709                           ;incstack = 0
  3710                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3711                           
  3712  080F  1283               	bcf	3,5	;RP0=0, select bank0
  3713  0810  1303               	bcf	3,6	;RP1=0, select bank0
  3714  0811  01A5               	clrf	___awdiv@sign
  3715  0812                     l2427:	
  3716  0812  1FA1               	btfss	___awdiv@divisor+1,7
  3717  0813  2815               	goto	u2971
  3718  0814  2816               	goto	u2970
  3719  0815                     u2971:	
  3720  0815  281D               	goto	l2433
  3721  0816                     u2970:	
  3722  0816                     l2429:	
  3723  0816  09A0               	comf	___awdiv@divisor,f
  3724  0817  09A1               	comf	___awdiv@divisor+1,f
  3725  0818  0AA0               	incf	___awdiv@divisor,f
  3726  0819  1903               	skipnz
  3727  081A  0AA1               	incf	___awdiv@divisor+1,f
  3728  081B                     l2431:	
  3729  081B  01A5               	clrf	___awdiv@sign
  3730  081C  0AA5               	incf	___awdiv@sign,f
  3731  081D                     l2433:	
  3732  081D  1FA3               	btfss	___awdiv@dividend+1,7
  3733  081E  2820               	goto	u2981
  3734  081F  2821               	goto	u2980
  3735  0820                     u2981:	
  3736  0820  282A               	goto	l2439
  3737  0821                     u2980:	
  3738  0821                     l2435:	
  3739  0821  09A2               	comf	___awdiv@dividend,f
  3740  0822  09A3               	comf	___awdiv@dividend+1,f
  3741  0823  0AA2               	incf	___awdiv@dividend,f
  3742  0824  1903               	skipnz
  3743  0825  0AA3               	incf	___awdiv@dividend+1,f
  3744  0826                     l2437:	
  3745  0826  3001               	movlw	1
  3746  0827  00FA               	movwf	??___awdiv
  3747  0828  087A               	movf	??___awdiv,w
  3748  0829  06A5               	xorwf	___awdiv@sign,f
  3749  082A                     l2439:	
  3750  082A  01A6               	clrf	___awdiv@quotient
  3751  082B  01A7               	clrf	___awdiv@quotient+1
  3752  082C                     l2441:	
  3753  082C  0820               	movf	___awdiv@divisor,w
  3754  082D  0421               	iorwf	___awdiv@divisor+1,w
  3755  082E  1903               	btfsc	3,2
  3756  082F  2831               	goto	u2991
  3757  0830  2832               	goto	u2990
  3758  0831                     u2991:	
  3759  0831  2869               	goto	l2461
  3760  0832                     u2990:	
  3761  0832                     l2443:	
  3762  0832  01A4               	clrf	___awdiv@counter
  3763  0833  0AA4               	incf	___awdiv@counter,f
  3764  0834  2840               	goto	l2449
  3765  0835                     l2445:	
  3766  0835  3001               	movlw	1
  3767  0836                     u3005:	
  3768  0836  1003               	clrc
  3769  0837  0DA0               	rlf	___awdiv@divisor,f
  3770  0838  0DA1               	rlf	___awdiv@divisor+1,f
  3771  0839  3EFF               	addlw	-1
  3772  083A  1D03               	skipz
  3773  083B  2836               	goto	u3005
  3774  083C                     l2447:	
  3775  083C  3001               	movlw	1
  3776  083D  00FA               	movwf	??___awdiv
  3777  083E  087A               	movf	??___awdiv,w
  3778  083F  07A4               	addwf	___awdiv@counter,f
  3779  0840                     l2449:	
  3780  0840  1FA1               	btfss	___awdiv@divisor+1,7
  3781  0841  2843               	goto	u3011
  3782  0842  2844               	goto	u3010
  3783  0843                     u3011:	
  3784  0843  2835               	goto	l2445
  3785  0844                     u3010:	
  3786  0844                     l2451:	
  3787  0844  3001               	movlw	1
  3788  0845                     u3025:	
  3789  0845  1003               	clrc
  3790  0846  0DA6               	rlf	___awdiv@quotient,f
  3791  0847  0DA7               	rlf	___awdiv@quotient+1,f
  3792  0848  3EFF               	addlw	-1
  3793  0849  1D03               	skipz
  3794  084A  2845               	goto	u3025
  3795  084B  0821               	movf	___awdiv@divisor+1,w
  3796  084C  0223               	subwf	___awdiv@dividend+1,w
  3797  084D  1D03               	skipz
  3798  084E  2851               	goto	u3035
  3799  084F  0820               	movf	___awdiv@divisor,w
  3800  0850  0222               	subwf	___awdiv@dividend,w
  3801  0851                     u3035:	
  3802  0851  1C03               	skipc
  3803  0852  2854               	goto	u3031
  3804  0853  2855               	goto	u3030
  3805  0854                     u3031:	
  3806  0854  285C               	goto	l2457
  3807  0855                     u3030:	
  3808  0855                     l2453:	
  3809  0855  0820               	movf	___awdiv@divisor,w
  3810  0856  02A2               	subwf	___awdiv@dividend,f
  3811  0857  0821               	movf	___awdiv@divisor+1,w
  3812  0858  1C03               	skipc
  3813  0859  03A3               	decf	___awdiv@dividend+1,f
  3814  085A  02A3               	subwf	___awdiv@dividend+1,f
  3815  085B                     l2455:	
  3816  085B  1426               	bsf	___awdiv@quotient,0
  3817  085C                     l2457:	
  3818  085C  3001               	movlw	1
  3819  085D                     u3045:	
  3820  085D  1003               	clrc
  3821  085E  0CA1               	rrf	___awdiv@divisor+1,f
  3822  085F  0CA0               	rrf	___awdiv@divisor,f
  3823  0860  3EFF               	addlw	-1
  3824  0861  1D03               	skipz
  3825  0862  285D               	goto	u3045
  3826  0863                     l2459:	
  3827  0863  3001               	movlw	1
  3828  0864  02A4               	subwf	___awdiv@counter,f
  3829  0865  1D03               	btfss	3,2
  3830  0866  2868               	goto	u3051
  3831  0867  2869               	goto	u3050
  3832  0868                     u3051:	
  3833  0868  2844               	goto	l2451
  3834  0869                     u3050:	
  3835  0869                     l2461:	
  3836  0869  0825               	movf	___awdiv@sign,w
  3837  086A  1903               	btfsc	3,2
  3838  086B  286D               	goto	u3061
  3839  086C  286E               	goto	u3060
  3840  086D                     u3061:	
  3841  086D  2873               	goto	l2465
  3842  086E                     u3060:	
  3843  086E                     l2463:	
  3844  086E  09A6               	comf	___awdiv@quotient,f
  3845  086F  09A7               	comf	___awdiv@quotient+1,f
  3846  0870  0AA6               	incf	___awdiv@quotient,f
  3847  0871  1903               	skipnz
  3848  0872  0AA7               	incf	___awdiv@quotient+1,f
  3849  0873                     l2465:	
  3850  0873  0827               	movf	___awdiv@quotient+1,w
  3851  0874  00A1               	movwf	?___awdiv+1
  3852  0875  0826               	movf	___awdiv@quotient,w
  3853  0876  00A0               	movwf	?___awdiv
  3854  0877                     l569:	
  3855  0877  0008               	return
  3856  0878                     __end_of___awdiv:	
  3857                           
  3858                           	psect	text6
  3859  1951                     __ptext6:	
  3860 ;; *************** function _isdigit *****************
  3861 ;; Defined at:
  3862 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  3863 ;; Parameters:    Size  Location     Type
  3864 ;;  c               1    wreg     unsigned char 
  3865 ;; Auto vars:     Size  Location     Type
  3866 ;;  c               1    4[COMMON] unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;		None               void
  3869 ;; Registers used:
  3870 ;;		wreg, status,2, status,0
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3876 ;;      Params:         0       0       0       0       0
  3877 ;;      Locals:         2       0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0
  3879 ;;      Totals:         2       0       0       0       0
  3880 ;;Total ram usage:        2 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    1
  3883 ;; This function calls:
  3884 ;;		Nothing
  3885 ;; This function is called by:
  3886 ;;		_sprintf
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function _isdigit
  3892  1951                     _isdigit:	
  3893                           
  3894                           ;incstack = 0
  3895                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3896                           ;isdigit@c stored from wreg
  3897  1951  00F4               	movwf	isdigit@c
  3898  1952                     l2967:	
  3899  1952  01F3               	clrf	_isdigit$1032
  3900  1953                     l2969:	
  3901  1953  303A               	movlw	58
  3902  1954  0274               	subwf	isdigit@c,w
  3903  1955  1803               	skipnc
  3904  1956  2958               	goto	u4381
  3905  1957  2959               	goto	u4380
  3906  1958                     u4381:	
  3907  1958  2961               	goto	l2975
  3908  1959                     u4380:	
  3909  1959                     l2971:	
  3910  1959  3030               	movlw	48
  3911  195A  0274               	subwf	isdigit@c,w
  3912  195B  1C03               	skipc
  3913  195C  295E               	goto	u4391
  3914  195D  295F               	goto	u4390
  3915  195E                     u4391:	
  3916  195E  2961               	goto	l2975
  3917  195F                     u4390:	
  3918  195F                     l2973:	
  3919  195F  01F3               	clrf	_isdigit$1032
  3920  1960  0AF3               	incf	_isdigit$1032,f
  3921  1961                     l2975:	
  3922  1961  0C73               	rrf	_isdigit$1032,w
  3923  1962                     l897:	
  3924  1962  0008               	return
  3925  1963                     __end_of_isdigit:	
  3926                           
  3927                           	psect	text7
  3928  1080                     __ptext7:	
  3929 ;; *************** function _fround *****************
  3930 ;; Defined at:
  3931 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;  prec            1    wreg     unsigned char 
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  prec            1   53[BANK0 ] unsigned char 
  3936 ;; Return value:  Size  Location     Type
  3937 ;;                  4   34[BANK0 ] unsigned char 
  3938 ;; Registers used:
  3939 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3940 ;; Tracked objects:
  3941 ;;		On entry : 0/0
  3942 ;;		On exit  : 0/0
  3943 ;;		Unchanged: 0/0
  3944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3945 ;;      Params:         0       4       0       0       0
  3946 ;;      Locals:         0       9       0       0       0
  3947 ;;      Temps:          0       7       0       0       0
  3948 ;;      Totals:         0      20       0       0       0
  3949 ;;Total ram usage:       20 bytes
  3950 ;; Hardware stack levels used:    1
  3951 ;; Hardware stack levels required when called:    3
  3952 ;; This function calls:
  3953 ;;		___flmul
  3954 ;;		___lwdiv
  3955 ;;		___lwmod
  3956 ;; This function is called by:
  3957 ;;		_sprintf
  3958 ;; This function uses a non-reentrant model
  3959 ;;
  3960                           
  3961                           
  3962                           ;psect for function _fround
  3963  1080                     _fround:	
  3964                           
  3965                           ;incstack = 0
  3966                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3967                           ;fround@prec stored from wreg
  3968  1080  1283               	bcf	3,5	;RP0=0, select bank0
  3969  1081  1303               	bcf	3,6	;RP1=0, select bank0
  3970  1082  00D5               	movwf	fround@prec
  3971  1083                     l2909:	
  3972                           
  3973                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  3974  1083  306E               	movlw	110
  3975  1084  0255               	subwf	fround@prec,w
  3976  1085  1C03               	skipc
  3977  1086  2888               	goto	u4131
  3978  1087  2889               	goto	u4130
  3979  1088                     u4131:	
  3980  1088  2998               	goto	l2917
  3981  1089                     u4130:	
  3982  1089                     l2911:	
  3983                           
  3984                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3985  1089  303F               	movlw	63
  3986  108A  00AB               	movwf	___flmul@b+3
  3987  108B  3000               	movlw	0
  3988  108C  00AA               	movwf	___flmul@b+2
  3989  108D  3000               	movlw	0
  3990  108E  00A9               	movwf	___flmul@b+1
  3991  108F  3000               	movlw	0
  3992  1090  00A8               	movwf	___flmul@b
  3993  1091  3064               	movlw	100
  3994  1092  00A0               	movwf	___lwdiv@divisor
  3995  1093  3000               	movlw	0
  3996  1094  00A1               	movwf	___lwdiv@divisor+1
  3997  1095  0855               	movf	fround@prec,w
  3998  1096  00C6               	movwf	??_fround
  3999  1097  01C7               	clrf	??_fround+1
  4000  1098  0846               	movf	??_fround,w
  4001  1099  00A2               	movwf	___lwdiv@dividend
  4002  109A  0847               	movf	??_fround+1,w
  4003  109B  00A3               	movwf	___lwdiv@dividend+1
  4004  109C  120A  118A  27B8  160A  118A  	fcall	___lwdiv
  4005  10A1  1283               	bcf	3,5	;RP0=0, select bank0
  4006  10A2  1303               	bcf	3,6	;RP1=0, select bank0
  4007  10A3  0820               	movf	?___lwdiv,w
  4008  10A4  00C8               	movwf	??_fround+2
  4009  10A5  3001               	movlw	1
  4010  10A6                     u4145:	
  4011  10A6  1003               	clrc
  4012  10A7  0DC8               	rlf	??_fround+2,f
  4013  10A8  3EFF               	addlw	-1
  4014  10A9  1D03               	skipz
  4015  10AA  28A6               	goto	u4145
  4016  10AB  1003               	clrc
  4017  10AC  0D48               	rlf	??_fround+2,w
  4018  10AD  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4019  10AE  0084               	movwf	4
  4020  10AF  160A  158A  200A  160A  118A  	fcall	stringdir
  4021  10B4  00C9               	movwf	??_fround+3
  4022  10B5  160A  158A  200A  160A  118A  	fcall	stringdir
  4023  10BA  00CA               	movwf	??_fround+4
  4024  10BB  160A  158A  200A  160A  118A  	fcall	stringdir
  4025  10C0  00CB               	movwf	??_fround+5
  4026  10C1  160A  158A  200A  160A  118A  	fcall	stringdir
  4027  10C6  00CC               	movwf	??_fround+6
  4028  10C7  084C               	movf	??_fround+6,w
  4029  10C8  00AF               	movwf	___flmul@a+3
  4030  10C9  084B               	movf	??_fround+5,w
  4031  10CA  00AE               	movwf	___flmul@a+2
  4032  10CB  084A               	movf	??_fround+4,w
  4033  10CC  00AD               	movwf	___flmul@a+1
  4034  10CD  0849               	movf	??_fround+3,w
  4035  10CE  00AC               	movwf	___flmul@a
  4036  10CF  120A  158A  213C  160A  118A  	fcall	___flmul
  4037  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  4038  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  4039  10D6  082B               	movf	?___flmul+3,w
  4040  10D7  00D4               	movwf	_fround$1231+3
  4041  10D8  082A               	movf	?___flmul+2,w
  4042  10D9  00D3               	movwf	_fround$1231+2
  4043  10DA  0829               	movf	?___flmul+1,w
  4044  10DB  00D2               	movwf	_fround$1231+1
  4045  10DC  0828               	movf	?___flmul,w
  4046  10DD  00D1               	movwf	_fround$1231
  4047                           
  4048                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4049  10DE  300A               	movlw	10
  4050  10DF  00A0               	movwf	___lwdiv@divisor
  4051  10E0  3000               	movlw	0
  4052  10E1  00A1               	movwf	___lwdiv@divisor+1
  4053  10E2  0855               	movf	fround@prec,w
  4054  10E3  00C6               	movwf	??_fround
  4055  10E4  01C7               	clrf	??_fround+1
  4056  10E5  0846               	movf	??_fround,w
  4057  10E6  00F5               	movwf	___lwmod@dividend
  4058  10E7  0847               	movf	??_fround+1,w
  4059  10E8  00F6               	movwf	___lwmod@dividend+1
  4060  10E9  3064               	movlw	100
  4061  10EA  00F3               	movwf	___lwmod@divisor
  4062  10EB  3000               	movlw	0
  4063  10EC  00F4               	movwf	___lwmod@divisor+1
  4064  10ED  160A  158A  229B  160A  118A  	fcall	___lwmod
  4065  10F2  0874               	movf	?___lwmod+1,w
  4066  10F3  1283               	bcf	3,5	;RP0=0, select bank0
  4067  10F4  1303               	bcf	3,6	;RP1=0, select bank0
  4068  10F5  00A3               	movwf	___lwdiv@dividend+1
  4069  10F6  0873               	movf	?___lwmod,w
  4070  10F7  00A2               	movwf	___lwdiv@dividend
  4071  10F8  120A  118A  27B8  160A  118A  	fcall	___lwdiv
  4072  10FD  1283               	bcf	3,5	;RP0=0, select bank0
  4073  10FE  1303               	bcf	3,6	;RP1=0, select bank0
  4074  10FF  0820               	movf	?___lwdiv,w
  4075  1100  00C8               	movwf	??_fround+2
  4076  1101  3001               	movlw	1
  4077  1102                     u4155:	
  4078  1102  1003               	clrc
  4079  1103  0DC8               	rlf	??_fround+2,f
  4080  1104  3EFF               	addlw	-1
  4081  1105  1D03               	skipz
  4082  1106  2902               	goto	u4155
  4083  1107  1003               	clrc
  4084  1108  0D48               	rlf	??_fround+2,w
  4085  1109  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4086  110A  0084               	movwf	4
  4087  110B  160A  158A  200A  160A  118A  	fcall	stringdir
  4088  1110  00C9               	movwf	??_fround+3
  4089  1111  160A  158A  200A  160A  118A  	fcall	stringdir
  4090  1116  00CA               	movwf	??_fround+4
  4091  1117  160A  158A  200A  160A  118A  	fcall	stringdir
  4092  111C  00CB               	movwf	??_fround+5
  4093  111D  160A  158A  200A  160A  118A  	fcall	stringdir
  4094  1122  00CC               	movwf	??_fround+6
  4095  1123  084C               	movf	??_fround+6,w
  4096  1124  00AB               	movwf	___flmul@b+3
  4097  1125  084B               	movf	??_fround+5,w
  4098  1126  00AA               	movwf	___flmul@b+2
  4099  1127  084A               	movf	??_fround+4,w
  4100  1128  00A9               	movwf	___flmul@b+1
  4101  1129  0849               	movf	??_fround+3,w
  4102  112A  00A8               	movwf	___flmul@b
  4103  112B  0854               	movf	_fround$1231+3,w
  4104  112C  00AF               	movwf	___flmul@a+3
  4105  112D  0853               	movf	_fround$1231+2,w
  4106  112E  00AE               	movwf	___flmul@a+2
  4107  112F  0852               	movf	_fround$1231+1,w
  4108  1130  00AD               	movwf	___flmul@a+1
  4109  1131  0851               	movf	_fround$1231,w
  4110  1132  00AC               	movwf	___flmul@a
  4111  1133  120A  158A  213C  160A  118A  	fcall	___flmul
  4112  1138  1283               	bcf	3,5	;RP0=0, select bank0
  4113  1139  1303               	bcf	3,6	;RP1=0, select bank0
  4114  113A  082B               	movf	?___flmul+3,w
  4115  113B  00D0               	movwf	_fround$1232+3
  4116  113C  082A               	movf	?___flmul+2,w
  4117  113D  00CF               	movwf	_fround$1232+2
  4118  113E  0829               	movf	?___flmul+1,w
  4119  113F  00CE               	movwf	_fround$1232+1
  4120  1140  0828               	movf	?___flmul,w
  4121  1141  00CD               	movwf	_fround$1232
  4122                           
  4123                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4124  1142  300A               	movlw	10
  4125  1143  00F3               	movwf	___lwmod@divisor
  4126  1144  3000               	movlw	0
  4127  1145  00F4               	movwf	___lwmod@divisor+1
  4128  1146  0855               	movf	fround@prec,w
  4129  1147  00C6               	movwf	??_fround
  4130  1148  01C7               	clrf	??_fround+1
  4131  1149  0846               	movf	??_fround,w
  4132  114A  00F5               	movwf	___lwmod@dividend
  4133  114B  0847               	movf	??_fround+1,w
  4134  114C  00F6               	movwf	___lwmod@dividend+1
  4135  114D  160A  158A  229B  160A  118A  	fcall	___lwmod
  4136  1152  0873               	movf	?___lwmod,w
  4137  1153  1283               	bcf	3,5	;RP0=0, select bank0
  4138  1154  1303               	bcf	3,6	;RP1=0, select bank0
  4139  1155  00C8               	movwf	??_fround+2
  4140  1156  3001               	movlw	1
  4141  1157                     u4165:	
  4142  1157  1003               	clrc
  4143  1158  0DC8               	rlf	??_fround+2,f
  4144  1159  3EFF               	addlw	-1
  4145  115A  1D03               	skipz
  4146  115B  2957               	goto	u4165
  4147  115C  1003               	clrc
  4148  115D  0D48               	rlf	??_fround+2,w
  4149  115E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4150  115F  0084               	movwf	4
  4151  1160  160A  158A  200A  160A  118A  	fcall	stringdir
  4152  1165  00C9               	movwf	??_fround+3
  4153  1166  160A  158A  200A  160A  118A  	fcall	stringdir
  4154  116B  00CA               	movwf	??_fround+4
  4155  116C  160A  158A  200A  160A  118A  	fcall	stringdir
  4156  1171  00CB               	movwf	??_fround+5
  4157  1172  160A  158A  200A  160A  118A  	fcall	stringdir
  4158  1177  00CC               	movwf	??_fround+6
  4159  1178  084C               	movf	??_fround+6,w
  4160  1179  00AB               	movwf	___flmul@b+3
  4161  117A  084B               	movf	??_fround+5,w
  4162  117B  00AA               	movwf	___flmul@b+2
  4163  117C  084A               	movf	??_fround+4,w
  4164  117D  00A9               	movwf	___flmul@b+1
  4165  117E  0849               	movf	??_fround+3,w
  4166  117F  00A8               	movwf	___flmul@b
  4167  1180  0850               	movf	_fround$1232+3,w
  4168  1181  00AF               	movwf	___flmul@a+3
  4169  1182  084F               	movf	_fround$1232+2,w
  4170  1183  00AE               	movwf	___flmul@a+2
  4171  1184  084E               	movf	_fround$1232+1,w
  4172  1185  00AD               	movwf	___flmul@a+1
  4173  1186  084D               	movf	_fround$1232,w
  4174  1187  00AC               	movwf	___flmul@a
  4175  1188  120A  158A  213C  160A  118A  	fcall	___flmul
  4176  118D  1283               	bcf	3,5	;RP0=0, select bank0
  4177  118E  1303               	bcf	3,6	;RP1=0, select bank0
  4178  118F  082B               	movf	?___flmul+3,w
  4179  1190  00C5               	movwf	?_fround+3
  4180  1191  082A               	movf	?___flmul+2,w
  4181  1192  00C4               	movwf	?_fround+2
  4182  1193  0829               	movf	?___flmul+1,w
  4183  1194  00C3               	movwf	?_fround+1
  4184  1195  0828               	movf	?___flmul,w
  4185  1196  00C2               	movwf	?_fround
  4186  1197  2A8C               	goto	l313
  4187  1198                     l2917:	
  4188  1198  300B               	movlw	11
  4189  1199  0255               	subwf	fround@prec,w
  4190  119A  1C03               	skipc
  4191  119B  299D               	goto	u4171
  4192  119C  299E               	goto	u4170
  4193  119D                     u4171:	
  4194  119D  2A49               	goto	l2923
  4195  119E                     u4170:	
  4196  119E                     l2919:	
  4197                           
  4198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4199  119E  303F               	movlw	63
  4200  119F  00AB               	movwf	___flmul@b+3
  4201  11A0  3000               	movlw	0
  4202  11A1  00AA               	movwf	___flmul@b+2
  4203  11A2  3000               	movlw	0
  4204  11A3  00A9               	movwf	___flmul@b+1
  4205  11A4  3000               	movlw	0
  4206  11A5  00A8               	movwf	___flmul@b
  4207  11A6  300A               	movlw	10
  4208  11A7  00A0               	movwf	___lwdiv@divisor
  4209  11A8  3000               	movlw	0
  4210  11A9  00A1               	movwf	___lwdiv@divisor+1
  4211  11AA  0855               	movf	fround@prec,w
  4212  11AB  00C6               	movwf	??_fround
  4213  11AC  01C7               	clrf	??_fround+1
  4214  11AD  0846               	movf	??_fround,w
  4215  11AE  00A2               	movwf	___lwdiv@dividend
  4216  11AF  0847               	movf	??_fround+1,w
  4217  11B0  00A3               	movwf	___lwdiv@dividend+1
  4218  11B1  120A  118A  27B8  160A  118A  	fcall	___lwdiv
  4219  11B6  1283               	bcf	3,5	;RP0=0, select bank0
  4220  11B7  1303               	bcf	3,6	;RP1=0, select bank0
  4221  11B8  0820               	movf	?___lwdiv,w
  4222  11B9  00C8               	movwf	??_fround+2
  4223  11BA  3001               	movlw	1
  4224  11BB                     u4185:	
  4225  11BB  1003               	clrc
  4226  11BC  0DC8               	rlf	??_fround+2,f
  4227  11BD  3EFF               	addlw	-1
  4228  11BE  1D03               	skipz
  4229  11BF  29BB               	goto	u4185
  4230  11C0  1003               	clrc
  4231  11C1  0D48               	rlf	??_fround+2,w
  4232  11C2  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4233  11C3  0084               	movwf	4
  4234  11C4  160A  158A  200A  160A  118A  	fcall	stringdir
  4235  11C9  00C9               	movwf	??_fround+3
  4236  11CA  160A  158A  200A  160A  118A  	fcall	stringdir
  4237  11CF  00CA               	movwf	??_fround+4
  4238  11D0  160A  158A  200A  160A  118A  	fcall	stringdir
  4239  11D5  00CB               	movwf	??_fround+5
  4240  11D6  160A  158A  200A  160A  118A  	fcall	stringdir
  4241  11DB  00CC               	movwf	??_fround+6
  4242  11DC  084C               	movf	??_fround+6,w
  4243  11DD  00AF               	movwf	___flmul@a+3
  4244  11DE  084B               	movf	??_fround+5,w
  4245  11DF  00AE               	movwf	___flmul@a+2
  4246  11E0  084A               	movf	??_fround+4,w
  4247  11E1  00AD               	movwf	___flmul@a+1
  4248  11E2  0849               	movf	??_fround+3,w
  4249  11E3  00AC               	movwf	___flmul@a
  4250  11E4  120A  158A  213C  160A  118A  	fcall	___flmul
  4251  11E9  1283               	bcf	3,5	;RP0=0, select bank0
  4252  11EA  1303               	bcf	3,6	;RP1=0, select bank0
  4253  11EB  082B               	movf	?___flmul+3,w
  4254  11EC  00D4               	movwf	_fround$1231+3
  4255  11ED  082A               	movf	?___flmul+2,w
  4256  11EE  00D3               	movwf	_fround$1231+2
  4257  11EF  0829               	movf	?___flmul+1,w
  4258  11F0  00D2               	movwf	_fround$1231+1
  4259  11F1  0828               	movf	?___flmul,w
  4260  11F2  00D1               	movwf	_fround$1231
  4261                           
  4262                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4263  11F3  300A               	movlw	10
  4264  11F4  00F3               	movwf	___lwmod@divisor
  4265  11F5  3000               	movlw	0
  4266  11F6  00F4               	movwf	___lwmod@divisor+1
  4267  11F7  0855               	movf	fround@prec,w
  4268  11F8  00C6               	movwf	??_fround
  4269  11F9  01C7               	clrf	??_fround+1
  4270  11FA  0846               	movf	??_fround,w
  4271  11FB  00F5               	movwf	___lwmod@dividend
  4272  11FC  0847               	movf	??_fround+1,w
  4273  11FD  00F6               	movwf	___lwmod@dividend+1
  4274  11FE  160A  158A  229B  160A  118A  	fcall	___lwmod
  4275  1203  0873               	movf	?___lwmod,w
  4276  1204  1283               	bcf	3,5	;RP0=0, select bank0
  4277  1205  1303               	bcf	3,6	;RP1=0, select bank0
  4278  1206  00C8               	movwf	??_fround+2
  4279  1207  3001               	movlw	1
  4280  1208                     u4195:	
  4281  1208  1003               	clrc
  4282  1209  0DC8               	rlf	??_fround+2,f
  4283  120A  3EFF               	addlw	-1
  4284  120B  1D03               	skipz
  4285  120C  2A08               	goto	u4195
  4286  120D  1003               	clrc
  4287  120E  0D48               	rlf	??_fround+2,w
  4288  120F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4289  1210  0084               	movwf	4
  4290  1211  160A  158A  200A  160A  118A  	fcall	stringdir
  4291  1216  00C9               	movwf	??_fround+3
  4292  1217  160A  158A  200A  160A  118A  	fcall	stringdir
  4293  121C  00CA               	movwf	??_fround+4
  4294  121D  160A  158A  200A  160A  118A  	fcall	stringdir
  4295  1222  00CB               	movwf	??_fround+5
  4296  1223  160A  158A  200A  160A  118A  	fcall	stringdir
  4297  1228  00CC               	movwf	??_fround+6
  4298  1229  084C               	movf	??_fround+6,w
  4299  122A  00AB               	movwf	___flmul@b+3
  4300  122B  084B               	movf	??_fround+5,w
  4301  122C  00AA               	movwf	___flmul@b+2
  4302  122D  084A               	movf	??_fround+4,w
  4303  122E  00A9               	movwf	___flmul@b+1
  4304  122F  0849               	movf	??_fround+3,w
  4305  1230  00A8               	movwf	___flmul@b
  4306  1231  0854               	movf	_fround$1231+3,w
  4307  1232  00AF               	movwf	___flmul@a+3
  4308  1233  0853               	movf	_fround$1231+2,w
  4309  1234  00AE               	movwf	___flmul@a+2
  4310  1235  0852               	movf	_fround$1231+1,w
  4311  1236  00AD               	movwf	___flmul@a+1
  4312  1237  0851               	movf	_fround$1231,w
  4313  1238  00AC               	movwf	___flmul@a
  4314  1239  120A  158A  213C  160A  118A  	fcall	___flmul
  4315  123E  1283               	bcf	3,5	;RP0=0, select bank0
  4316  123F  1303               	bcf	3,6	;RP1=0, select bank0
  4317  1240  082B               	movf	?___flmul+3,w
  4318  1241  00C5               	movwf	?_fround+3
  4319  1242  082A               	movf	?___flmul+2,w
  4320  1243  00C4               	movwf	?_fround+2
  4321  1244  0829               	movf	?___flmul+1,w
  4322  1245  00C3               	movwf	?_fround+1
  4323  1246  0828               	movf	?___flmul,w
  4324  1247  00C2               	movwf	?_fround
  4325  1248  2A8C               	goto	l313
  4326  1249                     l2923:	
  4327                           
  4328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4329  1249  303F               	movlw	63
  4330  124A  00AB               	movwf	___flmul@b+3
  4331  124B  3000               	movlw	0
  4332  124C  00AA               	movwf	___flmul@b+2
  4333  124D  3000               	movlw	0
  4334  124E  00A9               	movwf	___flmul@b+1
  4335  124F  3000               	movlw	0
  4336  1250  00A8               	movwf	___flmul@b
  4337  1251  0855               	movf	fround@prec,w
  4338  1252  00C6               	movwf	??_fround
  4339  1253  3001               	movlw	1
  4340  1254                     u4205:	
  4341  1254  1003               	clrc
  4342  1255  0DC6               	rlf	??_fround,f
  4343  1256  3EFF               	addlw	-1
  4344  1257  1D03               	skipz
  4345  1258  2A54               	goto	u4205
  4346  1259  1003               	clrc
  4347  125A  0D46               	rlf	??_fround,w
  4348  125B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4349  125C  0084               	movwf	4
  4350  125D  160A  158A  200A  160A  118A  	fcall	stringdir
  4351  1262  00C7               	movwf	??_fround+1
  4352  1263  160A  158A  200A  160A  118A  	fcall	stringdir
  4353  1268  00C8               	movwf	??_fround+2
  4354  1269  160A  158A  200A  160A  118A  	fcall	stringdir
  4355  126E  00C9               	movwf	??_fround+3
  4356  126F  160A  158A  200A  160A  118A  	fcall	stringdir
  4357  1274  00CA               	movwf	??_fround+4
  4358  1275  084A               	movf	??_fround+4,w
  4359  1276  00AF               	movwf	___flmul@a+3
  4360  1277  0849               	movf	??_fround+3,w
  4361  1278  00AE               	movwf	___flmul@a+2
  4362  1279  0848               	movf	??_fround+2,w
  4363  127A  00AD               	movwf	___flmul@a+1
  4364  127B  0847               	movf	??_fround+1,w
  4365  127C  00AC               	movwf	___flmul@a
  4366  127D  120A  158A  213C  160A  118A  	fcall	___flmul
  4367  1282  1283               	bcf	3,5	;RP0=0, select bank0
  4368  1283  1303               	bcf	3,6	;RP1=0, select bank0
  4369  1284  082B               	movf	?___flmul+3,w
  4370  1285  00C5               	movwf	?_fround+3
  4371  1286  082A               	movf	?___flmul+2,w
  4372  1287  00C4               	movwf	?_fround+2
  4373  1288  0829               	movf	?___flmul+1,w
  4374  1289  00C3               	movwf	?_fround+1
  4375  128A  0828               	movf	?___flmul,w
  4376  128B  00C2               	movwf	?_fround
  4377  128C                     l313:	
  4378  128C  0008               	return
  4379  128D                     __end_of_fround:	
  4380                           
  4381                           	psect	text8
  4382  1A9B                     __ptext8:	
  4383 ;; *************** function ___lwmod *****************
  4384 ;; Defined at:
  4385 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4386 ;; Parameters:    Size  Location     Type
  4387 ;;  divisor         2    3[COMMON] unsigned int 
  4388 ;;  dividend        2    5[COMMON] unsigned int 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  counter         1    8[COMMON] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  2    3[COMMON] unsigned int 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4400 ;;      Params:         4       0       0       0       0
  4401 ;;      Locals:         1       0       0       0       0
  4402 ;;      Temps:          1       0       0       0       0
  4403 ;;      Totals:         6       0       0       0       0
  4404 ;;Total ram usage:        6 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    1
  4407 ;; This function calls:
  4408 ;;		Nothing
  4409 ;; This function is called by:
  4410 ;;		_fround
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           
  4415                           ;psect for function ___lwmod
  4416  1A9B                     ___lwmod:	
  4417  1A9B                     l2533:	
  4418                           ;incstack = 0
  4419                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4420                           
  4421  1A9B  0873               	movf	___lwmod@divisor,w
  4422  1A9C  0474               	iorwf	___lwmod@divisor+1,w
  4423  1A9D  1903               	btfsc	3,2
  4424  1A9E  2AA0               	goto	u3231
  4425  1A9F  2AA1               	goto	u3230
  4426  1AA0                     u3231:	
  4427  1AA0  2AD0               	goto	l2551
  4428  1AA1                     u3230:	
  4429  1AA1                     l2535:	
  4430  1AA1  01F8               	clrf	___lwmod@counter
  4431  1AA2  0AF8               	incf	___lwmod@counter,f
  4432  1AA3  2AAF               	goto	l2541
  4433  1AA4                     l2537:	
  4434  1AA4  3001               	movlw	1
  4435  1AA5                     u3245:	
  4436  1AA5  1003               	clrc
  4437  1AA6  0DF3               	rlf	___lwmod@divisor,f
  4438  1AA7  0DF4               	rlf	___lwmod@divisor+1,f
  4439  1AA8  3EFF               	addlw	-1
  4440  1AA9  1D03               	skipz
  4441  1AAA  2AA5               	goto	u3245
  4442  1AAB                     l2539:	
  4443  1AAB  3001               	movlw	1
  4444  1AAC  00F7               	movwf	??___lwmod
  4445  1AAD  0877               	movf	??___lwmod,w
  4446  1AAE  07F8               	addwf	___lwmod@counter,f
  4447  1AAF                     l2541:	
  4448  1AAF  1FF4               	btfss	___lwmod@divisor+1,7
  4449  1AB0  2AB2               	goto	u3251
  4450  1AB1  2AB3               	goto	u3250
  4451  1AB2                     u3251:	
  4452  1AB2  2AA4               	goto	l2537
  4453  1AB3                     u3250:	
  4454  1AB3                     l2543:	
  4455  1AB3  0874               	movf	___lwmod@divisor+1,w
  4456  1AB4  0276               	subwf	___lwmod@dividend+1,w
  4457  1AB5  1D03               	skipz
  4458  1AB6  2AB9               	goto	u3265
  4459  1AB7  0873               	movf	___lwmod@divisor,w
  4460  1AB8  0275               	subwf	___lwmod@dividend,w
  4461  1AB9                     u3265:	
  4462  1AB9  1C03               	skipc
  4463  1ABA  2ABC               	goto	u3261
  4464  1ABB  2ABD               	goto	u3260
  4465  1ABC                     u3261:	
  4466  1ABC  2AC3               	goto	l2547
  4467  1ABD                     u3260:	
  4468  1ABD                     l2545:	
  4469  1ABD  0873               	movf	___lwmod@divisor,w
  4470  1ABE  02F5               	subwf	___lwmod@dividend,f
  4471  1ABF  0874               	movf	___lwmod@divisor+1,w
  4472  1AC0  1C03               	skipc
  4473  1AC1  03F6               	decf	___lwmod@dividend+1,f
  4474  1AC2  02F6               	subwf	___lwmod@dividend+1,f
  4475  1AC3                     l2547:	
  4476  1AC3  3001               	movlw	1
  4477  1AC4                     u3275:	
  4478  1AC4  1003               	clrc
  4479  1AC5  0CF4               	rrf	___lwmod@divisor+1,f
  4480  1AC6  0CF3               	rrf	___lwmod@divisor,f
  4481  1AC7  3EFF               	addlw	-1
  4482  1AC8  1D03               	skipz
  4483  1AC9  2AC4               	goto	u3275
  4484  1ACA                     l2549:	
  4485  1ACA  3001               	movlw	1
  4486  1ACB  02F8               	subwf	___lwmod@counter,f
  4487  1ACC  1D03               	btfss	3,2
  4488  1ACD  2ACF               	goto	u3281
  4489  1ACE  2AD0               	goto	u3280
  4490  1ACF                     u3281:	
  4491  1ACF  2AB3               	goto	l2543
  4492  1AD0                     u3280:	
  4493  1AD0                     l2551:	
  4494  1AD0  0876               	movf	___lwmod@dividend+1,w
  4495  1AD1  00F4               	movwf	?___lwmod+1
  4496  1AD2  0875               	movf	___lwmod@dividend,w
  4497  1AD3  00F3               	movwf	?___lwmod
  4498  1AD4                     l732:	
  4499  1AD4  0008               	return
  4500  1AD5                     __end_of___lwmod:	
  4501                           
  4502                           	psect	text9
  4503  07B8                     __ptext9:	
  4504 ;; *************** function ___lwdiv *****************
  4505 ;; Defined at:
  4506 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  divisor         2    0[BANK0 ] unsigned int 
  4509 ;;  dividend        2    2[BANK0 ] unsigned int 
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  quotient        2    4[BANK0 ] unsigned int 
  4512 ;;  counter         1    6[BANK0 ] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  2    0[BANK0 ] unsigned int 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/0
  4519 ;;		On exit  : 0/0
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4522 ;;      Params:         0       4       0       0       0
  4523 ;;      Locals:         0       3       0       0       0
  4524 ;;      Temps:          1       0       0       0       0
  4525 ;;      Totals:         1       7       0       0       0
  4526 ;;Total ram usage:        8 bytes
  4527 ;; Hardware stack levels used:    1
  4528 ;; Hardware stack levels required when called:    1
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_fround
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           
  4537                           ;psect for function ___lwdiv
  4538  07B8                     ___lwdiv:	
  4539  07B8                     l2507:	
  4540                           ;incstack = 0
  4541                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4542                           
  4543  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  4544  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  4545  07BA  01A4               	clrf	___lwdiv@quotient
  4546  07BB  01A5               	clrf	___lwdiv@quotient+1
  4547  07BC                     l2509:	
  4548  07BC  0820               	movf	___lwdiv@divisor,w
  4549  07BD  0421               	iorwf	___lwdiv@divisor+1,w
  4550  07BE  1903               	btfsc	3,2
  4551  07BF  2FC1               	goto	u3161
  4552  07C0  2FC2               	goto	u3160
  4553  07C1                     u3161:	
  4554  07C1  2FF9               	goto	l2529
  4555  07C2                     u3160:	
  4556  07C2                     l2511:	
  4557  07C2  01A6               	clrf	___lwdiv@counter
  4558  07C3  0AA6               	incf	___lwdiv@counter,f
  4559  07C4  2FD0               	goto	l2517
  4560  07C5                     l2513:	
  4561  07C5  3001               	movlw	1
  4562  07C6                     u3175:	
  4563  07C6  1003               	clrc
  4564  07C7  0DA0               	rlf	___lwdiv@divisor,f
  4565  07C8  0DA1               	rlf	___lwdiv@divisor+1,f
  4566  07C9  3EFF               	addlw	-1
  4567  07CA  1D03               	skipz
  4568  07CB  2FC6               	goto	u3175
  4569  07CC                     l2515:	
  4570  07CC  3001               	movlw	1
  4571  07CD  00F9               	movwf	??___lwdiv
  4572  07CE  0879               	movf	??___lwdiv,w
  4573  07CF  07A6               	addwf	___lwdiv@counter,f
  4574  07D0                     l2517:	
  4575  07D0  1FA1               	btfss	___lwdiv@divisor+1,7
  4576  07D1  2FD3               	goto	u3181
  4577  07D2  2FD4               	goto	u3180
  4578  07D3                     u3181:	
  4579  07D3  2FC5               	goto	l2513
  4580  07D4                     u3180:	
  4581  07D4                     l2519:	
  4582  07D4  3001               	movlw	1
  4583  07D5                     u3195:	
  4584  07D5  1003               	clrc
  4585  07D6  0DA4               	rlf	___lwdiv@quotient,f
  4586  07D7  0DA5               	rlf	___lwdiv@quotient+1,f
  4587  07D8  3EFF               	addlw	-1
  4588  07D9  1D03               	skipz
  4589  07DA  2FD5               	goto	u3195
  4590  07DB  0821               	movf	___lwdiv@divisor+1,w
  4591  07DC  0223               	subwf	___lwdiv@dividend+1,w
  4592  07DD  1D03               	skipz
  4593  07DE  2FE1               	goto	u3205
  4594  07DF  0820               	movf	___lwdiv@divisor,w
  4595  07E0  0222               	subwf	___lwdiv@dividend,w
  4596  07E1                     u3205:	
  4597  07E1  1C03               	skipc
  4598  07E2  2FE4               	goto	u3201
  4599  07E3  2FE5               	goto	u3200
  4600  07E4                     u3201:	
  4601  07E4  2FEC               	goto	l2525
  4602  07E5                     u3200:	
  4603  07E5                     l2521:	
  4604  07E5  0820               	movf	___lwdiv@divisor,w
  4605  07E6  02A2               	subwf	___lwdiv@dividend,f
  4606  07E7  0821               	movf	___lwdiv@divisor+1,w
  4607  07E8  1C03               	skipc
  4608  07E9  03A3               	decf	___lwdiv@dividend+1,f
  4609  07EA  02A3               	subwf	___lwdiv@dividend+1,f
  4610  07EB                     l2523:	
  4611  07EB  1424               	bsf	___lwdiv@quotient,0
  4612  07EC                     l2525:	
  4613  07EC  3001               	movlw	1
  4614  07ED                     u3215:	
  4615  07ED  1003               	clrc
  4616  07EE  0CA1               	rrf	___lwdiv@divisor+1,f
  4617  07EF  0CA0               	rrf	___lwdiv@divisor,f
  4618  07F0  3EFF               	addlw	-1
  4619  07F1  1D03               	skipz
  4620  07F2  2FED               	goto	u3215
  4621  07F3                     l2527:	
  4622  07F3  3001               	movlw	1
  4623  07F4  02A6               	subwf	___lwdiv@counter,f
  4624  07F5  1D03               	btfss	3,2
  4625  07F6  2FF8               	goto	u3221
  4626  07F7  2FF9               	goto	u3220
  4627  07F8                     u3221:	
  4628  07F8  2FD4               	goto	l2519
  4629  07F9                     u3220:	
  4630  07F9                     l2529:	
  4631  07F9  0825               	movf	___lwdiv@quotient+1,w
  4632  07FA  00A1               	movwf	?___lwdiv+1
  4633  07FB  0824               	movf	___lwdiv@quotient,w
  4634  07FC  00A0               	movwf	?___lwdiv
  4635  07FD                     l722:	
  4636  07FD  0008               	return
  4637  07FE                     __end_of___lwdiv:	
  4638                           
  4639                           	psect	text10
  4640  093C                     __ptext10:	
  4641 ;; *************** function ___flmul *****************
  4642 ;; Defined at:
  4643 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  b               4    8[BANK0 ] unsigned int 
  4646 ;;  a               4   12[BANK0 ] unsigned int 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  prod            4   28[BANK0 ] struct .
  4649 ;;  grs             4   22[BANK0 ] unsigned long 
  4650 ;;  temp            2   32[BANK0 ] struct .
  4651 ;;  bexp            1   27[BANK0 ] unsigned char 
  4652 ;;  aexp            1   26[BANK0 ] unsigned char 
  4653 ;;  sign            1   21[BANK0 ] unsigned char 
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  4    8[BANK0 ] unsigned char 
  4656 ;; Registers used:
  4657 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4663 ;;      Params:         0       8       0       0       0
  4664 ;;      Locals:         0      13       0       0       0
  4665 ;;      Temps:          0       5       0       0       0
  4666 ;;      Totals:         0      26       0       0       0
  4667 ;;Total ram usage:       26 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    2
  4670 ;; This function calls:
  4671 ;;		__Umul8_16
  4672 ;; This function is called by:
  4673 ;;		_main
  4674 ;;		_fround
  4675 ;;		_scale
  4676 ;;		_sprintf
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           
  4681                           ;psect for function ___flmul
  4682  093C                     ___flmul:	
  4683  093C                     l2749:	
  4684                           ;incstack = 0
  4685                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4686                           
  4687  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4688  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4689  093E  082B               	movf	___flmul@b+3,w
  4690  093F  3980               	andlw	128
  4691  0940  00B0               	movwf	??___flmul
  4692  0941  0830               	movf	??___flmul,w
  4693  0942  00B5               	movwf	___flmul@sign
  4694  0943                     l2751:	
  4695  0943  082B               	movf	___flmul@b+3,w
  4696  0944  00B0               	movwf	??___flmul
  4697  0945  0730               	addwf	??___flmul,w
  4698  0946  00B1               	movwf	??___flmul+1
  4699  0947  0831               	movf	??___flmul+1,w
  4700  0948  00BB               	movwf	___flmul@bexp
  4701  0949                     l2753:	
  4702  0949  1FAA               	btfss	___flmul@b+2,7
  4703  094A  294C               	goto	u3751
  4704  094B  294D               	goto	u3750
  4705  094C                     u3751:	
  4706  094C  294E               	goto	l2757
  4707  094D                     u3750:	
  4708  094D                     l2755:	
  4709  094D  143B               	bsf	___flmul@bexp,0
  4710  094E                     l2757:	
  4711  094E  083B               	movf	___flmul@bexp,w
  4712  094F  1903               	btfsc	3,2
  4713  0950  2952               	goto	u3761
  4714  0951  2953               	goto	u3760
  4715  0952                     u3761:	
  4716  0952  2962               	goto	l2765
  4717  0953                     u3760:	
  4718  0953                     l2759:	
  4719  0953  0A3B               	incf	___flmul@bexp,w
  4720  0954  1D03               	btfss	3,2
  4721  0955  2957               	goto	u3771
  4722  0956  2958               	goto	u3770
  4723  0957                     u3771:	
  4724  0957  2960               	goto	l2763
  4725  0958                     u3770:	
  4726  0958                     l2761:	
  4727  0958  3000               	movlw	0
  4728  0959  00AB               	movwf	___flmul@b+3
  4729  095A  3000               	movlw	0
  4730  095B  00AA               	movwf	___flmul@b+2
  4731  095C  3000               	movlw	0
  4732  095D  00A9               	movwf	___flmul@b+1
  4733  095E  3000               	movlw	0
  4734  095F  00A8               	movwf	___flmul@b
  4735  0960                     l2763:	
  4736  0960  17AA               	bsf	___flmul@b+2,7
  4737  0961  296A               	goto	l2767
  4738  0962                     l2765:	
  4739  0962  3000               	movlw	0
  4740  0963  00AB               	movwf	___flmul@b+3
  4741  0964  3000               	movlw	0
  4742  0965  00AA               	movwf	___flmul@b+2
  4743  0966  3000               	movlw	0
  4744  0967  00A9               	movwf	___flmul@b+1
  4745  0968  3000               	movlw	0
  4746  0969  00A8               	movwf	___flmul@b
  4747  096A                     l2767:	
  4748  096A  082F               	movf	___flmul@a+3,w
  4749  096B  3980               	andlw	128
  4750  096C  00B0               	movwf	??___flmul
  4751  096D  0830               	movf	??___flmul,w
  4752  096E  06B5               	xorwf	___flmul@sign,f
  4753  096F                     l2769:	
  4754  096F  082F               	movf	___flmul@a+3,w
  4755  0970  00B0               	movwf	??___flmul
  4756  0971  0730               	addwf	??___flmul,w
  4757  0972  00B1               	movwf	??___flmul+1
  4758  0973  0831               	movf	??___flmul+1,w
  4759  0974  00BA               	movwf	___flmul@aexp
  4760  0975                     l2771:	
  4761  0975  1FAE               	btfss	___flmul@a+2,7
  4762  0976  2978               	goto	u3781
  4763  0977  2979               	goto	u3780
  4764  0978                     u3781:	
  4765  0978  297A               	goto	l2775
  4766  0979                     u3780:	
  4767  0979                     l2773:	
  4768  0979  143A               	bsf	___flmul@aexp,0
  4769  097A                     l2775:	
  4770  097A  083A               	movf	___flmul@aexp,w
  4771  097B  1903               	btfsc	3,2
  4772  097C  297E               	goto	u3791
  4773  097D  297F               	goto	u3790
  4774  097E                     u3791:	
  4775  097E  298E               	goto	l2783
  4776  097F                     u3790:	
  4777  097F                     l2777:	
  4778  097F  0A3A               	incf	___flmul@aexp,w
  4779  0980  1D03               	btfss	3,2
  4780  0981  2983               	goto	u3801
  4781  0982  2984               	goto	u3800
  4782  0983                     u3801:	
  4783  0983  298C               	goto	l2781
  4784  0984                     u3800:	
  4785  0984                     l2779:	
  4786  0984  3000               	movlw	0
  4787  0985  00AF               	movwf	___flmul@a+3
  4788  0986  3000               	movlw	0
  4789  0987  00AE               	movwf	___flmul@a+2
  4790  0988  3000               	movlw	0
  4791  0989  00AD               	movwf	___flmul@a+1
  4792  098A  3000               	movlw	0
  4793  098B  00AC               	movwf	___flmul@a
  4794  098C                     l2781:	
  4795  098C  17AE               	bsf	___flmul@a+2,7
  4796  098D  2996               	goto	l2785
  4797  098E                     l2783:	
  4798  098E  3000               	movlw	0
  4799  098F  00AF               	movwf	___flmul@a+3
  4800  0990  3000               	movlw	0
  4801  0991  00AE               	movwf	___flmul@a+2
  4802  0992  3000               	movlw	0
  4803  0993  00AD               	movwf	___flmul@a+1
  4804  0994  3000               	movlw	0
  4805  0995  00AC               	movwf	___flmul@a
  4806  0996                     l2785:	
  4807  0996  083A               	movf	___flmul@aexp,w
  4808  0997  1903               	btfsc	3,2
  4809  0998  299A               	goto	u3811
  4810  0999  299B               	goto	u3810
  4811  099A                     u3811:	
  4812  099A  29A0               	goto	l2789
  4813  099B                     u3810:	
  4814  099B                     l2787:	
  4815  099B  083B               	movf	___flmul@bexp,w
  4816  099C  1D03               	btfss	3,2
  4817  099D  299F               	goto	u3821
  4818  099E  29A0               	goto	u3820
  4819  099F                     u3821:	
  4820  099F  29A9               	goto	l2793
  4821  09A0                     u3820:	
  4822  09A0                     l2789:	
  4823  09A0  3000               	movlw	0
  4824  09A1  00AB               	movwf	?___flmul+3
  4825  09A2  3000               	movlw	0
  4826  09A3  00AA               	movwf	?___flmul+2
  4827  09A4  3000               	movlw	0
  4828  09A5  00A9               	movwf	?___flmul+1
  4829  09A6  3000               	movlw	0
  4830  09A7  00A8               	movwf	?___flmul
  4831  09A8  2C9C               	goto	l839
  4832  09A9                     l2793:	
  4833  09A9  0828               	movf	___flmul@b,w
  4834  09AA  00B0               	movwf	??___flmul
  4835  09AB  0830               	movf	??___flmul,w
  4836  09AC  00F3               	movwf	__Umul8_16@multiplicand
  4837  09AD  082E               	movf	___flmul@a+2,w
  4838  09AE  160A  158A  2212  120A  158A  	fcall	__Umul8_16
  4839  09B3  0874               	movf	?__Umul8_16+1,w
  4840  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4841  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4842  09B6  00C1               	movwf	___flmul@temp+1
  4843  09B7  0873               	movf	?__Umul8_16,w
  4844  09B8  00C0               	movwf	___flmul@temp
  4845  09B9                     l2795:	
  4846  09B9  0840               	movf	___flmul@temp,w
  4847  09BA  00B0               	movwf	??___flmul
  4848  09BB  01B1               	clrf	??___flmul+1
  4849  09BC  01B2               	clrf	??___flmul+2
  4850  09BD  01B3               	clrf	??___flmul+3
  4851  09BE  0833               	movf	??___flmul+3,w
  4852  09BF  00B9               	movwf	___flmul@grs+3
  4853  09C0  0832               	movf	??___flmul+2,w
  4854  09C1  00B8               	movwf	___flmul@grs+2
  4855  09C2  0831               	movf	??___flmul+1,w
  4856  09C3  00B7               	movwf	___flmul@grs+1
  4857  09C4  0830               	movf	??___flmul,w
  4858  09C5  00B6               	movwf	___flmul@grs
  4859  09C6                     l2797:	
  4860  09C6  0841               	movf	___flmul@temp+1,w
  4861  09C7  00B0               	movwf	??___flmul
  4862  09C8  01B1               	clrf	??___flmul+1
  4863  09C9  01B2               	clrf	??___flmul+2
  4864  09CA  01B3               	clrf	??___flmul+3
  4865  09CB  0833               	movf	??___flmul+3,w
  4866  09CC  00BF               	movwf	___flmul@prod+3
  4867  09CD  0832               	movf	??___flmul+2,w
  4868  09CE  00BE               	movwf	___flmul@prod+2
  4869  09CF  0831               	movf	??___flmul+1,w
  4870  09D0  00BD               	movwf	___flmul@prod+1
  4871  09D1  0830               	movf	??___flmul,w
  4872  09D2  00BC               	movwf	___flmul@prod
  4873  09D3  0829               	movf	___flmul@b+1,w
  4874  09D4  00B0               	movwf	??___flmul
  4875  09D5  0830               	movf	??___flmul,w
  4876  09D6  00F3               	movwf	__Umul8_16@multiplicand
  4877  09D7  082D               	movf	___flmul@a+1,w
  4878  09D8  160A  158A  2212  120A  158A  	fcall	__Umul8_16
  4879  09DD  0874               	movf	?__Umul8_16+1,w
  4880  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4881  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4882  09E0  00C1               	movwf	___flmul@temp+1
  4883  09E1  0873               	movf	?__Umul8_16,w
  4884  09E2  00C0               	movwf	___flmul@temp
  4885  09E3                     l2799:	
  4886  09E3  0840               	movf	___flmul@temp,w
  4887  09E4  00B0               	movwf	??___flmul
  4888  09E5  01B1               	clrf	??___flmul+1
  4889  09E6  01B2               	clrf	??___flmul+2
  4890  09E7  01B3               	clrf	??___flmul+3
  4891  09E8  0830               	movf	??___flmul,w
  4892  09E9  07B6               	addwf	___flmul@grs,f
  4893  09EA  0831               	movf	??___flmul+1,w
  4894  09EB  1103               	clrz
  4895  09EC  1803               	skipnc
  4896  09ED  3E01               	addlw	1
  4897  09EE  1903               	skipnz
  4898  09EF  29F1               	goto	u3831
  4899  09F0  07B7               	addwf	___flmul@grs+1,f
  4900  09F1                     u3831:	
  4901  09F1  0832               	movf	??___flmul+2,w
  4902  09F2  1103               	clrz
  4903  09F3  1803               	skipnc
  4904  09F4  3E01               	addlw	1
  4905  09F5  1903               	skipnz
  4906  09F6  29F8               	goto	u3832
  4907  09F7  07B8               	addwf	___flmul@grs+2,f
  4908  09F8                     u3832:	
  4909  09F8  0833               	movf	??___flmul+3,w
  4910  09F9  1103               	clrz
  4911  09FA  1803               	skipnc
  4912  09FB  3E01               	addlw	1
  4913  09FC  1903               	skipnz
  4914  09FD  29FF               	goto	u3833
  4915  09FE  07B9               	addwf	___flmul@grs+3,f
  4916  09FF                     u3833:	
  4917  09FF                     l2801:	
  4918  09FF  0841               	movf	___flmul@temp+1,w
  4919  0A00  00B0               	movwf	??___flmul
  4920  0A01  01B1               	clrf	??___flmul+1
  4921  0A02  01B2               	clrf	??___flmul+2
  4922  0A03  01B3               	clrf	??___flmul+3
  4923  0A04  0830               	movf	??___flmul,w
  4924  0A05  07BC               	addwf	___flmul@prod,f
  4925  0A06  0831               	movf	??___flmul+1,w
  4926  0A07  1103               	clrz
  4927  0A08  1803               	skipnc
  4928  0A09  3E01               	addlw	1
  4929  0A0A  1903               	skipnz
  4930  0A0B  2A0D               	goto	u3841
  4931  0A0C  07BD               	addwf	___flmul@prod+1,f
  4932  0A0D                     u3841:	
  4933  0A0D  0832               	movf	??___flmul+2,w
  4934  0A0E  1103               	clrz
  4935  0A0F  1803               	skipnc
  4936  0A10  3E01               	addlw	1
  4937  0A11  1903               	skipnz
  4938  0A12  2A14               	goto	u3842
  4939  0A13  07BE               	addwf	___flmul@prod+2,f
  4940  0A14                     u3842:	
  4941  0A14  0833               	movf	??___flmul+3,w
  4942  0A15  1103               	clrz
  4943  0A16  1803               	skipnc
  4944  0A17  3E01               	addlw	1
  4945  0A18  1903               	skipnz
  4946  0A19  2A1B               	goto	u3843
  4947  0A1A  07BF               	addwf	___flmul@prod+3,f
  4948  0A1B                     u3843:	
  4949  0A1B  082A               	movf	___flmul@b+2,w
  4950  0A1C  00B0               	movwf	??___flmul
  4951  0A1D  0830               	movf	??___flmul,w
  4952  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  4953  0A1F  082C               	movf	___flmul@a,w
  4954  0A20  160A  158A  2212  120A  158A  	fcall	__Umul8_16
  4955  0A25  0874               	movf	?__Umul8_16+1,w
  4956  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4957  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4958  0A28  00C1               	movwf	___flmul@temp+1
  4959  0A29  0873               	movf	?__Umul8_16,w
  4960  0A2A  00C0               	movwf	___flmul@temp
  4961  0A2B                     l2803:	
  4962  0A2B  0840               	movf	___flmul@temp,w
  4963  0A2C  00B0               	movwf	??___flmul
  4964  0A2D  01B1               	clrf	??___flmul+1
  4965  0A2E  01B2               	clrf	??___flmul+2
  4966  0A2F  01B3               	clrf	??___flmul+3
  4967  0A30  0830               	movf	??___flmul,w
  4968  0A31  07B6               	addwf	___flmul@grs,f
  4969  0A32  0831               	movf	??___flmul+1,w
  4970  0A33  1103               	clrz
  4971  0A34  1803               	skipnc
  4972  0A35  3E01               	addlw	1
  4973  0A36  1903               	skipnz
  4974  0A37  2A39               	goto	u3851
  4975  0A38  07B7               	addwf	___flmul@grs+1,f
  4976  0A39                     u3851:	
  4977  0A39  0832               	movf	??___flmul+2,w
  4978  0A3A  1103               	clrz
  4979  0A3B  1803               	skipnc
  4980  0A3C  3E01               	addlw	1
  4981  0A3D  1903               	skipnz
  4982  0A3E  2A40               	goto	u3852
  4983  0A3F  07B8               	addwf	___flmul@grs+2,f
  4984  0A40                     u3852:	
  4985  0A40  0833               	movf	??___flmul+3,w
  4986  0A41  1103               	clrz
  4987  0A42  1803               	skipnc
  4988  0A43  3E01               	addlw	1
  4989  0A44  1903               	skipnz
  4990  0A45  2A47               	goto	u3853
  4991  0A46  07B9               	addwf	___flmul@grs+3,f
  4992  0A47                     u3853:	
  4993  0A47                     l2805:	
  4994  0A47  0841               	movf	___flmul@temp+1,w
  4995  0A48  00B0               	movwf	??___flmul
  4996  0A49  01B1               	clrf	??___flmul+1
  4997  0A4A  01B2               	clrf	??___flmul+2
  4998  0A4B  01B3               	clrf	??___flmul+3
  4999  0A4C  0830               	movf	??___flmul,w
  5000  0A4D  07BC               	addwf	___flmul@prod,f
  5001  0A4E  0831               	movf	??___flmul+1,w
  5002  0A4F  1103               	clrz
  5003  0A50  1803               	skipnc
  5004  0A51  3E01               	addlw	1
  5005  0A52  1903               	skipnz
  5006  0A53  2A55               	goto	u3861
  5007  0A54  07BD               	addwf	___flmul@prod+1,f
  5008  0A55                     u3861:	
  5009  0A55  0832               	movf	??___flmul+2,w
  5010  0A56  1103               	clrz
  5011  0A57  1803               	skipnc
  5012  0A58  3E01               	addlw	1
  5013  0A59  1903               	skipnz
  5014  0A5A  2A5C               	goto	u3862
  5015  0A5B  07BE               	addwf	___flmul@prod+2,f
  5016  0A5C                     u3862:	
  5017  0A5C  0833               	movf	??___flmul+3,w
  5018  0A5D  1103               	clrz
  5019  0A5E  1803               	skipnc
  5020  0A5F  3E01               	addlw	1
  5021  0A60  1903               	skipnz
  5022  0A61  2A63               	goto	u3863
  5023  0A62  07BF               	addwf	___flmul@prod+3,f
  5024  0A63                     u3863:	
  5025  0A63                     l2807:	
  5026  0A63  3008               	movlw	8
  5027  0A64  00B0               	movwf	??___flmul
  5028  0A65                     u3875:	
  5029  0A65  1003               	clrc
  5030  0A66  0DB6               	rlf	___flmul@grs,f
  5031  0A67  0DB7               	rlf	___flmul@grs+1,f
  5032  0A68  0DB8               	rlf	___flmul@grs+2,f
  5033  0A69  0DB9               	rlf	___flmul@grs+3,f
  5034  0A6A  0BB0               	decfsz	??___flmul,f
  5035  0A6B  2A65               	goto	u3875
  5036  0A6C                     l2809:	
  5037  0A6C  0829               	movf	___flmul@b+1,w
  5038  0A6D  00B0               	movwf	??___flmul
  5039  0A6E  0830               	movf	??___flmul,w
  5040  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  5041  0A70  082C               	movf	___flmul@a,w
  5042  0A71  160A  158A  2212  120A  158A  	fcall	__Umul8_16
  5043  0A76  0874               	movf	?__Umul8_16+1,w
  5044  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5045  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5046  0A79  00C1               	movwf	___flmul@temp+1
  5047  0A7A  0873               	movf	?__Umul8_16,w
  5048  0A7B  00C0               	movwf	___flmul@temp
  5049  0A7C                     l2811:	
  5050  0A7C  0840               	movf	___flmul@temp,w
  5051  0A7D  00B0               	movwf	??___flmul
  5052  0A7E  0841               	movf	___flmul@temp+1,w
  5053  0A7F  00B1               	movwf	??___flmul+1
  5054  0A80  01B2               	clrf	??___flmul+2
  5055  0A81  01B3               	clrf	??___flmul+3
  5056  0A82  0830               	movf	??___flmul,w
  5057  0A83  07B6               	addwf	___flmul@grs,f
  5058  0A84  0831               	movf	??___flmul+1,w
  5059  0A85  1103               	clrz
  5060  0A86  1803               	skipnc
  5061  0A87  3E01               	addlw	1
  5062  0A88  1903               	skipnz
  5063  0A89  2A8B               	goto	u3881
  5064  0A8A  07B7               	addwf	___flmul@grs+1,f
  5065  0A8B                     u3881:	
  5066  0A8B  0832               	movf	??___flmul+2,w
  5067  0A8C  1103               	clrz
  5068  0A8D  1803               	skipnc
  5069  0A8E  3E01               	addlw	1
  5070  0A8F  1903               	skipnz
  5071  0A90  2A92               	goto	u3882
  5072  0A91  07B8               	addwf	___flmul@grs+2,f
  5073  0A92                     u3882:	
  5074  0A92  0833               	movf	??___flmul+3,w
  5075  0A93  1103               	clrz
  5076  0A94  1803               	skipnc
  5077  0A95  3E01               	addlw	1
  5078  0A96  1903               	skipnz
  5079  0A97  2A99               	goto	u3883
  5080  0A98  07B9               	addwf	___flmul@grs+3,f
  5081  0A99                     u3883:	
  5082  0A99                     l2813:	
  5083  0A99  0828               	movf	___flmul@b,w
  5084  0A9A  00B0               	movwf	??___flmul
  5085  0A9B  0830               	movf	??___flmul,w
  5086  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  5087  0A9D  082D               	movf	___flmul@a+1,w
  5088  0A9E  160A  158A  2212  120A  158A  	fcall	__Umul8_16
  5089  0AA3  0874               	movf	?__Umul8_16+1,w
  5090  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5091  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  5092  0AA6  00C1               	movwf	___flmul@temp+1
  5093  0AA7  0873               	movf	?__Umul8_16,w
  5094  0AA8  00C0               	movwf	___flmul@temp
  5095  0AA9                     l2815:	
  5096  0AA9  0840               	movf	___flmul@temp,w
  5097  0AAA  00B0               	movwf	??___flmul
  5098  0AAB  0841               	movf	___flmul@temp+1,w
  5099  0AAC  00B1               	movwf	??___flmul+1
  5100  0AAD  01B2               	clrf	??___flmul+2
  5101  0AAE  01B3               	clrf	??___flmul+3
  5102  0AAF  0830               	movf	??___flmul,w
  5103  0AB0  07B6               	addwf	___flmul@grs,f
  5104  0AB1  0831               	movf	??___flmul+1,w
  5105  0AB2  1103               	clrz
  5106  0AB3  1803               	skipnc
  5107  0AB4  3E01               	addlw	1
  5108  0AB5  1903               	skipnz
  5109  0AB6  2AB8               	goto	u3891
  5110  0AB7  07B7               	addwf	___flmul@grs+1,f
  5111  0AB8                     u3891:	
  5112  0AB8  0832               	movf	??___flmul+2,w
  5113  0AB9  1103               	clrz
  5114  0ABA  1803               	skipnc
  5115  0ABB  3E01               	addlw	1
  5116  0ABC  1903               	skipnz
  5117  0ABD  2ABF               	goto	u3892
  5118  0ABE  07B8               	addwf	___flmul@grs+2,f
  5119  0ABF                     u3892:	
  5120  0ABF  0833               	movf	??___flmul+3,w
  5121  0AC0  1103               	clrz
  5122  0AC1  1803               	skipnc
  5123  0AC2  3E01               	addlw	1
  5124  0AC3  1903               	skipnz
  5125  0AC4  2AC6               	goto	u3893
  5126  0AC5  07B9               	addwf	___flmul@grs+3,f
  5127  0AC6                     u3893:	
  5128  0AC6                     l2817:	
  5129  0AC6  3008               	movlw	8
  5130  0AC7  00B0               	movwf	??___flmul
  5131  0AC8                     u3905:	
  5132  0AC8  1003               	clrc
  5133  0AC9  0DB6               	rlf	___flmul@grs,f
  5134  0ACA  0DB7               	rlf	___flmul@grs+1,f
  5135  0ACB  0DB8               	rlf	___flmul@grs+2,f
  5136  0ACC  0DB9               	rlf	___flmul@grs+3,f
  5137  0ACD  0BB0               	decfsz	??___flmul,f
  5138  0ACE  2AC8               	goto	u3905
  5139  0ACF  0828               	movf	___flmul@b,w
  5140  0AD0  00B0               	movwf	??___flmul
  5141  0AD1  0830               	movf	??___flmul,w
  5142  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  5143  0AD3  082C               	movf	___flmul@a,w
  5144  0AD4  160A  158A  2212  120A  158A  	fcall	__Umul8_16
  5145  0AD9  0874               	movf	?__Umul8_16+1,w
  5146  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5147  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5148  0ADC  00C1               	movwf	___flmul@temp+1
  5149  0ADD  0873               	movf	?__Umul8_16,w
  5150  0ADE  00C0               	movwf	___flmul@temp
  5151  0ADF                     l2819:	
  5152  0ADF  0840               	movf	___flmul@temp,w
  5153  0AE0  00B0               	movwf	??___flmul
  5154  0AE1  0841               	movf	___flmul@temp+1,w
  5155  0AE2  00B1               	movwf	??___flmul+1
  5156  0AE3  01B2               	clrf	??___flmul+2
  5157  0AE4  01B3               	clrf	??___flmul+3
  5158  0AE5  0830               	movf	??___flmul,w
  5159  0AE6  07B6               	addwf	___flmul@grs,f
  5160  0AE7  0831               	movf	??___flmul+1,w
  5161  0AE8  1103               	clrz
  5162  0AE9  1803               	skipnc
  5163  0AEA  3E01               	addlw	1
  5164  0AEB  1903               	skipnz
  5165  0AEC  2AEE               	goto	u3911
  5166  0AED  07B7               	addwf	___flmul@grs+1,f
  5167  0AEE                     u3911:	
  5168  0AEE  0832               	movf	??___flmul+2,w
  5169  0AEF  1103               	clrz
  5170  0AF0  1803               	skipnc
  5171  0AF1  3E01               	addlw	1
  5172  0AF2  1903               	skipnz
  5173  0AF3  2AF5               	goto	u3912
  5174  0AF4  07B8               	addwf	___flmul@grs+2,f
  5175  0AF5                     u3912:	
  5176  0AF5  0833               	movf	??___flmul+3,w
  5177  0AF6  1103               	clrz
  5178  0AF7  1803               	skipnc
  5179  0AF8  3E01               	addlw	1
  5180  0AF9  1903               	skipnz
  5181  0AFA  2AFC               	goto	u3913
  5182  0AFB  07B9               	addwf	___flmul@grs+3,f
  5183  0AFC                     u3913:	
  5184  0AFC                     l2821:	
  5185  0AFC  0829               	movf	___flmul@b+1,w
  5186  0AFD  00B0               	movwf	??___flmul
  5187  0AFE  0830               	movf	??___flmul,w
  5188  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  5189  0B00  082E               	movf	___flmul@a+2,w
  5190  0B01  160A  158A  2212  120A  158A  	fcall	__Umul8_16
  5191  0B06  0874               	movf	?__Umul8_16+1,w
  5192  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5193  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5194  0B09  00C1               	movwf	___flmul@temp+1
  5195  0B0A  0873               	movf	?__Umul8_16,w
  5196  0B0B  00C0               	movwf	___flmul@temp
  5197  0B0C  0840               	movf	___flmul@temp,w
  5198  0B0D  00B0               	movwf	??___flmul
  5199  0B0E  0841               	movf	___flmul@temp+1,w
  5200  0B0F  00B1               	movwf	??___flmul+1
  5201  0B10  01B2               	clrf	??___flmul+2
  5202  0B11  01B3               	clrf	??___flmul+3
  5203  0B12  0830               	movf	??___flmul,w
  5204  0B13  07BC               	addwf	___flmul@prod,f
  5205  0B14  0831               	movf	??___flmul+1,w
  5206  0B15  1103               	clrz
  5207  0B16  1803               	skipnc
  5208  0B17  3E01               	addlw	1
  5209  0B18  1903               	skipnz
  5210  0B19  2B1B               	goto	u3921
  5211  0B1A  07BD               	addwf	___flmul@prod+1,f
  5212  0B1B                     u3921:	
  5213  0B1B  0832               	movf	??___flmul+2,w
  5214  0B1C  1103               	clrz
  5215  0B1D  1803               	skipnc
  5216  0B1E  3E01               	addlw	1
  5217  0B1F  1903               	skipnz
  5218  0B20  2B22               	goto	u3922
  5219  0B21  07BE               	addwf	___flmul@prod+2,f
  5220  0B22                     u3922:	
  5221  0B22  0833               	movf	??___flmul+3,w
  5222  0B23  1103               	clrz
  5223  0B24  1803               	skipnc
  5224  0B25  3E01               	addlw	1
  5225  0B26  1903               	skipnz
  5226  0B27  2B29               	goto	u3923
  5227  0B28  07BF               	addwf	___flmul@prod+3,f
  5228  0B29                     u3923:	
  5229  0B29                     l2823:	
  5230  0B29  082A               	movf	___flmul@b+2,w
  5231  0B2A  00B0               	movwf	??___flmul
  5232  0B2B  0830               	movf	??___flmul,w
  5233  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  5234  0B2D  082D               	movf	___flmul@a+1,w
  5235  0B2E  160A  158A  2212  120A  158A  	fcall	__Umul8_16
  5236  0B33  0874               	movf	?__Umul8_16+1,w
  5237  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5238  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5239  0B36  00C1               	movwf	___flmul@temp+1
  5240  0B37  0873               	movf	?__Umul8_16,w
  5241  0B38  00C0               	movwf	___flmul@temp
  5242  0B39                     l2825:	
  5243  0B39  0840               	movf	___flmul@temp,w
  5244  0B3A  00B0               	movwf	??___flmul
  5245  0B3B  0841               	movf	___flmul@temp+1,w
  5246  0B3C  00B1               	movwf	??___flmul+1
  5247  0B3D  01B2               	clrf	??___flmul+2
  5248  0B3E  01B3               	clrf	??___flmul+3
  5249  0B3F  0830               	movf	??___flmul,w
  5250  0B40  07BC               	addwf	___flmul@prod,f
  5251  0B41  0831               	movf	??___flmul+1,w
  5252  0B42  1103               	clrz
  5253  0B43  1803               	skipnc
  5254  0B44  3E01               	addlw	1
  5255  0B45  1903               	skipnz
  5256  0B46  2B48               	goto	u3931
  5257  0B47  07BD               	addwf	___flmul@prod+1,f
  5258  0B48                     u3931:	
  5259  0B48  0832               	movf	??___flmul+2,w
  5260  0B49  1103               	clrz
  5261  0B4A  1803               	skipnc
  5262  0B4B  3E01               	addlw	1
  5263  0B4C  1903               	skipnz
  5264  0B4D  2B4F               	goto	u3932
  5265  0B4E  07BE               	addwf	___flmul@prod+2,f
  5266  0B4F                     u3932:	
  5267  0B4F  0833               	movf	??___flmul+3,w
  5268  0B50  1103               	clrz
  5269  0B51  1803               	skipnc
  5270  0B52  3E01               	addlw	1
  5271  0B53  1903               	skipnz
  5272  0B54  2B56               	goto	u3933
  5273  0B55  07BF               	addwf	___flmul@prod+3,f
  5274  0B56                     u3933:	
  5275  0B56  082A               	movf	___flmul@b+2,w
  5276  0B57  00B0               	movwf	??___flmul
  5277  0B58  0830               	movf	??___flmul,w
  5278  0B59  00F3               	movwf	__Umul8_16@multiplicand
  5279  0B5A  082E               	movf	___flmul@a+2,w
  5280  0B5B  160A  158A  2212  120A  158A  	fcall	__Umul8_16
  5281  0B60  0874               	movf	?__Umul8_16+1,w
  5282  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5283  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  5284  0B63  00C1               	movwf	___flmul@temp+1
  5285  0B64  0873               	movf	?__Umul8_16,w
  5286  0B65  00C0               	movwf	___flmul@temp
  5287  0B66                     l2827:	
  5288  0B66  0840               	movf	___flmul@temp,w
  5289  0B67  00B0               	movwf	??___flmul
  5290  0B68  0841               	movf	___flmul@temp+1,w
  5291  0B69  00B1               	movwf	??___flmul+1
  5292  0B6A  01B2               	clrf	??___flmul+2
  5293  0B6B  01B3               	clrf	??___flmul+3
  5294  0B6C  3008               	movlw	8
  5295  0B6D                     u3945:	
  5296  0B6D  1003               	clrc
  5297  0B6E  0DB0               	rlf	??___flmul,f
  5298  0B6F  0DB1               	rlf	??___flmul+1,f
  5299  0B70  0DB2               	rlf	??___flmul+2,f
  5300  0B71  0DB3               	rlf	??___flmul+3,f
  5301  0B72                     u3940:	
  5302  0B72  3EFF               	addlw	-1
  5303  0B73  1D03               	skipz
  5304  0B74  2B6D               	goto	u3945
  5305  0B75  0830               	movf	??___flmul,w
  5306  0B76  07BC               	addwf	___flmul@prod,f
  5307  0B77  0831               	movf	??___flmul+1,w
  5308  0B78  1103               	clrz
  5309  0B79  1803               	skipnc
  5310  0B7A  3E01               	addlw	1
  5311  0B7B  1903               	skipnz
  5312  0B7C  2B7E               	goto	u3951
  5313  0B7D  07BD               	addwf	___flmul@prod+1,f
  5314  0B7E                     u3951:	
  5315  0B7E  0832               	movf	??___flmul+2,w
  5316  0B7F  1103               	clrz
  5317  0B80  1803               	skipnc
  5318  0B81  3E01               	addlw	1
  5319  0B82  1903               	skipnz
  5320  0B83  2B85               	goto	u3952
  5321  0B84  07BE               	addwf	___flmul@prod+2,f
  5322  0B85                     u3952:	
  5323  0B85  0833               	movf	??___flmul+3,w
  5324  0B86  1103               	clrz
  5325  0B87  1803               	skipnc
  5326  0B88  3E01               	addlw	1
  5327  0B89  1903               	skipnz
  5328  0B8A  2B8C               	goto	u3953
  5329  0B8B  07BF               	addwf	___flmul@prod+3,f
  5330  0B8C                     u3953:	
  5331  0B8C                     l2829:	
  5332  0B8C  0836               	movf	___flmul@grs,w
  5333  0B8D  00B0               	movwf	??___flmul
  5334  0B8E  0837               	movf	___flmul@grs+1,w
  5335  0B8F  00B1               	movwf	??___flmul+1
  5336  0B90  0838               	movf	___flmul@grs+2,w
  5337  0B91  00B2               	movwf	??___flmul+2
  5338  0B92  0839               	movf	___flmul@grs+3,w
  5339  0B93  00B3               	movwf	??___flmul+3
  5340  0B94  3018               	movlw	24
  5341  0B95                     u3965:	
  5342  0B95  1003               	clrc
  5343  0B96  0CB3               	rrf	??___flmul+3,f
  5344  0B97  0CB2               	rrf	??___flmul+2,f
  5345  0B98  0CB1               	rrf	??___flmul+1,f
  5346  0B99  0CB0               	rrf	??___flmul,f
  5347  0B9A                     u3960:	
  5348  0B9A  3EFF               	addlw	-1
  5349  0B9B  1D03               	skipz
  5350  0B9C  2B95               	goto	u3965
  5351  0B9D  0830               	movf	??___flmul,w
  5352  0B9E  07BC               	addwf	___flmul@prod,f
  5353  0B9F  0831               	movf	??___flmul+1,w
  5354  0BA0  1103               	clrz
  5355  0BA1  1803               	skipnc
  5356  0BA2  3E01               	addlw	1
  5357  0BA3  1903               	skipnz
  5358  0BA4  2BA6               	goto	u3971
  5359  0BA5  07BD               	addwf	___flmul@prod+1,f
  5360  0BA6                     u3971:	
  5361  0BA6  0832               	movf	??___flmul+2,w
  5362  0BA7  1103               	clrz
  5363  0BA8  1803               	skipnc
  5364  0BA9  3E01               	addlw	1
  5365  0BAA  1903               	skipnz
  5366  0BAB  2BAD               	goto	u3972
  5367  0BAC  07BE               	addwf	___flmul@prod+2,f
  5368  0BAD                     u3972:	
  5369  0BAD  0833               	movf	??___flmul+3,w
  5370  0BAE  1103               	clrz
  5371  0BAF  1803               	skipnc
  5372  0BB0  3E01               	addlw	1
  5373  0BB1  1903               	skipnz
  5374  0BB2  2BB4               	goto	u3973
  5375  0BB3  07BF               	addwf	___flmul@prod+3,f
  5376  0BB4                     u3973:	
  5377  0BB4                     l2831:	
  5378  0BB4  3008               	movlw	8
  5379  0BB5  00B0               	movwf	??___flmul
  5380  0BB6                     u3985:	
  5381  0BB6  1003               	clrc
  5382  0BB7  0DB6               	rlf	___flmul@grs,f
  5383  0BB8  0DB7               	rlf	___flmul@grs+1,f
  5384  0BB9  0DB8               	rlf	___flmul@grs+2,f
  5385  0BBA  0DB9               	rlf	___flmul@grs+3,f
  5386  0BBB  0BB0               	decfsz	??___flmul,f
  5387  0BBC  2BB6               	goto	u3985
  5388  0BBD                     l2833:	
  5389  0BBD  083B               	movf	___flmul@bexp,w
  5390  0BBE  073A               	addwf	___flmul@aexp,w
  5391  0BBF  00B0               	movwf	??___flmul
  5392  0BC0  01B1               	clrf	??___flmul+1
  5393  0BC1  0DB1               	rlf	??___flmul+1,f
  5394  0BC2  0830               	movf	??___flmul,w
  5395  0BC3  3E82               	addlw	130
  5396  0BC4  00C0               	movwf	___flmul@temp
  5397  0BC5  0831               	movf	??___flmul+1,w
  5398  0BC6  1803               	skipnc
  5399  0BC7  3E01               	addlw	1
  5400  0BC8  3EFF               	addlw	255
  5401  0BC9  00C1               	movwf	___flmul@temp+1
  5402  0BCA  2BE8               	goto	l2845
  5403  0BCB                     l2835:	
  5404  0BCB  3001               	movlw	1
  5405  0BCC  00B0               	movwf	??___flmul
  5406  0BCD                     u3995:	
  5407  0BCD  1003               	clrc
  5408  0BCE  0DBC               	rlf	___flmul@prod,f
  5409  0BCF  0DBD               	rlf	___flmul@prod+1,f
  5410  0BD0  0DBE               	rlf	___flmul@prod+2,f
  5411  0BD1  0DBF               	rlf	___flmul@prod+3,f
  5412  0BD2  0BB0               	decfsz	??___flmul,f
  5413  0BD3  2BCD               	goto	u3995
  5414  0BD4                     l2837:	
  5415  0BD4  1FB9               	btfss	___flmul@grs+3,7
  5416  0BD5  2BD7               	goto	u4001
  5417  0BD6  2BD8               	goto	u4000
  5418  0BD7                     u4001:	
  5419  0BD7  2BD9               	goto	l2841
  5420  0BD8                     u4000:	
  5421  0BD8                     l2839:	
  5422  0BD8  143C               	bsf	___flmul@prod,0
  5423  0BD9                     l2841:	
  5424  0BD9  3001               	movlw	1
  5425  0BDA  00B0               	movwf	??___flmul
  5426  0BDB                     u4015:	
  5427  0BDB  1003               	clrc
  5428  0BDC  0DB6               	rlf	___flmul@grs,f
  5429  0BDD  0DB7               	rlf	___flmul@grs+1,f
  5430  0BDE  0DB8               	rlf	___flmul@grs+2,f
  5431  0BDF  0DB9               	rlf	___flmul@grs+3,f
  5432  0BE0  0BB0               	decfsz	??___flmul,f
  5433  0BE1  2BDB               	goto	u4015
  5434  0BE2                     l2843:	
  5435  0BE2  30FF               	movlw	255
  5436  0BE3  07C0               	addwf	___flmul@temp,f
  5437  0BE4  1803               	skipnc
  5438  0BE5  0AC1               	incf	___flmul@temp+1,f
  5439  0BE6  30FF               	movlw	255
  5440  0BE7  07C1               	addwf	___flmul@temp+1,f
  5441  0BE8                     l2845:	
  5442  0BE8  1FBE               	btfss	___flmul@prod+2,7
  5443  0BE9  2BEB               	goto	u4021
  5444  0BEA  2BEC               	goto	u4020
  5445  0BEB                     u4021:	
  5446  0BEB  2BCB               	goto	l2835
  5447  0BEC                     u4020:	
  5448  0BEC                     l2847:	
  5449  0BEC  01BA               	clrf	___flmul@aexp
  5450  0BED                     l2849:	
  5451  0BED  1FB9               	btfss	___flmul@grs+3,7
  5452  0BEE  2BF0               	goto	u4031
  5453  0BEF  2BF1               	goto	u4030
  5454  0BF0                     u4031:	
  5455  0BF0  2C0D               	goto	l2857
  5456  0BF1                     u4030:	
  5457  0BF1                     l2851:	
  5458  0BF1  30FF               	movlw	255
  5459  0BF2  0536               	andwf	___flmul@grs,w
  5460  0BF3  00B0               	movwf	??___flmul
  5461  0BF4  30FF               	movlw	255
  5462  0BF5  0537               	andwf	___flmul@grs+1,w
  5463  0BF6  00B1               	movwf	??___flmul+1
  5464  0BF7  30FF               	movlw	255
  5465  0BF8  0538               	andwf	___flmul@grs+2,w
  5466  0BF9  00B2               	movwf	??___flmul+2
  5467  0BFA  307F               	movlw	127
  5468  0BFB  0539               	andwf	___flmul@grs+3,w
  5469  0BFC  00B3               	movwf	??___flmul+3
  5470  0BFD  0833               	movf	??___flmul+3,w
  5471  0BFE  0432               	iorwf	??___flmul+2,w
  5472  0BFF  0431               	iorwf	??___flmul+1,w
  5473  0C00  0430               	iorwf	??___flmul,w
  5474  0C01  1903               	skipnz
  5475  0C02  2C04               	goto	u4041
  5476  0C03  2C05               	goto	u4040
  5477  0C04                     u4041:	
  5478  0C04  2C08               	goto	l845
  5479  0C05                     u4040:	
  5480  0C05                     l2853:	
  5481  0C05  01BA               	clrf	___flmul@aexp
  5482  0C06  0ABA               	incf	___flmul@aexp,f
  5483  0C07  2C0D               	goto	l2857
  5484  0C08                     l845:	
  5485  0C08  1C3C               	btfss	___flmul@prod,0
  5486  0C09  2C0B               	goto	u4051
  5487  0C0A  2C0C               	goto	u4050
  5488  0C0B                     u4051:	
  5489  0C0B  2C0D               	goto	l2857
  5490  0C0C                     u4050:	
  5491  0C0C  2C05               	goto	l2853
  5492  0C0D                     l2857:	
  5493  0C0D  083A               	movf	___flmul@aexp,w
  5494  0C0E  1903               	btfsc	3,2
  5495  0C0F  2C11               	goto	u4061
  5496  0C10  2C12               	goto	u4060
  5497  0C11                     u4061:	
  5498  0C11  2C43               	goto	l2867
  5499  0C12                     u4060:	
  5500  0C12                     l2859:	
  5501  0C12  3001               	movlw	1
  5502  0C13  07BC               	addwf	___flmul@prod,f
  5503  0C14  3000               	movlw	0
  5504  0C15  1803               	skipnc
  5505  0C16  3001               	movlw	1
  5506  0C17  07BD               	addwf	___flmul@prod+1,f
  5507  0C18  3000               	movlw	0
  5508  0C19  1803               	skipnc
  5509  0C1A  3001               	movlw	1
  5510  0C1B  07BE               	addwf	___flmul@prod+2,f
  5511  0C1C  3000               	movlw	0
  5512  0C1D  1803               	skipnc
  5513  0C1E  3001               	movlw	1
  5514  0C1F  07BF               	addwf	___flmul@prod+3,f
  5515  0C20                     l2861:	
  5516  0C20  1C3F               	btfss	___flmul@prod+3,0
  5517  0C21  2C23               	goto	u4071
  5518  0C22  2C24               	goto	u4070
  5519  0C23                     u4071:	
  5520  0C23  2C43               	goto	l2867
  5521  0C24                     u4070:	
  5522  0C24                     l2863:	
  5523  0C24  083C               	movf	___flmul@prod,w
  5524  0C25  00B0               	movwf	??___flmul
  5525  0C26  083D               	movf	___flmul@prod+1,w
  5526  0C27  00B1               	movwf	??___flmul+1
  5527  0C28  083E               	movf	___flmul@prod+2,w
  5528  0C29  00B2               	movwf	??___flmul+2
  5529  0C2A  083F               	movf	___flmul@prod+3,w
  5530  0C2B  00B3               	movwf	??___flmul+3
  5531  0C2C  3001               	movlw	1
  5532  0C2D  00B4               	movwf	??___flmul+4
  5533  0C2E                     u4085:	
  5534  0C2E  0D33               	rlf	??___flmul+3,w
  5535  0C2F  0CB3               	rrf	??___flmul+3,f
  5536  0C30  0CB2               	rrf	??___flmul+2,f
  5537  0C31  0CB1               	rrf	??___flmul+1,f
  5538  0C32  0CB0               	rrf	??___flmul,f
  5539  0C33                     u4080:	
  5540  0C33  0BB4               	decfsz	??___flmul+4,f
  5541  0C34  2C2E               	goto	u4085
  5542  0C35  0833               	movf	??___flmul+3,w
  5543  0C36  00BF               	movwf	___flmul@prod+3
  5544  0C37  0832               	movf	??___flmul+2,w
  5545  0C38  00BE               	movwf	___flmul@prod+2
  5546  0C39  0831               	movf	??___flmul+1,w
  5547  0C3A  00BD               	movwf	___flmul@prod+1
  5548  0C3B  0830               	movf	??___flmul,w
  5549  0C3C  00BC               	movwf	___flmul@prod
  5550  0C3D                     l2865:	
  5551  0C3D  3001               	movlw	1
  5552  0C3E  07C0               	addwf	___flmul@temp,f
  5553  0C3F  1803               	skipnc
  5554  0C40  0AC1               	incf	___flmul@temp+1,f
  5555  0C41  3000               	movlw	0
  5556  0C42  07C1               	addwf	___flmul@temp+1,f
  5557  0C43                     l2867:	
  5558  0C43  0841               	movf	___flmul@temp+1,w
  5559  0C44  3A80               	xorlw	128
  5560  0C45  00FF               	movwf	btemp+1
  5561  0C46  3080               	movlw	128
  5562  0C47  027F               	subwf	btemp+1,w
  5563  0C48  1D03               	skipz
  5564  0C49  2C4C               	goto	u4095
  5565  0C4A  30FF               	movlw	255
  5566  0C4B  0240               	subwf	___flmul@temp,w
  5567  0C4C                     u4095:	
  5568  0C4C  1C03               	skipc
  5569  0C4D  2C4F               	goto	u4091
  5570  0C4E  2C50               	goto	u4090
  5571  0C4F                     u4091:	
  5572  0C4F  2C5B               	goto	l2871
  5573  0C50                     u4090:	
  5574  0C50                     l2869:	
  5575  0C50  307F               	movlw	127
  5576  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5578  0C53  00BF               	movwf	___flmul@prod+3
  5579  0C54  3080               	movlw	128
  5580  0C55  00BE               	movwf	___flmul@prod+2
  5581  0C56  3000               	movlw	0
  5582  0C57  00BD               	movwf	___flmul@prod+1
  5583  0C58  3000               	movlw	0
  5584  0C59  00BC               	movwf	___flmul@prod
  5585  0C5A  2C90               	goto	l851
  5586  0C5B                     l2871:	
  5587  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5588  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5589  0C5D  0841               	movf	___flmul@temp+1,w
  5590  0C5E  3A80               	xorlw	128
  5591  0C5F  00FF               	movwf	btemp+1
  5592  0C60  3080               	movlw	128
  5593  0C61  027F               	subwf	btemp+1,w
  5594  0C62  1D03               	skipz
  5595  0C63  2C66               	goto	u4105
  5596  0C64  3001               	movlw	1
  5597  0C65  0240               	subwf	___flmul@temp,w
  5598  0C66                     u4105:	
  5599  0C66  1803               	skipnc
  5600  0C67  2C69               	goto	u4101
  5601  0C68  2C6A               	goto	u4100
  5602  0C69                     u4101:	
  5603  0C69  2C76               	goto	l2877
  5604  0C6A                     u4100:	
  5605  0C6A                     l2873:	
  5606  0C6A  3000               	movlw	0
  5607  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5608  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5609  0C6D  00BF               	movwf	___flmul@prod+3
  5610  0C6E  3000               	movlw	0
  5611  0C6F  00BE               	movwf	___flmul@prod+2
  5612  0C70  3000               	movlw	0
  5613  0C71  00BD               	movwf	___flmul@prod+1
  5614  0C72  3000               	movlw	0
  5615  0C73  00BC               	movwf	___flmul@prod
  5616  0C74                     l2875:	
  5617  0C74  01B5               	clrf	___flmul@sign
  5618  0C75  2C90               	goto	l851
  5619  0C76                     l2877:	
  5620  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5621  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5622  0C78  0840               	movf	___flmul@temp,w
  5623  0C79  00B0               	movwf	??___flmul
  5624  0C7A  0830               	movf	??___flmul,w
  5625  0C7B  00BB               	movwf	___flmul@bexp
  5626  0C7C  30FF               	movlw	255
  5627  0C7D  05BC               	andwf	___flmul@prod,f
  5628  0C7E  30FF               	movlw	255
  5629  0C7F  05BD               	andwf	___flmul@prod+1,f
  5630  0C80  307F               	movlw	127
  5631  0C81  05BE               	andwf	___flmul@prod+2,f
  5632  0C82  3000               	movlw	0
  5633  0C83  05BF               	andwf	___flmul@prod+3,f
  5634  0C84                     l2879:	
  5635  0C84  1C3B               	btfss	___flmul@bexp,0
  5636  0C85  2C87               	goto	u4111
  5637  0C86  2C88               	goto	u4110
  5638  0C87                     u4111:	
  5639  0C87  2C89               	goto	l2883
  5640  0C88                     u4110:	
  5641  0C88                     l2881:	
  5642  0C88  17BE               	bsf	___flmul@prod+2,7
  5643  0C89                     l2883:	
  5644  0C89  083B               	movf	___flmul@bexp,w
  5645  0C8A  00B0               	movwf	??___flmul
  5646  0C8B  1003               	clrc
  5647  0C8C  0C30               	rrf	??___flmul,w
  5648  0C8D  00B1               	movwf	??___flmul+1
  5649  0C8E  0831               	movf	??___flmul+1,w
  5650  0C8F  00BF               	movwf	___flmul@prod+3
  5651  0C90                     l851:	
  5652  0C90  0835               	movf	___flmul@sign,w
  5653  0C91  00B0               	movwf	??___flmul
  5654  0C92  0830               	movf	??___flmul,w
  5655  0C93  04BF               	iorwf	___flmul@prod+3,f
  5656  0C94                     l2885:	
  5657  0C94  083F               	movf	___flmul@prod+3,w
  5658  0C95  00AB               	movwf	?___flmul+3
  5659  0C96  083E               	movf	___flmul@prod+2,w
  5660  0C97  00AA               	movwf	?___flmul+2
  5661  0C98  083D               	movf	___flmul@prod+1,w
  5662  0C99  00A9               	movwf	?___flmul+1
  5663  0C9A  083C               	movf	___flmul@prod,w
  5664  0C9B  00A8               	movwf	?___flmul
  5665  0C9C                     l839:	
  5666  0C9C  0008               	return
  5667  0C9D                     __end_of___flmul:	
  5668                           
  5669                           	psect	text11
  5670  1A12                     __ptext11:	
  5671 ;; *************** function __Umul8_16 *****************
  5672 ;; Defined at:
  5673 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  multiplier      1    wreg     unsigned char 
  5676 ;;  multiplicand    1    3[COMMON] unsigned char 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5679 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5680 ;;  product         2    0[BANK0 ] unsigned int 
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  2    3[COMMON] unsigned int 
  5683 ;; Registers used:
  5684 ;;		wreg, status,2, status,0
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5690 ;;      Params:         2       0       0       0       0
  5691 ;;      Locals:         0       5       0       0       0
  5692 ;;      Temps:          2       0       0       0       0
  5693 ;;      Totals:         4       5       0       0       0
  5694 ;;Total ram usage:        9 bytes
  5695 ;; Hardware stack levels used:    1
  5696 ;; Hardware stack levels required when called:    1
  5697 ;; This function calls:
  5698 ;;		Nothing
  5699 ;; This function is called by:
  5700 ;;		___flmul
  5701 ;; This function uses a non-reentrant model
  5702 ;;
  5703                           
  5704                           
  5705                           ;psect for function __Umul8_16
  5706  1A12                     __Umul8_16:	
  5707                           
  5708                           ;incstack = 0
  5709                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5710                           ;__Umul8_16@multiplier stored from wreg
  5711  1A12  1283               	bcf	3,5	;RP0=0, select bank0
  5712  1A13  1303               	bcf	3,6	;RP1=0, select bank0
  5713  1A14  00A4               	movwf	__Umul8_16@multiplier
  5714  1A15                     l2411:	
  5715  1A15  01A0               	clrf	__Umul8_16@product
  5716  1A16  01A1               	clrf	__Umul8_16@product+1
  5717  1A17                     l2413:	
  5718  1A17  0873               	movf	__Umul8_16@multiplicand,w
  5719  1A18  00F5               	movwf	??__Umul8_16
  5720  1A19  01F6               	clrf	??__Umul8_16+1
  5721  1A1A  0875               	movf	??__Umul8_16,w
  5722  1A1B  00A2               	movwf	__Umul8_16@word_mpld
  5723  1A1C  0876               	movf	??__Umul8_16+1,w
  5724  1A1D  00A3               	movwf	__Umul8_16@word_mpld+1
  5725  1A1E                     l2415:	
  5726  1A1E  1C24               	btfss	__Umul8_16@multiplier,0
  5727  1A1F  2A21               	goto	u2941
  5728  1A20  2A22               	goto	u2940
  5729  1A21                     u2941:	
  5730  1A21  2A28               	goto	l905
  5731  1A22                     u2940:	
  5732  1A22                     l2417:	
  5733  1A22  0822               	movf	__Umul8_16@word_mpld,w
  5734  1A23  07A0               	addwf	__Umul8_16@product,f
  5735  1A24  1803               	skipnc
  5736  1A25  0AA1               	incf	__Umul8_16@product+1,f
  5737  1A26  0823               	movf	__Umul8_16@word_mpld+1,w
  5738  1A27  07A1               	addwf	__Umul8_16@product+1,f
  5739  1A28                     l905:	
  5740  1A28  3001               	movlw	1
  5741  1A29                     u2955:	
  5742  1A29  1003               	clrc
  5743  1A2A  0DA2               	rlf	__Umul8_16@word_mpld,f
  5744  1A2B  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5745  1A2C  3EFF               	addlw	-1
  5746  1A2D  1D03               	skipz
  5747  1A2E  2A29               	goto	u2955
  5748  1A2F  1003               	clrc
  5749  1A30  0CA4               	rrf	__Umul8_16@multiplier,f
  5750  1A31                     l2419:	
  5751  1A31  0824               	movf	__Umul8_16@multiplier,w
  5752  1A32  1D03               	btfss	3,2
  5753  1A33  2A35               	goto	u2961
  5754  1A34  2A36               	goto	u2960
  5755  1A35                     u2961:	
  5756  1A35  2A1E               	goto	l2415
  5757  1A36                     u2960:	
  5758  1A36                     l2421:	
  5759  1A36  0821               	movf	__Umul8_16@product+1,w
  5760  1A37  00F4               	movwf	?__Umul8_16+1
  5761  1A38  0820               	movf	__Umul8_16@product,w
  5762  1A39  00F3               	movwf	?__Umul8_16
  5763  1A3A                     l907:	
  5764  1A3A  0008               	return
  5765  1A3B                     __end_of__Umul8_16:	
  5766                           
  5767                           	psect	text12
  5768  1E85                     __ptext12:	
  5769 ;; *************** function __tdiv_to_l_ *****************
  5770 ;; Defined at:
  5771 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;  f1              4    3[COMMON] float 
  5774 ;;  f2              4    7[COMMON] float 
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;  quot            4    4[BANK0 ] unsigned long 
  5777 ;;  exp1            1    9[BANK0 ] unsigned char 
  5778 ;;  cntr            1    8[BANK0 ] unsigned char 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  4    3[COMMON] unsigned long 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, status,0
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5788 ;;      Params:         8       0       0       0       0
  5789 ;;      Locals:         0       6       0       0       0
  5790 ;;      Temps:          0       4       0       0       0
  5791 ;;      Totals:         8      10       0       0       0
  5792 ;;Total ram usage:       18 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; Hardware stack levels required when called:    1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_sprintf
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function __tdiv_to_l_
  5804  1E85                     __tdiv_to_l_:	
  5805  1E85                     l2979:	
  5806                           ;incstack = 0
  5807                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5808                           
  5809  1E85  0873               	movf	__tdiv_to_l_@f1,w
  5810  1E86  1283               	bcf	3,5	;RP0=0, select bank0
  5811  1E87  1303               	bcf	3,6	;RP1=0, select bank0
  5812  1E88  00A0               	movwf	??__tdiv_to_l_
  5813  1E89  0874               	movf	__tdiv_to_l_@f1+1,w
  5814  1E8A  00A1               	movwf	??__tdiv_to_l_+1
  5815  1E8B  0875               	movf	__tdiv_to_l_@f1+2,w
  5816  1E8C  00A2               	movwf	??__tdiv_to_l_+2
  5817  1E8D  1003               	clrc
  5818  1E8E  0D21               	rlf	??__tdiv_to_l_+1,w
  5819  1E8F  0D22               	rlf	??__tdiv_to_l_+2,w
  5820  1E90  00A3               	movwf	??__tdiv_to_l_+3
  5821  1E91  0823               	movf	??__tdiv_to_l_+3,w
  5822  1E92  00A9               	movwf	__tdiv_to_l_@exp1
  5823  1E93  0829               	movf	__tdiv_to_l_@exp1,w
  5824  1E94  1D03               	btfss	3,2
  5825  1E95  2E97               	goto	u4401
  5826  1E96  2E98               	goto	u4400
  5827  1E97                     u4401:	
  5828  1E97  2EA1               	goto	l2985
  5829  1E98                     u4400:	
  5830  1E98                     l2981:	
  5831  1E98  3000               	movlw	0
  5832  1E99  00F6               	movwf	?__tdiv_to_l_+3
  5833  1E9A  3000               	movlw	0
  5834  1E9B  00F5               	movwf	?__tdiv_to_l_+2
  5835  1E9C  3000               	movlw	0
  5836  1E9D  00F4               	movwf	?__tdiv_to_l_+1
  5837  1E9E  3000               	movlw	0
  5838  1E9F  00F3               	movwf	?__tdiv_to_l_
  5839  1EA0  2F41               	goto	l633
  5840  1EA1                     l2985:	
  5841  1EA1  0877               	movf	__tdiv_to_l_@f2,w
  5842  1EA2  00A0               	movwf	??__tdiv_to_l_
  5843  1EA3  0878               	movf	__tdiv_to_l_@f2+1,w
  5844  1EA4  00A1               	movwf	??__tdiv_to_l_+1
  5845  1EA5  0879               	movf	__tdiv_to_l_@f2+2,w
  5846  1EA6  00A2               	movwf	??__tdiv_to_l_+2
  5847  1EA7  1003               	clrc
  5848  1EA8  0D21               	rlf	??__tdiv_to_l_+1,w
  5849  1EA9  0D22               	rlf	??__tdiv_to_l_+2,w
  5850  1EAA  00A3               	movwf	??__tdiv_to_l_+3
  5851  1EAB  0823               	movf	??__tdiv_to_l_+3,w
  5852  1EAC  00A8               	movwf	__tdiv_to_l_@cntr
  5853  1EAD  0828               	movf	__tdiv_to_l_@cntr,w
  5854  1EAE  1D03               	btfss	3,2
  5855  1EAF  2EB1               	goto	u4411
  5856  1EB0  2EB2               	goto	u4410
  5857  1EB1                     u4411:	
  5858  1EB1  2EB3               	goto	l634
  5859  1EB2                     u4410:	
  5860  1EB2  2E98               	goto	l2981
  5861  1EB3                     l634:	
  5862  1EB3  17F4               	bsf	__tdiv_to_l_@f1+1,7
  5863  1EB4                     l2991:	
  5864  1EB4  30FF               	movlw	255
  5865  1EB5  05F3               	andwf	__tdiv_to_l_@f1,f
  5866  1EB6  30FF               	movlw	255
  5867  1EB7  05F4               	andwf	__tdiv_to_l_@f1+1,f
  5868  1EB8  3000               	movlw	0
  5869  1EB9  05F5               	andwf	__tdiv_to_l_@f1+2,f
  5870  1EBA                     l2993:	
  5871  1EBA  17F8               	bsf	__tdiv_to_l_@f2+1,7
  5872  1EBB  30FF               	movlw	255
  5873  1EBC  05F7               	andwf	__tdiv_to_l_@f2,f
  5874  1EBD  30FF               	movlw	255
  5875  1EBE  05F8               	andwf	__tdiv_to_l_@f2+1,f
  5876  1EBF  3000               	movlw	0
  5877  1EC0  05F9               	andwf	__tdiv_to_l_@f2+2,f
  5878  1EC1  3000               	movlw	0
  5879  1EC2  00A7               	movwf	__tdiv_to_l_@quot+3
  5880  1EC3  3000               	movlw	0
  5881  1EC4  00A6               	movwf	__tdiv_to_l_@quot+2
  5882  1EC5  3000               	movlw	0
  5883  1EC6  00A5               	movwf	__tdiv_to_l_@quot+1
  5884  1EC7  3000               	movlw	0
  5885  1EC8  00A4               	movwf	__tdiv_to_l_@quot
  5886  1EC9                     l2995:	
  5887  1EC9  307F               	movlw	127
  5888  1ECA  02A9               	subwf	__tdiv_to_l_@exp1,f
  5889  1ECB                     l2997:	
  5890  1ECB  3098               	movlw	152
  5891  1ECC  0728               	addwf	__tdiv_to_l_@cntr,w
  5892  1ECD  00A0               	movwf	??__tdiv_to_l_
  5893  1ECE  0820               	movf	??__tdiv_to_l_,w
  5894  1ECF  02A9               	subwf	__tdiv_to_l_@exp1,f
  5895  1ED0  3018               	movlw	24
  5896  1ED1  00A0               	movwf	??__tdiv_to_l_
  5897  1ED2  0820               	movf	??__tdiv_to_l_,w
  5898  1ED3  00A8               	movwf	__tdiv_to_l_@cntr
  5899  1ED4                     l2999:	
  5900  1ED4  3001               	movlw	1
  5901  1ED5  00A0               	movwf	??__tdiv_to_l_
  5902  1ED6                     u4425:	
  5903  1ED6  1003               	clrc
  5904  1ED7  0DA4               	rlf	__tdiv_to_l_@quot,f
  5905  1ED8  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  5906  1ED9  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  5907  1EDA  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  5908  1EDB  0BA0               	decfsz	??__tdiv_to_l_,f
  5909  1EDC  2ED6               	goto	u4425
  5910  1EDD                     l3001:	
  5911  1EDD  0879               	movf	__tdiv_to_l_@f2+2,w
  5912  1EDE  0275               	subwf	__tdiv_to_l_@f1+2,w
  5913  1EDF  1D03               	skipz
  5914  1EE0  2EE7               	goto	u4435
  5915  1EE1  0878               	movf	__tdiv_to_l_@f2+1,w
  5916  1EE2  0274               	subwf	__tdiv_to_l_@f1+1,w
  5917  1EE3  1D03               	skipz
  5918  1EE4  2EE7               	goto	u4435
  5919  1EE5  0877               	movf	__tdiv_to_l_@f2,w
  5920  1EE6  0273               	subwf	__tdiv_to_l_@f1,w
  5921  1EE7                     u4435:	
  5922  1EE7  1C03               	skipc
  5923  1EE8  2EEA               	goto	u4431
  5924  1EE9  2EEB               	goto	u4430
  5925  1EEA                     u4431:	
  5926  1EEA  2EF6               	goto	l3007
  5927  1EEB                     u4430:	
  5928  1EEB                     l3003:	
  5929  1EEB  0877               	movf	__tdiv_to_l_@f2,w
  5930  1EEC  02F3               	subwf	__tdiv_to_l_@f1,f
  5931  1EED  0878               	movf	__tdiv_to_l_@f2+1,w
  5932  1EEE  1C03               	skipc
  5933  1EEF  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  5934  1EF0  02F4               	subwf	__tdiv_to_l_@f1+1,f
  5935  1EF1  0879               	movf	__tdiv_to_l_@f2+2,w
  5936  1EF2  1C03               	skipc
  5937  1EF3  0A79               	incf	__tdiv_to_l_@f2+2,w
  5938  1EF4  02F5               	subwf	__tdiv_to_l_@f1+2,f
  5939  1EF5                     l3005:	
  5940  1EF5  1424               	bsf	__tdiv_to_l_@quot,0
  5941  1EF6                     l3007:	
  5942  1EF6  3001               	movlw	1
  5943  1EF7                     u4445:	
  5944  1EF7  1003               	clrc
  5945  1EF8  0DF3               	rlf	__tdiv_to_l_@f1,f
  5946  1EF9  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  5947  1EFA  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  5948  1EFB  3EFF               	addlw	-1
  5949  1EFC  1D03               	skipz
  5950  1EFD  2EF7               	goto	u4445
  5951  1EFE                     l3009:	
  5952  1EFE  3001               	movlw	1
  5953  1EFF  02A8               	subwf	__tdiv_to_l_@cntr,f
  5954  1F00  1D03               	btfss	3,2
  5955  1F01  2F03               	goto	u4451
  5956  1F02  2F04               	goto	u4450
  5957  1F03                     u4451:	
  5958  1F03  2ED4               	goto	l2999
  5959  1F04                     u4450:	
  5960  1F04                     l637:	
  5961  1F04  1FA9               	btfss	__tdiv_to_l_@exp1,7
  5962  1F05  2F07               	goto	u4461
  5963  1F06  2F08               	goto	u4460
  5964  1F07                     u4461:	
  5965  1F07  2F22               	goto	l3019
  5966  1F08                     u4460:	
  5967  1F08                     l3011:	
  5968  1F08  0829               	movf	__tdiv_to_l_@exp1,w
  5969  1F09  3A80               	xorlw	128
  5970  1F0A  3E97               	addlw	151
  5971  1F0B  1803               	skipnc
  5972  1F0C  2F0E               	goto	u4471
  5973  1F0D  2F0F               	goto	u4470
  5974  1F0E                     u4471:	
  5975  1F0E  2F10               	goto	l3017
  5976  1F0F                     u4470:	
  5977  1F0F  2E98               	goto	l2981
  5978  1F10                     l3017:	
  5979  1F10  3001               	movlw	1
  5980  1F11                     u4485:	
  5981  1F11  1003               	clrc
  5982  1F12  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  5983  1F13  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  5984  1F14  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  5985  1F15  0CA4               	rrf	__tdiv_to_l_@quot,f
  5986  1F16  3EFF               	addlw	-1
  5987  1F17  1D03               	skipz
  5988  1F18  2F11               	goto	u4485
  5989  1F19  3001               	movlw	1
  5990  1F1A  00A0               	movwf	??__tdiv_to_l_
  5991  1F1B  0820               	movf	??__tdiv_to_l_,w
  5992  1F1C  07A9               	addwf	__tdiv_to_l_@exp1,f
  5993  1F1D  1D03               	btfss	3,2
  5994  1F1E  2F20               	goto	u4491
  5995  1F1F  2F21               	goto	u4490
  5996  1F20                     u4491:	
  5997  1F20  2F10               	goto	l3017
  5998  1F21                     u4490:	
  5999  1F21  2F39               	goto	l3027
  6000  1F22                     l3019:	
  6001  1F22  3018               	movlw	24
  6002  1F23  0229               	subwf	__tdiv_to_l_@exp1,w
  6003  1F24  1C03               	skipc
  6004  1F25  2F27               	goto	u4501
  6005  1F26  2F28               	goto	u4500
  6006  1F27                     u4501:	
  6007  1F27  2F34               	goto	l644
  6008  1F28                     u4500:	
  6009  1F28  2E98               	goto	l2981
  6010  1F29                     l3025:	
  6011  1F29  3001               	movlw	1
  6012  1F2A  00A0               	movwf	??__tdiv_to_l_
  6013  1F2B                     u4515:	
  6014  1F2B  1003               	clrc
  6015  1F2C  0DA4               	rlf	__tdiv_to_l_@quot,f
  6016  1F2D  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  6017  1F2E  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  6018  1F2F  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  6019  1F30  0BA0               	decfsz	??__tdiv_to_l_,f
  6020  1F31  2F2B               	goto	u4515
  6021  1F32  3001               	movlw	1
  6022  1F33  02A9               	subwf	__tdiv_to_l_@exp1,f
  6023  1F34                     l644:	
  6024  1F34  0829               	movf	__tdiv_to_l_@exp1,w
  6025  1F35  1D03               	btfss	3,2
  6026  1F36  2F38               	goto	u4521
  6027  1F37  2F39               	goto	u4520
  6028  1F38                     u4521:	
  6029  1F38  2F29               	goto	l3025
  6030  1F39                     u4520:	
  6031  1F39                     l3027:	
  6032  1F39  0827               	movf	__tdiv_to_l_@quot+3,w
  6033  1F3A  00F6               	movwf	?__tdiv_to_l_+3
  6034  1F3B  0826               	movf	__tdiv_to_l_@quot+2,w
  6035  1F3C  00F5               	movwf	?__tdiv_to_l_+2
  6036  1F3D  0825               	movf	__tdiv_to_l_@quot+1,w
  6037  1F3E  00F4               	movwf	?__tdiv_to_l_+1
  6038  1F3F  0824               	movf	__tdiv_to_l_@quot,w
  6039  1F40  00F3               	movwf	?__tdiv_to_l_
  6040  1F41                     l633:	
  6041  1F41  0008               	return
  6042  1F42                     __end_of__tdiv_to_l_:	
  6043                           
  6044                           	psect	text13
  6045  1F42                     __ptext13:	
  6046 ;; *************** function __div_to_l_ *****************
  6047 ;; Defined at:
  6048 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  f1              4    3[COMMON] unsigned long 
  6051 ;;  f2              4    7[COMMON] unsigned long 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  quot            4    1[BANK0 ] unsigned long 
  6054 ;;  exp1            1    6[BANK0 ] unsigned char 
  6055 ;;  cntr            1    5[BANK0 ] unsigned char 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  4    3[COMMON] unsigned long 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6065 ;;      Params:         8       0       0       0       0
  6066 ;;      Locals:         0       6       0       0       0
  6067 ;;      Temps:          0       1       0       0       0
  6068 ;;      Totals:         8       7       0       0       0
  6069 ;;Total ram usage:       15 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    1
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_sprintf
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           
  6079                           
  6080                           ;psect for function __div_to_l_
  6081  1F42                     __div_to_l_:	
  6082  1F42                     l3031:	
  6083                           ;incstack = 0
  6084                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6085                           
  6086  1F42  1003               	clrc
  6087  1F43  0D75               	rlf	__div_to_l_@f1+2,w
  6088  1F44  0D76               	rlf	__div_to_l_@f1+3,w
  6089  1F45  1283               	bcf	3,5	;RP0=0, select bank0
  6090  1F46  1303               	bcf	3,6	;RP1=0, select bank0
  6091  1F47  00A0               	movwf	??__div_to_l_
  6092  1F48  0820               	movf	??__div_to_l_,w
  6093  1F49  00A6               	movwf	__div_to_l_@exp1
  6094  1F4A  0826               	movf	__div_to_l_@exp1,w
  6095  1F4B  1D03               	btfss	3,2
  6096  1F4C  2F4E               	goto	u4531
  6097  1F4D  2F4F               	goto	u4530
  6098  1F4E                     u4531:	
  6099  1F4E  2F58               	goto	l3037
  6100  1F4F                     u4530:	
  6101  1F4F                     l3033:	
  6102  1F4F  3000               	movlw	0
  6103  1F50  00F6               	movwf	?__div_to_l_+3
  6104  1F51  3000               	movlw	0
  6105  1F52  00F5               	movwf	?__div_to_l_+2
  6106  1F53  3000               	movlw	0
  6107  1F54  00F4               	movwf	?__div_to_l_+1
  6108  1F55  3000               	movlw	0
  6109  1F56  00F3               	movwf	?__div_to_l_
  6110  1F57  2FFF               	goto	l586
  6111  1F58                     l3037:	
  6112  1F58  1003               	clrc
  6113  1F59  0D79               	rlf	__div_to_l_@f2+2,w
  6114  1F5A  0D7A               	rlf	__div_to_l_@f2+3,w
  6115  1F5B  00A0               	movwf	??__div_to_l_
  6116  1F5C  0820               	movf	??__div_to_l_,w
  6117  1F5D  00A5               	movwf	__div_to_l_@cntr
  6118  1F5E  0825               	movf	__div_to_l_@cntr,w
  6119  1F5F  1D03               	btfss	3,2
  6120  1F60  2F62               	goto	u4541
  6121  1F61  2F63               	goto	u4540
  6122  1F62                     u4541:	
  6123  1F62  2F64               	goto	l587
  6124  1F63                     u4540:	
  6125  1F63  2F4F               	goto	l3033
  6126  1F64                     l587:	
  6127  1F64  17F5               	bsf	__div_to_l_@f1+2,7
  6128  1F65                     l3043:	
  6129  1F65  30FF               	movlw	255
  6130  1F66  05F3               	andwf	__div_to_l_@f1,f
  6131  1F67  30FF               	movlw	255
  6132  1F68  05F4               	andwf	__div_to_l_@f1+1,f
  6133  1F69  30FF               	movlw	255
  6134  1F6A  05F5               	andwf	__div_to_l_@f1+2,f
  6135  1F6B  3000               	movlw	0
  6136  1F6C  05F6               	andwf	__div_to_l_@f1+3,f
  6137  1F6D                     l3045:	
  6138  1F6D  17F9               	bsf	__div_to_l_@f2+2,7
  6139  1F6E  30FF               	movlw	255
  6140  1F6F  05F7               	andwf	__div_to_l_@f2,f
  6141  1F70  30FF               	movlw	255
  6142  1F71  05F8               	andwf	__div_to_l_@f2+1,f
  6143  1F72  30FF               	movlw	255
  6144  1F73  05F9               	andwf	__div_to_l_@f2+2,f
  6145  1F74  3000               	movlw	0
  6146  1F75  05FA               	andwf	__div_to_l_@f2+3,f
  6147  1F76  3000               	movlw	0
  6148  1F77  00A4               	movwf	__div_to_l_@quot+3
  6149  1F78  3000               	movlw	0
  6150  1F79  00A3               	movwf	__div_to_l_@quot+2
  6151  1F7A  3000               	movlw	0
  6152  1F7B  00A2               	movwf	__div_to_l_@quot+1
  6153  1F7C  3000               	movlw	0
  6154  1F7D  00A1               	movwf	__div_to_l_@quot
  6155  1F7E                     l3047:	
  6156  1F7E  307F               	movlw	127
  6157  1F7F  02A6               	subwf	__div_to_l_@exp1,f
  6158  1F80                     l3049:	
  6159  1F80  30A0               	movlw	160
  6160  1F81  0725               	addwf	__div_to_l_@cntr,w
  6161  1F82  00A0               	movwf	??__div_to_l_
  6162  1F83  0820               	movf	??__div_to_l_,w
  6163  1F84  02A6               	subwf	__div_to_l_@exp1,f
  6164  1F85  3020               	movlw	32
  6165  1F86  00A0               	movwf	??__div_to_l_
  6166  1F87  0820               	movf	??__div_to_l_,w
  6167  1F88  00A5               	movwf	__div_to_l_@cntr
  6168  1F89                     l3051:	
  6169  1F89  3001               	movlw	1
  6170  1F8A  00A0               	movwf	??__div_to_l_
  6171  1F8B                     u4555:	
  6172  1F8B  1003               	clrc
  6173  1F8C  0DA1               	rlf	__div_to_l_@quot,f
  6174  1F8D  0DA2               	rlf	__div_to_l_@quot+1,f
  6175  1F8E  0DA3               	rlf	__div_to_l_@quot+2,f
  6176  1F8F  0DA4               	rlf	__div_to_l_@quot+3,f
  6177  1F90  0BA0               	decfsz	??__div_to_l_,f
  6178  1F91  2F8B               	goto	u4555
  6179  1F92                     l3053:	
  6180  1F92  087A               	movf	__div_to_l_@f2+3,w
  6181  1F93  0276               	subwf	__div_to_l_@f1+3,w
  6182  1F94  1D03               	skipz
  6183  1F95  2FA0               	goto	u4565
  6184  1F96  0879               	movf	__div_to_l_@f2+2,w
  6185  1F97  0275               	subwf	__div_to_l_@f1+2,w
  6186  1F98  1D03               	skipz
  6187  1F99  2FA0               	goto	u4565
  6188  1F9A  0878               	movf	__div_to_l_@f2+1,w
  6189  1F9B  0274               	subwf	__div_to_l_@f1+1,w
  6190  1F9C  1D03               	skipz
  6191  1F9D  2FA0               	goto	u4565
  6192  1F9E  0877               	movf	__div_to_l_@f2,w
  6193  1F9F  0273               	subwf	__div_to_l_@f1,w
  6194  1FA0                     u4565:	
  6195  1FA0  1C03               	skipc
  6196  1FA1  2FA3               	goto	u4561
  6197  1FA2  2FA4               	goto	u4560
  6198  1FA3                     u4561:	
  6199  1FA3  2FB3               	goto	l3059
  6200  1FA4                     u4560:	
  6201  1FA4                     l3055:	
  6202  1FA4  0877               	movf	__div_to_l_@f2,w
  6203  1FA5  02F3               	subwf	__div_to_l_@f1,f
  6204  1FA6  0878               	movf	__div_to_l_@f2+1,w
  6205  1FA7  1C03               	skipc
  6206  1FA8  0F78               	incfsz	__div_to_l_@f2+1,w
  6207  1FA9  02F4               	subwf	__div_to_l_@f1+1,f
  6208  1FAA  0879               	movf	__div_to_l_@f2+2,w
  6209  1FAB  1C03               	skipc
  6210  1FAC  0F79               	incfsz	__div_to_l_@f2+2,w
  6211  1FAD  02F5               	subwf	__div_to_l_@f1+2,f
  6212  1FAE  087A               	movf	__div_to_l_@f2+3,w
  6213  1FAF  1C03               	skipc
  6214  1FB0  0F7A               	incfsz	__div_to_l_@f2+3,w
  6215  1FB1  02F6               	subwf	__div_to_l_@f1+3,f
  6216  1FB2                     l3057:	
  6217  1FB2  1421               	bsf	__div_to_l_@quot,0
  6218  1FB3                     l3059:	
  6219  1FB3  3001               	movlw	1
  6220  1FB4  00A0               	movwf	??__div_to_l_
  6221  1FB5                     u4575:	
  6222  1FB5  1003               	clrc
  6223  1FB6  0DF3               	rlf	__div_to_l_@f1,f
  6224  1FB7  0DF4               	rlf	__div_to_l_@f1+1,f
  6225  1FB8  0DF5               	rlf	__div_to_l_@f1+2,f
  6226  1FB9  0DF6               	rlf	__div_to_l_@f1+3,f
  6227  1FBA  0BA0               	decfsz	??__div_to_l_,f
  6228  1FBB  2FB5               	goto	u4575
  6229  1FBC                     l3061:	
  6230  1FBC  3001               	movlw	1
  6231  1FBD  02A5               	subwf	__div_to_l_@cntr,f
  6232  1FBE  1D03               	btfss	3,2
  6233  1FBF  2FC1               	goto	u4581
  6234  1FC0  2FC2               	goto	u4580
  6235  1FC1                     u4581:	
  6236  1FC1  2F89               	goto	l3051
  6237  1FC2                     u4580:	
  6238  1FC2                     l590:	
  6239  1FC2  1FA6               	btfss	__div_to_l_@exp1,7
  6240  1FC3  2FC5               	goto	u4591
  6241  1FC4  2FC6               	goto	u4590
  6242  1FC5                     u4591:	
  6243  1FC5  2FE0               	goto	l3071
  6244  1FC6                     u4590:	
  6245  1FC6                     l3063:	
  6246  1FC6  0826               	movf	__div_to_l_@exp1,w
  6247  1FC7  3A80               	xorlw	128
  6248  1FC8  3E9F               	addlw	159
  6249  1FC9  1803               	skipnc
  6250  1FCA  2FCC               	goto	u4601
  6251  1FCB  2FCD               	goto	u4600
  6252  1FCC                     u4601:	
  6253  1FCC  2FCE               	goto	l3069
  6254  1FCD                     u4600:	
  6255  1FCD  2F4F               	goto	l3033
  6256  1FCE                     l3069:	
  6257  1FCE  3001               	movlw	1
  6258  1FCF                     u4615:	
  6259  1FCF  1003               	clrc
  6260  1FD0  0CA4               	rrf	__div_to_l_@quot+3,f
  6261  1FD1  0CA3               	rrf	__div_to_l_@quot+2,f
  6262  1FD2  0CA2               	rrf	__div_to_l_@quot+1,f
  6263  1FD3  0CA1               	rrf	__div_to_l_@quot,f
  6264  1FD4  3EFF               	addlw	-1
  6265  1FD5  1D03               	skipz
  6266  1FD6  2FCF               	goto	u4615
  6267  1FD7  3001               	movlw	1
  6268  1FD8  00A0               	movwf	??__div_to_l_
  6269  1FD9  0820               	movf	??__div_to_l_,w
  6270  1FDA  07A6               	addwf	__div_to_l_@exp1,f
  6271  1FDB  1D03               	btfss	3,2
  6272  1FDC  2FDE               	goto	u4621
  6273  1FDD  2FDF               	goto	u4620
  6274  1FDE                     u4621:	
  6275  1FDE  2FCE               	goto	l3069
  6276  1FDF                     u4620:	
  6277  1FDF  2FF7               	goto	l3079
  6278  1FE0                     l3071:	
  6279  1FE0  3020               	movlw	32
  6280  1FE1  0226               	subwf	__div_to_l_@exp1,w
  6281  1FE2  1C03               	skipc
  6282  1FE3  2FE5               	goto	u4631
  6283  1FE4  2FE6               	goto	u4630
  6284  1FE5                     u4631:	
  6285  1FE5  2FF2               	goto	l597
  6286  1FE6                     u4630:	
  6287  1FE6  2F4F               	goto	l3033
  6288  1FE7                     l3077:	
  6289  1FE7  3001               	movlw	1
  6290  1FE8  00A0               	movwf	??__div_to_l_
  6291  1FE9                     u4645:	
  6292  1FE9  1003               	clrc
  6293  1FEA  0DA1               	rlf	__div_to_l_@quot,f
  6294  1FEB  0DA2               	rlf	__div_to_l_@quot+1,f
  6295  1FEC  0DA3               	rlf	__div_to_l_@quot+2,f
  6296  1FED  0DA4               	rlf	__div_to_l_@quot+3,f
  6297  1FEE  0BA0               	decfsz	??__div_to_l_,f
  6298  1FEF  2FE9               	goto	u4645
  6299  1FF0  3001               	movlw	1
  6300  1FF1  02A6               	subwf	__div_to_l_@exp1,f
  6301  1FF2                     l597:	
  6302  1FF2  0826               	movf	__div_to_l_@exp1,w
  6303  1FF3  1D03               	btfss	3,2
  6304  1FF4  2FF6               	goto	u4651
  6305  1FF5  2FF7               	goto	u4650
  6306  1FF6                     u4651:	
  6307  1FF6  2FE7               	goto	l3077
  6308  1FF7                     u4650:	
  6309  1FF7                     l3079:	
  6310  1FF7  0824               	movf	__div_to_l_@quot+3,w
  6311  1FF8  00F6               	movwf	?__div_to_l_+3
  6312  1FF9  0823               	movf	__div_to_l_@quot+2,w
  6313  1FFA  00F5               	movwf	?__div_to_l_+2
  6314  1FFB  0822               	movf	__div_to_l_@quot+1,w
  6315  1FFC  00F4               	movwf	?__div_to_l_+1
  6316  1FFD  0821               	movf	__div_to_l_@quot,w
  6317  1FFE  00F3               	movwf	?__div_to_l_
  6318  1FFF                     l586:	
  6319  1FFF  0008               	return
  6320  2000                     __end_of__div_to_l_:	
  6321                           
  6322                           	psect	text14
  6323  1DC9                     __ptext14:	
  6324 ;; *************** function ___xxtofl *****************
  6325 ;; Defined at:
  6326 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  sign            1    wreg     unsigned char 
  6329 ;;  val             4    3[COMMON] long 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;  sign            1    0[BANK0 ] unsigned char 
  6332 ;;  arg             4    2[BANK0 ] unsigned long 
  6333 ;;  exp             1    1[BANK0 ] unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  4    3[COMMON] unsigned char 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6343 ;;      Params:         4       0       0       0       0
  6344 ;;      Locals:         0       6       0       0       0
  6345 ;;      Temps:          4       0       0       0       0
  6346 ;;      Totals:         8       6       0       0       0
  6347 ;;Total ram usage:       14 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; Hardware stack levels required when called:    1
  6350 ;; This function calls:
  6351 ;;		Nothing
  6352 ;; This function is called by:
  6353 ;;		_main
  6354 ;;		_sprintf
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           
  6359                           ;psect for function ___xxtofl
  6360  1DC9                     ___xxtofl:	
  6361                           
  6362                           ;incstack = 0
  6363                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6364                           ;___xxtofl@sign stored from wreg
  6365  1DC9  1283               	bcf	3,5	;RP0=0, select bank0
  6366  1DCA  1303               	bcf	3,6	;RP1=0, select bank0
  6367  1DCB  00A0               	movwf	___xxtofl@sign
  6368  1DCC                     l3223:	
  6369  1DCC  0820               	movf	___xxtofl@sign,w
  6370  1DCD  1903               	btfsc	3,2
  6371  1DCE  2DD0               	goto	u5041
  6372  1DCF  2DD1               	goto	u5040
  6373  1DD0                     u5041:	
  6374  1DD0  2DE5               	goto	l3229
  6375  1DD1                     u5040:	
  6376  1DD1                     l3225:	
  6377  1DD1  1FF6               	btfss	___xxtofl@val+3,7
  6378  1DD2  2DD4               	goto	u5051
  6379  1DD3  2DD5               	goto	u5050
  6380  1DD4                     u5051:	
  6381  1DD4  2DE5               	goto	l3229
  6382  1DD5                     u5050:	
  6383  1DD5                     l3227:	
  6384  1DD5  0973               	comf	___xxtofl@val,w
  6385  1DD6  00A2               	movwf	___xxtofl@arg
  6386  1DD7  0974               	comf	___xxtofl@val+1,w
  6387  1DD8  00A3               	movwf	___xxtofl@arg+1
  6388  1DD9  0975               	comf	___xxtofl@val+2,w
  6389  1DDA  00A4               	movwf	___xxtofl@arg+2
  6390  1DDB  0976               	comf	___xxtofl@val+3,w
  6391  1DDC  00A5               	movwf	___xxtofl@arg+3
  6392  1DDD  0AA2               	incf	___xxtofl@arg,f
  6393  1DDE  1903               	skipnz
  6394  1DDF  0AA3               	incf	___xxtofl@arg+1,f
  6395  1DE0  1903               	skipnz
  6396  1DE1  0AA4               	incf	___xxtofl@arg+2,f
  6397  1DE2  1903               	skipnz
  6398  1DE3  0AA5               	incf	___xxtofl@arg+3,f
  6399  1DE4  2DED               	goto	l877
  6400  1DE5                     l3229:	
  6401  1DE5  0876               	movf	___xxtofl@val+3,w
  6402  1DE6  00A5               	movwf	___xxtofl@arg+3
  6403  1DE7  0875               	movf	___xxtofl@val+2,w
  6404  1DE8  00A4               	movwf	___xxtofl@arg+2
  6405  1DE9  0874               	movf	___xxtofl@val+1,w
  6406  1DEA  00A3               	movwf	___xxtofl@arg+1
  6407  1DEB  0873               	movf	___xxtofl@val,w
  6408  1DEC  00A2               	movwf	___xxtofl@arg
  6409  1DED                     l877:	
  6410  1DED  0876               	movf	___xxtofl@val+3,w
  6411  1DEE  0475               	iorwf	___xxtofl@val+2,w
  6412  1DEF  0474               	iorwf	___xxtofl@val+1,w
  6413  1DF0  0473               	iorwf	___xxtofl@val,w
  6414  1DF1  1D03               	skipz
  6415  1DF2  2DF4               	goto	u5061
  6416  1DF3  2DF5               	goto	u5060
  6417  1DF4                     u5061:	
  6418  1DF4  2DFE               	goto	l3235
  6419  1DF5                     u5060:	
  6420  1DF5                     l3231:	
  6421  1DF5  3000               	movlw	0
  6422  1DF6  00F6               	movwf	?___xxtofl+3
  6423  1DF7  3000               	movlw	0
  6424  1DF8  00F5               	movwf	?___xxtofl+2
  6425  1DF9  3000               	movlw	0
  6426  1DFA  00F4               	movwf	?___xxtofl+1
  6427  1DFB  3000               	movlw	0
  6428  1DFC  00F3               	movwf	?___xxtofl
  6429  1DFD  2E84               	goto	l879
  6430  1DFE                     l3235:	
  6431  1DFE  3096               	movlw	150
  6432  1DFF  00F7               	movwf	??___xxtofl
  6433  1E00  0877               	movf	??___xxtofl,w
  6434  1E01  00A1               	movwf	___xxtofl@exp
  6435  1E02  2E10               	goto	l3239
  6436  1E03                     l3237:	
  6437  1E03  3001               	movlw	1
  6438  1E04  00F7               	movwf	??___xxtofl
  6439  1E05  0877               	movf	??___xxtofl,w
  6440  1E06  07A1               	addwf	___xxtofl@exp,f
  6441  1E07  3001               	movlw	1
  6442  1E08                     u5075:	
  6443  1E08  1003               	clrc
  6444  1E09  0CA5               	rrf	___xxtofl@arg+3,f
  6445  1E0A  0CA4               	rrf	___xxtofl@arg+2,f
  6446  1E0B  0CA3               	rrf	___xxtofl@arg+1,f
  6447  1E0C  0CA2               	rrf	___xxtofl@arg,f
  6448  1E0D  3EFF               	addlw	-1
  6449  1E0E  1D03               	skipz
  6450  1E0F  2E08               	goto	u5075
  6451  1E10                     l3239:	
  6452  1E10  30FE               	movlw	254
  6453  1E11  0525               	andwf	___xxtofl@arg+3,w
  6454  1E12  1D03               	btfss	3,2
  6455  1E13  2E15               	goto	u5081
  6456  1E14  2E16               	goto	u5080
  6457  1E15                     u5081:	
  6458  1E15  2E03               	goto	l3237
  6459  1E16                     u5080:	
  6460  1E16  2E32               	goto	l883
  6461  1E17                     l3241:	
  6462  1E17  3001               	movlw	1
  6463  1E18  00F7               	movwf	??___xxtofl
  6464  1E19  0877               	movf	??___xxtofl,w
  6465  1E1A  07A1               	addwf	___xxtofl@exp,f
  6466  1E1B                     l3243:	
  6467  1E1B  3001               	movlw	1
  6468  1E1C  07A2               	addwf	___xxtofl@arg,f
  6469  1E1D  3000               	movlw	0
  6470  1E1E  1803               	skipnc
  6471  1E1F  3001               	movlw	1
  6472  1E20  07A3               	addwf	___xxtofl@arg+1,f
  6473  1E21  3000               	movlw	0
  6474  1E22  1803               	skipnc
  6475  1E23  3001               	movlw	1
  6476  1E24  07A4               	addwf	___xxtofl@arg+2,f
  6477  1E25  3000               	movlw	0
  6478  1E26  1803               	skipnc
  6479  1E27  3001               	movlw	1
  6480  1E28  07A5               	addwf	___xxtofl@arg+3,f
  6481  1E29                     l3245:	
  6482  1E29  3001               	movlw	1
  6483  1E2A                     u5095:	
  6484  1E2A  1003               	clrc
  6485  1E2B  0CA5               	rrf	___xxtofl@arg+3,f
  6486  1E2C  0CA4               	rrf	___xxtofl@arg+2,f
  6487  1E2D  0CA3               	rrf	___xxtofl@arg+1,f
  6488  1E2E  0CA2               	rrf	___xxtofl@arg,f
  6489  1E2F  3EFF               	addlw	-1
  6490  1E30  1D03               	skipz
  6491  1E31  2E2A               	goto	u5095
  6492  1E32                     l883:	
  6493  1E32  30FF               	movlw	255
  6494  1E33  0525               	andwf	___xxtofl@arg+3,w
  6495  1E34  1D03               	btfss	3,2
  6496  1E35  2E37               	goto	u5101
  6497  1E36  2E38               	goto	u5100
  6498  1E37                     u5101:	
  6499  1E37  2E17               	goto	l3241
  6500  1E38                     u5100:	
  6501  1E38  2E44               	goto	l3249
  6502  1E39                     l3247:	
  6503  1E39  3001               	movlw	1
  6504  1E3A  02A1               	subwf	___xxtofl@exp,f
  6505  1E3B  3001               	movlw	1
  6506  1E3C  00F7               	movwf	??___xxtofl
  6507  1E3D                     u5115:	
  6508  1E3D  1003               	clrc
  6509  1E3E  0DA2               	rlf	___xxtofl@arg,f
  6510  1E3F  0DA3               	rlf	___xxtofl@arg+1,f
  6511  1E40  0DA4               	rlf	___xxtofl@arg+2,f
  6512  1E41  0DA5               	rlf	___xxtofl@arg+3,f
  6513  1E42  0BF7               	decfsz	??___xxtofl,f
  6514  1E43  2E3D               	goto	u5115
  6515  1E44                     l3249:	
  6516  1E44  1BA4               	btfsc	___xxtofl@arg+2,7
  6517  1E45  2E47               	goto	u5121
  6518  1E46  2E48               	goto	u5120
  6519  1E47                     u5121:	
  6520  1E47  2E4E               	goto	l890
  6521  1E48                     u5120:	
  6522  1E48                     l3251:	
  6523  1E48  3002               	movlw	2
  6524  1E49  0221               	subwf	___xxtofl@exp,w
  6525  1E4A  1803               	skipnc
  6526  1E4B  2E4D               	goto	u5131
  6527  1E4C  2E4E               	goto	u5130
  6528  1E4D                     u5131:	
  6529  1E4D  2E39               	goto	l3247
  6530  1E4E                     u5130:	
  6531  1E4E                     l890:	
  6532  1E4E  1821               	btfsc	___xxtofl@exp,0
  6533  1E4F  2E51               	goto	u5141
  6534  1E50  2E52               	goto	u5140
  6535  1E51                     u5141:	
  6536  1E51  2E5A               	goto	l891
  6537  1E52                     u5140:	
  6538  1E52                     l3253:	
  6539  1E52  30FF               	movlw	255
  6540  1E53  05A2               	andwf	___xxtofl@arg,f
  6541  1E54  30FF               	movlw	255
  6542  1E55  05A3               	andwf	___xxtofl@arg+1,f
  6543  1E56  307F               	movlw	127
  6544  1E57  05A4               	andwf	___xxtofl@arg+2,f
  6545  1E58  30FF               	movlw	255
  6546  1E59  05A5               	andwf	___xxtofl@arg+3,f
  6547  1E5A                     l891:	
  6548  1E5A  1003               	clrc
  6549  1E5B  0CA1               	rrf	___xxtofl@exp,f
  6550  1E5C                     l3255:	
  6551  1E5C  0821               	movf	___xxtofl@exp,w
  6552  1E5D  00F7               	movwf	??___xxtofl
  6553  1E5E  01F8               	clrf	??___xxtofl+1
  6554  1E5F  01F9               	clrf	??___xxtofl+2
  6555  1E60  01FA               	clrf	??___xxtofl+3
  6556  1E61  3018               	movlw	24
  6557  1E62                     u5155:	
  6558  1E62  1003               	clrc
  6559  1E63  0DF7               	rlf	??___xxtofl,f
  6560  1E64  0DF8               	rlf	??___xxtofl+1,f
  6561  1E65  0DF9               	rlf	??___xxtofl+2,f
  6562  1E66  0DFA               	rlf	??___xxtofl+3,f
  6563  1E67                     u5150:	
  6564  1E67  3EFF               	addlw	-1
  6565  1E68  1D03               	skipz
  6566  1E69  2E62               	goto	u5155
  6567  1E6A  0877               	movf	??___xxtofl,w
  6568  1E6B  04A2               	iorwf	___xxtofl@arg,f
  6569  1E6C  0878               	movf	??___xxtofl+1,w
  6570  1E6D  04A3               	iorwf	___xxtofl@arg+1,f
  6571  1E6E  0879               	movf	??___xxtofl+2,w
  6572  1E6F  04A4               	iorwf	___xxtofl@arg+2,f
  6573  1E70  087A               	movf	??___xxtofl+3,w
  6574  1E71  04A5               	iorwf	___xxtofl@arg+3,f
  6575  1E72                     l3257:	
  6576  1E72  0820               	movf	___xxtofl@sign,w
  6577  1E73  1903               	btfsc	3,2
  6578  1E74  2E76               	goto	u5161
  6579  1E75  2E77               	goto	u5160
  6580  1E76                     u5161:	
  6581  1E76  2E7C               	goto	l3263
  6582  1E77                     u5160:	
  6583  1E77                     l3259:	
  6584  1E77  1FF6               	btfss	___xxtofl@val+3,7
  6585  1E78  2E7A               	goto	u5171
  6586  1E79  2E7B               	goto	u5170
  6587  1E7A                     u5171:	
  6588  1E7A  2E7C               	goto	l3263
  6589  1E7B                     u5170:	
  6590  1E7B                     l3261:	
  6591  1E7B  17A5               	bsf	___xxtofl@arg+3,7
  6592  1E7C                     l3263:	
  6593  1E7C  0825               	movf	___xxtofl@arg+3,w
  6594  1E7D  00F6               	movwf	?___xxtofl+3
  6595  1E7E  0824               	movf	___xxtofl@arg+2,w
  6596  1E7F  00F5               	movwf	?___xxtofl+2
  6597  1E80  0823               	movf	___xxtofl@arg+1,w
  6598  1E81  00F4               	movwf	?___xxtofl+1
  6599  1E82  0822               	movf	___xxtofl@arg,w
  6600  1E83  00F3               	movwf	?___xxtofl
  6601  1E84                     l879:	
  6602  1E84  0008               	return
  6603  1E85                     __end_of___xxtofl:	
  6604                           
  6605                           	psect	text15
  6606  19ED                     __ptext15:	
  6607 ;; *************** function ___wmul *****************
  6608 ;; Defined at:
  6609 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6610 ;; Parameters:    Size  Location     Type
  6611 ;;  multiplier      2    3[COMMON] unsigned int 
  6612 ;;  multiplicand    2    5[COMMON] unsigned int 
  6613 ;; Auto vars:     Size  Location     Type
  6614 ;;  product         2    7[COMMON] unsigned int 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  2    3[COMMON] unsigned int 
  6617 ;; Registers used:
  6618 ;;		wreg, status,2, status,0
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6624 ;;      Params:         4       0       0       0       0
  6625 ;;      Locals:         2       0       0       0       0
  6626 ;;      Temps:          0       0       0       0       0
  6627 ;;      Totals:         6       0       0       0       0
  6628 ;;Total ram usage:        6 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    1
  6631 ;; This function calls:
  6632 ;;		Nothing
  6633 ;; This function is called by:
  6634 ;;		_sprintf
  6635 ;; This function uses a non-reentrant model
  6636 ;;
  6637                           
  6638                           
  6639                           ;psect for function ___wmul
  6640  19ED                     ___wmul:	
  6641  19ED                     l3083:	
  6642                           ;incstack = 0
  6643                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6644                           
  6645  19ED  01F7               	clrf	___wmul@product
  6646  19EE  01F8               	clrf	___wmul@product+1
  6647  19EF                     l3085:	
  6648  19EF  1C73               	btfss	___wmul@multiplier,0
  6649  19F0  29F2               	goto	u4661
  6650  19F1  29F3               	goto	u4660
  6651  19F2                     u4661:	
  6652  19F2  29F9               	goto	l416
  6653  19F3                     u4660:	
  6654  19F3                     l3087:	
  6655  19F3  0875               	movf	___wmul@multiplicand,w
  6656  19F4  07F7               	addwf	___wmul@product,f
  6657  19F5  1803               	skipnc
  6658  19F6  0AF8               	incf	___wmul@product+1,f
  6659  19F7  0876               	movf	___wmul@multiplicand+1,w
  6660  19F8  07F8               	addwf	___wmul@product+1,f
  6661  19F9                     l416:	
  6662  19F9  3001               	movlw	1
  6663  19FA                     u4675:	
  6664  19FA  1003               	clrc
  6665  19FB  0DF5               	rlf	___wmul@multiplicand,f
  6666  19FC  0DF6               	rlf	___wmul@multiplicand+1,f
  6667  19FD  3EFF               	addlw	-1
  6668  19FE  1D03               	skipz
  6669  19FF  29FA               	goto	u4675
  6670  1A00                     l3089:	
  6671  1A00  3001               	movlw	1
  6672  1A01                     u4685:	
  6673  1A01  1003               	clrc
  6674  1A02  0CF4               	rrf	___wmul@multiplier+1,f
  6675  1A03  0CF3               	rrf	___wmul@multiplier,f
  6676  1A04  3EFF               	addlw	-1
  6677  1A05  1D03               	skipz
  6678  1A06  2A01               	goto	u4685
  6679  1A07                     l3091:	
  6680  1A07  0873               	movf	___wmul@multiplier,w
  6681  1A08  0474               	iorwf	___wmul@multiplier+1,w
  6682  1A09  1D03               	btfss	3,2
  6683  1A0A  2A0C               	goto	u4691
  6684  1A0B  2A0D               	goto	u4690
  6685  1A0C                     u4691:	
  6686  1A0C  29EF               	goto	l3085
  6687  1A0D                     u4690:	
  6688  1A0D                     l3093:	
  6689  1A0D  0878               	movf	___wmul@product+1,w
  6690  1A0E  00F4               	movwf	?___wmul+1
  6691  1A0F  0877               	movf	___wmul@product,w
  6692  1A10  00F3               	movwf	?___wmul
  6693  1A11                     l418:	
  6694  1A11  0008               	return
  6695  1A12                     __end_of___wmul:	
  6696                           
  6697                           	psect	text16
  6698  1C0E                     __ptext16:	
  6699 ;; *************** function ___llmod *****************
  6700 ;; Defined at:
  6701 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  divisor         4    6[BANK0 ] unsigned long 
  6704 ;;  dividend        4   10[BANK0 ] unsigned long 
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  counter         1   15[BANK0 ] unsigned char 
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  4    6[BANK0 ] unsigned long 
  6709 ;; Registers used:
  6710 ;;		wreg, status,2, status,0
  6711 ;; Tracked objects:
  6712 ;;		On entry : 0/0
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6716 ;;      Params:         0       8       0       0       0
  6717 ;;      Locals:         0       1       0       0       0
  6718 ;;      Temps:          0       1       0       0       0
  6719 ;;      Totals:         0      10       0       0       0
  6720 ;;Total ram usage:       10 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; Hardware stack levels required when called:    1
  6723 ;; This function calls:
  6724 ;;		Nothing
  6725 ;; This function is called by:
  6726 ;;		_sprintf
  6727 ;; This function uses a non-reentrant model
  6728 ;;
  6729                           
  6730                           
  6731                           ;psect for function ___llmod
  6732  1C0E                     ___llmod:	
  6733  1C0E                     l3197:	
  6734                           ;incstack = 0
  6735                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6736                           
  6737  1C0E  1283               	bcf	3,5	;RP0=0, select bank0
  6738  1C0F  1303               	bcf	3,6	;RP1=0, select bank0
  6739  1C10  0829               	movf	___llmod@divisor+3,w
  6740  1C11  0428               	iorwf	___llmod@divisor+2,w
  6741  1C12  0427               	iorwf	___llmod@divisor+1,w
  6742  1C13  0426               	iorwf	___llmod@divisor,w
  6743  1C14  1903               	skipnz
  6744  1C15  2C17               	goto	u4981
  6745  1C16  2C18               	goto	u4980
  6746  1C17                     u4981:	
  6747  1C17  2C5B               	goto	l3213
  6748  1C18                     u4980:	
  6749  1C18                     l3199:	
  6750  1C18  01AF               	clrf	___llmod@counter
  6751  1C19  0AAF               	incf	___llmod@counter,f
  6752  1C1A  2C28               	goto	l3203
  6753  1C1B                     l3201:	
  6754  1C1B  3001               	movlw	1
  6755  1C1C  00AE               	movwf	??___llmod
  6756  1C1D                     u4995:	
  6757  1C1D  1003               	clrc
  6758  1C1E  0DA6               	rlf	___llmod@divisor,f
  6759  1C1F  0DA7               	rlf	___llmod@divisor+1,f
  6760  1C20  0DA8               	rlf	___llmod@divisor+2,f
  6761  1C21  0DA9               	rlf	___llmod@divisor+3,f
  6762  1C22  0BAE               	decfsz	??___llmod,f
  6763  1C23  2C1D               	goto	u4995
  6764  1C24  3001               	movlw	1
  6765  1C25  00AE               	movwf	??___llmod
  6766  1C26  082E               	movf	??___llmod,w
  6767  1C27  07AF               	addwf	___llmod@counter,f
  6768  1C28                     l3203:	
  6769  1C28  1FA9               	btfss	___llmod@divisor+3,7
  6770  1C29  2C2B               	goto	u5001
  6771  1C2A  2C2C               	goto	u5000
  6772  1C2B                     u5001:	
  6773  1C2B  2C1B               	goto	l3201
  6774  1C2C                     u5000:	
  6775  1C2C                     l3205:	
  6776  1C2C  0829               	movf	___llmod@divisor+3,w
  6777  1C2D  022D               	subwf	___llmod@dividend+3,w
  6778  1C2E  1D03               	skipz
  6779  1C2F  2C3A               	goto	u5015
  6780  1C30  0828               	movf	___llmod@divisor+2,w
  6781  1C31  022C               	subwf	___llmod@dividend+2,w
  6782  1C32  1D03               	skipz
  6783  1C33  2C3A               	goto	u5015
  6784  1C34  0827               	movf	___llmod@divisor+1,w
  6785  1C35  022B               	subwf	___llmod@dividend+1,w
  6786  1C36  1D03               	skipz
  6787  1C37  2C3A               	goto	u5015
  6788  1C38  0826               	movf	___llmod@divisor,w
  6789  1C39  022A               	subwf	___llmod@dividend,w
  6790  1C3A                     u5015:	
  6791  1C3A  1C03               	skipc
  6792  1C3B  2C3D               	goto	u5011
  6793  1C3C  2C3E               	goto	u5010
  6794  1C3D                     u5011:	
  6795  1C3D  2C4C               	goto	l3209
  6796  1C3E                     u5010:	
  6797  1C3E                     l3207:	
  6798  1C3E  0826               	movf	___llmod@divisor,w
  6799  1C3F  02AA               	subwf	___llmod@dividend,f
  6800  1C40  0827               	movf	___llmod@divisor+1,w
  6801  1C41  1C03               	skipc
  6802  1C42  0F27               	incfsz	___llmod@divisor+1,w
  6803  1C43  02AB               	subwf	___llmod@dividend+1,f
  6804  1C44  0828               	movf	___llmod@divisor+2,w
  6805  1C45  1C03               	skipc
  6806  1C46  0F28               	incfsz	___llmod@divisor+2,w
  6807  1C47  02AC               	subwf	___llmod@dividend+2,f
  6808  1C48  0829               	movf	___llmod@divisor+3,w
  6809  1C49  1C03               	skipc
  6810  1C4A  0F29               	incfsz	___llmod@divisor+3,w
  6811  1C4B  02AD               	subwf	___llmod@dividend+3,f
  6812  1C4C                     l3209:	
  6813  1C4C  3001               	movlw	1
  6814  1C4D                     u5025:	
  6815  1C4D  1003               	clrc
  6816  1C4E  0CA9               	rrf	___llmod@divisor+3,f
  6817  1C4F  0CA8               	rrf	___llmod@divisor+2,f
  6818  1C50  0CA7               	rrf	___llmod@divisor+1,f
  6819  1C51  0CA6               	rrf	___llmod@divisor,f
  6820  1C52  3EFF               	addlw	-1
  6821  1C53  1D03               	skipz
  6822  1C54  2C4D               	goto	u5025
  6823  1C55                     l3211:	
  6824  1C55  3001               	movlw	1
  6825  1C56  02AF               	subwf	___llmod@counter,f
  6826  1C57  1D03               	btfss	3,2
  6827  1C58  2C5A               	goto	u5031
  6828  1C59  2C5B               	goto	u5030
  6829  1C5A                     u5031:	
  6830  1C5A  2C2C               	goto	l3205
  6831  1C5B                     u5030:	
  6832  1C5B                     l3213:	
  6833  1C5B  082D               	movf	___llmod@dividend+3,w
  6834  1C5C  00A9               	movwf	?___llmod+3
  6835  1C5D  082C               	movf	___llmod@dividend+2,w
  6836  1C5E  00A8               	movwf	?___llmod+2
  6837  1C5F  082B               	movf	___llmod@dividend+1,w
  6838  1C60  00A7               	movwf	?___llmod+1
  6839  1C61  082A               	movf	___llmod@dividend,w
  6840  1C62  00A6               	movwf	?___llmod
  6841  1C63                     l672:	
  6842  1C63  0008               	return
  6843  1C64                     __end_of___llmod:	
  6844                           
  6845                           	psect	text17
  6846  1CBD                     __ptext17:	
  6847 ;; *************** function ___lldiv *****************
  6848 ;; Defined at:
  6849 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;  divisor         4    3[COMMON] unsigned long 
  6852 ;;  dividend        4    7[COMMON] unsigned long 
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;  quotient        4    1[BANK0 ] unsigned long 
  6855 ;;  counter         1    5[BANK0 ] unsigned char 
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  4    3[COMMON] unsigned long 
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6865 ;;      Params:         8       0       0       0       0
  6866 ;;      Locals:         0       5       0       0       0
  6867 ;;      Temps:          0       1       0       0       0
  6868 ;;      Totals:         8       6       0       0       0
  6869 ;;Total ram usage:       14 bytes
  6870 ;; Hardware stack levels used:    1
  6871 ;; Hardware stack levels required when called:    1
  6872 ;; This function calls:
  6873 ;;		Nothing
  6874 ;; This function is called by:
  6875 ;;		_sprintf
  6876 ;; This function uses a non-reentrant model
  6877 ;;
  6878                           
  6879                           
  6880                           ;psect for function ___lldiv
  6881  1CBD                     ___lldiv:	
  6882  1CBD                     l3097:	
  6883                           ;incstack = 0
  6884                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6885                           
  6886  1CBD  3000               	movlw	0
  6887  1CBE  1283               	bcf	3,5	;RP0=0, select bank0
  6888  1CBF  1303               	bcf	3,6	;RP1=0, select bank0
  6889  1CC0  00A4               	movwf	___lldiv@quotient+3
  6890  1CC1  3000               	movlw	0
  6891  1CC2  00A3               	movwf	___lldiv@quotient+2
  6892  1CC3  3000               	movlw	0
  6893  1CC4  00A2               	movwf	___lldiv@quotient+1
  6894  1CC5  3000               	movlw	0
  6895  1CC6  00A1               	movwf	___lldiv@quotient
  6896  1CC7  0876               	movf	___lldiv@divisor+3,w
  6897  1CC8  0475               	iorwf	___lldiv@divisor+2,w
  6898  1CC9  0474               	iorwf	___lldiv@divisor+1,w
  6899  1CCA  0473               	iorwf	___lldiv@divisor,w
  6900  1CCB  1903               	skipnz
  6901  1CCC  2CCE               	goto	u4701
  6902  1CCD  2CCF               	goto	u4700
  6903  1CCE                     u4701:	
  6904  1CCE  2D1C               	goto	l3117
  6905  1CCF                     u4700:	
  6906  1CCF                     l3099:	
  6907  1CCF  01A5               	clrf	___lldiv@counter
  6908  1CD0  0AA5               	incf	___lldiv@counter,f
  6909  1CD1  2CDF               	goto	l3103
  6910  1CD2                     l3101:	
  6911  1CD2  3001               	movlw	1
  6912  1CD3  00A0               	movwf	??___lldiv
  6913  1CD4                     u4715:	
  6914  1CD4  1003               	clrc
  6915  1CD5  0DF3               	rlf	___lldiv@divisor,f
  6916  1CD6  0DF4               	rlf	___lldiv@divisor+1,f
  6917  1CD7  0DF5               	rlf	___lldiv@divisor+2,f
  6918  1CD8  0DF6               	rlf	___lldiv@divisor+3,f
  6919  1CD9  0BA0               	decfsz	??___lldiv,f
  6920  1CDA  2CD4               	goto	u4715
  6921  1CDB  3001               	movlw	1
  6922  1CDC  00A0               	movwf	??___lldiv
  6923  1CDD  0820               	movf	??___lldiv,w
  6924  1CDE  07A5               	addwf	___lldiv@counter,f
  6925  1CDF                     l3103:	
  6926  1CDF  1FF6               	btfss	___lldiv@divisor+3,7
  6927  1CE0  2CE2               	goto	u4721
  6928  1CE1  2CE3               	goto	u4720
  6929  1CE2                     u4721:	
  6930  1CE2  2CD2               	goto	l3101
  6931  1CE3                     u4720:	
  6932  1CE3                     l3105:	
  6933  1CE3  3001               	movlw	1
  6934  1CE4  00A0               	movwf	??___lldiv
  6935  1CE5                     u4735:	
  6936  1CE5  1003               	clrc
  6937  1CE6  0DA1               	rlf	___lldiv@quotient,f
  6938  1CE7  0DA2               	rlf	___lldiv@quotient+1,f
  6939  1CE8  0DA3               	rlf	___lldiv@quotient+2,f
  6940  1CE9  0DA4               	rlf	___lldiv@quotient+3,f
  6941  1CEA  0BA0               	decfsz	??___lldiv,f
  6942  1CEB  2CE5               	goto	u4735
  6943  1CEC                     l3107:	
  6944  1CEC  0876               	movf	___lldiv@divisor+3,w
  6945  1CED  027A               	subwf	___lldiv@dividend+3,w
  6946  1CEE  1D03               	skipz
  6947  1CEF  2CFA               	goto	u4745
  6948  1CF0  0875               	movf	___lldiv@divisor+2,w
  6949  1CF1  0279               	subwf	___lldiv@dividend+2,w
  6950  1CF2  1D03               	skipz
  6951  1CF3  2CFA               	goto	u4745
  6952  1CF4  0874               	movf	___lldiv@divisor+1,w
  6953  1CF5  0278               	subwf	___lldiv@dividend+1,w
  6954  1CF6  1D03               	skipz
  6955  1CF7  2CFA               	goto	u4745
  6956  1CF8  0873               	movf	___lldiv@divisor,w
  6957  1CF9  0277               	subwf	___lldiv@dividend,w
  6958  1CFA                     u4745:	
  6959  1CFA  1C03               	skipc
  6960  1CFB  2CFD               	goto	u4741
  6961  1CFC  2CFE               	goto	u4740
  6962  1CFD                     u4741:	
  6963  1CFD  2D0D               	goto	l3113
  6964  1CFE                     u4740:	
  6965  1CFE                     l3109:	
  6966  1CFE  0873               	movf	___lldiv@divisor,w
  6967  1CFF  02F7               	subwf	___lldiv@dividend,f
  6968  1D00  0874               	movf	___lldiv@divisor+1,w
  6969  1D01  1C03               	skipc
  6970  1D02  0F74               	incfsz	___lldiv@divisor+1,w
  6971  1D03  02F8               	subwf	___lldiv@dividend+1,f
  6972  1D04  0875               	movf	___lldiv@divisor+2,w
  6973  1D05  1C03               	skipc
  6974  1D06  0F75               	incfsz	___lldiv@divisor+2,w
  6975  1D07  02F9               	subwf	___lldiv@dividend+2,f
  6976  1D08  0876               	movf	___lldiv@divisor+3,w
  6977  1D09  1C03               	skipc
  6978  1D0A  0F76               	incfsz	___lldiv@divisor+3,w
  6979  1D0B  02FA               	subwf	___lldiv@dividend+3,f
  6980  1D0C                     l3111:	
  6981  1D0C  1421               	bsf	___lldiv@quotient,0
  6982  1D0D                     l3113:	
  6983  1D0D  3001               	movlw	1
  6984  1D0E                     u4755:	
  6985  1D0E  1003               	clrc
  6986  1D0F  0CF6               	rrf	___lldiv@divisor+3,f
  6987  1D10  0CF5               	rrf	___lldiv@divisor+2,f
  6988  1D11  0CF4               	rrf	___lldiv@divisor+1,f
  6989  1D12  0CF3               	rrf	___lldiv@divisor,f
  6990  1D13  3EFF               	addlw	-1
  6991  1D14  1D03               	skipz
  6992  1D15  2D0E               	goto	u4755
  6993  1D16                     l3115:	
  6994  1D16  3001               	movlw	1
  6995  1D17  02A5               	subwf	___lldiv@counter,f
  6996  1D18  1D03               	btfss	3,2
  6997  1D19  2D1B               	goto	u4761
  6998  1D1A  2D1C               	goto	u4760
  6999  1D1B                     u4761:	
  7000  1D1B  2CE3               	goto	l3105
  7001  1D1C                     u4760:	
  7002  1D1C                     l3117:	
  7003  1D1C  0824               	movf	___lldiv@quotient+3,w
  7004  1D1D  00F6               	movwf	?___lldiv+3
  7005  1D1E  0823               	movf	___lldiv@quotient+2,w
  7006  1D1F  00F5               	movwf	?___lldiv+2
  7007  1D20  0822               	movf	___lldiv@quotient+1,w
  7008  1D21  00F4               	movwf	?___lldiv+1
  7009  1D22  0821               	movf	___lldiv@quotient,w
  7010  1D23  00F3               	movwf	?___lldiv
  7011  1D24                     l452:	
  7012  1D24  0008               	return
  7013  1D25                     __end_of___lldiv:	
  7014                           
  7015                           	psect	text18
  7016  1004                     __ptext18:	
  7017 ;; *************** function ___fltol *****************
  7018 ;; Defined at:
  7019 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  f1              4   53[BANK0 ] unsigned long 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  exp1            1   63[BANK0 ] unsigned char 
  7024 ;;  sign1           1   62[BANK0 ] unsigned char 
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  4   53[BANK0 ] long 
  7027 ;; Registers used:
  7028 ;;		wreg, status,2, status,0
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7034 ;;      Params:         0       4       0       0       0
  7035 ;;      Locals:         0       2       0       0       0
  7036 ;;      Temps:          0       5       0       0       0
  7037 ;;      Totals:         0      11       0       0       0
  7038 ;;Total ram usage:       11 bytes
  7039 ;; Hardware stack levels used:    1
  7040 ;; Hardware stack levels required when called:    1
  7041 ;; This function calls:
  7042 ;;		Nothing
  7043 ;; This function is called by:
  7044 ;;		_sprintf
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           
  7049                           ;psect for function ___fltol
  7050  1004                     ___fltol:	
  7051  1004                     l3161:	
  7052                           ;incstack = 0
  7053                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7054                           
  7055  1004  1003               	clrc
  7056  1005  1283               	bcf	3,5	;RP0=0, select bank0
  7057  1006  1303               	bcf	3,6	;RP1=0, select bank0
  7058  1007  0D57               	rlf	___fltol@f1+2,w
  7059  1008  0D58               	rlf	___fltol@f1+3,w
  7060  1009  00D9               	movwf	??___fltol
  7061  100A  0859               	movf	??___fltol,w
  7062  100B  00DF               	movwf	___fltol@exp1
  7063  100C  085F               	movf	___fltol@exp1,w
  7064  100D  1D03               	btfss	3,2
  7065  100E  2810               	goto	u4881
  7066  100F  2811               	goto	u4880
  7067  1010                     u4881:	
  7068  1010  281A               	goto	l3167
  7069  1011                     u4880:	
  7070  1011                     l3163:	
  7071  1011  3000               	movlw	0
  7072  1012  00D8               	movwf	?___fltol+3
  7073  1013  3000               	movlw	0
  7074  1014  00D7               	movwf	?___fltol+2
  7075  1015  3000               	movlw	0
  7076  1016  00D6               	movwf	?___fltol+1
  7077  1017  3000               	movlw	0
  7078  1018  00D5               	movwf	?___fltol
  7079  1019  287F               	goto	l619
  7080  101A                     l3167:	
  7081  101A  0855               	movf	___fltol@f1,w
  7082  101B  00D9               	movwf	??___fltol
  7083  101C  0856               	movf	___fltol@f1+1,w
  7084  101D  00DA               	movwf	??___fltol+1
  7085  101E  0857               	movf	___fltol@f1+2,w
  7086  101F  00DB               	movwf	??___fltol+2
  7087  1020  0858               	movf	___fltol@f1+3,w
  7088  1021  00DC               	movwf	??___fltol+3
  7089  1022  301F               	movlw	31
  7090  1023                     u4895:	
  7091  1023  1003               	clrc
  7092  1024  0CDC               	rrf	??___fltol+3,f
  7093  1025  0CDB               	rrf	??___fltol+2,f
  7094  1026  0CDA               	rrf	??___fltol+1,f
  7095  1027  0CD9               	rrf	??___fltol,f
  7096  1028                     u4890:	
  7097  1028  3EFF               	addlw	-1
  7098  1029  1D03               	skipz
  7099  102A  2823               	goto	u4895
  7100  102B  0859               	movf	??___fltol,w
  7101  102C  00DD               	movwf	??___fltol+4
  7102  102D  085D               	movf	??___fltol+4,w
  7103  102E  00DE               	movwf	___fltol@sign1
  7104  102F                     l3169:	
  7105  102F  17D7               	bsf	___fltol@f1+2,7
  7106  1030                     l3171:	
  7107  1030  30FF               	movlw	255
  7108  1031  05D5               	andwf	___fltol@f1,f
  7109  1032  30FF               	movlw	255
  7110  1033  05D6               	andwf	___fltol@f1+1,f
  7111  1034  30FF               	movlw	255
  7112  1035  05D7               	andwf	___fltol@f1+2,f
  7113  1036  3000               	movlw	0
  7114  1037  05D8               	andwf	___fltol@f1+3,f
  7115  1038                     l3173:	
  7116  1038  3096               	movlw	150
  7117  1039  02DF               	subwf	___fltol@exp1,f
  7118  103A                     l3175:	
  7119  103A  1FDF               	btfss	___fltol@exp1,7
  7120  103B  283D               	goto	u4901
  7121  103C  283E               	goto	u4900
  7122  103D                     u4901:	
  7123  103D  2858               	goto	l3185
  7124  103E                     u4900:	
  7125  103E                     l3177:	
  7126  103E  085F               	movf	___fltol@exp1,w
  7127  103F  3A80               	xorlw	128
  7128  1040  3E97               	addlw	151
  7129  1041  1803               	skipnc
  7130  1042  2844               	goto	u4911
  7131  1043  2845               	goto	u4910
  7132  1044                     u4911:	
  7133  1044  2846               	goto	l3183
  7134  1045                     u4910:	
  7135  1045  2811               	goto	l3163
  7136  1046                     l3183:	
  7137  1046  3001               	movlw	1
  7138  1047                     u4925:	
  7139  1047  1003               	clrc
  7140  1048  0CD8               	rrf	___fltol@f1+3,f
  7141  1049  0CD7               	rrf	___fltol@f1+2,f
  7142  104A  0CD6               	rrf	___fltol@f1+1,f
  7143  104B  0CD5               	rrf	___fltol@f1,f
  7144  104C  3EFF               	addlw	-1
  7145  104D  1D03               	skipz
  7146  104E  2847               	goto	u4925
  7147  104F  3001               	movlw	1
  7148  1050  00D9               	movwf	??___fltol
  7149  1051  0859               	movf	??___fltol,w
  7150  1052  07DF               	addwf	___fltol@exp1,f
  7151  1053  1D03               	btfss	3,2
  7152  1054  2856               	goto	u4931
  7153  1055  2857               	goto	u4930
  7154  1056                     u4931:	
  7155  1056  2846               	goto	l3183
  7156  1057                     u4930:	
  7157  1057  286F               	goto	l3193
  7158  1058                     l3185:	
  7159  1058  3020               	movlw	32
  7160  1059  025F               	subwf	___fltol@exp1,w
  7161  105A  1C03               	skipc
  7162  105B  285D               	goto	u4941
  7163  105C  285E               	goto	u4940
  7164  105D                     u4941:	
  7165  105D  286A               	goto	l626
  7166  105E                     u4940:	
  7167  105E  2811               	goto	l3163
  7168  105F                     l3191:	
  7169  105F  3001               	movlw	1
  7170  1060  00D9               	movwf	??___fltol
  7171  1061                     u4955:	
  7172  1061  1003               	clrc
  7173  1062  0DD5               	rlf	___fltol@f1,f
  7174  1063  0DD6               	rlf	___fltol@f1+1,f
  7175  1064  0DD7               	rlf	___fltol@f1+2,f
  7176  1065  0DD8               	rlf	___fltol@f1+3,f
  7177  1066  0BD9               	decfsz	??___fltol,f
  7178  1067  2861               	goto	u4955
  7179  1068  3001               	movlw	1
  7180  1069  02DF               	subwf	___fltol@exp1,f
  7181  106A                     l626:	
  7182  106A  085F               	movf	___fltol@exp1,w
  7183  106B  1D03               	btfss	3,2
  7184  106C  286E               	goto	u4961
  7185  106D  286F               	goto	u4960
  7186  106E                     u4961:	
  7187  106E  285F               	goto	l3191
  7188  106F                     u4960:	
  7189  106F                     l3193:	
  7190  106F  085E               	movf	___fltol@sign1,w
  7191  1070  1903               	btfsc	3,2
  7192  1071  2873               	goto	u4971
  7193  1072  2874               	goto	u4970
  7194  1073                     u4971:	
  7195  1073  287F               	goto	l629
  7196  1074                     u4970:	
  7197  1074                     l3195:	
  7198  1074  09D5               	comf	___fltol@f1,f
  7199  1075  09D6               	comf	___fltol@f1+1,f
  7200  1076  09D7               	comf	___fltol@f1+2,f
  7201  1077  09D8               	comf	___fltol@f1+3,f
  7202  1078  0AD5               	incf	___fltol@f1,f
  7203  1079  1903               	skipnz
  7204  107A  0AD6               	incf	___fltol@f1+1,f
  7205  107B  1903               	skipnz
  7206  107C  0AD7               	incf	___fltol@f1+2,f
  7207  107D  1903               	skipnz
  7208  107E  0AD8               	incf	___fltol@f1+3,f
  7209  107F                     l629:	
  7210  107F                     l619:	
  7211  107F  0008               	return
  7212  1080                     __end_of___fltol:	
  7213                           
  7214                           	psect	text19
  7215  1B6B                     __ptext19:	
  7216 ;; *************** function ___flsub *****************
  7217 ;; Defined at:
  7218 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7219 ;; Parameters:    Size  Location     Type
  7220 ;;  a               4    0[BANK1 ] long 
  7221 ;;  b               4    4[BANK1 ] long 
  7222 ;; Auto vars:     Size  Location     Type
  7223 ;;		None
  7224 ;; Return value:  Size  Location     Type
  7225 ;;                  4    0[BANK1 ] long 
  7226 ;; Registers used:
  7227 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7228 ;; Tracked objects:
  7229 ;;		On entry : 0/0
  7230 ;;		On exit  : 0/0
  7231 ;;		Unchanged: 0/0
  7232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7233 ;;      Params:         0       0       8       0       0
  7234 ;;      Locals:         0       0       0       0       0
  7235 ;;      Temps:          0       0       0       0       0
  7236 ;;      Totals:         0       0       8       0       0
  7237 ;;Total ram usage:        8 bytes
  7238 ;; Hardware stack levels used:    1
  7239 ;; Hardware stack levels required when called:    2
  7240 ;; This function calls:
  7241 ;;		___fladd
  7242 ;; This function is called by:
  7243 ;;		_sprintf
  7244 ;; This function uses a non-reentrant model
  7245 ;;
  7246                           
  7247                           
  7248                           ;psect for function ___flsub
  7249  1B6B                     ___flsub:	
  7250  1B6B                     l3217:	
  7251                           ;incstack = 0
  7252                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7253                           
  7254  1B6B  3080               	movlw	128
  7255  1B6C  1683               	bsf	3,5	;RP0=1, select bank1
  7256  1B6D  1303               	bcf	3,6	;RP1=0, select bank1
  7257  1B6E  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7258  1B6F                     l3219:	
  7259  1B6F  0827               	movf	(___flsub@b+3)^(0+128),w
  7260  1B70  1283               	bcf	3,5	;RP0=0, select bank0
  7261  1B71  1303               	bcf	3,6	;RP1=0, select bank0
  7262  1B72  00D9               	movwf	___fladd@b+3
  7263  1B73  1683               	bsf	3,5	;RP0=1, select bank1
  7264  1B74  1303               	bcf	3,6	;RP1=0, select bank1
  7265  1B75  0826               	movf	(___flsub@b+2)^(0+128),w
  7266  1B76  1283               	bcf	3,5	;RP0=0, select bank0
  7267  1B77  1303               	bcf	3,6	;RP1=0, select bank0
  7268  1B78  00D8               	movwf	___fladd@b+2
  7269  1B79  1683               	bsf	3,5	;RP0=1, select bank1
  7270  1B7A  1303               	bcf	3,6	;RP1=0, select bank1
  7271  1B7B  0825               	movf	(___flsub@b+1)^(0+128),w
  7272  1B7C  1283               	bcf	3,5	;RP0=0, select bank0
  7273  1B7D  1303               	bcf	3,6	;RP1=0, select bank0
  7274  1B7E  00D7               	movwf	___fladd@b+1
  7275  1B7F  1683               	bsf	3,5	;RP0=1, select bank1
  7276  1B80  1303               	bcf	3,6	;RP1=0, select bank1
  7277  1B81  0824               	movf	___flsub@b^(0+128),w
  7278  1B82  1283               	bcf	3,5	;RP0=0, select bank0
  7279  1B83  1303               	bcf	3,6	;RP1=0, select bank0
  7280  1B84  00D6               	movwf	___fladd@b
  7281  1B85  1683               	bsf	3,5	;RP0=1, select bank1
  7282  1B86  1303               	bcf	3,6	;RP1=0, select bank1
  7283  1B87  0823               	movf	(___flsub@a+3)^(0+128),w
  7284  1B88  1283               	bcf	3,5	;RP0=0, select bank0
  7285  1B89  1303               	bcf	3,6	;RP1=0, select bank0
  7286  1B8A  00DD               	movwf	___fladd@a+3
  7287  1B8B  1683               	bsf	3,5	;RP0=1, select bank1
  7288  1B8C  1303               	bcf	3,6	;RP1=0, select bank1
  7289  1B8D  0822               	movf	(___flsub@a+2)^(0+128),w
  7290  1B8E  1283               	bcf	3,5	;RP0=0, select bank0
  7291  1B8F  1303               	bcf	3,6	;RP1=0, select bank0
  7292  1B90  00DC               	movwf	___fladd@a+2
  7293  1B91  1683               	bsf	3,5	;RP0=1, select bank1
  7294  1B92  1303               	bcf	3,6	;RP1=0, select bank1
  7295  1B93  0821               	movf	(___flsub@a+1)^(0+128),w
  7296  1B94  1283               	bcf	3,5	;RP0=0, select bank0
  7297  1B95  1303               	bcf	3,6	;RP1=0, select bank0
  7298  1B96  00DB               	movwf	___fladd@a+1
  7299  1B97  1683               	bsf	3,5	;RP0=1, select bank1
  7300  1B98  1303               	bcf	3,6	;RP1=0, select bank1
  7301  1B99  0820               	movf	___flsub@a^(0+128),w
  7302  1B9A  1283               	bcf	3,5	;RP0=0, select bank0
  7303  1B9B  1303               	bcf	3,6	;RP1=0, select bank0
  7304  1B9C  00DA               	movwf	___fladd@a
  7305  1B9D  160A  118A  228D  160A  158A  	fcall	___fladd
  7306  1BA2  1283               	bcf	3,5	;RP0=0, select bank0
  7307  1BA3  1303               	bcf	3,6	;RP1=0, select bank0
  7308  1BA4  0859               	movf	?___fladd+3,w
  7309  1BA5  1683               	bsf	3,5	;RP0=1, select bank1
  7310  1BA6  1303               	bcf	3,6	;RP1=0, select bank1
  7311  1BA7  00A3               	movwf	(?___flsub+3)^(0+128)
  7312  1BA8  1283               	bcf	3,5	;RP0=0, select bank0
  7313  1BA9  1303               	bcf	3,6	;RP1=0, select bank0
  7314  1BAA  0858               	movf	?___fladd+2,w
  7315  1BAB  1683               	bsf	3,5	;RP0=1, select bank1
  7316  1BAC  1303               	bcf	3,6	;RP1=0, select bank1
  7317  1BAD  00A2               	movwf	(?___flsub+2)^(0+128)
  7318  1BAE  1283               	bcf	3,5	;RP0=0, select bank0
  7319  1BAF  1303               	bcf	3,6	;RP1=0, select bank0
  7320  1BB0  0857               	movf	?___fladd+1,w
  7321  1BB1  1683               	bsf	3,5	;RP0=1, select bank1
  7322  1BB2  1303               	bcf	3,6	;RP1=0, select bank1
  7323  1BB3  00A1               	movwf	(?___flsub+1)^(0+128)
  7324  1BB4  1283               	bcf	3,5	;RP0=0, select bank0
  7325  1BB5  1303               	bcf	3,6	;RP1=0, select bank0
  7326  1BB6  0856               	movf	?___fladd,w
  7327  1BB7  1683               	bsf	3,5	;RP0=1, select bank1
  7328  1BB8  1303               	bcf	3,6	;RP1=0, select bank1
  7329  1BB9  00A0               	movwf	?___flsub^(0+128)
  7330  1BBA                     l789:	
  7331  1BBA  0008               	return
  7332  1BBB                     __end_of___flsub:	
  7333                           
  7334                           	psect	text20
  7335  128D                     __ptext20:	
  7336 ;; *************** function ___fladd *****************
  7337 ;; Defined at:
  7338 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7339 ;; Parameters:    Size  Location     Type
  7340 ;;  b               4   54[BANK0 ] long 
  7341 ;;  a               4   58[BANK0 ] long 
  7342 ;; Auto vars:     Size  Location     Type
  7343 ;;  grs             1   73[BANK0 ] unsigned char 
  7344 ;;  bexp            1   72[BANK0 ] unsigned char 
  7345 ;;  aexp            1   71[BANK0 ] unsigned char 
  7346 ;;  signs           1   70[BANK0 ] unsigned char 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  4   54[BANK0 ] unsigned char 
  7349 ;; Registers used:
  7350 ;;		wreg, status,2, status,0, btemp+1
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7356 ;;      Params:         0       8       0       0       0
  7357 ;;      Locals:         0       4       0       0       0
  7358 ;;      Temps:          0       8       0       0       0
  7359 ;;      Totals:         0      20       0       0       0
  7360 ;;Total ram usage:       20 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:    1
  7363 ;; This function calls:
  7364 ;;		Nothing
  7365 ;; This function is called by:
  7366 ;;		_sprintf
  7367 ;;		___flsub
  7368 ;; This function uses a non-reentrant model
  7369 ;;
  7370                           
  7371                           
  7372                           ;psect for function ___fladd
  7373  128D                     ___fladd:	
  7374  128D                     l2555:	
  7375                           ;incstack = 0
  7376                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7377                           
  7378  128D  1283               	bcf	3,5	;RP0=0, select bank0
  7379  128E  1303               	bcf	3,6	;RP1=0, select bank0
  7380  128F  0859               	movf	___fladd@b+3,w
  7381  1290  3980               	andlw	128
  7382  1291  00DE               	movwf	??___fladd
  7383  1292  085E               	movf	??___fladd,w
  7384  1293  00E6               	movwf	___fladd@signs
  7385  1294                     l2557:	
  7386  1294  0859               	movf	___fladd@b+3,w
  7387  1295  00DE               	movwf	??___fladd
  7388  1296  075E               	addwf	??___fladd,w
  7389  1297  00DF               	movwf	??___fladd+1
  7390  1298  085F               	movf	??___fladd+1,w
  7391  1299  00E8               	movwf	___fladd@bexp
  7392  129A                     l2559:	
  7393  129A  1FD8               	btfss	___fladd@b+2,7
  7394  129B  2A9D               	goto	u3291
  7395  129C  2A9E               	goto	u3290
  7396  129D                     u3291:	
  7397  129D  2A9F               	goto	l2563
  7398  129E                     u3290:	
  7399  129E                     l2561:	
  7400  129E  1468               	bsf	___fladd@bexp,0
  7401  129F                     l2563:	
  7402  129F  0868               	movf	___fladd@bexp,w
  7403  12A0  1903               	btfsc	3,2
  7404  12A1  2AA3               	goto	u3301
  7405  12A2  2AA4               	goto	u3300
  7406  12A3                     u3301:	
  7407  12A3  2AB4               	goto	l2573
  7408  12A4                     u3300:	
  7409  12A4                     l2565:	
  7410  12A4  0A68               	incf	___fladd@bexp,w
  7411  12A5  1D03               	btfss	3,2
  7412  12A6  2AA8               	goto	u3311
  7413  12A7  2AA9               	goto	u3310
  7414  12A8                     u3311:	
  7415  12A8  2AB1               	goto	l2569
  7416  12A9                     u3310:	
  7417  12A9                     l2567:	
  7418  12A9  3000               	movlw	0
  7419  12AA  00D9               	movwf	___fladd@b+3
  7420  12AB  3000               	movlw	0
  7421  12AC  00D8               	movwf	___fladd@b+2
  7422  12AD  3000               	movlw	0
  7423  12AE  00D7               	movwf	___fladd@b+1
  7424  12AF  3000               	movlw	0
  7425  12B0  00D6               	movwf	___fladd@b
  7426  12B1                     l2569:	
  7427  12B1  17D8               	bsf	___fladd@b+2,7
  7428  12B2                     l2571:	
  7429  12B2  01D9               	clrf	___fladd@b+3
  7430  12B3  2ABC               	goto	l2575
  7431  12B4                     l2573:	
  7432  12B4  3000               	movlw	0
  7433  12B5  00D9               	movwf	___fladd@b+3
  7434  12B6  3000               	movlw	0
  7435  12B7  00D8               	movwf	___fladd@b+2
  7436  12B8  3000               	movlw	0
  7437  12B9  00D7               	movwf	___fladd@b+1
  7438  12BA  3000               	movlw	0
  7439  12BB  00D6               	movwf	___fladd@b
  7440  12BC                     l2575:	
  7441  12BC  085D               	movf	___fladd@a+3,w
  7442  12BD  3980               	andlw	128
  7443  12BE  00DE               	movwf	??___fladd
  7444  12BF  085E               	movf	??___fladd,w
  7445  12C0  00E7               	movwf	___fladd@aexp
  7446  12C1                     l2577:	
  7447  12C1  0867               	movf	___fladd@aexp,w
  7448  12C2  0666               	xorwf	___fladd@signs,w
  7449  12C3  1903               	skipnz
  7450  12C4  2AC6               	goto	u3321
  7451  12C5  2AC7               	goto	u3320
  7452  12C6                     u3321:	
  7453  12C6  2AC8               	goto	l2581
  7454  12C7                     u3320:	
  7455  12C7                     l2579:	
  7456  12C7  1766               	bsf	___fladd@signs,6
  7457  12C8                     l2581:	
  7458  12C8  085D               	movf	___fladd@a+3,w
  7459  12C9  00DE               	movwf	??___fladd
  7460  12CA  075E               	addwf	??___fladd,w
  7461  12CB  00DF               	movwf	??___fladd+1
  7462  12CC  085F               	movf	??___fladd+1,w
  7463  12CD  00E7               	movwf	___fladd@aexp
  7464  12CE                     l2583:	
  7465  12CE  1FDC               	btfss	___fladd@a+2,7
  7466  12CF  2AD1               	goto	u3331
  7467  12D0  2AD2               	goto	u3330
  7468  12D1                     u3331:	
  7469  12D1  2AD3               	goto	l2587
  7470  12D2                     u3330:	
  7471  12D2                     l2585:	
  7472  12D2  1467               	bsf	___fladd@aexp,0
  7473  12D3                     l2587:	
  7474  12D3  0867               	movf	___fladd@aexp,w
  7475  12D4  1903               	btfsc	3,2
  7476  12D5  2AD7               	goto	u3341
  7477  12D6  2AD8               	goto	u3340
  7478  12D7                     u3341:	
  7479  12D7  2AE8               	goto	l2597
  7480  12D8                     u3340:	
  7481  12D8                     l2589:	
  7482  12D8  0A67               	incf	___fladd@aexp,w
  7483  12D9  1D03               	btfss	3,2
  7484  12DA  2ADC               	goto	u3351
  7485  12DB  2ADD               	goto	u3350
  7486  12DC                     u3351:	
  7487  12DC  2AE5               	goto	l2593
  7488  12DD                     u3350:	
  7489  12DD                     l2591:	
  7490  12DD  3000               	movlw	0
  7491  12DE  00DD               	movwf	___fladd@a+3
  7492  12DF  3000               	movlw	0
  7493  12E0  00DC               	movwf	___fladd@a+2
  7494  12E1  3000               	movlw	0
  7495  12E2  00DB               	movwf	___fladd@a+1
  7496  12E3  3000               	movlw	0
  7497  12E4  00DA               	movwf	___fladd@a
  7498  12E5                     l2593:	
  7499  12E5  17DC               	bsf	___fladd@a+2,7
  7500  12E6                     l2595:	
  7501  12E6  01DD               	clrf	___fladd@a+3
  7502  12E7  2AF0               	goto	l743
  7503  12E8                     l2597:	
  7504  12E8  3000               	movlw	0
  7505  12E9  00DD               	movwf	___fladd@a+3
  7506  12EA  3000               	movlw	0
  7507  12EB  00DC               	movwf	___fladd@a+2
  7508  12EC  3000               	movlw	0
  7509  12ED  00DB               	movwf	___fladd@a+1
  7510  12EE  3000               	movlw	0
  7511  12EF  00DA               	movwf	___fladd@a
  7512  12F0                     l743:	
  7513  12F0  0868               	movf	___fladd@bexp,w
  7514  12F1  0267               	subwf	___fladd@aexp,w
  7515  12F2  1803               	skipnc
  7516  12F3  2AF5               	goto	u3361
  7517  12F4  2AF6               	goto	u3360
  7518  12F5                     u3361:	
  7519  12F5  2B3A               	goto	l2633
  7520  12F6                     u3360:	
  7521  12F6                     l2599:	
  7522  12F6  1F66               	btfss	___fladd@signs,6
  7523  12F7  2AF9               	goto	u3371
  7524  12F8  2AFA               	goto	u3370
  7525  12F9                     u3371:	
  7526  12F9  2AFE               	goto	l2603
  7527  12FA                     u3370:	
  7528  12FA                     l2601:	
  7529  12FA  3080               	movlw	128
  7530  12FB  00DE               	movwf	??___fladd
  7531  12FC  085E               	movf	??___fladd,w
  7532  12FD  06E6               	xorwf	___fladd@signs,f
  7533  12FE                     l2603:	
  7534  12FE  0868               	movf	___fladd@bexp,w
  7535  12FF  00DE               	movwf	??___fladd
  7536  1300  085E               	movf	??___fladd,w
  7537  1301  00E9               	movwf	___fladd@grs
  7538  1302                     l2605:	
  7539  1302  0867               	movf	___fladd@aexp,w
  7540  1303  00DE               	movwf	??___fladd
  7541  1304  085E               	movf	??___fladd,w
  7542  1305  00E8               	movwf	___fladd@bexp
  7543  1306                     l2607:	
  7544  1306  0869               	movf	___fladd@grs,w
  7545  1307  00DE               	movwf	??___fladd
  7546  1308  085E               	movf	??___fladd,w
  7547  1309  00E7               	movwf	___fladd@aexp
  7548  130A                     l2609:	
  7549  130A  0856               	movf	___fladd@b,w
  7550  130B  00DE               	movwf	??___fladd
  7551  130C  085E               	movf	??___fladd,w
  7552  130D  00E9               	movwf	___fladd@grs
  7553  130E                     l2611:	
  7554  130E  085A               	movf	___fladd@a,w
  7555  130F  00DE               	movwf	??___fladd
  7556  1310  085E               	movf	??___fladd,w
  7557  1311  00D6               	movwf	___fladd@b
  7558  1312                     l2613:	
  7559  1312  0869               	movf	___fladd@grs,w
  7560  1313  00DE               	movwf	??___fladd
  7561  1314  085E               	movf	??___fladd,w
  7562  1315  00DA               	movwf	___fladd@a
  7563  1316                     l2615:	
  7564  1316  0857               	movf	___fladd@b+1,w
  7565  1317  00DE               	movwf	??___fladd
  7566  1318  085E               	movf	??___fladd,w
  7567  1319  00E9               	movwf	___fladd@grs
  7568  131A                     l2617:	
  7569  131A  085B               	movf	___fladd@a+1,w
  7570  131B  00DE               	movwf	??___fladd
  7571  131C  085E               	movf	??___fladd,w
  7572  131D  00D7               	movwf	___fladd@b+1
  7573  131E                     l2619:	
  7574  131E  0869               	movf	___fladd@grs,w
  7575  131F  00DE               	movwf	??___fladd
  7576  1320  085E               	movf	??___fladd,w
  7577  1321  00DB               	movwf	___fladd@a+1
  7578  1322                     l2621:	
  7579  1322  0858               	movf	___fladd@b+2,w
  7580  1323  00DE               	movwf	??___fladd
  7581  1324  085E               	movf	??___fladd,w
  7582  1325  00E9               	movwf	___fladd@grs
  7583  1326                     l2623:	
  7584  1326  085C               	movf	___fladd@a+2,w
  7585  1327  00DE               	movwf	??___fladd
  7586  1328  085E               	movf	??___fladd,w
  7587  1329  00D8               	movwf	___fladd@b+2
  7588  132A                     l2625:	
  7589  132A  0869               	movf	___fladd@grs,w
  7590  132B  00DE               	movwf	??___fladd
  7591  132C  085E               	movf	??___fladd,w
  7592  132D  00DC               	movwf	___fladd@a+2
  7593  132E                     l2627:	
  7594  132E  0859               	movf	___fladd@b+3,w
  7595  132F  00DE               	movwf	??___fladd
  7596  1330  085E               	movf	??___fladd,w
  7597  1331  00E9               	movwf	___fladd@grs
  7598  1332                     l2629:	
  7599  1332  085D               	movf	___fladd@a+3,w
  7600  1333  00DE               	movwf	??___fladd
  7601  1334  085E               	movf	??___fladd,w
  7602  1335  00D9               	movwf	___fladd@b+3
  7603  1336                     l2631:	
  7604  1336  0869               	movf	___fladd@grs,w
  7605  1337  00DE               	movwf	??___fladd
  7606  1338  085E               	movf	??___fladd,w
  7607  1339  00DD               	movwf	___fladd@a+3
  7608  133A                     l2633:	
  7609  133A  01E9               	clrf	___fladd@grs
  7610  133B                     l2635:	
  7611  133B  0867               	movf	___fladd@aexp,w
  7612  133C  00DE               	movwf	??___fladd
  7613  133D  01DF               	clrf	??___fladd+1
  7614  133E  085F               	movf	??___fladd+1,w
  7615  133F  00E1               	movwf	??___fladd+3
  7616  1340  0868               	movf	___fladd@bexp,w
  7617  1341  025E               	subwf	??___fladd,w
  7618  1342  00E0               	movwf	??___fladd+2
  7619  1343  1C03               	skipc
  7620  1344  03E1               	decf	??___fladd+3,f
  7621  1345  0861               	movf	??___fladd+3,w
  7622  1346  3A80               	xorlw	128
  7623  1347  00FF               	movwf	btemp+1
  7624  1348  3080               	movlw	128
  7625  1349  027F               	subwf	btemp+1,w
  7626  134A  1D03               	skipz
  7627  134B  2B4E               	goto	u3385
  7628  134C  301A               	movlw	26
  7629  134D  0260               	subwf	??___fladd+2,w
  7630  134E                     u3385:	
  7631  134E  1C03               	skipc
  7632  134F  2B51               	goto	u3381
  7633  1350  2B52               	goto	u3380
  7634  1351                     u3381:	
  7635  1351  2B8F               	goto	l2651
  7636  1352                     u3380:	
  7637  1352                     l2637:	
  7638  1352  1283               	bcf	3,5	;RP0=0, select bank0
  7639  1353  1303               	bcf	3,6	;RP1=0, select bank0
  7640  1354  0859               	movf	___fladd@b+3,w
  7641  1355  0458               	iorwf	___fladd@b+2,w
  7642  1356  0457               	iorwf	___fladd@b+1,w
  7643  1357  0456               	iorwf	___fladd@b,w
  7644  1358  1D03               	skipz
  7645  1359  2B5B               	goto	u3391
  7646  135A  2B5D               	goto	u3390
  7647  135B                     u3391:	
  7648  135B  3001               	movlw	1
  7649  135C  2B5E               	goto	u3400
  7650  135D                     u3390:	
  7651  135D  3000               	movlw	0
  7652  135E                     u3400:	
  7653  135E  00DE               	movwf	??___fladd
  7654  135F  085E               	movf	??___fladd,w
  7655  1360  00E9               	movwf	___fladd@grs
  7656  1361  3000               	movlw	0
  7657  1362  00D9               	movwf	___fladd@b+3
  7658  1363  3000               	movlw	0
  7659  1364  00D8               	movwf	___fladd@b+2
  7660  1365  3000               	movlw	0
  7661  1366  00D7               	movwf	___fladd@b+1
  7662  1367  3000               	movlw	0
  7663  1368  00D6               	movwf	___fladd@b
  7664  1369  0867               	movf	___fladd@aexp,w
  7665  136A  00DE               	movwf	??___fladd
  7666  136B  085E               	movf	??___fladd,w
  7667  136C  00E8               	movwf	___fladd@bexp
  7668  136D  2B97               	goto	l747
  7669  136E                     l749:	
  7670  136E  1C69               	btfss	___fladd@grs,0
  7671  136F  2B71               	goto	u3411
  7672  1370  2B72               	goto	u3410
  7673  1371                     u3411:	
  7674  1371  2B7B               	goto	l2641
  7675  1372                     u3410:	
  7676  1372                     l2639:	
  7677  1372  0869               	movf	___fladd@grs,w
  7678  1373  00DE               	movwf	??___fladd
  7679  1374  1003               	clrc
  7680  1375  0C5E               	rrf	??___fladd,w
  7681  1376  3801               	iorlw	1
  7682  1377  00DF               	movwf	??___fladd+1
  7683  1378  085F               	movf	??___fladd+1,w
  7684  1379  00E9               	movwf	___fladd@grs
  7685  137A  2B7D               	goto	l2643
  7686  137B                     l2641:	
  7687  137B  1003               	clrc
  7688  137C  0CE9               	rrf	___fladd@grs,f
  7689  137D                     l2643:	
  7690  137D  1C56               	btfss	___fladd@b,0
  7691  137E  2B80               	goto	u3421
  7692  137F  2B81               	goto	u3420
  7693  1380                     u3421:	
  7694  1380  2B82               	goto	l2647
  7695  1381                     u3420:	
  7696  1381                     l2645:	
  7697  1381  17E9               	bsf	___fladd@grs,7
  7698  1382                     l2647:	
  7699  1382  3001               	movlw	1
  7700  1383  00DE               	movwf	??___fladd
  7701  1384                     u3435:	
  7702  1384  0D59               	rlf	___fladd@b+3,w
  7703  1385  0CD9               	rrf	___fladd@b+3,f
  7704  1386  0CD8               	rrf	___fladd@b+2,f
  7705  1387  0CD7               	rrf	___fladd@b+1,f
  7706  1388  0CD6               	rrf	___fladd@b,f
  7707  1389  0BDE               	decfsz	??___fladd& (0+127),f
  7708  138A  2B84               	goto	u3435
  7709  138B                     l2649:	
  7710  138B  3001               	movlw	1
  7711  138C  00DE               	movwf	??___fladd
  7712  138D  085E               	movf	??___fladd,w
  7713  138E  07E8               	addwf	___fladd@bexp,f
  7714  138F                     l2651:	
  7715  138F  1283               	bcf	3,5	;RP0=0, select bank0
  7716  1390  1303               	bcf	3,6	;RP1=0, select bank0
  7717  1391  0867               	movf	___fladd@aexp,w
  7718  1392  0268               	subwf	___fladd@bexp,w
  7719  1393  1C03               	skipc
  7720  1394  2B96               	goto	u3441
  7721  1395  2B97               	goto	u3440
  7722  1396                     u3441:	
  7723  1396  2B6E               	goto	l749
  7724  1397                     u3440:	
  7725  1397                     l747:	
  7726  1397  1B66               	btfsc	___fladd@signs,6
  7727  1398  2B9A               	goto	u3451
  7728  1399  2B9B               	goto	u3450
  7729  139A                     u3451:	
  7730  139A  2BE6               	goto	l2677
  7731  139B                     u3450:	
  7732  139B                     l2653:	
  7733  139B  0868               	movf	___fladd@bexp,w
  7734  139C  1D03               	btfss	3,2
  7735  139D  2B9F               	goto	u3461
  7736  139E  2BA0               	goto	u3460
  7737  139F                     u3461:	
  7738  139F  2BA9               	goto	l2659
  7739  13A0                     u3460:	
  7740  13A0                     l2655:	
  7741  13A0  3000               	movlw	0
  7742  13A1  00D9               	movwf	?___fladd+3
  7743  13A2  3000               	movlw	0
  7744  13A3  00D8               	movwf	?___fladd+2
  7745  13A4  3000               	movlw	0
  7746  13A5  00D7               	movwf	?___fladd+1
  7747  13A6  3000               	movlw	0
  7748  13A7  00D6               	movwf	?___fladd
  7749  13A8  2D14               	goto	l756
  7750  13A9                     l2659:	
  7751  13A9  085A               	movf	___fladd@a,w
  7752  13AA  07D6               	addwf	___fladd@b,f
  7753  13AB  085B               	movf	___fladd@a+1,w
  7754  13AC  1103               	clrz
  7755  13AD  1803               	skipnc
  7756  13AE  3E01               	addlw	1
  7757  13AF  1903               	skipnz
  7758  13B0  2BB2               	goto	u3471
  7759  13B1  07D7               	addwf	___fladd@b+1,f
  7760  13B2                     u3471:	
  7761  13B2  085C               	movf	___fladd@a+2,w
  7762  13B3  1103               	clrz
  7763  13B4  1803               	skipnc
  7764  13B5  3E01               	addlw	1
  7765  13B6  1903               	skipnz
  7766  13B7  2BB9               	goto	u3472
  7767  13B8  07D8               	addwf	___fladd@b+2,f
  7768  13B9                     u3472:	
  7769  13B9  085D               	movf	___fladd@a+3,w
  7770  13BA  1103               	clrz
  7771  13BB  1803               	skipnc
  7772  13BC  3E01               	addlw	1
  7773  13BD  1903               	skipnz
  7774  13BE  2BC0               	goto	u3473
  7775  13BF  07D9               	addwf	___fladd@b+3,f
  7776  13C0                     u3473:	
  7777  13C0                     l2661:	
  7778  13C0  1C59               	btfss	___fladd@b+3,0
  7779  13C1  2BC3               	goto	u3481
  7780  13C2  2BC4               	goto	u3480
  7781  13C3                     u3481:	
  7782  13C3  2C9A               	goto	l2711
  7783  13C4                     u3480:	
  7784  13C4                     l2663:	
  7785  13C4  1C69               	btfss	___fladd@grs,0
  7786  13C5  2BC7               	goto	u3491
  7787  13C6  2BC8               	goto	u3490
  7788  13C7                     u3491:	
  7789  13C7  2BD1               	goto	l2667
  7790  13C8                     u3490:	
  7791  13C8                     l2665:	
  7792  13C8  0869               	movf	___fladd@grs,w
  7793  13C9  00DE               	movwf	??___fladd
  7794  13CA  1003               	clrc
  7795  13CB  0C5E               	rrf	??___fladd,w
  7796  13CC  3801               	iorlw	1
  7797  13CD  00DF               	movwf	??___fladd+1
  7798  13CE  085F               	movf	??___fladd+1,w
  7799  13CF  00E9               	movwf	___fladd@grs
  7800  13D0  2BD3               	goto	l2669
  7801  13D1                     l2667:	
  7802  13D1  1003               	clrc
  7803  13D2  0CE9               	rrf	___fladd@grs,f
  7804  13D3                     l2669:	
  7805  13D3  1C56               	btfss	___fladd@b,0
  7806  13D4  2BD6               	goto	u3501
  7807  13D5  2BD7               	goto	u3500
  7808  13D6                     u3501:	
  7809  13D6  2BD8               	goto	l2673
  7810  13D7                     u3500:	
  7811  13D7                     l2671:	
  7812  13D7  17E9               	bsf	___fladd@grs,7
  7813  13D8                     l2673:	
  7814  13D8  3001               	movlw	1
  7815  13D9  00DE               	movwf	??___fladd
  7816  13DA                     u3515:	
  7817  13DA  0D59               	rlf	___fladd@b+3,w
  7818  13DB  0CD9               	rrf	___fladd@b+3,f
  7819  13DC  0CD8               	rrf	___fladd@b+2,f
  7820  13DD  0CD7               	rrf	___fladd@b+1,f
  7821  13DE  0CD6               	rrf	___fladd@b,f
  7822  13DF  0BDE               	decfsz	??___fladd& (0+127),f
  7823  13E0  2BDA               	goto	u3515
  7824  13E1                     l2675:	
  7825  13E1  3001               	movlw	1
  7826  13E2  00DE               	movwf	??___fladd
  7827  13E3  085E               	movf	??___fladd,w
  7828  13E4  07E8               	addwf	___fladd@bexp,f
  7829  13E5  2C9A               	goto	l2711
  7830  13E6                     l2677:	
  7831  13E6  0859               	movf	___fladd@b+3,w
  7832  13E7  3A80               	xorlw	128
  7833  13E8  00FF               	movwf	btemp+1
  7834  13E9  085D               	movf	___fladd@a+3,w
  7835  13EA  3A80               	xorlw	128
  7836  13EB  027F               	subwf	btemp+1,w
  7837  13EC  1D03               	skipz
  7838  13ED  2BF8               	goto	u3523
  7839  13EE  085C               	movf	___fladd@a+2,w
  7840  13EF  0258               	subwf	___fladd@b+2,w
  7841  13F0  1D03               	skipz
  7842  13F1  2BF8               	goto	u3523
  7843  13F2  085B               	movf	___fladd@a+1,w
  7844  13F3  0257               	subwf	___fladd@b+1,w
  7845  13F4  1D03               	skipz
  7846  13F5  2BF8               	goto	u3523
  7847  13F6  085A               	movf	___fladd@a,w
  7848  13F7  0256               	subwf	___fladd@b,w
  7849  13F8                     u3523:	
  7850  13F8  1803               	skipnc
  7851  13F9  2BFB               	goto	u3521
  7852  13FA  2BFC               	goto	u3520
  7853  13FB                     u3521:	
  7854  13FB  2C54               	goto	l2687
  7855  13FC                     u3520:	
  7856  13FC                     l2679:	
  7857  13FC  30FF               	movlw	255
  7858  13FD  00DE               	movwf	??___fladd
  7859  13FE  30FF               	movlw	255
  7860  13FF  00DF               	movwf	??___fladd+1
  7861  1400  30FF               	movlw	255
  7862  1401  00E0               	movwf	??___fladd+2
  7863  1402  30FF               	movlw	255
  7864  1403  00E1               	movwf	??___fladd+3
  7865  1404  085A               	movf	___fladd@a,w
  7866  1405  00E2               	movwf	??___fladd+4
  7867  1406  085B               	movf	___fladd@a+1,w
  7868  1407  00E3               	movwf	??___fladd+5
  7869  1408  085C               	movf	___fladd@a+2,w
  7870  1409  00E4               	movwf	??___fladd+6
  7871  140A  085D               	movf	___fladd@a+3,w
  7872  140B  00E5               	movwf	??___fladd+7
  7873  140C  0856               	movf	___fladd@b,w
  7874  140D  02E2               	subwf	??___fladd+4,f
  7875  140E  0857               	movf	___fladd@b+1,w
  7876  140F  1C03               	skipc
  7877  1410  0F57               	incfsz	___fladd@b+1,w
  7878  1411  2C13               	goto	u3531
  7879  1412  2C14               	goto	u3532
  7880  1413                     u3531:	
  7881  1413  02E3               	subwf	??___fladd+5,f
  7882  1414                     u3532:	
  7883  1414  0858               	movf	___fladd@b+2,w
  7884  1415  1C03               	skipc
  7885  1416  0F58               	incfsz	___fladd@b+2,w
  7886  1417  2C19               	goto	u3533
  7887  1418  2C1A               	goto	u3534
  7888  1419                     u3533:	
  7889  1419  02E4               	subwf	??___fladd+6,f
  7890  141A                     u3534:	
  7891  141A  0859               	movf	___fladd@b+3,w
  7892  141B  1C03               	skipc
  7893  141C  0F59               	incfsz	___fladd@b+3,w
  7894  141D  2C1F               	goto	u3535
  7895  141E  2C20               	goto	u3536
  7896  141F                     u3535:	
  7897  141F  02E5               	subwf	??___fladd+7,f
  7898  1420                     u3536:	
  7899  1420  0862               	movf	??___fladd+4,w
  7900  1421  07DE               	addwf	??___fladd,f
  7901  1422  0863               	movf	??___fladd+5,w
  7902  1423  1803               	skipnc
  7903  1424  0F63               	incfsz	??___fladd+5,w
  7904  1425  2C27               	goto	u3540
  7905  1426  2C28               	goto	u3541
  7906  1427                     u3540:	
  7907  1427  07DF               	addwf	??___fladd+1,f
  7908  1428                     u3541:	
  7909  1428  0864               	movf	??___fladd+6,w
  7910  1429  1803               	skipnc
  7911  142A  0F64               	incfsz	??___fladd+6,w
  7912  142B  2C2D               	goto	u3542
  7913  142C  2C2E               	goto	u3543
  7914  142D                     u3542:	
  7915  142D  07E0               	addwf	??___fladd+2,f
  7916  142E                     u3543:	
  7917  142E  0865               	movf	??___fladd+7,w
  7918  142F  1803               	skipnc
  7919  1430  0A65               	incf	??___fladd+7,w
  7920  1431  07E1               	addwf	??___fladd+3,f
  7921  1432  0861               	movf	??___fladd+3,w
  7922  1433  00D9               	movwf	___fladd@b+3
  7923  1434  0860               	movf	??___fladd+2,w
  7924  1435  00D8               	movwf	___fladd@b+2
  7925  1436  085F               	movf	??___fladd+1,w
  7926  1437  00D7               	movwf	___fladd@b+1
  7927  1438  085E               	movf	??___fladd,w
  7928  1439  00D6               	movwf	___fladd@b
  7929  143A                     l2681:	
  7930  143A  3080               	movlw	128
  7931  143B  00DE               	movwf	??___fladd
  7932  143C  085E               	movf	??___fladd,w
  7933  143D  06E6               	xorwf	___fladd@signs,f
  7934  143E  09E9               	comf	___fladd@grs,f
  7935  143F  0AE9               	incf	___fladd@grs,f
  7936  1440                     l2683:	
  7937  1440  0869               	movf	___fladd@grs,w
  7938  1441  1D03               	btfss	3,2
  7939  1442  2C44               	goto	u3551
  7940  1443  2C45               	goto	u3550
  7941  1444                     u3551:	
  7942  1444  2C62               	goto	l764
  7943  1445                     u3550:	
  7944  1445                     l2685:	
  7945  1445  3001               	movlw	1
  7946  1446  07D6               	addwf	___fladd@b,f
  7947  1447  3000               	movlw	0
  7948  1448  1803               	skipnc
  7949  1449  3001               	movlw	1
  7950  144A  07D7               	addwf	___fladd@b+1,f
  7951  144B  3000               	movlw	0
  7952  144C  1803               	skipnc
  7953  144D  3001               	movlw	1
  7954  144E  07D8               	addwf	___fladd@b+2,f
  7955  144F  3000               	movlw	0
  7956  1450  1803               	skipnc
  7957  1451  3001               	movlw	1
  7958  1452  07D9               	addwf	___fladd@b+3,f
  7959  1453  2C62               	goto	l764
  7960  1454                     l2687:	
  7961  1454  085A               	movf	___fladd@a,w
  7962  1455  02D6               	subwf	___fladd@b,f
  7963  1456  085B               	movf	___fladd@a+1,w
  7964  1457  1C03               	skipc
  7965  1458  0F5B               	incfsz	___fladd@a+1,w
  7966  1459  02D7               	subwf	___fladd@b+1,f
  7967  145A  085C               	movf	___fladd@a+2,w
  7968  145B  1C03               	skipc
  7969  145C  0F5C               	incfsz	___fladd@a+2,w
  7970  145D  02D8               	subwf	___fladd@b+2,f
  7971  145E  085D               	movf	___fladd@a+3,w
  7972  145F  1C03               	skipc
  7973  1460  0F5D               	incfsz	___fladd@a+3,w
  7974  1461  02D9               	subwf	___fladd@b+3,f
  7975  1462                     l764:	
  7976  1462  0859               	movf	___fladd@b+3,w
  7977  1463  0458               	iorwf	___fladd@b+2,w
  7978  1464  0457               	iorwf	___fladd@b+1,w
  7979  1465  0456               	iorwf	___fladd@b,w
  7980  1466  1D03               	skipz
  7981  1467  2C69               	goto	u3561
  7982  1468  2C6A               	goto	u3560
  7983  1469                     u3561:	
  7984  1469  2C96               	goto	l2709
  7985  146A                     u3560:	
  7986  146A                     l2689:	
  7987  146A  0869               	movf	___fladd@grs,w
  7988  146B  1D03               	btfss	3,2
  7989  146C  2C6E               	goto	u3571
  7990  146D  2C6F               	goto	u3570
  7991  146E                     u3571:	
  7992  146E  2C96               	goto	l2709
  7993  146F                     u3570:	
  7994  146F                     l2691:	
  7995  146F  3000               	movlw	0
  7996  1470  00D9               	movwf	?___fladd+3
  7997  1471  3000               	movlw	0
  7998  1472  00D8               	movwf	?___fladd+2
  7999  1473  3000               	movlw	0
  8000  1474  00D7               	movwf	?___fladd+1
  8001  1475  3000               	movlw	0
  8002  1476  00D6               	movwf	?___fladd
  8003  1477  2D14               	goto	l756
  8004  1478                     l2695:	
  8005  1478  3001               	movlw	1
  8006  1479  00DE               	movwf	??___fladd
  8007  147A                     u3585:	
  8008  147A  1003               	clrc
  8009  147B  0DD6               	rlf	___fladd@b,f
  8010  147C  0DD7               	rlf	___fladd@b+1,f
  8011  147D  0DD8               	rlf	___fladd@b+2,f
  8012  147E  0DD9               	rlf	___fladd@b+3,f
  8013  147F  0BDE               	decfsz	??___fladd,f
  8014  1480  2C7A               	goto	u3585
  8015  1481                     l2697:	
  8016  1481  1FE9               	btfss	___fladd@grs,7
  8017  1482  2C84               	goto	u3591
  8018  1483  2C85               	goto	u3590
  8019  1484                     u3591:	
  8020  1484  2C86               	goto	l768
  8021  1485                     u3590:	
  8022  1485                     l2699:	
  8023  1485  1456               	bsf	___fladd@b,0
  8024  1486                     l768:	
  8025  1486  1C69               	btfss	___fladd@grs,0
  8026  1487  2C89               	goto	u3601
  8027  1488  2C8A               	goto	u3600
  8028  1489                     u3601:	
  8029  1489  2C8D               	goto	l2703
  8030  148A                     u3600:	
  8031  148A                     l2701:	
  8032  148A  1403               	setc
  8033  148B  0DE9               	rlf	___fladd@grs,f
  8034  148C  2C8F               	goto	l2705
  8035  148D                     l2703:	
  8036  148D  1003               	clrc
  8037  148E  0DE9               	rlf	___fladd@grs,f
  8038  148F                     l2705:	
  8039  148F  0868               	movf	___fladd@bexp,w
  8040  1490  1903               	btfsc	3,2
  8041  1491  2C93               	goto	u3611
  8042  1492  2C94               	goto	u3610
  8043  1493                     u3611:	
  8044  1493  2C96               	goto	l2709
  8045  1494                     u3610:	
  8046  1494                     l2707:	
  8047  1494  3001               	movlw	1
  8048  1495  02E8               	subwf	___fladd@bexp,f
  8049  1496                     l2709:	
  8050  1496  1FD8               	btfss	___fladd@b+2,7
  8051  1497  2C99               	goto	u3621
  8052  1498  2C9A               	goto	u3620
  8053  1499                     u3621:	
  8054  1499  2C78               	goto	l2695
  8055  149A                     u3620:	
  8056  149A                     l2711:	
  8057  149A  01E7               	clrf	___fladd@aexp
  8058  149B                     l2713:	
  8059  149B  1FE9               	btfss	___fladd@grs,7
  8060  149C  2C9E               	goto	u3631
  8061  149D  2C9F               	goto	u3630
  8062  149E                     u3631:	
  8063  149E  2CAD               	goto	l2721
  8064  149F                     u3630:	
  8065  149F                     l2715:	
  8066  149F  0869               	movf	___fladd@grs,w
  8067  14A0  397F               	andlw	127
  8068  14A1  1903               	btfsc	3,2
  8069  14A2  2CA4               	goto	u3641
  8070  14A3  2CA5               	goto	u3640
  8071  14A4                     u3641:	
  8072  14A4  2CA8               	goto	l774
  8073  14A5                     u3640:	
  8074  14A5                     l2717:	
  8075  14A5  01E7               	clrf	___fladd@aexp
  8076  14A6  0AE7               	incf	___fladd@aexp,f
  8077  14A7  2CAD               	goto	l2721
  8078  14A8                     l774:	
  8079  14A8  1C56               	btfss	___fladd@b,0
  8080  14A9  2CAB               	goto	u3651
  8081  14AA  2CAC               	goto	u3650
  8082  14AB                     u3651:	
  8083  14AB  2CAD               	goto	l2721
  8084  14AC                     u3650:	
  8085  14AC  2CA5               	goto	l2717
  8086  14AD                     l2721:	
  8087  14AD  0867               	movf	___fladd@aexp,w
  8088  14AE  1903               	btfsc	3,2
  8089  14AF  2CB1               	goto	u3661
  8090  14B0  2CB2               	goto	u3660
  8091  14B1                     u3661:	
  8092  14B1  2CE6               	goto	l777
  8093  14B2                     u3660:	
  8094  14B2                     l2723:	
  8095  14B2  3001               	movlw	1
  8096  14B3  07D6               	addwf	___fladd@b,f
  8097  14B4  3000               	movlw	0
  8098  14B5  1803               	skipnc
  8099  14B6  3001               	movlw	1
  8100  14B7  07D7               	addwf	___fladd@b+1,f
  8101  14B8  3000               	movlw	0
  8102  14B9  1803               	skipnc
  8103  14BA  3001               	movlw	1
  8104  14BB  07D8               	addwf	___fladd@b+2,f
  8105  14BC  3000               	movlw	0
  8106  14BD  1803               	skipnc
  8107  14BE  3001               	movlw	1
  8108  14BF  07D9               	addwf	___fladd@b+3,f
  8109  14C0                     l2725:	
  8110  14C0  1C59               	btfss	___fladd@b+3,0
  8111  14C1  2CC3               	goto	u3671
  8112  14C2  2CC4               	goto	u3670
  8113  14C3                     u3671:	
  8114  14C3  2CE6               	goto	l777
  8115  14C4                     u3670:	
  8116  14C4                     l2727:	
  8117  14C4  0856               	movf	___fladd@b,w
  8118  14C5  00DE               	movwf	??___fladd
  8119  14C6  0857               	movf	___fladd@b+1,w
  8120  14C7  00DF               	movwf	??___fladd+1
  8121  14C8  0858               	movf	___fladd@b+2,w
  8122  14C9  00E0               	movwf	??___fladd+2
  8123  14CA  0859               	movf	___fladd@b+3,w
  8124  14CB  00E1               	movwf	??___fladd+3
  8125  14CC  3001               	movlw	1
  8126  14CD  00E2               	movwf	??___fladd+4
  8127  14CE                     u3685:	
  8128  14CE  0D61               	rlf	??___fladd+3,w
  8129  14CF  0CE1               	rrf	??___fladd+3,f
  8130  14D0  0CE0               	rrf	??___fladd+2,f
  8131  14D1  0CDF               	rrf	??___fladd+1,f
  8132  14D2  0CDE               	rrf	??___fladd,f
  8133  14D3                     u3680:	
  8134  14D3  0BE2               	decfsz	??___fladd+4,f
  8135  14D4  2CCE               	goto	u3685
  8136  14D5  0861               	movf	??___fladd+3,w
  8137  14D6  00D9               	movwf	___fladd@b+3
  8138  14D7  0860               	movf	??___fladd+2,w
  8139  14D8  00D8               	movwf	___fladd@b+2
  8140  14D9  085F               	movf	??___fladd+1,w
  8141  14DA  00D7               	movwf	___fladd@b+1
  8142  14DB  085E               	movf	??___fladd,w
  8143  14DC  00D6               	movwf	___fladd@b
  8144  14DD  0A68               	incf	___fladd@bexp,w
  8145  14DE  1903               	btfsc	3,2
  8146  14DF  2CE1               	goto	u3691
  8147  14E0  2CE2               	goto	u3690
  8148  14E1                     u3691:	
  8149  14E1  2CE6               	goto	l777
  8150  14E2                     u3690:	
  8151  14E2                     l2729:	
  8152  14E2  3001               	movlw	1
  8153  14E3  00DE               	movwf	??___fladd
  8154  14E4  085E               	movf	??___fladd,w
  8155  14E5  07E8               	addwf	___fladd@bexp,f
  8156  14E6                     l777:	
  8157  14E6  0A68               	incf	___fladd@bexp,w
  8158  14E7  1903               	btfsc	3,2
  8159  14E8  2CEA               	goto	u3701
  8160  14E9  2CEB               	goto	u3700
  8161  14EA                     u3701:	
  8162  14EA  2CF0               	goto	l2733
  8163  14EB                     u3700:	
  8164  14EB                     l2731:	
  8165  14EB  0868               	movf	___fladd@bexp,w
  8166  14EC  1D03               	btfss	3,2
  8167  14ED  2CEF               	goto	u3711
  8168  14EE  2CF0               	goto	u3710
  8169  14EF                     u3711:	
  8170  14EF  2CFE               	goto	l2739
  8171  14F0                     u3710:	
  8172  14F0                     l2733:	
  8173  14F0  3000               	movlw	0
  8174  14F1  00D9               	movwf	___fladd@b+3
  8175  14F2  3000               	movlw	0
  8176  14F3  00D8               	movwf	___fladd@b+2
  8177  14F4  3000               	movlw	0
  8178  14F5  00D7               	movwf	___fladd@b+1
  8179  14F6  3000               	movlw	0
  8180  14F7  00D6               	movwf	___fladd@b
  8181  14F8                     l2735:	
  8182  14F8  0868               	movf	___fladd@bexp,w
  8183  14F9  1D03               	btfss	3,2
  8184  14FA  2CFC               	goto	u3721
  8185  14FB  2CFD               	goto	u3720
  8186  14FC                     u3721:	
  8187  14FC  2CFE               	goto	l2739
  8188  14FD                     u3720:	
  8189  14FD                     l2737:	
  8190  14FD  01E6               	clrf	___fladd@signs
  8191  14FE                     l2739:	
  8192  14FE  1C68               	btfss	___fladd@bexp,0
  8193  14FF  2D01               	goto	u3731
  8194  1500  2D02               	goto	u3730
  8195  1501                     u3731:	
  8196  1501  2D04               	goto	l2743
  8197  1502                     u3730:	
  8198  1502                     l2741:	
  8199  1502  17D8               	bsf	___fladd@b+2,7
  8200  1503  2D08               	goto	l785
  8201  1504                     l2743:	
  8202  1504  307F               	movlw	127
  8203  1505  00DE               	movwf	??___fladd
  8204  1506  085E               	movf	??___fladd,w
  8205  1507  05D8               	andwf	___fladd@b+2,f
  8206  1508                     l785:	
  8207  1508  0868               	movf	___fladd@bexp,w
  8208  1509  00DE               	movwf	??___fladd
  8209  150A  1003               	clrc
  8210  150B  0C5E               	rrf	??___fladd,w
  8211  150C  00DF               	movwf	??___fladd+1
  8212  150D  085F               	movf	??___fladd+1,w
  8213  150E  00D9               	movwf	___fladd@b+3
  8214  150F                     l2745:	
  8215  150F  1FE6               	btfss	___fladd@signs,7
  8216  1510  2D12               	goto	u3741
  8217  1511  2D13               	goto	u3740
  8218  1512                     u3741:	
  8219  1512  2D14               	goto	l786
  8220  1513                     u3740:	
  8221  1513                     l2747:	
  8222  1513  17D9               	bsf	___fladd@b+3,7
  8223  1514                     l786:	
  8224  1514                     l756:	
  8225  1514  0008               	return
  8226  1515                     __end_of___fladd:	
  8227                           
  8228                           	psect	text21
  8229  0804                     __ptext21:	
  8230 ;; *************** function ___flneg *****************
  8231 ;; Defined at:
  8232 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  8233 ;; Parameters:    Size  Location     Type
  8234 ;;  f1              4    3[COMMON] unsigned char 
  8235 ;; Auto vars:     Size  Location     Type
  8236 ;;		None
  8237 ;; Return value:  Size  Location     Type
  8238 ;;                  4    3[COMMON] unsigned char 
  8239 ;; Registers used:
  8240 ;;		wreg
  8241 ;; Tracked objects:
  8242 ;;		On entry : 0/0
  8243 ;;		On exit  : 0/0
  8244 ;;		Unchanged: 0/0
  8245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8246 ;;      Params:         4       0       0       0       0
  8247 ;;      Locals:         0       0       0       0       0
  8248 ;;      Temps:          0       0       0       0       0
  8249 ;;      Totals:         4       0       0       0       0
  8250 ;;Total ram usage:        4 bytes
  8251 ;; Hardware stack levels used:    1
  8252 ;; Hardware stack levels required when called:    1
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		_sprintf
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           
  8261                           ;psect for function ___flneg
  8262  0804                     ___flneg:	
  8263  0804                     l3153:	
  8264                           ;incstack = 0
  8265                           ; Regs used in ___flneg: [wreg]
  8266                           
  8267  0804  0876               	movf	___flneg@f1+3,w
  8268  0805  0475               	iorwf	___flneg@f1+2,w
  8269  0806  0474               	iorwf	___flneg@f1+1,w
  8270  0807  0473               	iorwf	___flneg@f1,w
  8271  0808  1903               	skipnz
  8272  0809  280B               	goto	u4871
  8273  080A  280C               	goto	u4870
  8274  080B                     u4871:	
  8275  080B  280E               	goto	l3157
  8276  080C                     u4870:	
  8277  080C                     l3155:	
  8278  080C  3080               	movlw	128
  8279  080D  06F6               	xorwf	___flneg@f1+3,f
  8280  080E                     l3157:	
  8281  080E                     l615:	
  8282  080E  0008               	return
  8283  080F                     __end_of___flneg:	
  8284                           
  8285                           	psect	text22
  8286  1D25                     __ptext22:	
  8287 ;; *************** function ___flge *****************
  8288 ;; Defined at:
  8289 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  8290 ;; Parameters:    Size  Location     Type
  8291 ;;  ff1             4    3[COMMON] unsigned char 
  8292 ;;  ff2             4    7[COMMON] unsigned char 
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;		None
  8295 ;; Return value:  Size  Location     Type
  8296 ;;		None               void
  8297 ;; Registers used:
  8298 ;;		wreg, status,2, status,0
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8304 ;;      Params:         8       0       0       0       0
  8305 ;;      Locals:         0       0       0       0       0
  8306 ;;      Temps:          0       4       0       0       0
  8307 ;;      Totals:         8       4       0       0       0
  8308 ;;Total ram usage:       12 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; Hardware stack levels required when called:    1
  8311 ;; This function calls:
  8312 ;;		Nothing
  8313 ;; This function is called by:
  8314 ;;		_sprintf
  8315 ;; This function uses a non-reentrant model
  8316 ;;
  8317                           
  8318                           
  8319                           ;psect for function ___flge
  8320  1D25                     ___flge:	
  8321  1D25                     l3133:	
  8322                           ;incstack = 0
  8323                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8324                           
  8325  1D25  3000               	movlw	0
  8326  1D26  0573               	andwf	___flge@ff1,w
  8327  1D27  1283               	bcf	3,5	;RP0=0, select bank0
  8328  1D28  1303               	bcf	3,6	;RP1=0, select bank0
  8329  1D29  00A0               	movwf	??___flge
  8330  1D2A  3000               	movlw	0
  8331  1D2B  0574               	andwf	___flge@ff1+1,w
  8332  1D2C  00A1               	movwf	??___flge+1
  8333  1D2D  3080               	movlw	128
  8334  1D2E  0575               	andwf	___flge@ff1+2,w
  8335  1D2F  00A2               	movwf	??___flge+2
  8336  1D30  307F               	movlw	127
  8337  1D31  0576               	andwf	___flge@ff1+3,w
  8338  1D32  00A3               	movwf	??___flge+3
  8339  1D33  0823               	movf	??___flge+3,w
  8340  1D34  0422               	iorwf	??___flge+2,w
  8341  1D35  0421               	iorwf	??___flge+1,w
  8342  1D36  0420               	iorwf	??___flge,w
  8343  1D37  1D03               	skipz
  8344  1D38  2D3A               	goto	u4801
  8345  1D39  2D3B               	goto	u4800
  8346  1D3A                     u4801:	
  8347  1D3A  2D43               	goto	l607
  8348  1D3B                     u4800:	
  8349  1D3B                     l3135:	
  8350  1D3B  3000               	movlw	0
  8351  1D3C  00F6               	movwf	___flge@ff1+3
  8352  1D3D  3000               	movlw	0
  8353  1D3E  00F5               	movwf	___flge@ff1+2
  8354  1D3F  3000               	movlw	0
  8355  1D40  00F4               	movwf	___flge@ff1+1
  8356  1D41  3000               	movlw	0
  8357  1D42  00F3               	movwf	___flge@ff1
  8358  1D43                     l607:	
  8359  1D43  3000               	movlw	0
  8360  1D44  0577               	andwf	___flge@ff2,w
  8361  1D45  00A0               	movwf	??___flge
  8362  1D46  3000               	movlw	0
  8363  1D47  0578               	andwf	___flge@ff2+1,w
  8364  1D48  00A1               	movwf	??___flge+1
  8365  1D49  3080               	movlw	128
  8366  1D4A  0579               	andwf	___flge@ff2+2,w
  8367  1D4B  00A2               	movwf	??___flge+2
  8368  1D4C  307F               	movlw	127
  8369  1D4D  057A               	andwf	___flge@ff2+3,w
  8370  1D4E  00A3               	movwf	??___flge+3
  8371  1D4F  0823               	movf	??___flge+3,w
  8372  1D50  0422               	iorwf	??___flge+2,w
  8373  1D51  0421               	iorwf	??___flge+1,w
  8374  1D52  0420               	iorwf	??___flge,w
  8375  1D53  1D03               	skipz
  8376  1D54  2D56               	goto	u4811
  8377  1D55  2D57               	goto	u4810
  8378  1D56                     u4811:	
  8379  1D56  2D5F               	goto	l3139
  8380  1D57                     u4810:	
  8381  1D57                     l3137:	
  8382  1D57  3000               	movlw	0
  8383  1D58  00FA               	movwf	___flge@ff2+3
  8384  1D59  3000               	movlw	0
  8385  1D5A  00F9               	movwf	___flge@ff2+2
  8386  1D5B  3000               	movlw	0
  8387  1D5C  00F8               	movwf	___flge@ff2+1
  8388  1D5D  3000               	movlw	0
  8389  1D5E  00F7               	movwf	___flge@ff2
  8390  1D5F                     l3139:	
  8391  1D5F  1FF6               	btfss	___flge@ff1+3,7
  8392  1D60  2D62               	goto	u4821
  8393  1D61  2D63               	goto	u4820
  8394  1D62                     u4821:	
  8395  1D62  2D87               	goto	l3143
  8396  1D63                     u4820:	
  8397  1D63                     l3141:	
  8398  1D63  3000               	movlw	0
  8399  1D64  00A0               	movwf	??___flge
  8400  1D65  3000               	movlw	0
  8401  1D66  00A1               	movwf	??___flge+1
  8402  1D67  3000               	movlw	0
  8403  1D68  00A2               	movwf	??___flge+2
  8404  1D69  3080               	movlw	128
  8405  1D6A  00A3               	movwf	??___flge+3
  8406  1D6B  0873               	movf	___flge@ff1,w
  8407  1D6C  02A0               	subwf	??___flge,f
  8408  1D6D  0874               	movf	___flge@ff1+1,w
  8409  1D6E  1C03               	skipc
  8410  1D6F  0F74               	incfsz	___flge@ff1+1,w
  8411  1D70  2D72               	goto	u4831
  8412  1D71  2D73               	goto	u4832
  8413  1D72                     u4831:	
  8414  1D72  02A1               	subwf	??___flge+1,f
  8415  1D73                     u4832:	
  8416  1D73  0875               	movf	___flge@ff1+2,w
  8417  1D74  1C03               	skipc
  8418  1D75  0F75               	incfsz	___flge@ff1+2,w
  8419  1D76  2D78               	goto	u4833
  8420  1D77  2D79               	goto	u4834
  8421  1D78                     u4833:	
  8422  1D78  02A2               	subwf	??___flge+2,f
  8423  1D79                     u4834:	
  8424  1D79  0876               	movf	___flge@ff1+3,w
  8425  1D7A  1C03               	skipc
  8426  1D7B  0F76               	incfsz	___flge@ff1+3,w
  8427  1D7C  2D7E               	goto	u4835
  8428  1D7D  2D7F               	goto	u4836
  8429  1D7E                     u4835:	
  8430  1D7E  02A3               	subwf	??___flge+3,f
  8431  1D7F                     u4836:	
  8432  1D7F  0823               	movf	??___flge+3,w
  8433  1D80  00F6               	movwf	___flge@ff1+3
  8434  1D81  0822               	movf	??___flge+2,w
  8435  1D82  00F5               	movwf	___flge@ff1+2
  8436  1D83  0821               	movf	??___flge+1,w
  8437  1D84  00F4               	movwf	___flge@ff1+1
  8438  1D85  0820               	movf	??___flge,w
  8439  1D86  00F3               	movwf	___flge@ff1
  8440  1D87                     l3143:	
  8441  1D87  1FFA               	btfss	___flge@ff2+3,7
  8442  1D88  2D8A               	goto	u4841
  8443  1D89  2D8B               	goto	u4840
  8444  1D8A                     u4841:	
  8445  1D8A  2DAF               	goto	l610
  8446  1D8B                     u4840:	
  8447  1D8B                     l3145:	
  8448  1D8B  3000               	movlw	0
  8449  1D8C  00A0               	movwf	??___flge
  8450  1D8D  3000               	movlw	0
  8451  1D8E  00A1               	movwf	??___flge+1
  8452  1D8F  3000               	movlw	0
  8453  1D90  00A2               	movwf	??___flge+2
  8454  1D91  3080               	movlw	128
  8455  1D92  00A3               	movwf	??___flge+3
  8456  1D93  0877               	movf	___flge@ff2,w
  8457  1D94  02A0               	subwf	??___flge,f
  8458  1D95  0878               	movf	___flge@ff2+1,w
  8459  1D96  1C03               	skipc
  8460  1D97  0F78               	incfsz	___flge@ff2+1,w
  8461  1D98  2D9A               	goto	u4851
  8462  1D99  2D9B               	goto	u4852
  8463  1D9A                     u4851:	
  8464  1D9A  02A1               	subwf	??___flge+1,f
  8465  1D9B                     u4852:	
  8466  1D9B  0879               	movf	___flge@ff2+2,w
  8467  1D9C  1C03               	skipc
  8468  1D9D  0F79               	incfsz	___flge@ff2+2,w
  8469  1D9E  2DA0               	goto	u4853
  8470  1D9F  2DA1               	goto	u4854
  8471  1DA0                     u4853:	
  8472  1DA0  02A2               	subwf	??___flge+2,f
  8473  1DA1                     u4854:	
  8474  1DA1  087A               	movf	___flge@ff2+3,w
  8475  1DA2  1C03               	skipc
  8476  1DA3  0F7A               	incfsz	___flge@ff2+3,w
  8477  1DA4  2DA6               	goto	u4855
  8478  1DA5  2DA7               	goto	u4856
  8479  1DA6                     u4855:	
  8480  1DA6  02A3               	subwf	??___flge+3,f
  8481  1DA7                     u4856:	
  8482  1DA7  0823               	movf	??___flge+3,w
  8483  1DA8  00FA               	movwf	___flge@ff2+3
  8484  1DA9  0822               	movf	??___flge+2,w
  8485  1DAA  00F9               	movwf	___flge@ff2+2
  8486  1DAB  0821               	movf	??___flge+1,w
  8487  1DAC  00F8               	movwf	___flge@ff2+1
  8488  1DAD  0820               	movf	??___flge,w
  8489  1DAE  00F7               	movwf	___flge@ff2
  8490  1DAF                     l610:	
  8491  1DAF  3080               	movlw	128
  8492  1DB0  06F6               	xorwf	___flge@ff1+3,f
  8493  1DB1  3080               	movlw	128
  8494  1DB2  06FA               	xorwf	___flge@ff2+3,f
  8495  1DB3  087A               	movf	___flge@ff2+3,w
  8496  1DB4  0276               	subwf	___flge@ff1+3,w
  8497  1DB5  1D03               	skipz
  8498  1DB6  2DC1               	goto	u4865
  8499  1DB7  0879               	movf	___flge@ff2+2,w
  8500  1DB8  0275               	subwf	___flge@ff1+2,w
  8501  1DB9  1D03               	skipz
  8502  1DBA  2DC1               	goto	u4865
  8503  1DBB  0878               	movf	___flge@ff2+1,w
  8504  1DBC  0274               	subwf	___flge@ff1+1,w
  8505  1DBD  1D03               	skipz
  8506  1DBE  2DC1               	goto	u4865
  8507  1DBF  0877               	movf	___flge@ff2,w
  8508  1DC0  0273               	subwf	___flge@ff1,w
  8509  1DC1                     u4865:	
  8510  1DC1  1803               	skipnc
  8511  1DC2  2DC4               	goto	u4861
  8512  1DC3  2DC5               	goto	u4860
  8513  1DC4                     u4861:	
  8514  1DC4  2DC7               	goto	l3149
  8515  1DC5                     u4860:	
  8516  1DC5                     l3147:	
  8517  1DC5  1003               	clrc
  8518  1DC6  2DC8               	goto	l611
  8519  1DC7                     l3149:	
  8520  1DC7  1403               	setc
  8521  1DC8                     l611:	
  8522  1DC8  0008               	return
  8523  1DC9                     __end_of___flge:	
  8524                           
  8525                           	psect	text23
  8526  1B1B                     __ptext23:	
  8527 ;; *************** function ___fleq *****************
  8528 ;; Defined at:
  8529 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;  ff1             4    3[COMMON] unsigned char 
  8532 ;;  ff2             4    7[COMMON] unsigned char 
  8533 ;; Auto vars:     Size  Location     Type
  8534 ;;		None
  8535 ;; Return value:  Size  Location     Type
  8536 ;;		None               void
  8537 ;; Registers used:
  8538 ;;		wreg, status,2, status,0
  8539 ;; Tracked objects:
  8540 ;;		On entry : 0/0
  8541 ;;		On exit  : 0/0
  8542 ;;		Unchanged: 0/0
  8543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8544 ;;      Params:         8       0       0       0       0
  8545 ;;      Locals:         0       0       0       0       0
  8546 ;;      Temps:          0       4       0       0       0
  8547 ;;      Totals:         8       4       0       0       0
  8548 ;;Total ram usage:       12 bytes
  8549 ;; Hardware stack levels used:    1
  8550 ;; Hardware stack levels required when called:    1
  8551 ;; This function calls:
  8552 ;;		Nothing
  8553 ;; This function is called by:
  8554 ;;		_sprintf
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           
  8559                           ;psect for function ___fleq
  8560  1B1B                     ___fleq:	
  8561  1B1B                     l3121:	
  8562                           ;incstack = 0
  8563                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8564                           
  8565  1B1B  3000               	movlw	0
  8566  1B1C  0573               	andwf	___fleq@ff1,w
  8567  1B1D  1283               	bcf	3,5	;RP0=0, select bank0
  8568  1B1E  1303               	bcf	3,6	;RP1=0, select bank0
  8569  1B1F  00A0               	movwf	??___fleq
  8570  1B20  3000               	movlw	0
  8571  1B21  0574               	andwf	___fleq@ff1+1,w
  8572  1B22  00A1               	movwf	??___fleq+1
  8573  1B23  3080               	movlw	128
  8574  1B24  0575               	andwf	___fleq@ff1+2,w
  8575  1B25  00A2               	movwf	??___fleq+2
  8576  1B26  307F               	movlw	127
  8577  1B27  0576               	andwf	___fleq@ff1+3,w
  8578  1B28  00A3               	movwf	??___fleq+3
  8579  1B29  0823               	movf	??___fleq+3,w
  8580  1B2A  0422               	iorwf	??___fleq+2,w
  8581  1B2B  0421               	iorwf	??___fleq+1,w
  8582  1B2C  0420               	iorwf	??___fleq,w
  8583  1B2D  1D03               	skipz
  8584  1B2E  2B30               	goto	u4771
  8585  1B2F  2B31               	goto	u4770
  8586  1B30                     u4771:	
  8587  1B30  2B39               	goto	l602
  8588  1B31                     u4770:	
  8589  1B31                     l3123:	
  8590  1B31  3000               	movlw	0
  8591  1B32  00F6               	movwf	___fleq@ff1+3
  8592  1B33  3000               	movlw	0
  8593  1B34  00F5               	movwf	___fleq@ff1+2
  8594  1B35  3000               	movlw	0
  8595  1B36  00F4               	movwf	___fleq@ff1+1
  8596  1B37  3000               	movlw	0
  8597  1B38  00F3               	movwf	___fleq@ff1
  8598  1B39                     l602:	
  8599  1B39  3000               	movlw	0
  8600  1B3A  0577               	andwf	___fleq@ff2,w
  8601  1B3B  00A0               	movwf	??___fleq
  8602  1B3C  3000               	movlw	0
  8603  1B3D  0578               	andwf	___fleq@ff2+1,w
  8604  1B3E  00A1               	movwf	??___fleq+1
  8605  1B3F  3080               	movlw	128
  8606  1B40  0579               	andwf	___fleq@ff2+2,w
  8607  1B41  00A2               	movwf	??___fleq+2
  8608  1B42  307F               	movlw	127
  8609  1B43  057A               	andwf	___fleq@ff2+3,w
  8610  1B44  00A3               	movwf	??___fleq+3
  8611  1B45  0823               	movf	??___fleq+3,w
  8612  1B46  0422               	iorwf	??___fleq+2,w
  8613  1B47  0421               	iorwf	??___fleq+1,w
  8614  1B48  0420               	iorwf	??___fleq,w
  8615  1B49  1D03               	skipz
  8616  1B4A  2B4C               	goto	u4781
  8617  1B4B  2B4D               	goto	u4780
  8618  1B4C                     u4781:	
  8619  1B4C  2B55               	goto	l603
  8620  1B4D                     u4780:	
  8621  1B4D                     l3125:	
  8622  1B4D  3000               	movlw	0
  8623  1B4E  00FA               	movwf	___fleq@ff2+3
  8624  1B4F  3000               	movlw	0
  8625  1B50  00F9               	movwf	___fleq@ff2+2
  8626  1B51  3000               	movlw	0
  8627  1B52  00F8               	movwf	___fleq@ff2+1
  8628  1B53  3000               	movlw	0
  8629  1B54  00F7               	movwf	___fleq@ff2
  8630  1B55                     l603:	
  8631  1B55  087A               	movf	___fleq@ff2+3,w
  8632  1B56  0676               	xorwf	___fleq@ff1+3,w
  8633  1B57  1D03               	skipz
  8634  1B58  2B63               	goto	u4795
  8635  1B59  0879               	movf	___fleq@ff2+2,w
  8636  1B5A  0675               	xorwf	___fleq@ff1+2,w
  8637  1B5B  1D03               	skipz
  8638  1B5C  2B63               	goto	u4795
  8639  1B5D  0878               	movf	___fleq@ff2+1,w
  8640  1B5E  0674               	xorwf	___fleq@ff1+1,w
  8641  1B5F  1D03               	skipz
  8642  1B60  2B63               	goto	u4795
  8643  1B61  0877               	movf	___fleq@ff2,w
  8644  1B62  0673               	xorwf	___fleq@ff1,w
  8645  1B63                     u4795:	
  8646  1B63  1903               	skipnz
  8647  1B64  2B66               	goto	u4791
  8648  1B65  2B67               	goto	u4790
  8649  1B66                     u4791:	
  8650  1B66  2B69               	goto	l3129
  8651  1B67                     u4790:	
  8652  1B67                     l3127:	
  8653  1B67  1003               	clrc
  8654  1B68  2B6A               	goto	l604
  8655  1B69                     l3129:	
  8656  1B69  1403               	setc
  8657  1B6A                     l604:	
  8658  1B6A  0008               	return
  8659  1B6B                     __end_of___fleq:	
  8660                           
  8661                           	psect	text24
  8662  19A8                     __ptext24:	
  8663 ;; *************** function _SEND_STRING *****************
  8664 ;; Defined at:
  8665 ;;		line 44 in file "Lib_EUSART.c"
  8666 ;; Parameters:    Size  Location     Type
  8667 ;;  a               1    wreg     PTR unsigned char 
  8668 ;;		 -> string3(3), string2(4), string1(4), 
  8669 ;; Auto vars:     Size  Location     Type
  8670 ;;  a               1    7[COMMON] PTR unsigned char 
  8671 ;;		 -> string3(3), string2(4), string1(4), 
  8672 ;;  i               2    5[COMMON] int 
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  1    wreg      void 
  8675 ;; Registers used:
  8676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8682 ;;      Params:         0       0       0       0       0
  8683 ;;      Locals:         3       0       0       0       0
  8684 ;;      Temps:          1       0       0       0       0
  8685 ;;      Totals:         4       0       0       0       0
  8686 ;;Total ram usage:        4 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:    2
  8689 ;; This function calls:
  8690 ;;		_SEND_CHAR
  8691 ;; This function is called by:
  8692 ;;		_main
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           
  8697                           ;psect for function _SEND_STRING
  8698  19A8                     _SEND_STRING:	
  8699                           
  8700                           ;incstack = 0
  8701                           ; Regs used in _SEND_STRING: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8702                           ;SEND_STRING@a stored from wreg
  8703  19A8  00F7               	movwf	SEND_STRING@a
  8704  19A9                     l3659:	
  8705                           
  8706                           ;Lib_EUSART.c: 46:     int i;;Lib_EUSART.c: 47:     for(i=0; a[i]!='\0'; i++){
  8707  19A9  01F5               	clrf	SEND_STRING@i
  8708  19AA  01F6               	clrf	SEND_STRING@i+1
  8709  19AB  29BD               	goto	l3665
  8710  19AC                     l3661:	
  8711                           
  8712                           ;Lib_EUSART.c: 48:         SEND_CHAR(a[i]);
  8713  19AC  0875               	movf	SEND_STRING@i,w
  8714  19AD  0777               	addwf	SEND_STRING@a,w
  8715  19AE  00F4               	movwf	??_SEND_STRING
  8716  19AF  0874               	movf	??_SEND_STRING,w
  8717  19B0  0084               	movwf	4
  8718  19B1  0800               	movf	0,w
  8719  19B2  160A  158A  2147  160A  158A  	fcall	_SEND_CHAR
  8720  19B7                     l3663:	
  8721                           
  8722                           ;Lib_EUSART.c: 49:     }
  8723  19B7  3001               	movlw	1
  8724  19B8  07F5               	addwf	SEND_STRING@i,f
  8725  19B9  1803               	skipnc
  8726  19BA  0AF6               	incf	SEND_STRING@i+1,f
  8727  19BB  3000               	movlw	0
  8728  19BC  07F6               	addwf	SEND_STRING@i+1,f
  8729  19BD                     l3665:	
  8730  19BD  0875               	movf	SEND_STRING@i,w
  8731  19BE  0777               	addwf	SEND_STRING@a,w
  8732  19BF  00F4               	movwf	??_SEND_STRING
  8733  19C0  0874               	movf	??_SEND_STRING,w
  8734  19C1  0084               	movwf	4
  8735  19C2  1383               	bcf	3,7	;select IRP bank0
  8736  19C3  0800               	movf	0,w
  8737  19C4  1D03               	btfss	3,2
  8738  19C5  29C7               	goto	u5791
  8739  19C6  29C8               	goto	u5790
  8740  19C7                     u5791:	
  8741  19C7  29AC               	goto	l3661
  8742  19C8                     u5790:	
  8743  19C8                     l205:	
  8744  19C8  0008               	return
  8745  19C9                     __end_of_SEND_STRING:	
  8746                           
  8747                           	psect	text25
  8748  1947                     __ptext25:	
  8749 ;; *************** function _SEND_CHAR *****************
  8750 ;; Defined at:
  8751 ;;		line 52 in file "Lib_EUSART.c"
  8752 ;; Parameters:    Size  Location     Type
  8753 ;;  a               1    wreg     unsigned char 
  8754 ;; Auto vars:     Size  Location     Type
  8755 ;;  a               1    3[COMMON] unsigned char 
  8756 ;; Return value:  Size  Location     Type
  8757 ;;                  1    wreg      void 
  8758 ;; Registers used:
  8759 ;;		wreg
  8760 ;; Tracked objects:
  8761 ;;		On entry : 0/0
  8762 ;;		On exit  : 0/0
  8763 ;;		Unchanged: 0/0
  8764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8765 ;;      Params:         0       0       0       0       0
  8766 ;;      Locals:         1       0       0       0       0
  8767 ;;      Temps:          0       0       0       0       0
  8768 ;;      Totals:         1       0       0       0       0
  8769 ;;Total ram usage:        1 bytes
  8770 ;; Hardware stack levels used:    1
  8771 ;; Hardware stack levels required when called:    1
  8772 ;; This function calls:
  8773 ;;		Nothing
  8774 ;; This function is called by:
  8775 ;;		_SEND_STRING
  8776 ;; This function uses a non-reentrant model
  8777 ;;
  8778                           
  8779                           
  8780                           ;psect for function _SEND_CHAR
  8781  1947                     _SEND_CHAR:	
  8782                           
  8783                           ;incstack = 0
  8784                           ; Regs used in _SEND_CHAR: [wreg]
  8785                           ;SEND_CHAR@a stored from wreg
  8786  1947  00F3               	movwf	SEND_CHAR@a
  8787  1948                     l2907:	
  8788                           
  8789                           ;Lib_EUSART.c: 53:     TXREG = a;
  8790  1948  0873               	movf	SEND_CHAR@a,w
  8791  1949  1283               	bcf	3,5	;RP0=0, select bank0
  8792  194A  1303               	bcf	3,6	;RP1=0, select bank0
  8793  194B  0099               	movwf	25	;volatile
  8794  194C                     l208:	
  8795                           ;Lib_EUSART.c: 55:     }
  8796                           
  8797                           
  8798                           ;Lib_EUSART.c: 54:     while(PIR1bits.TXIF == 0){
  8799  194C  1E0C               	btfss	12,4	;volatile
  8800  194D  294F               	goto	u4121
  8801  194E  2950               	goto	u4120
  8802  194F                     u4121:	
  8803  194F  294C               	goto	l208
  8804  1950                     u4120:	
  8805  1950                     l211:	
  8806  1950  0008               	return
  8807  1951                     __end_of_SEND_CHAR:	
  8808                           
  8809                           	psect	text26
  8810  1990                     __ptext26:	
  8811 ;; *************** function _Port_init *****************
  8812 ;; Defined at:
  8813 ;;		line 97 in file "main_lab3.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;		None
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;		None
  8818 ;; Return value:  Size  Location     Type
  8819 ;;                  1    wreg      void 
  8820 ;; Registers used:
  8821 ;;		wreg, status,2
  8822 ;; Tracked objects:
  8823 ;;		On entry : 0/0
  8824 ;;		On exit  : 0/0
  8825 ;;		Unchanged: 0/0
  8826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8827 ;;      Params:         0       0       0       0       0
  8828 ;;      Locals:         0       0       0       0       0
  8829 ;;      Temps:          0       0       0       0       0
  8830 ;;      Totals:         0       0       0       0       0
  8831 ;;Total ram usage:        0 bytes
  8832 ;; Hardware stack levels used:    1
  8833 ;; Hardware stack levels required when called:    1
  8834 ;; This function calls:
  8835 ;;		Nothing
  8836 ;; This function is called by:
  8837 ;;		_main
  8838 ;; This function uses a non-reentrant model
  8839 ;;
  8840                           
  8841                           
  8842                           ;psect for function _Port_init
  8843  1990                     _Port_init:	
  8844  1990                     l3315:	
  8845                           ;incstack = 0
  8846                           ; Regs used in _Port_init: [wreg+status,2]
  8847                           
  8848                           
  8849                           ;main_lab3.c: 98:     TRISA = 0x03;
  8850  1990  3003               	movlw	3
  8851  1991  1683               	bsf	3,5	;RP0=1, select bank1
  8852  1992  1303               	bcf	3,6	;RP1=0, select bank1
  8853  1993  0085               	movwf	5	;volatile
  8854  1994                     l3317:	
  8855                           
  8856                           ;main_lab3.c: 99:     ANSEL = 0;
  8857  1994  1683               	bsf	3,5	;RP0=1, select bank3
  8858  1995  1703               	bsf	3,6	;RP1=1, select bank3
  8859  1996  0188               	clrf	8	;volatile
  8860  1997                     l3319:	
  8861                           
  8862                           ;main_lab3.c: 100:     ANSEL = 0x03;
  8863  1997  3003               	movlw	3
  8864  1998  0088               	movwf	8	;volatile
  8865                           
  8866                           ;main_lab3.c: 101:     ANSELH = 0;
  8867  1999  0189               	clrf	9	;volatile
  8868                           
  8869                           ;main_lab3.c: 102:     TRISB = 0;
  8870  199A  1683               	bsf	3,5	;RP0=1, select bank1
  8871  199B  1303               	bcf	3,6	;RP1=0, select bank1
  8872  199C  0186               	clrf	6	;volatile
  8873                           
  8874                           ;main_lab3.c: 103:     PORTB = 0;
  8875  199D  1283               	bcf	3,5	;RP0=0, select bank0
  8876  199E  1303               	bcf	3,6	;RP1=0, select bank0
  8877  199F  0186               	clrf	6	;volatile
  8878                           
  8879                           ;main_lab3.c: 104:     TRISD = 0;
  8880  19A0  1683               	bsf	3,5	;RP0=1, select bank1
  8881  19A1  1303               	bcf	3,6	;RP1=0, select bank1
  8882  19A2  0188               	clrf	8	;volatile
  8883                           
  8884                           ;main_lab3.c: 105:     PORTD = 0;
  8885  19A3  1283               	bcf	3,5	;RP0=0, select bank0
  8886  19A4  1303               	bcf	3,6	;RP1=0, select bank0
  8887  19A5  0188               	clrf	8	;volatile
  8888                           
  8889                           ;main_lab3.c: 106:     PORTA = 0;
  8890  19A6  0185               	clrf	5	;volatile
  8891  19A7                     l124:	
  8892  19A7  0008               	return
  8893  19A8                     __end_of_Port_init:	
  8894                           
  8895                           	psect	text27
  8896  1AD5                     __ptext27:	
  8897 ;; *************** function _LCD_WRITE_STRING *****************
  8898 ;; Defined at:
  8899 ;;		line 66 in file "LCD_8bits_main.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  a               2    6[COMMON] PTR unsigned char 
  8902 ;;		 -> STR_4(15), string3(3), string2(4), string1(4), 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  i               2    0[BANK0 ] int 
  8905 ;; Return value:  Size  Location     Type
  8906 ;;                  1    wreg      void 
  8907 ;; Registers used:
  8908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8909 ;; Tracked objects:
  8910 ;;		On entry : 0/0
  8911 ;;		On exit  : 0/0
  8912 ;;		Unchanged: 0/0
  8913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8914 ;;      Params:         2       0       0       0       0
  8915 ;;      Locals:         0       2       0       0       0
  8916 ;;      Temps:          3       0       0       0       0
  8917 ;;      Totals:         5       2       0       0       0
  8918 ;;Total ram usage:        7 bytes
  8919 ;; Hardware stack levels used:    1
  8920 ;; Hardware stack levels required when called:    2
  8921 ;; This function calls:
  8922 ;;		_LCD_WRITE_CHAR
  8923 ;; This function is called by:
  8924 ;;		_main
  8925 ;; This function uses a non-reentrant model
  8926 ;;
  8927                           
  8928                           
  8929                           ;psect for function _LCD_WRITE_STRING
  8930  1AD5                     _LCD_WRITE_STRING:	
  8931  1AD5                     l3307:	
  8932                           ;incstack = 0
  8933                           ; Regs used in _LCD_WRITE_STRING: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8934                           
  8935                           
  8936                           ;LCD_8bits_main.c: 67:     int i;;LCD_8bits_main.c: 68:     for(i=0; a[i]!='\0'; i++)
  8937  1AD5  1283               	bcf	3,5	;RP0=0, select bank0
  8938  1AD6  1303               	bcf	3,6	;RP1=0, select bank0
  8939  1AD7  01A0               	clrf	LCD_WRITE_STRING@i
  8940  1AD8  01A1               	clrf	LCD_WRITE_STRING@i+1
  8941  1AD9  2AFE               	goto	l3313
  8942  1ADA                     l3309:	
  8943                           
  8944                           ;LCD_8bits_main.c: 69:         LCD_WRITE_CHAR(a[i]);
  8945  1ADA  0820               	movf	LCD_WRITE_STRING@i,w
  8946  1ADB  0776               	addwf	LCD_WRITE_STRING@a,w
  8947  1ADC  00F9               	movwf	??_LCD_WRITE_STRING+1
  8948  1ADD  0877               	movf	LCD_WRITE_STRING@a+1,w
  8949  1ADE  00F8               	movwf	??_LCD_WRITE_STRING
  8950  1ADF  1803               	skipnc
  8951  1AE0  0AF8               	incf	??_LCD_WRITE_STRING,f
  8952  1AE1  1FA0               	btfss	LCD_WRITE_STRING@i,7
  8953  1AE2  2AE4               	goto	u5200
  8954  1AE3  03F8               	decf	??_LCD_WRITE_STRING,f
  8955  1AE4                     u5200:	
  8956  1AE4  0878               	movf	??_LCD_WRITE_STRING,w
  8957  1AE5  00FA               	movwf	??_LCD_WRITE_STRING+2
  8958  1AE6  087A               	movf	??_LCD_WRITE_STRING+2,w
  8959  1AE7  1283               	bcf	3,5	;RP0=0, select bank0
  8960  1AE8  1303               	bcf	3,6	;RP1=0, select bank0
  8961  1AE9  00FF               	movwf	btemp+1
  8962  1AEA  0879               	movf	??_LCD_WRITE_STRING+1,w
  8963  1AEB  0084               	movwf	4
  8964  1AEC  160A  158A  2000  160A  158A  	fcall	stringtab
  8965  1AF1  160A  158A  2179  160A  158A  	fcall	_LCD_WRITE_CHAR
  8966  1AF6                     l3311:	
  8967  1AF6  3001               	movlw	1
  8968  1AF7  1283               	bcf	3,5	;RP0=0, select bank0
  8969  1AF8  1303               	bcf	3,6	;RP1=0, select bank0
  8970  1AF9  07A0               	addwf	LCD_WRITE_STRING@i,f
  8971  1AFA  1803               	skipnc
  8972  1AFB  0AA1               	incf	LCD_WRITE_STRING@i+1,f
  8973  1AFC  3000               	movlw	0
  8974  1AFD  07A1               	addwf	LCD_WRITE_STRING@i+1,f
  8975  1AFE                     l3313:	
  8976  1AFE  0820               	movf	LCD_WRITE_STRING@i,w
  8977  1AFF  0776               	addwf	LCD_WRITE_STRING@a,w
  8978  1B00  00F9               	movwf	??_LCD_WRITE_STRING+1
  8979  1B01  0877               	movf	LCD_WRITE_STRING@a+1,w
  8980  1B02  00F8               	movwf	??_LCD_WRITE_STRING
  8981  1B03  1803               	skipnc
  8982  1B04  0AF8               	incf	??_LCD_WRITE_STRING,f
  8983  1B05  1FA0               	btfss	LCD_WRITE_STRING@i,7
  8984  1B06  2B08               	goto	u5210
  8985  1B07  03F8               	decf	??_LCD_WRITE_STRING,f
  8986  1B08                     u5210:	
  8987  1B08  0878               	movf	??_LCD_WRITE_STRING,w
  8988  1B09  00FA               	movwf	??_LCD_WRITE_STRING+2
  8989  1B0A  087A               	movf	??_LCD_WRITE_STRING+2,w
  8990  1B0B  1283               	bcf	3,5	;RP0=0, select bank0
  8991  1B0C  1303               	bcf	3,6	;RP1=0, select bank0
  8992  1B0D  00FF               	movwf	btemp+1
  8993  1B0E  0879               	movf	??_LCD_WRITE_STRING+1,w
  8994  1B0F  0084               	movwf	4
  8995  1B10  160A  158A  2000  160A  158A  	fcall	stringtab
  8996  1B15  3A00               	xorlw	0
  8997  1B16  1D03               	skipz
  8998  1B17  2B19               	goto	u5221
  8999  1B18  2B1A               	goto	u5220
  9000  1B19                     u5221:	
  9001  1B19  2ADA               	goto	l3309
  9002  1B1A                     u5220:	
  9003  1B1A                     l30:	
  9004  1B1A  0008               	return
  9005  1B1B                     __end_of_LCD_WRITE_STRING:	
  9006                           
  9007                           	psect	text28
  9008  1979                     __ptext28:	
  9009 ;; *************** function _LCD_WRITE_CHAR *****************
  9010 ;; Defined at:
  9011 ;;		line 57 in file "LCD_8bits_main.c"
  9012 ;; Parameters:    Size  Location     Type
  9013 ;;  a               1    wreg     unsigned char 
  9014 ;; Auto vars:     Size  Location     Type
  9015 ;;  a               1    5[COMMON] unsigned char 
  9016 ;; Return value:  Size  Location     Type
  9017 ;;                  1    wreg      void 
  9018 ;; Registers used:
  9019 ;;		wreg
  9020 ;; Tracked objects:
  9021 ;;		On entry : 0/0
  9022 ;;		On exit  : 0/0
  9023 ;;		Unchanged: 0/0
  9024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9025 ;;      Params:         0       0       0       0       0
  9026 ;;      Locals:         1       0       0       0       0
  9027 ;;      Temps:          2       0       0       0       0
  9028 ;;      Totals:         3       0       0       0       0
  9029 ;;Total ram usage:        3 bytes
  9030 ;; Hardware stack levels used:    1
  9031 ;; Hardware stack levels required when called:    1
  9032 ;; This function calls:
  9033 ;;		Nothing
  9034 ;; This function is called by:
  9035 ;;		_LCD_WRITE_STRING
  9036 ;; This function uses a non-reentrant model
  9037 ;;
  9038                           
  9039                           
  9040                           ;psect for function _LCD_WRITE_CHAR
  9041  1979                     _LCD_WRITE_CHAR:	
  9042                           
  9043                           ;incstack = 0
  9044                           ; Regs used in _LCD_WRITE_CHAR: [wreg]
  9045                           ;LCD_WRITE_CHAR@a stored from wreg
  9046  1979  00F5               	movwf	LCD_WRITE_CHAR@a
  9047  197A                     l2899:	
  9048                           
  9049                           ;LCD_8bits_main.c: 58:     PORTDbits.RD5 = 1;
  9050  197A  1283               	bcf	3,5	;RP0=0, select bank0
  9051  197B  1303               	bcf	3,6	;RP1=0, select bank0
  9052  197C  1688               	bsf	8,5	;volatile
  9053  197D                     l2901:	
  9054                           
  9055                           ;LCD_8bits_main.c: 59:     PORTB = a;
  9056  197D  0875               	movf	LCD_WRITE_CHAR@a,w
  9057  197E  0086               	movwf	6	;volatile
  9058  197F                     l2903:	
  9059                           
  9060                           ;LCD_8bits_main.c: 60:     PORTDbits.RD7 = 1;
  9061  197F  1788               	bsf	8,7	;volatile
  9062                           
  9063                           ;LCD_8bits_main.c: 61:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  9064  1980  300D               	movlw	13
  9065  1981  00F3               	movwf	??_LCD_WRITE_CHAR
  9066  1982                     u5867:	
  9067  1982  0BF3               	decfsz	??_LCD_WRITE_CHAR,f
  9068  1983  2982               	goto	u5867
  9069  1984                     l2905:	
  9070                           
  9071                           ;LCD_8bits_main.c: 62:     PORTDbits.RD7 = 0;
  9072  1984  1283               	bcf	3,5	;RP0=0, select bank0
  9073  1985  1303               	bcf	3,6	;RP1=0, select bank0
  9074  1986  1388               	bcf	8,7	;volatile
  9075                           
  9076                           ;LCD_8bits_main.c: 63:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9077  1987  3007               	movlw	7
  9078  1988  00F4               	movwf	??_LCD_WRITE_CHAR+1
  9079  1989  307D               	movlw	125
  9080  198A  00F3               	movwf	??_LCD_WRITE_CHAR
  9081  198B                     u5877:	
  9082  198B  0BF3               	decfsz	??_LCD_WRITE_CHAR,f
  9083  198C  298B               	goto	u5877
  9084  198D  0BF4               	decfsz	??_LCD_WRITE_CHAR+1,f
  9085  198E  298B               	goto	u5877
  9086  198F                     l24:	
  9087  198F  0008               	return
  9088  1990                     __end_of_LCD_WRITE_CHAR:	
  9089                           
  9090                           	psect	text29
  9091  19C9                     __ptext29:	
  9092 ;; *************** function _LCD_SET_CURSOR *****************
  9093 ;; Defined at:
  9094 ;;		line 25 in file "LCD_8bits_main.c"
  9095 ;; Parameters:    Size  Location     Type
  9096 ;;  a               1    wreg     unsigned char 
  9097 ;;  b               1    6[COMMON] unsigned char 
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;  a               1    8[COMMON] unsigned char 
  9100 ;;  temporal        1    9[COMMON] unsigned char 
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  1    wreg      void 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0, pclath, cstack
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 0/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9110 ;;      Params:         1       0       0       0       0
  9111 ;;      Locals:         2       0       0       0       0
  9112 ;;      Temps:          1       0       0       0       0
  9113 ;;      Totals:         4       0       0       0       0
  9114 ;;Total ram usage:        4 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    2
  9117 ;; This function calls:
  9118 ;;		_LCD_CMD
  9119 ;; This function is called by:
  9120 ;;		_main
  9121 ;; This function uses a non-reentrant model
  9122 ;;
  9123                           
  9124                           
  9125                           ;psect for function _LCD_SET_CURSOR
  9126  19C9                     _LCD_SET_CURSOR:	
  9127                           
  9128                           ;incstack = 0
  9129                           ; Regs used in _LCD_SET_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  9130                           ;LCD_SET_CURSOR@a stored from wreg
  9131  19C9  00F8               	movwf	LCD_SET_CURSOR@a
  9132  19CA                     l3267:	
  9133                           
  9134                           ;LCD_8bits_main.c: 26:     uint8_t temporal;;LCD_8bits_main.c: 27:     if (a == 1) {
  9135  19CA  0378               	decf	LCD_SET_CURSOR@a,w
  9136  19CB  1D03               	btfss	3,2
  9137  19CC  29CE               	goto	u5181
  9138  19CD  29CF               	goto	u5180
  9139  19CE                     u5181:	
  9140  19CE  29DB               	goto	l3273
  9141  19CF                     u5180:	
  9142  19CF                     l3269:	
  9143                           
  9144                           ;LCD_8bits_main.c: 28:         temporal = 0x80 + b - 1;
  9145  19CF  0876               	movf	LCD_SET_CURSOR@b,w
  9146  19D0  3E7F               	addlw	127
  9147  19D1  00F7               	movwf	??_LCD_SET_CURSOR
  9148  19D2  0877               	movf	??_LCD_SET_CURSOR,w
  9149  19D3  00F9               	movwf	LCD_SET_CURSOR@temporal
  9150  19D4                     l3271:	
  9151                           
  9152                           ;LCD_8bits_main.c: 29:         LCD_CMD(temporal);
  9153  19D4  0879               	movf	LCD_SET_CURSOR@temporal,w
  9154  19D5  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9155                           
  9156                           ;LCD_8bits_main.c: 30:     }
  9157  19DA  29EC               	goto	l18
  9158  19DB                     l3273:	
  9159  19DB  3002               	movlw	2
  9160  19DC  0678               	xorwf	LCD_SET_CURSOR@a,w
  9161  19DD  1D03               	btfss	3,2
  9162  19DE  29E0               	goto	u5191
  9163  19DF  29E1               	goto	u5190
  9164  19E0                     u5191:	
  9165  19E0  29EC               	goto	l18
  9166  19E1                     u5190:	
  9167  19E1                     l3275:	
  9168                           
  9169                           ;LCD_8bits_main.c: 32:         temporal = 0xC0 + b - 1;
  9170  19E1  0876               	movf	LCD_SET_CURSOR@b,w
  9171  19E2  3EBF               	addlw	191
  9172  19E3  00F7               	movwf	??_LCD_SET_CURSOR
  9173  19E4  0877               	movf	??_LCD_SET_CURSOR,w
  9174  19E5  00F9               	movwf	LCD_SET_CURSOR@temporal
  9175  19E6                     l3277:	
  9176                           
  9177                           ;LCD_8bits_main.c: 33:         LCD_CMD(temporal);
  9178  19E6  0879               	movf	LCD_SET_CURSOR@temporal,w
  9179  19E7  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9180  19EC                     l18:	
  9181  19EC  0008               	return
  9182  19ED                     __end_of_LCD_SET_CURSOR:	
  9183                           
  9184                           	psect	text30
  9185  1BBB                     __ptext30:	
  9186 ;; *************** function _LCD_INIT *****************
  9187 ;; Defined at:
  9188 ;;		line 37 in file "LCD_8bits_main.c"
  9189 ;; Parameters:    Size  Location     Type
  9190 ;;		None
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      void 
  9195 ;; Registers used:
  9196 ;;		wreg, status,2, status,0, pclath, cstack
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9202 ;;      Params:         0       0       0       0       0
  9203 ;;      Locals:         0       0       0       0       0
  9204 ;;      Temps:          2       0       0       0       0
  9205 ;;      Totals:         2       0       0       0       0
  9206 ;;Total ram usage:        2 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; Hardware stack levels required when called:    2
  9209 ;; This function calls:
  9210 ;;		_LCD_CMD
  9211 ;; This function is called by:
  9212 ;;		_main
  9213 ;; This function uses a non-reentrant model
  9214 ;;
  9215                           
  9216                           
  9217                           ;psect for function _LCD_INIT
  9218  1BBB                     _LCD_INIT:	
  9219  1BBB                     l3279:	
  9220                           ;incstack = 0
  9221                           ; Regs used in _LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
  9222                           
  9223                           
  9224                           ;LCD_8bits_main.c: 38:     PORTB = 0;
  9225  1BBB  1283               	bcf	3,5	;RP0=0, select bank0
  9226  1BBC  1303               	bcf	3,6	;RP1=0, select bank0
  9227  1BBD  0186               	clrf	6	;volatile
  9228  1BBE                     l3281:	
  9229                           
  9230                           ;LCD_8bits_main.c: 39:     _delay((unsigned long)((15)*(4000000/4000.0)));
  9231  1BBE  3014               	movlw	20
  9232  1BBF  00F7               	movwf	??_LCD_INIT+1
  9233  1BC0  3079               	movlw	121
  9234  1BC1  00F6               	movwf	??_LCD_INIT
  9235  1BC2                     u5887:	
  9236  1BC2  0BF6               	decfsz	??_LCD_INIT,f
  9237  1BC3  2BC2               	goto	u5887
  9238  1BC4  0BF7               	decfsz	??_LCD_INIT+1,f
  9239  1BC5  2BC2               	goto	u5887
  9240  1BC6  2BC7               	nop2
  9241  1BC7                     l3283:	
  9242                           
  9243                           ;LCD_8bits_main.c: 40:     LCD_CMD(0x30);
  9244  1BC7  3030               	movlw	48
  9245  1BC8  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9246  1BCD                     l3285:	
  9247                           
  9248                           ;LCD_8bits_main.c: 41:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9249  1BCD  3007               	movlw	7
  9250  1BCE  00F7               	movwf	??_LCD_INIT+1
  9251  1BCF  307D               	movlw	125
  9252  1BD0  00F6               	movwf	??_LCD_INIT
  9253  1BD1                     u5897:	
  9254  1BD1  0BF6               	decfsz	??_LCD_INIT,f
  9255  1BD2  2BD1               	goto	u5897
  9256  1BD3  0BF7               	decfsz	??_LCD_INIT+1,f
  9257  1BD4  2BD1               	goto	u5897
  9258  1BD5                     l3287:	
  9259                           
  9260                           ;LCD_8bits_main.c: 42:     LCD_CMD(0x30);
  9261  1BD5  3030               	movlw	48
  9262  1BD6  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9263  1BDB                     l3289:	
  9264                           
  9265                           ;LCD_8bits_main.c: 43:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  9266  1BDB  3035               	movlw	53
  9267  1BDC  00F6               	movwf	??_LCD_INIT
  9268  1BDD                     u5907:	
  9269  1BDD  0BF6               	decfsz	??_LCD_INIT,f
  9270  1BDE  2BDD               	goto	u5907
  9271  1BDF                     l3291:	
  9272                           
  9273                           ;LCD_8bits_main.c: 44:     LCD_CMD(0x30);
  9274  1BDF  3030               	movlw	48
  9275  1BE0  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9276  1BE5                     l3293:	
  9277                           
  9278                           ;LCD_8bits_main.c: 45:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  9279  1BE5  3035               	movlw	53
  9280  1BE6  00F6               	movwf	??_LCD_INIT
  9281  1BE7                     u5917:	
  9282  1BE7  0BF6               	decfsz	??_LCD_INIT,f
  9283  1BE8  2BE7               	goto	u5917
  9284  1BE9                     l3295:	
  9285                           
  9286                           ;LCD_8bits_main.c: 48:     LCD_CMD(0x02);
  9287  1BE9  3002               	movlw	2
  9288  1BEA  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9289  1BEF                     l3297:	
  9290                           
  9291                           ;LCD_8bits_main.c: 49:     LCD_CMD(0x38);
  9292  1BEF  3038               	movlw	56
  9293  1BF0  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9294  1BF5                     l3299:	
  9295                           
  9296                           ;LCD_8bits_main.c: 50:     LCD_CMD(0x08);
  9297  1BF5  3008               	movlw	8
  9298  1BF6  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9299  1BFB                     l3301:	
  9300                           
  9301                           ;LCD_8bits_main.c: 51:     LCD_CMD(0x01);
  9302  1BFB  3001               	movlw	1
  9303  1BFC  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9304  1C01                     l3303:	
  9305                           
  9306                           ;LCD_8bits_main.c: 52:     LCD_CMD(0x06);
  9307  1C01  3006               	movlw	6
  9308  1C02  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9309  1C07                     l3305:	
  9310                           
  9311                           ;LCD_8bits_main.c: 53:     LCD_CMD(0x0C);
  9312  1C07  300C               	movlw	12
  9313  1C08  160A  158A  2163  160A  158A  	fcall	_LCD_CMD
  9314  1C0D                     l21:	
  9315  1C0D  0008               	return
  9316  1C0E                     __end_of_LCD_INIT:	
  9317                           
  9318                           	psect	text31
  9319  1963                     __ptext31:	
  9320 ;; *************** function _LCD_CMD *****************
  9321 ;; Defined at:
  9322 ;;		line 12 in file "LCD_8bits_main.c"
  9323 ;; Parameters:    Size  Location     Type
  9324 ;;  a               1    wreg     unsigned char 
  9325 ;; Auto vars:     Size  Location     Type
  9326 ;;  a               1    5[COMMON] unsigned char 
  9327 ;; Return value:  Size  Location     Type
  9328 ;;                  1    wreg      void 
  9329 ;; Registers used:
  9330 ;;		wreg
  9331 ;; Tracked objects:
  9332 ;;		On entry : 0/0
  9333 ;;		On exit  : 0/0
  9334 ;;		Unchanged: 0/0
  9335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9336 ;;      Params:         0       0       0       0       0
  9337 ;;      Locals:         1       0       0       0       0
  9338 ;;      Temps:          2       0       0       0       0
  9339 ;;      Totals:         3       0       0       0       0
  9340 ;;Total ram usage:        3 bytes
  9341 ;; Hardware stack levels used:    1
  9342 ;; Hardware stack levels required when called:    1
  9343 ;; This function calls:
  9344 ;;		Nothing
  9345 ;; This function is called by:
  9346 ;;		_LCD_SET_CURSOR
  9347 ;;		_LCD_INIT
  9348 ;;		_LCD_CLR
  9349 ;;		_LCD_SHIFT_RIGHT
  9350 ;;		_LCD_SHIFT_LEFT
  9351 ;; This function uses a non-reentrant model
  9352 ;;
  9353                           
  9354                           
  9355                           ;psect for function _LCD_CMD
  9356  1963                     _LCD_CMD:	
  9357                           
  9358                           ;incstack = 0
  9359                           ; Regs used in _LCD_CMD: [wreg]
  9360                           ;LCD_CMD@a stored from wreg
  9361  1963  00F5               	movwf	LCD_CMD@a
  9362  1964                     l2889:	
  9363                           
  9364                           ;LCD_8bits_main.c: 13:     PORTDbits.RD5 = 0;
  9365  1964  1283               	bcf	3,5	;RP0=0, select bank0
  9366  1965  1303               	bcf	3,6	;RP1=0, select bank0
  9367  1966  1288               	bcf	8,5	;volatile
  9368  1967                     l2891:	
  9369                           
  9370                           ;LCD_8bits_main.c: 14:     PORTB = a;
  9371  1967  0875               	movf	LCD_CMD@a,w
  9372  1968  0086               	movwf	6	;volatile
  9373  1969                     l2893:	
  9374                           
  9375                           ;LCD_8bits_main.c: 15:     PORTDbits.RD7 = 1;
  9376  1969  1788               	bsf	8,7	;volatile
  9377  196A                     l2895:	
  9378                           
  9379                           ;LCD_8bits_main.c: 16:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  9380  196A  296B               	nop2	;2 cycle nop
  9381  196B  296C               	nop2	;2 cycle nop
  9382  196C  0000               	nop
  9383  196D                     l2897:	
  9384                           
  9385                           ;LCD_8bits_main.c: 17:     PORTDbits.RD7 = 0;
  9386  196D  1283               	bcf	3,5	;RP0=0, select bank0
  9387  196E  1303               	bcf	3,6	;RP1=0, select bank0
  9388  196F  1388               	bcf	8,7	;volatile
  9389                           
  9390                           ;LCD_8bits_main.c: 18:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9391  1970  3007               	movlw	7
  9392  1971  00F4               	movwf	??_LCD_CMD+1
  9393  1972  307D               	movlw	125
  9394  1973  00F3               	movwf	??_LCD_CMD
  9395  1974                     u5927:	
  9396  1974  0BF3               	decfsz	??_LCD_CMD,f
  9397  1975  2974               	goto	u5927
  9398  1976  0BF4               	decfsz	??_LCD_CMD+1,f
  9399  1977  2974               	goto	u5927
  9400  1978                     l9:	
  9401  1978  0008               	return
  9402  1979                     __end_of_LCD_CMD:	
  9403                           
  9404                           	psect	text32
  9405  1A3B                     __ptext32:	
  9406 ;; *************** function _EUSART_Init *****************
  9407 ;; Defined at:
  9408 ;;		line 5 in file "Lib_EUSART.c"
  9409 ;; Parameters:    Size  Location     Type
  9410 ;;  a               1    wreg     unsigned char 
  9411 ;;  b               1    3[COMMON] unsigned char 
  9412 ;; Auto vars:     Size  Location     Type
  9413 ;;  a               1    4[COMMON] unsigned char 
  9414 ;; Return value:  Size  Location     Type
  9415 ;;                  1    wreg      void 
  9416 ;; Registers used:
  9417 ;;		wreg, status,2, status,0
  9418 ;; Tracked objects:
  9419 ;;		On entry : 0/0
  9420 ;;		On exit  : 0/0
  9421 ;;		Unchanged: 0/0
  9422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9423 ;;      Params:         1       0       0       0       0
  9424 ;;      Locals:         1       0       0       0       0
  9425 ;;      Temps:          0       0       0       0       0
  9426 ;;      Totals:         2       0       0       0       0
  9427 ;;Total ram usage:        2 bytes
  9428 ;; Hardware stack levels used:    1
  9429 ;; Hardware stack levels required when called:    1
  9430 ;; This function calls:
  9431 ;;		Nothing
  9432 ;; This function is called by:
  9433 ;;		_main
  9434 ;; This function uses a non-reentrant model
  9435 ;;
  9436                           
  9437                           
  9438                           ;psect for function _EUSART_Init
  9439  1A3B                     _EUSART_Init:	
  9440                           
  9441                           ;incstack = 0
  9442                           ; Regs used in _EUSART_Init: [wreg+status,2+status,0]
  9443                           ;EUSART_Init@a stored from wreg
  9444  1A3B  00F4               	movwf	EUSART_Init@a
  9445  1A3C                     l3351:	
  9446                           
  9447                           ;Lib_EUSART.c: 7:     BAUDCTLbits.BRG16 = 0;
  9448  1A3C  1683               	bsf	3,5	;RP0=1, select bank3
  9449  1A3D  1703               	bsf	3,6	;RP1=1, select bank3
  9450  1A3E  1187               	bcf	7,3	;volatile
  9451                           
  9452                           ;Lib_EUSART.c: 8:     TXSTAbits.BRGH = 1;
  9453  1A3F  1683               	bsf	3,5	;RP0=1, select bank1
  9454  1A40  1303               	bcf	3,6	;RP1=0, select bank1
  9455  1A41  1518               	bsf	24,2	;volatile
  9456                           
  9457                           ;Lib_EUSART.c: 9:     TXSTAbits.SYNC = 0;
  9458  1A42  1218               	bcf	24,4	;volatile
  9459                           
  9460                           ;Lib_EUSART.c: 10:     RCSTAbits.SPEN = 1;
  9461  1A43  1283               	bcf	3,5	;RP0=0, select bank0
  9462  1A44  1303               	bcf	3,6	;RP1=0, select bank0
  9463  1A45  1798               	bsf	24,7	;volatile
  9464  1A46                     l3353:	
  9465                           
  9466                           ;Lib_EUSART.c: 11:     SPBRG = 25;
  9467  1A46  3019               	movlw	25
  9468  1A47  1683               	bsf	3,5	;RP0=1, select bank1
  9469  1A48  1303               	bcf	3,6	;RP1=0, select bank1
  9470  1A49  0099               	movwf	25	;volatile
  9471  1A4A                     l3355:	
  9472                           
  9473                           ;Lib_EUSART.c: 12:     if (a==1){
  9474  1A4A  0374               	decf	EUSART_Init@a,w
  9475  1A4B  1D03               	btfss	3,2
  9476  1A4C  2A4E               	goto	u5241
  9477  1A4D  2A4F               	goto	u5240
  9478  1A4E                     u5241:	
  9479  1A4E  2A55               	goto	l190
  9480  1A4F                     u5240:	
  9481  1A4F                     l3357:	
  9482                           
  9483                           ;Lib_EUSART.c: 13:         PIE1bits.RCIE = 1;
  9484  1A4F  168C               	bsf	12,5	;volatile
  9485                           
  9486                           ;Lib_EUSART.c: 14:         PIR1bits.RCIF = 0;
  9487  1A50  1283               	bcf	3,5	;RP0=0, select bank0
  9488  1A51  1303               	bcf	3,6	;RP1=0, select bank0
  9489  1A52  128C               	bcf	12,5	;volatile
  9490                           
  9491                           ;Lib_EUSART.c: 15:         INTCONbits.GIE = 1;
  9492  1A53  178B               	bsf	11,7	;volatile
  9493                           
  9494                           ;Lib_EUSART.c: 16:         INTCONbits.PEIE = 1;
  9495  1A54  170B               	bsf	11,6	;volatile
  9496  1A55                     l190:	
  9497                           ;Lib_EUSART.c: 17:     }
  9498                           
  9499                           
  9500                           ;Lib_EUSART.c: 18:     RCSTAbits.RX9D = 0;
  9501  1A55  1283               	bcf	3,5	;RP0=0, select bank0
  9502  1A56  1018               	bcf	24,0	;volatile
  9503                           
  9504                           ;Lib_EUSART.c: 19:     RCSTAbits.CREN = 1;
  9505  1A57  1618               	bsf	24,4	;volatile
  9506                           
  9507                           ;Lib_EUSART.c: 22:     TXSTAbits.TXEN = 1;
  9508  1A58  1683               	bsf	3,5	;RP0=1, select bank1
  9509  1A59  1303               	bcf	3,6	;RP1=0, select bank1
  9510  1A5A  1698               	bsf	24,5	;volatile
  9511  1A5B                     l3359:	
  9512                           
  9513                           ;Lib_EUSART.c: 23:     if(b==1){
  9514  1A5B  0373               	decf	EUSART_Init@b,w
  9515  1A5C  1D03               	btfss	3,2
  9516  1A5D  2A5F               	goto	u5251
  9517  1A5E  2A60               	goto	u5250
  9518  1A5F                     u5251:	
  9519  1A5F  2A66               	goto	l192
  9520  1A60                     u5250:	
  9521  1A60                     l3361:	
  9522                           
  9523                           ;Lib_EUSART.c: 24:         PIE1bits.TXIE = 1;
  9524  1A60  160C               	bsf	12,4	;volatile
  9525                           
  9526                           ;Lib_EUSART.c: 25:         PIR1bits.TXIF = 0;
  9527  1A61  1283               	bcf	3,5	;RP0=0, select bank0
  9528  1A62  1303               	bcf	3,6	;RP1=0, select bank0
  9529  1A63  120C               	bcf	12,4	;volatile
  9530                           
  9531                           ;Lib_EUSART.c: 26:         INTCONbits.GIE = 1;
  9532  1A64  178B               	bsf	11,7	;volatile
  9533                           
  9534                           ;Lib_EUSART.c: 27:         INTCONbits.PEIE = 1;
  9535  1A65  170B               	bsf	11,6	;volatile
  9536  1A66                     l192:	
  9537  1A66  0008               	return
  9538  1A67                     __end_of_EUSART_Init:	
  9539                           
  9540                           	psect	text33
  9541  0878                     __ptext33:	
  9542 ;; *************** function _ADC_init *****************
  9543 ;; Defined at:
  9544 ;;		line 28 in file "../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c"
  9545 ;; Parameters:    Size  Location     Type
  9546 ;;  Fosc            1    wreg     unsigned char 
  9547 ;;  channel         1    3[COMMON] unsigned char 
  9548 ;;  int_on          1    4[COMMON] unsigned char 
  9549 ;;  left_or_righ    1    5[COMMON] unsigned char 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  Fosc            1    8[COMMON] unsigned char 
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  1    wreg      void 
  9554 ;; Registers used:
  9555 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9556 ;; Tracked objects:
  9557 ;;		On entry : 0/0
  9558 ;;		On exit  : 0/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9561 ;;      Params:         3       0       0       0       0
  9562 ;;      Locals:         1       0       0       0       0
  9563 ;;      Temps:          2       0       0       0       0
  9564 ;;      Totals:         6       0       0       0       0
  9565 ;;Total ram usage:        6 bytes
  9566 ;; Hardware stack levels used:    1
  9567 ;; Hardware stack levels required when called:    1
  9568 ;; This function calls:
  9569 ;;		Nothing
  9570 ;; This function is called by:
  9571 ;;		_main
  9572 ;; This function uses a non-reentrant model
  9573 ;;
  9574                           
  9575                           
  9576                           ;psect for function _ADC_init
  9577  0878                     _ADC_init:	
  9578                           
  9579                           ;incstack = 0
  9580                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
  9581                           ;ADC_init@Fosc stored from wreg
  9582  0878  00F8               	movwf	ADC_init@Fosc
  9583  0879                     l3321:	
  9584                           
  9585                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 29:     switch (Fosc) {
  9586  0879  2893               	goto	l3325
  9587  087A                     l146:	
  9588                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 30:         case 0:
  9589                           
  9590                           
  9591                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 31:             ADCON0bits
      +                          .ADCS1 = 0;
  9592  087A  1283               	bcf	3,5	;RP0=0, select bank0
  9593  087B  1303               	bcf	3,6	;RP1=0, select bank0
  9594  087C  139F               	bcf	31,7	;volatile
  9595                           
  9596                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 32:             ADCON0bits
      +                          .ADCS0 = 0;
  9597  087D  131F               	bcf	31,6	;volatile
  9598                           
  9599                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 33:             break;
  9600  087E  28EF               	goto	l3329
  9601  087F                     l148:	
  9602                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 34:         case 1:
  9603                           
  9604                           
  9605                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 35:             ADCON0bits
      +                          .ADCS1 = 0;
  9606  087F  1283               	bcf	3,5	;RP0=0, select bank0
  9607  0880  1303               	bcf	3,6	;RP1=0, select bank0
  9608  0881  139F               	bcf	31,7	;volatile
  9609                           
  9610                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 36:             ADCON0bits
      +                          .ADCS0 = 1;
  9611  0882  171F               	bsf	31,6	;volatile
  9612                           
  9613                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 37:             break;
  9614  0883  28EF               	goto	l3329
  9615  0884                     l149:	
  9616                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 38:         case 2:
  9617                           
  9618                           
  9619                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 39:             ADCON0bits
      +                          .ADCS1 = 1;
  9620  0884  1283               	bcf	3,5	;RP0=0, select bank0
  9621  0885  1303               	bcf	3,6	;RP1=0, select bank0
  9622  0886  179F               	bsf	31,7	;volatile
  9623                           
  9624                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 40:             ADCON0bits
      +                          .ADCS0 = 0;
  9625  0887  131F               	bcf	31,6	;volatile
  9626                           
  9627                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 41:             break;
  9628  0888  28EF               	goto	l3329
  9629  0889                     l150:	
  9630                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 42:         case 3:
  9631                           
  9632                           
  9633                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 43:             ADCON0bits
      +                          .ADCS1 = 1;
  9634  0889  1283               	bcf	3,5	;RP0=0, select bank0
  9635  088A  1303               	bcf	3,6	;RP1=0, select bank0
  9636  088B  179F               	bsf	31,7	;volatile
  9637                           
  9638                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 44:             ADCON0bits
      +                          .ADCS0 = 1;
  9639  088C  171F               	bsf	31,6	;volatile
  9640                           
  9641                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 45:             break;
  9642  088D  28EF               	goto	l3329
  9643  088E                     l151:	
  9644                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 46:         default:
  9645                           
  9646                           
  9647                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 47:             ADCON0bits
      +                          .ADCS1 = 0;
  9648  088E  1283               	bcf	3,5	;RP0=0, select bank0
  9649  088F  1303               	bcf	3,6	;RP1=0, select bank0
  9650  0890  139F               	bcf	31,7	;volatile
  9651                           
  9652                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 48:             ADCON0bits
      +                          .ADCS0 = 1;
  9653  0891  171F               	bsf	31,6	;volatile
  9654                           
  9655                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 49:             break;
  9656  0892  28EF               	goto	l3329
  9657  0893                     l3325:	
  9658  0893  0878               	movf	ADC_init@Fosc,w
  9659  0894  00F6               	movwf	??_ADC_init
  9660  0895  01F7               	clrf	??_ADC_init+1
  9661                           
  9662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9663                           ; Switch size 1, requested type "simple"
  9664                           ; Number of cases is 1, Range of values is 0 to 0
  9665                           ; switch strategies available:
  9666                           ; Name         Instructions Cycles
  9667                           ; simple_byte            4     3 (average)
  9668                           ; direct_byte           11     8 (fixed)
  9669                           ; jumptable            260     6 (fixed)
  9670                           ;	Chosen strategy is simple_byte
  9671  0896  0877               	movf	??_ADC_init+1,w
  9672  0897  3A00               	xorlw	0	; case 0
  9673  0898  1903               	skipnz
  9674  0899  289B               	goto	l3823
  9675  089A  288E               	goto	l151
  9676  089B                     l3823:	
  9677                           
  9678                           ; Switch size 1, requested type "simple"
  9679                           ; Number of cases is 4, Range of values is 0 to 3
  9680                           ; switch strategies available:
  9681                           ; Name         Instructions Cycles
  9682                           ; simple_byte           13     7 (average)
  9683                           ; direct_byte           20     8 (fixed)
  9684                           ; jumptable            260     6 (fixed)
  9685                           ;	Chosen strategy is simple_byte
  9686  089B  0876               	movf	??_ADC_init,w
  9687  089C  3A00               	xorlw	0	; case 0
  9688  089D  1903               	skipnz
  9689  089E  287A               	goto	l146
  9690  089F  3A01               	xorlw	1	; case 1
  9691  08A0  1903               	skipnz
  9692  08A1  287F               	goto	l148
  9693  08A2  3A03               	xorlw	3	; case 2
  9694  08A3  1903               	skipnz
  9695  08A4  2884               	goto	l149
  9696  08A5  3A01               	xorlw	1	; case 3
  9697  08A6  1903               	skipnz
  9698  08A7  2889               	goto	l150
  9699  08A8  288E               	goto	l151
  9700  08A9                     l153:	
  9701                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 53:         case 0:
  9702                           
  9703                           
  9704                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 54:             ADCON0bits
      +                          .CHS0 = 0;
  9705  08A9  111F               	bcf	31,2	;volatile
  9706                           
  9707                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 55:             ADCON0bits
      +                          .CHS1 = 0;
  9708  08AA  119F               	bcf	31,3	;volatile
  9709                           
  9710                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 56:             ADCON0bits
      +                          .CHS2 = 0;
  9711  08AB  121F               	bcf	31,4	;volatile
  9712                           
  9713                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 57:             ADCON0bits
      +                          .CHS3 = 0;
  9714  08AC  129F               	bcf	31,5	;volatile
  9715                           
  9716                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 58:             break;
  9717  08AD  2923               	goto	l154
  9718  08AE                     l155:	
  9719                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 59:         case 1:
  9720                           
  9721                           
  9722                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 60:             ADCON0bits
      +                          .CHS0 = 1;
  9723  08AE  151F               	bsf	31,2	;volatile
  9724                           
  9725                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 61:             ADCON0bits
      +                          .CHS1 = 0;
  9726  08AF  119F               	bcf	31,3	;volatile
  9727                           
  9728                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 62:             ADCON0bits
      +                          .CHS2 = 0;
  9729  08B0  121F               	bcf	31,4	;volatile
  9730                           
  9731                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 63:             ADCON0bits
      +                          .CHS3 = 0;
  9732  08B1  129F               	bcf	31,5	;volatile
  9733                           
  9734                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 64:             break;
  9735  08B2  2923               	goto	l154
  9736  08B3                     l156:	
  9737                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 65:         case 2:
  9738                           
  9739                           
  9740                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 66:             ADCON0bits
      +                          .CHS0 = 0;
  9741  08B3  111F               	bcf	31,2	;volatile
  9742                           
  9743                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 67:             ADCON0bits
      +                          .CHS1 = 1;
  9744  08B4  159F               	bsf	31,3	;volatile
  9745                           
  9746                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 68:             ADCON0bits
      +                          .CHS2 = 0;
  9747  08B5  121F               	bcf	31,4	;volatile
  9748                           
  9749                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 69:             ADCON0bits
      +                          .CHS3 = 0;
  9750  08B6  129F               	bcf	31,5	;volatile
  9751                           
  9752                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 70:             break;
  9753  08B7  2923               	goto	l154
  9754  08B8                     l157:	
  9755                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 71:         case 3:
  9756                           
  9757                           
  9758                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 72:             ADCON0bits
      +                          .CHS0 = 1;
  9759  08B8  151F               	bsf	31,2	;volatile
  9760                           
  9761                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 73:             ADCON0bits
      +                          .CHS1 = 1;
  9762  08B9  159F               	bsf	31,3	;volatile
  9763                           
  9764                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 74:             ADCON0bits
      +                          .CHS2 = 0;
  9765  08BA  121F               	bcf	31,4	;volatile
  9766                           
  9767                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 75:             ADCON0bits
      +                          .CHS3 = 0;
  9768  08BB  129F               	bcf	31,5	;volatile
  9769                           
  9770                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 76:             break;
  9771  08BC  2923               	goto	l154
  9772  08BD                     l158:	
  9773                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 77:         case 4:
  9774                           
  9775                           
  9776                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 78:             ADCON0bits
      +                          .CHS0 = 0;
  9777  08BD  111F               	bcf	31,2	;volatile
  9778                           
  9779                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 79:             ADCON0bits
      +                          .CHS1 = 0;
  9780  08BE  119F               	bcf	31,3	;volatile
  9781                           
  9782                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 80:             ADCON0bits
      +                          .CHS2 = 1;
  9783  08BF  161F               	bsf	31,4	;volatile
  9784                           
  9785                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 81:             ADCON0bits
      +                          .CHS3 = 0;
  9786  08C0  129F               	bcf	31,5	;volatile
  9787                           
  9788                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 82:             break;
  9789  08C1  2923               	goto	l154
  9790  08C2                     l159:	
  9791                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 83:         case 5:
  9792                           
  9793                           
  9794                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 84:             ADCON0bits
      +                          .CHS0 = 1;
  9795  08C2  151F               	bsf	31,2	;volatile
  9796                           
  9797                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 85:             ADCON0bits
      +                          .CHS1 = 0;
  9798  08C3  119F               	bcf	31,3	;volatile
  9799                           
  9800                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 86:             ADCON0bits
      +                          .CHS2 = 1;
  9801  08C4  161F               	bsf	31,4	;volatile
  9802                           
  9803                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 87:             ADCON0bits
      +                          .CHS3 = 0;
  9804  08C5  129F               	bcf	31,5	;volatile
  9805                           
  9806                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 88:             break;
  9807  08C6  2923               	goto	l154
  9808  08C7                     l160:	
  9809                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 89:         case 6:
  9810                           
  9811                           
  9812                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 90:             ADCON0bits
      +                          .CHS0 = 0;
  9813  08C7  111F               	bcf	31,2	;volatile
  9814                           
  9815                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 91:             ADCON0bits
      +                          .CHS1 = 1;
  9816  08C8  159F               	bsf	31,3	;volatile
  9817                           
  9818                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 92:             ADCON0bits
      +                          .CHS2 = 1;
  9819  08C9  161F               	bsf	31,4	;volatile
  9820                           
  9821                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 93:             ADCON0bits
      +                          .CHS3 = 0;
  9822  08CA  129F               	bcf	31,5	;volatile
  9823                           
  9824                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 94:             break;
  9825  08CB  2923               	goto	l154
  9826  08CC                     l161:	
  9827                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 95:         case 7:
  9828                           
  9829                           
  9830                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 96:             ADCON0bits
      +                          .CHS0 = 1;
  9831  08CC  151F               	bsf	31,2	;volatile
  9832                           
  9833                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 97:             ADCON0bits
      +                          .CHS1 = 1;
  9834  08CD  159F               	bsf	31,3	;volatile
  9835                           
  9836                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 98:             ADCON0bits
      +                          .CHS2 = 1;
  9837  08CE  161F               	bsf	31,4	;volatile
  9838                           
  9839                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 99:             ADCON0bits
      +                          .CHS3 = 0;
  9840  08CF  129F               	bcf	31,5	;volatile
  9841                           
  9842                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 100:             break;
  9843  08D0  2923               	goto	l154
  9844  08D1                     l162:	
  9845                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 101:         case 8:
  9846                           
  9847                           
  9848                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 102:             ADCON0bit
      +                          s.CHS0 = 0;
  9849  08D1  111F               	bcf	31,2	;volatile
  9850                           
  9851                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 103:             ADCON0bit
      +                          s.CHS1 = 0;
  9852  08D2  119F               	bcf	31,3	;volatile
  9853                           
  9854                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 104:             ADCON0bit
      +                          s.CHS2 = 0;
  9855  08D3  121F               	bcf	31,4	;volatile
  9856                           
  9857                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 105:             ADCON0bit
      +                          s.CHS3 = 1;
  9858  08D4  169F               	bsf	31,5	;volatile
  9859                           
  9860                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 106:             break;
  9861  08D5  2923               	goto	l154
  9862  08D6                     l163:	
  9863                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 107:         case 9:
  9864                           
  9865                           
  9866                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 108:             ADCON0bit
      +                          s.CHS0 = 1;
  9867  08D6  151F               	bsf	31,2	;volatile
  9868                           
  9869                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 109:             ADCON0bit
      +                          s.CHS1 = 0;
  9870  08D7  119F               	bcf	31,3	;volatile
  9871                           
  9872                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 110:             ADCON0bit
      +                          s.CHS2 = 0;
  9873  08D8  121F               	bcf	31,4	;volatile
  9874                           
  9875                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 111:             ADCON0bit
      +                          s.CHS3 = 1;
  9876  08D9  169F               	bsf	31,5	;volatile
  9877                           
  9878                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 112:             break;
  9879  08DA  2923               	goto	l154
  9880  08DB                     l164:	
  9881                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 113:         case 10:
  9882                           
  9883                           
  9884                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 114:             ADCON0bit
      +                          s.CHS0 = 0;
  9885  08DB  111F               	bcf	31,2	;volatile
  9886                           
  9887                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 115:             ADCON0bit
      +                          s.CHS1 = 1;
  9888  08DC  159F               	bsf	31,3	;volatile
  9889                           
  9890                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 116:             ADCON0bit
      +                          s.CHS2 = 0;
  9891  08DD  121F               	bcf	31,4	;volatile
  9892                           
  9893                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 117:             ADCON0bit
      +                          s.CHS3 = 1;
  9894  08DE  169F               	bsf	31,5	;volatile
  9895                           
  9896                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 118:             break;
  9897  08DF  2923               	goto	l154
  9898  08E0                     l165:	
  9899                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 119:         case 11:
  9900                           
  9901                           
  9902                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 120:             ADCON0bit
      +                          s.CHS0 = 1;
  9903  08E0  151F               	bsf	31,2	;volatile
  9904                           
  9905                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 121:             ADCON0bit
      +                          s.CHS1 = 1;
  9906  08E1  159F               	bsf	31,3	;volatile
  9907                           
  9908                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 122:             ADCON0bit
      +                          s.CHS2 = 0;
  9909  08E2  121F               	bcf	31,4	;volatile
  9910                           
  9911                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 123:             ADCON0bit
      +                          s.CHS3 = 1;
  9912  08E3  169F               	bsf	31,5	;volatile
  9913                           
  9914                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 124:             break;
  9915  08E4  2923               	goto	l154
  9916  08E5                     l166:	
  9917                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 125:         case 12:
  9918                           
  9919                           
  9920                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 126:             ADCON0bit
      +                          s.CHS0 = 0;
  9921  08E5  111F               	bcf	31,2	;volatile
  9922                           
  9923                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 127:             ADCON0bit
      +                          s.CHS1 = 0;
  9924  08E6  119F               	bcf	31,3	;volatile
  9925                           
  9926                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 128:             ADCON0bit
      +                          s.CHS2 = 1;
  9927  08E7  161F               	bsf	31,4	;volatile
  9928                           
  9929                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 129:             ADCON0bit
      +                          s.CHS3 = 1;
  9930  08E8  169F               	bsf	31,5	;volatile
  9931                           
  9932                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 130:             break;
  9933  08E9  2923               	goto	l154
  9934  08EA                     l167:	
  9935                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 131:         case 13:
  9936                           
  9937                           
  9938                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 132:             ADCON0bit
      +                          s.CHS0 = 1;
  9939  08EA  151F               	bsf	31,2	;volatile
  9940                           
  9941                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 133:             ADCON0bit
      +                          s.CHS1 = 0;
  9942  08EB  119F               	bcf	31,3	;volatile
  9943                           
  9944                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 134:             ADCON0bit
      +                          s.CHS2 = 1;
  9945  08EC  161F               	bsf	31,4	;volatile
  9946                           
  9947                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 135:             ADCON0bit
      +                          s.CHS3 = 1;
  9948  08ED  169F               	bsf	31,5	;volatile
  9949                           
  9950                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 136:             break;
  9951  08EE  2923               	goto	l154
  9952  08EF                     l3329:	
  9953  08EF  0873               	movf	ADC_init@channel,w
  9954  08F0  00F6               	movwf	??_ADC_init
  9955  08F1  01F7               	clrf	??_ADC_init+1
  9956                           
  9957                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9958                           ; Switch size 1, requested type "simple"
  9959                           ; Number of cases is 1, Range of values is 0 to 0
  9960                           ; switch strategies available:
  9961                           ; Name         Instructions Cycles
  9962                           ; simple_byte            4     3 (average)
  9963                           ; direct_byte           11     8 (fixed)
  9964                           ; jumptable            260     6 (fixed)
  9965                           ;	Chosen strategy is simple_byte
  9966  08F2  0877               	movf	??_ADC_init+1,w
  9967  08F3  3A00               	xorlw	0	; case 0
  9968  08F4  1903               	skipnz
  9969  08F5  28F7               	goto	l3825
  9970  08F6  2923               	goto	l154
  9971  08F7                     l3825:	
  9972                           
  9973                           ; Switch size 1, requested type "simple"
  9974                           ; Number of cases is 14, Range of values is 0 to 13
  9975                           ; switch strategies available:
  9976                           ; Name         Instructions Cycles
  9977                           ; simple_byte           43    22 (average)
  9978                           ; direct_byte           50     8 (fixed)
  9979                           ; jumptable            260     6 (fixed)
  9980                           ;	Chosen strategy is simple_byte
  9981  08F7  0876               	movf	??_ADC_init,w
  9982  08F8  3A00               	xorlw	0	; case 0
  9983  08F9  1903               	skipnz
  9984  08FA  28A9               	goto	l153
  9985  08FB  3A01               	xorlw	1	; case 1
  9986  08FC  1903               	skipnz
  9987  08FD  28AE               	goto	l155
  9988  08FE  3A03               	xorlw	3	; case 2
  9989  08FF  1903               	skipnz
  9990  0900  28B3               	goto	l156
  9991  0901  3A01               	xorlw	1	; case 3
  9992  0902  1903               	skipnz
  9993  0903  28B8               	goto	l157
  9994  0904  3A07               	xorlw	7	; case 4
  9995  0905  1903               	skipnz
  9996  0906  28BD               	goto	l158
  9997  0907  3A01               	xorlw	1	; case 5
  9998  0908  1903               	skipnz
  9999  0909  28C2               	goto	l159
 10000  090A  3A03               	xorlw	3	; case 6
 10001  090B  1903               	skipnz
 10002  090C  28C7               	goto	l160
 10003  090D  3A01               	xorlw	1	; case 7
 10004  090E  1903               	skipnz
 10005  090F  28CC               	goto	l161
 10006  0910  3A0F               	xorlw	15	; case 8
 10007  0911  1903               	skipnz
 10008  0912  28D1               	goto	l162
 10009  0913  3A01               	xorlw	1	; case 9
 10010  0914  1903               	skipnz
 10011  0915  28D6               	goto	l163
 10012  0916  3A03               	xorlw	3	; case 10
 10013  0917  1903               	skipnz
 10014  0918  28DB               	goto	l164
 10015  0919  3A01               	xorlw	1	; case 11
 10016  091A  1903               	skipnz
 10017  091B  28E0               	goto	l165
 10018  091C  3A07               	xorlw	7	; case 12
 10019  091D  1903               	skipnz
 10020  091E  28E5               	goto	l166
 10021  091F  3A01               	xorlw	1	; case 13
 10022  0920  1903               	skipnz
 10023  0921  28EA               	goto	l167
 10024  0922  2923               	goto	l154
 10025  0923                     l154:	
 10026                           
 10027                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 140:     ADCON0bits.ADON =
      +                           1;
 10028  0923  141F               	bsf	31,0	;volatile
 10029  0924                     l3331:	
 10030                           
 10031                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 141:     if (int_on == 1){
 10032  0924  0374               	decf	ADC_init@int_on,w
 10033  0925  1D03               	btfss	3,2
 10034  0926  2928               	goto	u5231
 10035  0927  2929               	goto	u5230
 10036  0928                     u5231:	
 10037  0928  292F               	goto	l3335
 10038  0929                     u5230:	
 10039  0929                     l3333:	
 10040                           
 10041                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 142:         PIR1bits.ADIF
      +                           = 0;
 10042  0929  130C               	bcf	12,6	;volatile
 10043                           
 10044                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 143:         PIE1bits.ADIE
      +                           = 1;
 10045  092A  1683               	bsf	3,5	;RP0=1, select bank1
 10046  092B  1303               	bcf	3,6	;RP1=0, select bank1
 10047  092C  170C               	bsf	12,6	;volatile
 10048                           
 10049                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 144:         INTCONbits.PE
      +                          IE = 1;
 10050  092D  170B               	bsf	11,6	;volatile
 10051                           
 10052                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 145:         INTCONbits.GI
      +                          E = 1;
 10053  092E  178B               	bsf	11,7	;volatile
 10054  092F                     l3335:	
 10055                           
 10056                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 147:     ADCON1bits.ADFM =
      +                           left_or_right;
 10057  092F  0C75               	rrf	ADC_init@left_or_right,w
 10058  0930  1683               	bsf	3,5	;RP0=1, select bank1
 10059  0931  1303               	bcf	3,6	;RP1=0, select bank1
 10060  0932  1C03               	skipc
 10061  0933  139F               	bcf	31,7	;volatile
 10062  0934  1803               	skipnc
 10063  0935  179F               	bsf	31,7	;volatile
 10064  0936                     l3337:	
 10065                           
 10066                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 148:     ADCON1bits.VCFG0 
      +                          = 0;
 10067  0936  121F               	bcf	31,4	;volatile
 10068  0937                     l3339:	
 10069                           
 10070                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 149:     ADCON1bits.VCFG1 
      +                          = 0;
 10071  0937  129F               	bcf	31,5	;volatile
 10072  0938                     l3341:	
 10073                           
 10074                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 150:     ADCON0bits.GO_DON
      +                          E = 1;
 10075  0938  1283               	bcf	3,5	;RP0=0, select bank0
 10076  0939  1303               	bcf	3,6	;RP1=0, select bank0
 10077  093A  149F               	bsf	31,1	;volatile
 10078  093B                     l169:	
 10079  093B  0008               	return
 10080  093C                     __end_of_ADC_init:	
 10081                           
 10082                           	psect	text34
 10083  1A67                     __ptext34:	
 10084 ;; *************** function _isr *****************
 10085 ;; Defined at:
 10086 ;;		line 41 in file "main_lab3.c"
 10087 ;; Parameters:    Size  Location     Type
 10088 ;;		None
 10089 ;; Auto vars:     Size  Location     Type
 10090 ;;		None
 10091 ;; Return value:  Size  Location     Type
 10092 ;;                  1    wreg      void 
 10093 ;; Registers used:
 10094 ;;		wreg
 10095 ;; Tracked objects:
 10096 ;;		On entry : 0/0
 10097 ;;		On exit  : 0/0
 10098 ;;		Unchanged: 0/0
 10099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10100 ;;      Params:         0       0       0       0       0
 10101 ;;      Locals:         0       0       0       0       0
 10102 ;;      Temps:          3       0       0       0       0
 10103 ;;      Totals:         3       0       0       0       0
 10104 ;;Total ram usage:        3 bytes
 10105 ;; Hardware stack levels used:    1
 10106 ;; This function calls:
 10107 ;;		Nothing
 10108 ;; This function is called by:
 10109 ;;		Interrupt level 1
 10110 ;; This function uses a non-reentrant model
 10111 ;;
 10112                           
 10113                           
 10114                           ;psect for function _isr
 10115  1A67                     _isr:	
 10116  1A67                     i1l3673:	
 10117                           
 10118                           ;main_lab3.c: 42:     if (PIR1bits.ADIF == 1){
 10119  1A67  1283               	bcf	3,5	;RP0=0, select bank0
 10120  1A68  1303               	bcf	3,6	;RP1=0, select bank0
 10121  1A69  1F0C               	btfss	12,6	;volatile
 10122  1A6A  2A6C               	goto	u580_21
 10123  1A6B  2A6D               	goto	u580_20
 10124  1A6C                     u580_21:	
 10125  1A6C  2A8B               	goto	i1l3685
 10126  1A6D                     u580_20:	
 10127  1A6D                     i1l3675:	
 10128                           
 10129                           ;main_lab3.c: 43:         PIR1bits.ADIF = 0;
 10130  1A6D  130C               	bcf	12,6	;volatile
 10131                           
 10132                           ;main_lab3.c: 44:         start_another = 1;
 10133  1A6E  1683               	bsf	3,5	;RP0=1, select bank1
 10134  1A6F  1303               	bcf	3,6	;RP1=0, select bank1
 10135  1A70  01D6               	clrf	_start_another^(0+128)
 10136  1A71  0AD6               	incf	_start_another^(0+128),f
 10137                           
 10138                           ;main_lab3.c: 45:         if (ADCON0bits.CHS0 == 0){
 10139  1A72  1283               	bcf	3,5	;RP0=0, select bank0
 10140  1A73  1303               	bcf	3,6	;RP1=0, select bank0
 10141  1A74  191F               	btfsc	31,2	;volatile
 10142  1A75  2A77               	goto	u581_21
 10143  1A76  2A78               	goto	u581_20
 10144  1A77                     u581_21:	
 10145  1A77  2A82               	goto	i1l3681
 10146  1A78                     u581_20:	
 10147  1A78                     i1l3677:	
 10148                           
 10149                           ;main_lab3.c: 46:             pot2 = ADRESH;
 10150  1A78  081E               	movf	30,w	;volatile
 10151  1A79  00F0               	movwf	??_isr
 10152  1A7A  0870               	movf	??_isr,w
 10153  1A7B  1683               	bsf	3,5	;RP0=1, select bank1
 10154  1A7C  1303               	bcf	3,6	;RP1=0, select bank1
 10155  1A7D  00D7               	movwf	_pot2^(0+128)
 10156  1A7E                     i1l3679:	
 10157                           
 10158                           ;main_lab3.c: 47:             ADCON0bits.CHS0 = 1;
 10159  1A7E  1283               	bcf	3,5	;RP0=0, select bank0
 10160  1A7F  1303               	bcf	3,6	;RP1=0, select bank0
 10161  1A80  151F               	bsf	31,2	;volatile
 10162                           
 10163                           ;main_lab3.c: 48:         }else{
 10164  1A81  2A8B               	goto	i1l3685
 10165  1A82                     i1l3681:	
 10166                           
 10167                           ;main_lab3.c: 49:             pot1 = ADRESH;
 10168  1A82  081E               	movf	30,w	;volatile
 10169  1A83  00F0               	movwf	??_isr
 10170  1A84  0870               	movf	??_isr,w
 10171  1A85  1683               	bsf	3,5	;RP0=1, select bank1
 10172  1A86  1303               	bcf	3,6	;RP1=0, select bank1
 10173  1A87  00D8               	movwf	_pot1^(0+128)
 10174  1A88                     i1l3683:	
 10175                           
 10176                           ;main_lab3.c: 50:             ADCON0bits.CHS0 = 0;
 10177  1A88  1283               	bcf	3,5	;RP0=0, select bank0
 10178  1A89  1303               	bcf	3,6	;RP1=0, select bank0
 10179  1A8A  111F               	bcf	31,2	;volatile
 10180  1A8B                     i1l3685:	
 10181  1A8B  1E8C               	btfss	12,5	;volatile
 10182  1A8C  2A8E               	goto	u582_21
 10183  1A8D  2A8F               	goto	u582_20
 10184  1A8E                     u582_21:	
 10185  1A8E  2A94               	goto	i1l109
 10186  1A8F                     u582_20:	
 10187  1A8F                     i1l3687:	
 10188                           
 10189                           ;main_lab3.c: 53:         Contador = RCREG;
 10190  1A8F  081A               	movf	26,w	;volatile
 10191  1A90  00F0               	movwf	??_isr
 10192  1A91  0870               	movf	??_isr,w
 10193  1A92  00EF               	movwf	_Contador
 10194  1A93                     i1l3689:	
 10195                           
 10196                           ;main_lab3.c: 54:         PIR1bits.RCIF = 0;
 10197  1A93  128C               	bcf	12,5	;volatile
 10198  1A94                     i1l109:	
 10199  1A94  0872               	movf	??_isr+2,w
 10200  1A95  008A               	movwf	10
 10201  1A96  0E71               	swapf	(??_isr+1)^(0+4294967168),w
 10202  1A97  0083               	movwf	3
 10203  1A98  0EFE               	swapf	btemp,f
 10204  1A99  0E7E               	swapf	btemp,w
 10205  1A9A  0009               	retfie
 10206  1A9B                     __end_of_isr:	
 10207  007E                     btemp	set	126	;btemp
 10208  007E                     wtemp0	set	126
 10209                           
 10210                           	psect	intentry
 10211  0004                     __pintentry:	
 10212                           ;incstack = 0
 10213                           ; Regs used in _isr: [wreg]
 10214                           
 10215  0004                     interrupt_function:	
 10216  007E                     saved_w	set	btemp
 10217  0004  00FE               	movwf	btemp
 10218  0005  0E03               	swapf	3,w
 10219  0006  00F1               	movwf	??_isr+1
 10220  0007  080A               	movf	10,w
 10221  0008  00F2               	movwf	??_isr+2
 10222  0009  160A  158A  2A67   	ljmp	_isr
 10223                           
 10224                           	psect	text2_split_1
 10225  001F                     u5390:	
 10226  001F                     l3461:	
 10227  001F  1683               	bsf	3,5	;RP0=1, select bank1
 10228  0020  1303               	bcf	3,6	;RP1=0, select bank1
 10229  0021  0843               	movf	(sprintf@fval+3)^(0+128),w
 10230  0022  00F6               	movwf	___fleq@ff1+3
 10231  0023  0842               	movf	(sprintf@fval+2)^(0+128),w
 10232  0024  00F5               	movwf	___fleq@ff1+2
 10233  0025  0841               	movf	(sprintf@fval+1)^(0+128),w
 10234  0026  00F4               	movwf	___fleq@ff1+1
 10235  0027  0840               	movf	sprintf@fval^(0+128),w
 10236  0028  00F3               	movwf	___fleq@ff1
 10237  0029  3000               	movlw	0
 10238  002A  00FA               	movwf	___fleq@ff2+3
 10239  002B  3000               	movlw	0
 10240  002C  00F9               	movwf	___fleq@ff2+2
 10241  002D  3000               	movlw	0
 10242  002E  00F8               	movwf	___fleq@ff2+1
 10243  002F  3000               	movlw	0
 10244  0030  00F7               	movwf	___fleq@ff2
 10245  0031  160A  158A  231B  120A  118A  	fcall	___fleq
 10246  0036  1803               	btfsc	3,0
 10247  0037  2839               	goto	u5401
 10248  0038  283A               	goto	u5400
 10249  0039                     u5401:	
 10250  0039  28E2               	goto	l3481
 10251  003A                     u5400:	
 10252  003A                     l3463:	
 10253  003A  1683               	bsf	3,5	;RP0=1, select bank1
 10254  003B  1303               	bcf	3,6	;RP1=0, select bank1
 10255  003C  0843               	movf	(sprintf@fval+3)^(0+128),w
 10256  003D  1283               	bcf	3,5	;RP0=0, select bank0
 10257  003E  1303               	bcf	3,6	;RP1=0, select bank0
 10258  003F  00D8               	movwf	___fltol@f1+3
 10259  0040  1683               	bsf	3,5	;RP0=1, select bank1
 10260  0041  1303               	bcf	3,6	;RP1=0, select bank1
 10261  0042  0842               	movf	(sprintf@fval+2)^(0+128),w
 10262  0043  1283               	bcf	3,5	;RP0=0, select bank0
 10263  0044  1303               	bcf	3,6	;RP1=0, select bank0
 10264  0045  00D7               	movwf	___fltol@f1+2
 10265  0046  1683               	bsf	3,5	;RP0=1, select bank1
 10266  0047  1303               	bcf	3,6	;RP1=0, select bank1
 10267  0048  0841               	movf	(sprintf@fval+1)^(0+128),w
 10268  0049  1283               	bcf	3,5	;RP0=0, select bank0
 10269  004A  1303               	bcf	3,6	;RP1=0, select bank0
 10270  004B  00D6               	movwf	___fltol@f1+1
 10271  004C  1683               	bsf	3,5	;RP0=1, select bank1
 10272  004D  1303               	bcf	3,6	;RP1=0, select bank1
 10273  004E  0840               	movf	sprintf@fval^(0+128),w
 10274  004F  1283               	bcf	3,5	;RP0=0, select bank0
 10275  0050  1303               	bcf	3,6	;RP1=0, select bank0
 10276  0051  00D5               	movwf	___fltol@f1
 10277  0052  160A  118A  2004  120A  118A  	fcall	___fltol
 10278  0057  1283               	bcf	3,5	;RP0=0, select bank0
 10279  0058  1303               	bcf	3,6	;RP1=0, select bank0
 10280  0059  0858               	movf	?___fltol+3,w
 10281  005A  0457               	iorwf	?___fltol+2,w
 10282  005B  0456               	iorwf	?___fltol+1,w
 10283  005C  0455               	iorwf	?___fltol,w
 10284  005D  1D03               	skipz
 10285  005E  2860               	goto	u5411
 10286  005F  2861               	goto	u5410
 10287  0060                     u5411:	
 10288  0060  28E2               	goto	l3481
 10289  0061                     u5410:	
 10290  0061                     l3465:	
 10291  0061  1683               	bsf	3,5	;RP0=1, select bank1
 10292  0062  1303               	bcf	3,6	;RP1=0, select bank1
 10293  0063  083F               	movf	(sprintf@eexp+1)^(0+128),w
 10294  0064  3A80               	xorlw	128
 10295  0065  00FF               	movwf	btemp+1
 10296  0066  3080               	movlw	128
 10297  0067  027F               	subwf	btemp+1,w
 10298  0068  1D03               	skipz
 10299  0069  286C               	goto	u5425
 10300  006A  3002               	movlw	2
 10301  006B  023E               	subwf	sprintf@eexp^(0+128),w
 10302  006C                     u5425:	
 10303  006C  1C03               	skipc
 10304  006D  286F               	goto	u5421
 10305  006E  2870               	goto	u5420
 10306  006F                     u5421:	
 10307  006F  28E2               	goto	l3481
 10308  0070                     u5420:	
 10309  0070                     l3467:	
 10310                           
 10311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
 10312  0070  1683               	bsf	3,5	;RP0=1, select bank1
 10313  0071  1303               	bcf	3,6	;RP1=0, select bank1
 10314  0072  0839               	movf	(sprintf@tmpval+3)^(0+128),w
 10315  0073  00F6               	movwf	___flge@ff1+3
 10316  0074  0838               	movf	(sprintf@tmpval+2)^(0+128),w
 10317  0075  00F5               	movwf	___flge@ff1+2
 10318  0076  0837               	movf	(sprintf@tmpval+1)^(0+128),w
 10319  0077  00F4               	movwf	___flge@ff1+1
 10320  0078  0836               	movf	sprintf@tmpval^(0+128),w
 10321  0079  00F3               	movwf	___flge@ff1
 10322  007A  3040               	movlw	64
 10323  007B  00FA               	movwf	___flge@ff2+3
 10324  007C  3089               	movlw	137
 10325  007D  00F9               	movwf	___flge@ff2+2
 10326  007E  3070               	movlw	112
 10327  007F  00F8               	movwf	___flge@ff2+1
 10328  0080  305F               	movlw	95
 10329  0081  00F7               	movwf	___flge@ff2
 10330  0082  160A  158A  2525  120A  118A  	fcall	___flge
 10331  0087  1803               	btfsc	3,0
 10332  0088  288A               	goto	u5431
 10333  0089  288B               	goto	u5430
 10334  008A                     u5431:	
 10335  008A  2894               	goto	l3471
 10336  008B                     u5430:	
 10337  008B                     l3469:	
 10338                           
 10339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 10340  008B  30F7               	movlw	247
 10341  008C  1683               	bsf	3,5	;RP0=1, select bank1
 10342  008D  1303               	bcf	3,6	;RP1=0, select bank1
 10343  008E  07BE               	addwf	sprintf@eexp^(0+128),f
 10344  008F  1803               	skipnc
 10345  0090  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
 10346  0091  30FF               	movlw	255
 10347  0092  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
 10348                           
 10349                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
 10350  0093  289C               	goto	l3473
 10351  0094                     l3471:	
 10352                           
 10353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 10354  0094  30F8               	movlw	248
 10355  0095  1683               	bsf	3,5	;RP0=1, select bank1
 10356  0096  1303               	bcf	3,6	;RP1=0, select bank1
 10357  0097  07BE               	addwf	sprintf@eexp^(0+128),f
 10358  0098  1803               	skipnc
 10359  0099  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
 10360  009A  30FF               	movlw	255
 10361  009B  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
 10362  009C                     l3473:	
 10363                           
 10364                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
 10365  009C  083E               	movf	sprintf@eexp^(0+128),w
 10366  009D  120A  158A  249D  120A  118A  	fcall	_scale
 10367  00A2  1283               	bcf	3,5	;RP0=0, select bank0
 10368  00A3  1303               	bcf	3,6	;RP1=0, select bank0
 10369  00A4  0845               	movf	?_scale+3,w
 10370  00A5  1683               	bsf	3,5	;RP0=1, select bank1
 10371  00A6  1303               	bcf	3,6	;RP1=0, select bank1
 10372  00A7  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
 10373  00A8  1283               	bcf	3,5	;RP0=0, select bank0
 10374  00A9  1303               	bcf	3,6	;RP1=0, select bank0
 10375  00AA  0844               	movf	?_scale+2,w
 10376  00AB  1683               	bsf	3,5	;RP0=1, select bank1
 10377  00AC  1303               	bcf	3,6	;RP1=0, select bank1
 10378  00AD  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
 10379  00AE  1283               	bcf	3,5	;RP0=0, select bank0
 10380  00AF  1303               	bcf	3,6	;RP1=0, select bank0
 10381  00B0  0843               	movf	?_scale+1,w
 10382  00B1  1683               	bsf	3,5	;RP0=1, select bank1
 10383  00B2  1303               	bcf	3,6	;RP1=0, select bank1
 10384  00B3  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
 10385  00B4  1283               	bcf	3,5	;RP0=0, select bank0
 10386  00B5  1303               	bcf	3,6	;RP1=0, select bank0
 10387  00B6  0842               	movf	?_scale,w
 10388  00B7  1683               	bsf	3,5	;RP0=1, select bank1
 10389  00B8  1303               	bcf	3,6	;RP1=0, select bank1
 10390  00B9  00B6               	movwf	sprintf@tmpval^(0+128)
 10391  00BA                     l3475:	
 10392  00BA  0843               	movf	(sprintf@fval+3)^(0+128),w
 10393  00BB  00F6               	movwf	__div_to_l_@f1+3
 10394  00BC  0842               	movf	(sprintf@fval+2)^(0+128),w
 10395  00BD  00F5               	movwf	__div_to_l_@f1+2
 10396  00BE  0841               	movf	(sprintf@fval+1)^(0+128),w
 10397  00BF  00F4               	movwf	__div_to_l_@f1+1
 10398  00C0  0840               	movf	sprintf@fval^(0+128),w
 10399  00C1  00F3               	movwf	__div_to_l_@f1
 10400  00C2  0839               	movf	(sprintf@tmpval+3)^(0+128),w
 10401  00C3  00FA               	movwf	__div_to_l_@f2+3
 10402  00C4  0838               	movf	(sprintf@tmpval+2)^(0+128),w
 10403  00C5  00F9               	movwf	__div_to_l_@f2+2
 10404  00C6  0837               	movf	(sprintf@tmpval+1)^(0+128),w
 10405  00C7  00F8               	movwf	__div_to_l_@f2+1
 10406  00C8  0836               	movf	sprintf@tmpval^(0+128),w
 10407  00C9  00F7               	movwf	__div_to_l_@f2
 10408  00CA  160A  158A  2742  120A  118A  	fcall	__div_to_l_
 10409  00CF  0876               	movf	?__div_to_l_+3,w
 10410  00D0  1683               	bsf	3,5	;RP0=1, select bank1
 10411  00D1  1303               	bcf	3,6	;RP1=0, select bank1
 10412  00D2  00BD               	movwf	(sprintf@val+3)^(0+128)
 10413  00D3  0875               	movf	?__div_to_l_+2,w
 10414  00D4  00BC               	movwf	(sprintf@val+2)^(0+128)
 10415  00D5  0874               	movf	?__div_to_l_+1,w
 10416  00D6  00BB               	movwf	(sprintf@val+1)^(0+128)
 10417  00D7  0873               	movf	?__div_to_l_,w
 10418  00D8  00BA               	movwf	sprintf@val^(0+128)
 10419  00D9                     l3479:	
 10420                           
 10421                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
 10422  00D9  3000               	movlw	0
 10423  00DA  00C3               	movwf	(sprintf@fval+3)^(0+128)
 10424  00DB  3000               	movlw	0
 10425  00DC  00C2               	movwf	(sprintf@fval+2)^(0+128)
 10426  00DD  3000               	movlw	0
 10427  00DE  00C1               	movwf	(sprintf@fval+1)^(0+128)
 10428  00DF  3000               	movlw	0
 10429  00E0  00C0               	movwf	sprintf@fval^(0+128)
 10430                           
 10431                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
 10432  00E1  2948               	goto	l3487
 10433  00E2                     l3481:	
 10434                           
 10435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
 10436  00E2  1683               	bsf	3,5	;RP0=1, select bank1
 10437  00E3  1303               	bcf	3,6	;RP1=0, select bank1
 10438  00E4  0843               	movf	(sprintf@fval+3)^(0+128),w
 10439  00E5  1283               	bcf	3,5	;RP0=0, select bank0
 10440  00E6  1303               	bcf	3,6	;RP1=0, select bank0
 10441  00E7  00D8               	movwf	___fltol@f1+3
 10442  00E8  1683               	bsf	3,5	;RP0=1, select bank1
 10443  00E9  1303               	bcf	3,6	;RP1=0, select bank1
 10444  00EA  0842               	movf	(sprintf@fval+2)^(0+128),w
 10445  00EB  1283               	bcf	3,5	;RP0=0, select bank0
 10446  00EC  1303               	bcf	3,6	;RP1=0, select bank0
 10447  00ED  00D7               	movwf	___fltol@f1+2
 10448  00EE  1683               	bsf	3,5	;RP0=1, select bank1
 10449  00EF  1303               	bcf	3,6	;RP1=0, select bank1
 10450  00F0  0841               	movf	(sprintf@fval+1)^(0+128),w
 10451  00F1  1283               	bcf	3,5	;RP0=0, select bank0
 10452  00F2  1303               	bcf	3,6	;RP1=0, select bank0
 10453  00F3  00D6               	movwf	___fltol@f1+1
 10454  00F4  1683               	bsf	3,5	;RP0=1, select bank1
 10455  00F5  1303               	bcf	3,6	;RP1=0, select bank1
 10456  00F6  0840               	movf	sprintf@fval^(0+128),w
 10457  00F7  1283               	bcf	3,5	;RP0=0, select bank0
 10458  00F8  1303               	bcf	3,6	;RP1=0, select bank0
 10459  00F9  00D5               	movwf	___fltol@f1
 10460  00FA  160A  118A  2004  120A  118A  	fcall	___fltol
 10461  00FF  1283               	bcf	3,5	;RP0=0, select bank0
 10462  0100  1303               	bcf	3,6	;RP1=0, select bank0
 10463  0101  0858               	movf	?___fltol+3,w
 10464  0102  1683               	bsf	3,5	;RP0=1, select bank1
 10465  0103  1303               	bcf	3,6	;RP1=0, select bank1
 10466  0104  00BD               	movwf	(sprintf@val+3)^(0+128)
 10467  0105  1283               	bcf	3,5	;RP0=0, select bank0
 10468  0106  1303               	bcf	3,6	;RP1=0, select bank0
 10469  0107  0857               	movf	?___fltol+2,w
 10470  0108  1683               	bsf	3,5	;RP0=1, select bank1
 10471  0109  1303               	bcf	3,6	;RP1=0, select bank1
 10472  010A  00BC               	movwf	(sprintf@val+2)^(0+128)
 10473  010B  1283               	bcf	3,5	;RP0=0, select bank0
 10474  010C  1303               	bcf	3,6	;RP1=0, select bank0
 10475  010D  0856               	movf	?___fltol+1,w
 10476  010E  1683               	bsf	3,5	;RP0=1, select bank1
 10477  010F  1303               	bcf	3,6	;RP1=0, select bank1
 10478  0110  00BB               	movwf	(sprintf@val+1)^(0+128)
 10479  0111  1283               	bcf	3,5	;RP0=0, select bank0
 10480  0112  1303               	bcf	3,6	;RP1=0, select bank0
 10481  0113  0855               	movf	?___fltol,w
 10482  0114  1683               	bsf	3,5	;RP0=1, select bank1
 10483  0115  1303               	bcf	3,6	;RP1=0, select bank1
 10484  0116  00BA               	movwf	sprintf@val^(0+128)
 10485  0117                     l3483:	
 10486                           
 10487                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
 10488  0117  083D               	movf	(sprintf@val+3)^(0+128),w
 10489  0118  00F6               	movwf	___xxtofl@val+3
 10490  0119  083C               	movf	(sprintf@val+2)^(0+128),w
 10491  011A  00F5               	movwf	___xxtofl@val+2
 10492  011B  083B               	movf	(sprintf@val+1)^(0+128),w
 10493  011C  00F4               	movwf	___xxtofl@val+1
 10494  011D  083A               	movf	sprintf@val^(0+128),w
 10495  011E  00F3               	movwf	___xxtofl@val
 10496  011F  3000               	movlw	0
 10497  0120  160A  158A  25C9  120A  118A  	fcall	___xxtofl
 10498  0125  0876               	movf	?___xxtofl+3,w
 10499  0126  1683               	bsf	3,5	;RP0=1, select bank1
 10500  0127  1303               	bcf	3,6	;RP1=0, select bank1
 10501  0128  00A3               	movwf	(___flsub@a+3)^(0+128)
 10502  0129  0875               	movf	?___xxtofl+2,w
 10503  012A  00A2               	movwf	(___flsub@a+2)^(0+128)
 10504  012B  0874               	movf	?___xxtofl+1,w
 10505  012C  00A1               	movwf	(___flsub@a+1)^(0+128)
 10506  012D  0873               	movf	?___xxtofl,w
 10507  012E  00A0               	movwf	___flsub@a^(0+128)
 10508  012F  0843               	movf	(sprintf@fval+3)^(0+128),w
 10509  0130  00A7               	movwf	(___flsub@b+3)^(0+128)
 10510  0131  0842               	movf	(sprintf@fval+2)^(0+128),w
 10511  0132  00A6               	movwf	(___flsub@b+2)^(0+128)
 10512  0133  0841               	movf	(sprintf@fval+1)^(0+128),w
 10513  0134  00A5               	movwf	(___flsub@b+1)^(0+128)
 10514  0135  0840               	movf	sprintf@fval^(0+128),w
 10515  0136  00A4               	movwf	___flsub@b^(0+128)
 10516  0137  160A  158A  236B  120A  118A  	fcall	___flsub
 10517  013C  1683               	bsf	3,5	;RP0=1, select bank1
 10518  013D  1303               	bcf	3,6	;RP1=0, select bank1
 10519  013E  0823               	movf	(?___flsub+3)^(0+128),w
 10520  013F  00C3               	movwf	(sprintf@fval+3)^(0+128)
 10521  0140  0822               	movf	(?___flsub+2)^(0+128),w
 10522  0141  00C2               	movwf	(sprintf@fval+2)^(0+128)
 10523  0142  0821               	movf	(?___flsub+1)^(0+128),w
 10524  0143  00C1               	movwf	(sprintf@fval+1)^(0+128)
 10525  0144  0820               	movf	?___flsub^(0+128),w
 10526  0145  00C0               	movwf	sprintf@fval^(0+128)
 10527  0146                     l3485:	
 10528                           
 10529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
 10530  0146  01BE               	clrf	sprintf@eexp^(0+128)
 10531  0147  01BF               	clrf	(sprintf@eexp+1)^(0+128)
 10532  0148                     l3487:	
 10533                           
 10534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10535  0148  01C7               	clrf	sprintf@c^(0+128)
 10536  0149  0AC7               	incf	sprintf@c^(0+128),f
 10537  014A                     l3493:	
 10538                           
 10539                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
 10540  014A  0847               	movf	sprintf@c^(0+128),w
 10541  014B  00A8               	movwf	??_sprintf^(0+128)
 10542  014C  3001               	movlw	1
 10543  014D                     u5445:	
 10544  014D  1003               	clrc
 10545  014E  0DA8               	rlf	??_sprintf^(0+128),f
 10546  014F  3EFF               	addlw	-1
 10547  0150  1D03               	skipz
 10548  0151  294D               	goto	u5445
 10549  0152  1003               	clrc
 10550  0153  0D28               	rlf	??_sprintf^(0+128),w
 10551  0154  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10552  0155  0084               	movwf	4
 10553  0156  160A  158A  200A  120A  118A  	fcall	stringdir
 10554  015B  00A9               	movwf	(??_sprintf+1)^(0+128)
 10555  015C  160A  158A  200A  120A  118A  	fcall	stringdir
 10556  0161  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
 10557  0162  160A  158A  200A  120A  118A  	fcall	stringdir
 10558  0167  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
 10559  0168  160A  158A  200A  120A  118A  	fcall	stringdir
 10560  016D  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
 10561  016E  082C               	movf	(??_sprintf+4)^(0+128),w
 10562  016F  023D               	subwf	(sprintf@val+3)^(0+128),w
 10563  0170  1D03               	skipz
 10564  0171  297C               	goto	u5455
 10565  0172  082B               	movf	(??_sprintf+3)^(0+128),w
 10566  0173  023C               	subwf	(sprintf@val+2)^(0+128),w
 10567  0174  1D03               	skipz
 10568  0175  297C               	goto	u5455
 10569  0176  082A               	movf	(??_sprintf+2)^(0+128),w
 10570  0177  023B               	subwf	(sprintf@val+1)^(0+128),w
 10571  0178  1D03               	skipz
 10572  0179  297C               	goto	u5455
 10573  017A  0829               	movf	(??_sprintf+1)^(0+128),w
 10574  017B  023A               	subwf	sprintf@val^(0+128),w
 10575  017C                     u5455:	
 10576  017C  1803               	skipnc
 10577  017D  297F               	goto	u5451
 10578  017E  2980               	goto	u5450
 10579  017F                     u5451:	
 10580  017F  2981               	goto	l3497
 10581  0180                     u5450:	
 10582  0180  298B               	goto	l3499
 10583  0181                     l3497:	
 10584  0181  3001               	movlw	1
 10585  0182  00A8               	movwf	??_sprintf^(0+128)
 10586  0183  0828               	movf	??_sprintf^(0+128),w
 10587  0184  07C7               	addwf	sprintf@c^(0+128),f
 10588  0185  300A               	movlw	10
 10589  0186  0647               	xorwf	sprintf@c^(0+128),w
 10590  0187  1D03               	btfss	3,2
 10591  0188  298A               	goto	u5461
 10592  0189  298B               	goto	u5460
 10593  018A                     u5461:	
 10594  018A  294A               	goto	l3493
 10595  018B                     u5460:	
 10596  018B                     l3499:	
 10597                           
 10598                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1168:     w
      +                          idth -= prec + c + eexp;
 10599  018B  0847               	movf	sprintf@c^(0+128),w
 10600  018C  0745               	addwf	sprintf@prec^(0+128),w
 10601  018D  00A8               	movwf	??_sprintf^(0+128)
 10602  018E  0846               	movf	(sprintf@prec+1)^(0+128),w
 10603  018F  1803               	skipnc
 10604  0190  0A46               	incf	(sprintf@prec+1)^(0+128),w
 10605  0191  00A9               	movwf	(??_sprintf^(0+128)+1)
 10606  0192  083E               	movf	sprintf@eexp^(0+128),w
 10607  0193  0728               	addwf	??_sprintf^(0+128),w
 10608  0194  00AA               	movwf	(??_sprintf+2)^(0+128)
 10609  0195  083F               	movf	(sprintf@eexp+1)^(0+128),w
 10610  0196  1803               	skipnc
 10611  0197  0A3F               	incf	(sprintf@eexp+1)^(0+128),w
 10612  0198  0729               	addwf	(??_sprintf+1)^(0+128),w
 10613  0199  00AB               	movwf	(??_sprintf+3)^(0+128)
 10614  019A  082A               	movf	(??_sprintf+2)^(0+128),w
 10615  019B  02B4               	subwf	sprintf@width^(0+128),f
 10616  019C  082B               	movf	(??_sprintf+3)^(0+128),w
 10617  019D  1C03               	skipc
 10618  019E  03B5               	decf	(sprintf@width+1)^(0+128),f
 10619  019F  02B5               	subwf	(sprintf@width+1)^(0+128),f
 10620                           
 10621                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1169:     i
      +                          f(
 10622  01A0  0845               	movf	sprintf@prec^(0+128),w
 10623  01A1  0446               	iorwf	(sprintf@prec+1)^(0+128),w
 10624  01A2  1903               	btfsc	3,2
 10625  01A3  29A5               	goto	u5471
 10626  01A4  29A6               	goto	u5470
 10627  01A5                     u5471:	
 10628  01A5  29AC               	goto	l3503
 10629  01A6                     u5470:	
 10630  01A6                     l3501:	
 10631                           
 10632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1174:      
      +                          width--;
 10633  01A6  30FF               	movlw	255
 10634  01A7  07B4               	addwf	sprintf@width^(0+128),f
 10635  01A8  1803               	skipnc
 10636  01A9  0AB5               	incf	(sprintf@width+1)^(0+128),f
 10637  01AA  30FF               	movlw	255
 10638  01AB  07B5               	addwf	(sprintf@width+1)^(0+128),f
 10639  01AC                     l3503:	
 10640                           
 10641                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1175:     i
      +                          f(flag & 0x03)
 10642  01AC  3003               	movlw	3
 10643  01AD  0532               	andwf	sprintf@flag^(0+128),w
 10644  01AE  00A8               	movwf	??_sprintf^(0+128)
 10645  01AF  3000               	movlw	0
 10646  01B0  0533               	andwf	(sprintf@flag+1)^(0+128),w
 10647  01B1  00A9               	movwf	(??_sprintf+1)^(0+128)
 10648  01B2  0828               	movf	??_sprintf^(0+128),w
 10649  01B3  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10650  01B4  1903               	btfsc	3,2
 10651  01B5  29B7               	goto	u5481
 10652  01B6  29B8               	goto	u5480
 10653  01B7                     u5481:	
 10654  01B7  29CD               	goto	l3513
 10655  01B8                     u5480:	
 10656  01B8                     l3505:	
 10657                           
 10658                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1176:      
      +                          width--;
 10659  01B8  30FF               	movlw	255
 10660  01B9  07B4               	addwf	sprintf@width^(0+128),f
 10661  01BA  1803               	skipnc
 10662  01BB  0AB5               	incf	(sprintf@width+1)^(0+128),f
 10663  01BC  30FF               	movlw	255
 10664  01BD  07B5               	addwf	(sprintf@width+1)^(0+128),f
 10665  01BE  29CD               	goto	l3513
 10666  01BF                     l3507:	
 10667                           
 10668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1207:      
      +                           ((*sp++ = (' ')));
 10669  01BF  3020               	movlw	32
 10670  01C0  1683               	bsf	3,5	;RP0=1, select bank1
 10671  01C1  1303               	bcf	3,6	;RP1=0, select bank1
 10672  01C2  00A8               	movwf	??_sprintf^(0+128)
 10673  01C3  0844               	movf	sprintf@sp^(0+128),w
 10674  01C4  0084               	movwf	4
 10675  01C5  0828               	movf	??_sprintf^(0+128),w
 10676  01C6  1383               	bcf	3,7	;select IRP bank0
 10677  01C7  0080               	movwf	0
 10678  01C8                     l3509:	
 10679  01C8  3001               	movlw	1
 10680  01C9  00A8               	movwf	??_sprintf^(0+128)
 10681  01CA  0828               	movf	??_sprintf^(0+128),w
 10682  01CB  07C4               	addwf	sprintf@sp^(0+128),f
 10683  01CC  29B8               	goto	l3505
 10684  01CD                     l3513:	
 10685                           
 10686                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1206:      
      +                          while(width > 0) {
 10687  01CD  0835               	movf	(sprintf@width+1)^(0+128),w
 10688  01CE  3A80               	xorlw	128
 10689  01CF  00FF               	movwf	btemp+1
 10690  01D0  3080               	movlw	128
 10691  01D1  027F               	subwf	btemp+1,w
 10692  01D2  1D03               	skipz
 10693  01D3  29D6               	goto	u5495
 10694  01D4  3001               	movlw	1
 10695  01D5  0234               	subwf	sprintf@width^(0+128),w
 10696  01D6                     u5495:	
 10697  01D6  1803               	skipnc
 10698  01D7  29D9               	goto	u5491
 10699  01D8  29DA               	goto	u5490
 10700  01D9                     u5491:	
 10701  01D9  29BF               	goto	l3507
 10702  01DA                     u5490:	
 10703  01DA                     l3515:	
 10704                           
 10705                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
 10706  01DA  3003               	movlw	3
 10707  01DB  1683               	bsf	3,5	;RP0=1, select bank1
 10708  01DC  1303               	bcf	3,6	;RP1=0, select bank1
 10709  01DD  0532               	andwf	sprintf@flag^(0+128),w
 10710  01DE  00A8               	movwf	??_sprintf^(0+128)
 10711  01DF  3000               	movlw	0
 10712  01E0  0533               	andwf	(sprintf@flag+1)^(0+128),w
 10713  01E1  00A9               	movwf	(??_sprintf+1)^(0+128)
 10714  01E2  0828               	movf	??_sprintf^(0+128),w
 10715  01E3  0429               	iorwf	(??_sprintf^(0+128)+1),w
 10716  01E4  1903               	btfsc	3,2
 10717  01E5  29E7               	goto	u5501
 10718  01E6  29E8               	goto	u5500
 10719  01E7                     u5501:	
 10720  01E7  2A7A               	goto	l375
 10721  01E8                     u5500:	
 10722  01E8                     l3517:	
 10723                           
 10724                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
 10725  01E8  302D               	movlw	45
 10726  01E9  00A8               	movwf	??_sprintf^(0+128)
 10727  01EA  0844               	movf	sprintf@sp^(0+128),w
 10728  01EB  0084               	movwf	4
 10729  01EC  0828               	movf	??_sprintf^(0+128),w
 10730  01ED  1383               	bcf	3,7	;select IRP bank0
 10731  01EE  0080               	movwf	0
 10732  01EF                     l3519:	
 10733  01EF  3001               	movlw	1
 10734  01F0  00A8               	movwf	??_sprintf^(0+128)
 10735  01F1  0828               	movf	??_sprintf^(0+128),w
 10736  01F2  07C4               	addwf	sprintf@sp^(0+128),f
 10737  01F3  2A7A               	goto	l375
 10738  01F4                     l3521:	
 10739                           
 10740                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
 10741  01F4  0847               	movf	sprintf@c^(0+128),w
 10742  01F5  00A8               	movwf	??_sprintf^(0+128)
 10743  01F6  3001               	movlw	1
 10744  01F7                     u5515:	
 10745  01F7  1003               	clrc
 10746  01F8  0DA8               	rlf	??_sprintf^(0+128),f
 10747  01F9  3EFF               	addlw	-1
 10748  01FA  1D03               	skipz
 10749  01FB  29F7               	goto	u5515
 10750  01FC  1003               	clrc
 10751  01FD  0D28               	rlf	??_sprintf^(0+128),w
 10752  01FE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10753  01FF  0084               	movwf	4
 10754  0200  160A  158A  200A  120A  118A  	fcall	stringdir
 10755  0205  00F3               	movwf	___lldiv@divisor
 10756  0206  160A  158A  200A  120A  118A  	fcall	stringdir
 10757  020B  00F4               	movwf	___lldiv@divisor+1
 10758  020C  160A  158A  200A  120A  118A  	fcall	stringdir
 10759  0211  00F5               	movwf	___lldiv@divisor+2
 10760  0212  160A  158A  200A  120A  118A  	fcall	stringdir
 10761  0217  00F6               	movwf	___lldiv@divisor+3
 10762  0218  083D               	movf	(sprintf@val+3)^(0+128),w
 10763  0219  00FA               	movwf	___lldiv@dividend+3
 10764  021A  083C               	movf	(sprintf@val+2)^(0+128),w
 10765  021B  00F9               	movwf	___lldiv@dividend+2
 10766  021C  083B               	movf	(sprintf@val+1)^(0+128),w
 10767  021D  00F8               	movwf	___lldiv@dividend+1
 10768  021E  083A               	movf	sprintf@val^(0+128),w
 10769  021F  00F7               	movwf	___lldiv@dividend
 10770  0220  160A  158A  24BD  120A  118A  	fcall	___lldiv
 10771  0225  0876               	movf	?___lldiv+3,w
 10772  0226  1683               	bsf	3,5	;RP0=1, select bank1
 10773  0227  1303               	bcf	3,6	;RP1=0, select bank1
 10774  0228  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
 10775  0229  0875               	movf	?___lldiv+2,w
 10776  022A  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
 10777  022B  0874               	movf	?___lldiv+1,w
 10778  022C  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
 10779  022D  0873               	movf	?___lldiv,w
 10780  022E  00B6               	movwf	sprintf@tmpval^(0+128)
 10781  022F                     l3523:	
 10782                           
 10783                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
 10784  022F  3000               	movlw	0
 10785  0230  1283               	bcf	3,5	;RP0=0, select bank0
 10786  0231  1303               	bcf	3,6	;RP1=0, select bank0
 10787  0232  00A9               	movwf	___llmod@divisor+3
 10788  0233  3000               	movlw	0
 10789  0234  00A8               	movwf	___llmod@divisor+2
 10790  0235  3000               	movlw	0
 10791  0236  00A7               	movwf	___llmod@divisor+1
 10792  0237  300A               	movlw	10
 10793  0238  00A6               	movwf	___llmod@divisor
 10794  0239  1683               	bsf	3,5	;RP0=1, select bank1
 10795  023A  1303               	bcf	3,6	;RP1=0, select bank1
 10796  023B  0839               	movf	(sprintf@tmpval+3)^(0+128),w
 10797  023C  1283               	bcf	3,5	;RP0=0, select bank0
 10798  023D  1303               	bcf	3,6	;RP1=0, select bank0
 10799  023E  00AD               	movwf	___llmod@dividend+3
 10800  023F  1683               	bsf	3,5	;RP0=1, select bank1
 10801  0240  1303               	bcf	3,6	;RP1=0, select bank1
 10802  0241  0838               	movf	(sprintf@tmpval+2)^(0+128),w
 10803  0242  1283               	bcf	3,5	;RP0=0, select bank0
 10804  0243  1303               	bcf	3,6	;RP1=0, select bank0
 10805  0244  00AC               	movwf	___llmod@dividend+2
 10806  0245  1683               	bsf	3,5	;RP0=1, select bank1
 10807  0246  1303               	bcf	3,6	;RP1=0, select bank1
 10808  0247  0837               	movf	(sprintf@tmpval+1)^(0+128),w
 10809  0248  1283               	bcf	3,5	;RP0=0, select bank0
 10810  0249  1303               	bcf	3,6	;RP1=0, select bank0
 10811  024A  00AB               	movwf	___llmod@dividend+1
 10812  024B  1683               	bsf	3,5	;RP0=1, select bank1
 10813  024C  1303               	bcf	3,6	;RP1=0, select bank1
 10814  024D  0836               	movf	sprintf@tmpval^(0+128),w
 10815  024E  1283               	bcf	3,5	;RP0=0, select bank0
 10816  024F  1303               	bcf	3,6	;RP1=0, select bank0
 10817  0250  00AA               	movwf	___llmod@dividend
 10818  0251  160A  158A  240E  120A  118A  	fcall	___llmod
 10819  0256  1283               	bcf	3,5	;RP0=0, select bank0
 10820  0257  1303               	bcf	3,6	;RP1=0, select bank0
 10821  0258  0829               	movf	?___llmod+3,w
 10822  0259  1683               	bsf	3,5	;RP0=1, select bank1
 10823  025A  1303               	bcf	3,6	;RP1=0, select bank1
 10824  025B  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
 10825  025C  1283               	bcf	3,5	;RP0=0, select bank0
 10826  025D  1303               	bcf	3,6	;RP1=0, select bank0
 10827  025E  0828               	movf	?___llmod+2,w
 10828  025F  1683               	bsf	3,5	;RP0=1, select bank1
 10829  0260  1303               	bcf	3,6	;RP1=0, select bank1
 10830  0261  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
 10831  0262  1283               	bcf	3,5	;RP0=0, select bank0
 10832  0263  1303               	bcf	3,6	;RP1=0, select bank0
 10833  0264  0827               	movf	?___llmod+1,w
 10834  0265  1683               	bsf	3,5	;RP0=1, select bank1
 10835  0266  1303               	bcf	3,6	;RP1=0, select bank1
 10836  0267  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
 10837  0268  1283               	bcf	3,5	;RP0=0, select bank0
 10838  0269  1303               	bcf	3,6	;RP1=0, select bank0
 10839  026A  0826               	movf	?___llmod,w
 10840  026B  1683               	bsf	3,5	;RP0=1, select bank1
 10841  026C  1303               	bcf	3,6	;RP1=0, select bank1
 10842  026D  00B6               	movwf	sprintf@tmpval^(0+128)
 10843  026E                     l3525:	
 10844                           
 10845                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
 10846  026E  0836               	movf	sprintf@tmpval^(0+128),w
 10847  026F  3E30               	addlw	48
 10848  0270  00A8               	movwf	??_sprintf^(0+128)
 10849  0271  0844               	movf	sprintf@sp^(0+128),w
 10850  0272  0084               	movwf	4
 10851  0273  0828               	movf	??_sprintf^(0+128),w
 10852  0274  1383               	bcf	3,7	;select IRP bank0
 10853  0275  0080               	movwf	0
 10854  0276  3001               	movlw	1
 10855  0277  00A8               	movwf	??_sprintf^(0+128)
 10856  0278  0828               	movf	??_sprintf^(0+128),w
 10857  0279  07C4               	addwf	sprintf@sp^(0+128),f
 10858  027A                     l375:	
 10859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
 10860                           
 10861                           
 10862                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
 10863  027A  3001               	movlw	1
 10864  027B  02C7               	subwf	sprintf@c^(0+128),f
 10865  027C  0A47               	incf	sprintf@c^(0+128),w
 10866  027D  1D03               	btfss	3,2
 10867  027E  2A80               	goto	u5521
 10868  027F  2A81               	goto	u5520
 10869  0280                     u5521:	
 10870  0280  29F4               	goto	l3521
 10871  0281                     u5520:	
 10872  0281  2A95               	goto	l3533
 10873  0282                     l3527:	
 10874                           
 10875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
 10876  0282  3030               	movlw	48
 10877  0283  1683               	bsf	3,5	;RP0=1, select bank1
 10878  0284  1303               	bcf	3,6	;RP1=0, select bank1
 10879  0285  00A8               	movwf	??_sprintf^(0+128)
 10880  0286  0844               	movf	sprintf@sp^(0+128),w
 10881  0287  0084               	movwf	4
 10882  0288  0828               	movf	??_sprintf^(0+128),w
 10883  0289  1383               	bcf	3,7	;select IRP bank0
 10884  028A  0080               	movwf	0
 10885  028B                     l3529:	
 10886  028B  3001               	movlw	1
 10887  028C  00A8               	movwf	??_sprintf^(0+128)
 10888  028D  0828               	movf	??_sprintf^(0+128),w
 10889  028E  07C4               	addwf	sprintf@sp^(0+128),f
 10890  028F                     l3531:	
 10891                           
 10892                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
 10893  028F  30FF               	movlw	255
 10894  0290  07BE               	addwf	sprintf@eexp^(0+128),f
 10895  0291  1803               	skipnc
 10896  0292  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
 10897  0293  30FF               	movlw	255
 10898  0294  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
 10899  0295                     l3533:	
 10900                           
 10901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
 10902  0295  083F               	movf	(sprintf@eexp+1)^(0+128),w
 10903  0296  3A80               	xorlw	128
 10904  0297  00FF               	movwf	btemp+1
 10905  0298  3080               	movlw	128
 10906  0299  027F               	subwf	btemp+1,w
 10907  029A  1D03               	skipz
 10908  029B  2A9E               	goto	u5535
 10909  029C  3001               	movlw	1
 10910  029D  023E               	subwf	sprintf@eexp^(0+128),w
 10911  029E                     u5535:	
 10912  029E  1803               	skipnc
 10913  029F  2AA1               	goto	u5531
 10914  02A0  2AA2               	goto	u5530
 10915  02A1                     u5531:	
 10916  02A1  2A82               	goto	l3527
 10917  02A2                     u5530:	
 10918  02A2                     l3535:	
 10919                           
 10920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10921  02A2  1683               	bsf	3,5	;RP0=1, select bank1
 10922  02A3  1303               	bcf	3,6	;RP1=0, select bank1
 10923  02A4  0846               	movf	(sprintf@prec+1)^(0+128),w
 10924  02A5  3A80               	xorlw	128
 10925  02A6  00FF               	movwf	btemp+1
 10926  02A7  3080               	movlw	128
 10927  02A8  027F               	subwf	btemp+1,w
 10928  02A9  1D03               	skipz
 10929  02AA  2AAD               	goto	u5545
 10930  02AB  3009               	movlw	9
 10931  02AC  0245               	subwf	sprintf@prec^(0+128),w
 10932  02AD                     u5545:	
 10933  02AD  1C03               	skipc
 10934  02AE  2AB0               	goto	u5541
 10935  02AF  2AB1               	goto	u5540
 10936  02B0                     u5541:	
 10937  02B0  2AB8               	goto	l3539
 10938  02B1                     u5540:	
 10939  02B1                     l3537:	
 10940                           
 10941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
 10942  02B1  3008               	movlw	8
 10943  02B2  1683               	bsf	3,5	;RP0=1, select bank1
 10944  02B3  1303               	bcf	3,6	;RP1=0, select bank1
 10945  02B4  00A8               	movwf	??_sprintf^(0+128)
 10946  02B5  0828               	movf	??_sprintf^(0+128),w
 10947  02B6  00C7               	movwf	sprintf@c^(0+128)
 10948  02B7  2ABE               	goto	l382
 10949  02B8                     l3539:	
 10950                           
 10951                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
 10952  02B8  1683               	bsf	3,5	;RP0=1, select bank1
 10953  02B9  1303               	bcf	3,6	;RP1=0, select bank1
 10954  02BA  0845               	movf	sprintf@prec^(0+128),w
 10955  02BB  00A8               	movwf	??_sprintf^(0+128)
 10956  02BC  0828               	movf	??_sprintf^(0+128),w
 10957  02BD  00C7               	movwf	sprintf@c^(0+128)
 10958  02BE                     l382:	
 10959                           
 10960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
 10961  02BE  0847               	movf	sprintf@c^(0+128),w
 10962  02BF  00A8               	movwf	??_sprintf^(0+128)
 10963  02C0  01A9               	clrf	(??_sprintf^(0+128)+1)
 10964  02C1  0828               	movf	??_sprintf^(0+128),w
 10965  02C2  02C5               	subwf	sprintf@prec^(0+128),f
 10966  02C3  0829               	movf	(??_sprintf+1)^(0+128),w
 10967  02C4  1C03               	skipc
 10968  02C5  03C6               	decf	(sprintf@prec+1)^(0+128),f
 10969  02C6  02C6               	subwf	(sprintf@prec+1)^(0+128),f
 10970  02C7                     l3541:	
 10971                           
 10972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
 10973  02C7  0847               	movf	sprintf@c^(0+128),w
 10974  02C8  1903               	btfsc	3,2
 10975  02C9  2ACB               	goto	u5551
 10976  02CA  2ACC               	goto	u5550
 10977  02CB                     u5551:	
 10978  02CB  2AD7               	goto	l3547
 10979  02CC                     u5550:	
 10980  02CC                     l3543:	
 10981                           
 10982                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
 10983  02CC  302E               	movlw	46
 10984  02CD  00A8               	movwf	??_sprintf^(0+128)
 10985  02CE  0844               	movf	sprintf@sp^(0+128),w
 10986  02CF  0084               	movwf	4
 10987  02D0  0828               	movf	??_sprintf^(0+128),w
 10988  02D1  1383               	bcf	3,7	;select IRP bank0
 10989  02D2  0080               	movwf	0
 10990  02D3                     l3545:	
 10991  02D3  3001               	movlw	1
 10992  02D4  00A8               	movwf	??_sprintf^(0+128)
 10993  02D5  0828               	movf	??_sprintf^(0+128),w
 10994  02D6  07C4               	addwf	sprintf@sp^(0+128),f
 10995  02D7                     l3547:	
 10996                           
 10997                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
 10998  02D7  0847               	movf	sprintf@c^(0+128),w
 10999  02D8  120A  158A  249D  120A  118A  	fcall	_scale
 11000  02DD  1283               	bcf	3,5	;RP0=0, select bank0
 11001  02DE  1303               	bcf	3,6	;RP1=0, select bank0
 11002  02DF  0845               	movf	?_scale+3,w
 11003  02E0  1683               	bsf	3,5	;RP0=1, select bank1
 11004  02E1  1303               	bcf	3,6	;RP1=0, select bank1
 11005  02E2  00B0               	movwf	(_sprintf$1234+3)^(0+128)
 11006  02E3  1283               	bcf	3,5	;RP0=0, select bank0
 11007  02E4  1303               	bcf	3,6	;RP1=0, select bank0
 11008  02E5  0844               	movf	?_scale+2,w
 11009  02E6  1683               	bsf	3,5	;RP0=1, select bank1
 11010  02E7  1303               	bcf	3,6	;RP1=0, select bank1
 11011  02E8  00AF               	movwf	(_sprintf$1234+2)^(0+128)
 11012  02E9  1283               	bcf	3,5	;RP0=0, select bank0
 11013  02EA  1303               	bcf	3,6	;RP1=0, select bank0
 11014  02EB  0843               	movf	?_scale+1,w
 11015  02EC  1683               	bsf	3,5	;RP0=1, select bank1
 11016  02ED  1303               	bcf	3,6	;RP1=0, select bank1
 11017  02EE  00AE               	movwf	(_sprintf$1234+1)^(0+128)
 11018  02EF  1283               	bcf	3,5	;RP0=0, select bank0
 11019  02F0  1303               	bcf	3,6	;RP1=0, select bank0
 11020  02F1  0842               	movf	?_scale,w
 11021  02F2  1683               	bsf	3,5	;RP0=1, select bank1
 11022  02F3  1303               	bcf	3,6	;RP1=0, select bank1
 11023  02F4  00AD               	movwf	_sprintf$1234^(0+128)
 11024  02F5                     l3549:	
 11025                           
 11026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
 11027  02F5  0830               	movf	(_sprintf$1234+3)^(0+128),w
 11028  02F6  1283               	bcf	3,5	;RP0=0, select bank0
 11029  02F7  1303               	bcf	3,6	;RP1=0, select bank0
 11030  02F8  00AF               	movwf	___flmul@a+3
 11031  02F9  1683               	bsf	3,5	;RP0=1, select bank1
 11032  02FA  1303               	bcf	3,6	;RP1=0, select bank1
 11033  02FB  082F               	movf	(_sprintf$1234+2)^(0+128),w
 11034  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 11035  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 11036  02FE  00AE               	movwf	___flmul@a+2
 11037  02FF  1683               	bsf	3,5	;RP0=1, select bank1
 11038  0300  1303               	bcf	3,6	;RP1=0, select bank1
 11039  0301  082E               	movf	(_sprintf$1234+1)^(0+128),w
 11040  0302  1283               	bcf	3,5	;RP0=0, select bank0
 11041  0303  1303               	bcf	3,6	;RP1=0, select bank0
 11042  0304  00AD               	movwf	___flmul@a+1
 11043  0305  1683               	bsf	3,5	;RP0=1, select bank1
 11044  0306  1303               	bcf	3,6	;RP1=0, select bank1
 11045  0307  082D               	movf	_sprintf$1234^(0+128),w
 11046  0308  1283               	bcf	3,5	;RP0=0, select bank0
 11047  0309  1303               	bcf	3,6	;RP1=0, select bank0
 11048  030A  00AC               	movwf	___flmul@a
 11049  030B  1683               	bsf	3,5	;RP0=1, select bank1
 11050  030C  1303               	bcf	3,6	;RP1=0, select bank1
 11051  030D  0843               	movf	(sprintf@fval+3)^(0+128),w
 11052  030E  1283               	bcf	3,5	;RP0=0, select bank0
 11053  030F  1303               	bcf	3,6	;RP1=0, select bank0
 11054  0310  00AB               	movwf	___flmul@b+3
 11055  0311  1683               	bsf	3,5	;RP0=1, select bank1
 11056  0312  1303               	bcf	3,6	;RP1=0, select bank1
 11057  0313  0842               	movf	(sprintf@fval+2)^(0+128),w
 11058  0314  1283               	bcf	3,5	;RP0=0, select bank0
 11059  0315  1303               	bcf	3,6	;RP1=0, select bank0
 11060  0316  00AA               	movwf	___flmul@b+2
 11061  0317  1683               	bsf	3,5	;RP0=1, select bank1
 11062  0318  1303               	bcf	3,6	;RP1=0, select bank1
 11063  0319  0841               	movf	(sprintf@fval+1)^(0+128),w
 11064  031A  1283               	bcf	3,5	;RP0=0, select bank0
 11065  031B  1303               	bcf	3,6	;RP1=0, select bank0
 11066  031C  00A9               	movwf	___flmul@b+1
 11067  031D  1683               	bsf	3,5	;RP0=1, select bank1
 11068  031E  1303               	bcf	3,6	;RP1=0, select bank1
 11069  031F  0840               	movf	sprintf@fval^(0+128),w
 11070  0320  1283               	bcf	3,5	;RP0=0, select bank0
 11071  0321  1303               	bcf	3,6	;RP1=0, select bank0
 11072  0322  00A8               	movwf	___flmul@b
 11073  0323  120A  158A  213C  120A  118A  	fcall	___flmul
 11074  0328  1283               	bcf	3,5	;RP0=0, select bank0
 11075  0329  1303               	bcf	3,6	;RP1=0, select bank0
 11076  032A  082B               	movf	?___flmul+3,w
 11077  032B  00D8               	movwf	___fltol@f1+3
 11078  032C  082A               	movf	?___flmul+2,w
 11079  032D  00D7               	movwf	___fltol@f1+2
 11080  032E  0829               	movf	?___flmul+1,w
 11081  032F  00D6               	movwf	___fltol@f1+1
 11082  0330  0828               	movf	?___flmul,w
 11083  0331  00D5               	movwf	___fltol@f1
 11084  0332  160A  118A  2004  120A  118A  	fcall	___fltol
 11085  0337  1283               	bcf	3,5	;RP0=0, select bank0
 11086  0338  1303               	bcf	3,6	;RP1=0, select bank0
 11087  0339  0858               	movf	?___fltol+3,w
 11088  033A  1683               	bsf	3,5	;RP0=1, select bank1
 11089  033B  1303               	bcf	3,6	;RP1=0, select bank1
 11090  033C  00BD               	movwf	(sprintf@val+3)^(0+128)
 11091  033D  1283               	bcf	3,5	;RP0=0, select bank0
 11092  033E  1303               	bcf	3,6	;RP1=0, select bank0
 11093  033F  0857               	movf	?___fltol+2,w
 11094  0340  1683               	bsf	3,5	;RP0=1, select bank1
 11095  0341  1303               	bcf	3,6	;RP1=0, select bank1
 11096  0342  00BC               	movwf	(sprintf@val+2)^(0+128)
 11097  0343  1283               	bcf	3,5	;RP0=0, select bank0
 11098  0344  1303               	bcf	3,6	;RP1=0, select bank0
 11099  0345  0856               	movf	?___fltol+1,w
 11100  0346  1683               	bsf	3,5	;RP0=1, select bank1
 11101  0347  1303               	bcf	3,6	;RP1=0, select bank1
 11102  0348  00BB               	movwf	(sprintf@val+1)^(0+128)
 11103  0349  1283               	bcf	3,5	;RP0=0, select bank0
 11104  034A  1303               	bcf	3,6	;RP1=0, select bank0
 11105  034B  0855               	movf	?___fltol,w
 11106  034C  1683               	bsf	3,5	;RP0=1, select bank1
 11107  034D  1303               	bcf	3,6	;RP1=0, select bank1
 11108  034E  00BA               	movwf	sprintf@val^(0+128)
 11109                           
 11110                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
 11111  034F  2C31               	goto	l3559
 11112  0350                     l3551:	
 11113                           
 11114                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
 11115  0350  0847               	movf	sprintf@c^(0+128),w
 11116  0351  00A8               	movwf	??_sprintf^(0+128)
 11117  0352  3001               	movlw	1
 11118  0353                     u5565:	
 11119  0353  1003               	clrc
 11120  0354  0DA8               	rlf	??_sprintf^(0+128),f
 11121  0355  3EFF               	addlw	-1
 11122  0356  1D03               	skipz
 11123  0357  2B53               	goto	u5565
 11124  0358  1003               	clrc
 11125  0359  0D28               	rlf	??_sprintf^(0+128),w
 11126  035A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11127  035B  0084               	movwf	4
 11128  035C  160A  158A  200A  120A  118A  	fcall	stringdir
 11129  0361  00F3               	movwf	___lldiv@divisor
 11130  0362  160A  158A  200A  120A  118A  	fcall	stringdir
 11131  0367  00F4               	movwf	___lldiv@divisor+1
 11132  0368  160A  158A  200A  120A  118A  	fcall	stringdir
 11133  036D  00F5               	movwf	___lldiv@divisor+2
 11134  036E  160A  158A  200A  120A  118A  	fcall	stringdir
 11135  0373  00F6               	movwf	___lldiv@divisor+3
 11136  0374  083D               	movf	(sprintf@val+3)^(0+128),w
 11137  0375  00FA               	movwf	___lldiv@dividend+3
 11138  0376  083C               	movf	(sprintf@val+2)^(0+128),w
 11139  0377  00F9               	movwf	___lldiv@dividend+2
 11140  0378  083B               	movf	(sprintf@val+1)^(0+128),w
 11141  0379  00F8               	movwf	___lldiv@dividend+1
 11142  037A  083A               	movf	sprintf@val^(0+128),w
 11143  037B  00F7               	movwf	___lldiv@dividend
 11144  037C  160A  158A  24BD  120A  118A  	fcall	___lldiv
 11145  0381  0876               	movf	?___lldiv+3,w
 11146  0382  1683               	bsf	3,5	;RP0=1, select bank1
 11147  0383  1303               	bcf	3,6	;RP1=0, select bank1
 11148  0384  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
 11149  0385  0875               	movf	?___lldiv+2,w
 11150  0386  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
 11151  0387  0874               	movf	?___lldiv+1,w
 11152  0388  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
 11153  0389  0873               	movf	?___lldiv,w
 11154  038A  00B6               	movwf	sprintf@tmpval^(0+128)
 11155  038B                     l3553:	
 11156                           
 11157                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
 11158  038B  3000               	movlw	0
 11159  038C  1283               	bcf	3,5	;RP0=0, select bank0
 11160  038D  1303               	bcf	3,6	;RP1=0, select bank0
 11161  038E  00A9               	movwf	___llmod@divisor+3
 11162  038F  3000               	movlw	0
 11163  0390  00A8               	movwf	___llmod@divisor+2
 11164  0391  3000               	movlw	0
 11165  0392  00A7               	movwf	___llmod@divisor+1
 11166  0393  300A               	movlw	10
 11167  0394  00A6               	movwf	___llmod@divisor
 11168  0395  1683               	bsf	3,5	;RP0=1, select bank1
 11169  0396  1303               	bcf	3,6	;RP1=0, select bank1
 11170  0397  0839               	movf	(sprintf@tmpval+3)^(0+128),w
 11171  0398  1283               	bcf	3,5	;RP0=0, select bank0
 11172  0399  1303               	bcf	3,6	;RP1=0, select bank0
 11173  039A  00AD               	movwf	___llmod@dividend+3
 11174  039B  1683               	bsf	3,5	;RP0=1, select bank1
 11175  039C  1303               	bcf	3,6	;RP1=0, select bank1
 11176  039D  0838               	movf	(sprintf@tmpval+2)^(0+128),w
 11177  039E  1283               	bcf	3,5	;RP0=0, select bank0
 11178  039F  1303               	bcf	3,6	;RP1=0, select bank0
 11179  03A0  00AC               	movwf	___llmod@dividend+2
 11180  03A1  1683               	bsf	3,5	;RP0=1, select bank1
 11181  03A2  1303               	bcf	3,6	;RP1=0, select bank1
 11182  03A3  0837               	movf	(sprintf@tmpval+1)^(0+128),w
 11183  03A4  1283               	bcf	3,5	;RP0=0, select bank0
 11184  03A5  1303               	bcf	3,6	;RP1=0, select bank0
 11185  03A6  00AB               	movwf	___llmod@dividend+1
 11186  03A7  1683               	bsf	3,5	;RP0=1, select bank1
 11187  03A8  1303               	bcf	3,6	;RP1=0, select bank1
 11188  03A9  0836               	movf	sprintf@tmpval^(0+128),w
 11189  03AA  1283               	bcf	3,5	;RP0=0, select bank0
 11190  03AB  1303               	bcf	3,6	;RP1=0, select bank0
 11191  03AC  00AA               	movwf	___llmod@dividend
 11192  03AD  160A  158A  240E  120A  118A  	fcall	___llmod
 11193  03B2  1283               	bcf	3,5	;RP0=0, select bank0
 11194  03B3  1303               	bcf	3,6	;RP1=0, select bank0
 11195  03B4  0829               	movf	?___llmod+3,w
 11196  03B5  1683               	bsf	3,5	;RP0=1, select bank1
 11197  03B6  1303               	bcf	3,6	;RP1=0, select bank1
 11198  03B7  00B9               	movwf	(sprintf@tmpval+3)^(0+128)
 11199  03B8  1283               	bcf	3,5	;RP0=0, select bank0
 11200  03B9  1303               	bcf	3,6	;RP1=0, select bank0
 11201  03BA  0828               	movf	?___llmod+2,w
 11202  03BB  1683               	bsf	3,5	;RP0=1, select bank1
 11203  03BC  1303               	bcf	3,6	;RP1=0, select bank1
 11204  03BD  00B8               	movwf	(sprintf@tmpval+2)^(0+128)
 11205  03BE  1283               	bcf	3,5	;RP0=0, select bank0
 11206  03BF  1303               	bcf	3,6	;RP1=0, select bank0
 11207  03C0  0827               	movf	?___llmod+1,w
 11208  03C1  1683               	bsf	3,5	;RP0=1, select bank1
 11209  03C2  1303               	bcf	3,6	;RP1=0, select bank1
 11210  03C3  00B7               	movwf	(sprintf@tmpval+1)^(0+128)
 11211  03C4  1283               	bcf	3,5	;RP0=0, select bank0
 11212  03C5  1303               	bcf	3,6	;RP1=0, select bank0
 11213  03C6  0826               	movf	?___llmod,w
 11214  03C7  1683               	bsf	3,5	;RP0=1, select bank1
 11215  03C8  1303               	bcf	3,6	;RP1=0, select bank1
 11216  03C9  00B6               	movwf	sprintf@tmpval^(0+128)
 11217  03CA                     l3555:	
 11218                           
 11219                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
 11220  03CA  0836               	movf	sprintf@tmpval^(0+128),w
 11221  03CB  3E30               	addlw	48
 11222  03CC  00A8               	movwf	??_sprintf^(0+128)
 11223  03CD  0844               	movf	sprintf@sp^(0+128),w
 11224  03CE  0084               	movwf	4
 11225  03CF  0828               	movf	??_sprintf^(0+128),w
 11226  03D0  1383               	bcf	3,7	;select IRP bank0
 11227  03D1  0080               	movwf	0
 11228  03D2  3001               	movlw	1
 11229  03D3  00A8               	movwf	??_sprintf^(0+128)
 11230  03D4  0828               	movf	??_sprintf^(0+128),w
 11231  03D5  07C4               	addwf	sprintf@sp^(0+128),f
 11232  03D6                     l3557:	
 11233                           
 11234                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
 11235  03D6  0847               	movf	sprintf@c^(0+128),w
 11236  03D7  00A8               	movwf	??_sprintf^(0+128)
 11237  03D8  3001               	movlw	1
 11238  03D9                     u5575:	
 11239  03D9  1003               	clrc
 11240  03DA  0DA8               	rlf	??_sprintf^(0+128),f
 11241  03DB  3EFF               	addlw	-1
 11242  03DC  1D03               	skipz
 11243  03DD  2BD9               	goto	u5575
 11244  03DE  1003               	clrc
 11245  03DF  0D28               	rlf	??_sprintf^(0+128),w
 11246  03E0  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11247  03E1  0084               	movwf	4
 11248  03E2  160A  158A  200A  120A  118A  	fcall	stringdir
 11249  03E7  1283               	bcf	3,5	;RP0=0, select bank0
 11250  03E8  1303               	bcf	3,6	;RP1=0, select bank0
 11251  03E9  00A6               	movwf	___llmod@divisor
 11252  03EA  160A  158A  200A  120A  118A  	fcall	stringdir
 11253  03EF  00A7               	movwf	___llmod@divisor+1
 11254  03F0  160A  158A  200A  120A  118A  	fcall	stringdir
 11255  03F5  00A8               	movwf	___llmod@divisor+2
 11256  03F6  160A  158A  200A  120A  118A  	fcall	stringdir
 11257  03FB  00A9               	movwf	___llmod@divisor+3
 11258  03FC  1683               	bsf	3,5	;RP0=1, select bank1
 11259  03FD  1303               	bcf	3,6	;RP1=0, select bank1
 11260  03FE  083D               	movf	(sprintf@val+3)^(0+128),w
 11261  03FF  1283               	bcf	3,5	;RP0=0, select bank0
 11262  0400  1303               	bcf	3,6	;RP1=0, select bank0
 11263  0401  00AD               	movwf	___llmod@dividend+3
 11264  0402  1683               	bsf	3,5	;RP0=1, select bank1
 11265  0403  1303               	bcf	3,6	;RP1=0, select bank1
 11266  0404  083C               	movf	(sprintf@val+2)^(0+128),w
 11267  0405  1283               	bcf	3,5	;RP0=0, select bank0
 11268  0406  1303               	bcf	3,6	;RP1=0, select bank0
 11269  0407  00AC               	movwf	___llmod@dividend+2
 11270  0408  1683               	bsf	3,5	;RP0=1, select bank1
 11271  0409  1303               	bcf	3,6	;RP1=0, select bank1
 11272  040A  083B               	movf	(sprintf@val+1)^(0+128),w
 11273  040B  1283               	bcf	3,5	;RP0=0, select bank0
 11274  040C  1303               	bcf	3,6	;RP1=0, select bank0
 11275  040D  00AB               	movwf	___llmod@dividend+1
 11276  040E  1683               	bsf	3,5	;RP0=1, select bank1
 11277  040F  1303               	bcf	3,6	;RP1=0, select bank1
 11278  0410  083A               	movf	sprintf@val^(0+128),w
 11279  0411  1283               	bcf	3,5	;RP0=0, select bank0
 11280  0412  1303               	bcf	3,6	;RP1=0, select bank0
 11281  0413  00AA               	movwf	___llmod@dividend
 11282  0414  160A  158A  240E  120A  118A  	fcall	___llmod
 11283  0419  1283               	bcf	3,5	;RP0=0, select bank0
 11284  041A  1303               	bcf	3,6	;RP1=0, select bank0
 11285  041B  0829               	movf	?___llmod+3,w
 11286  041C  1683               	bsf	3,5	;RP0=1, select bank1
 11287  041D  1303               	bcf	3,6	;RP1=0, select bank1
 11288  041E  00BD               	movwf	(sprintf@val+3)^(0+128)
 11289  041F  1283               	bcf	3,5	;RP0=0, select bank0
 11290  0420  1303               	bcf	3,6	;RP1=0, select bank0
 11291  0421  0828               	movf	?___llmod+2,w
 11292  0422  1683               	bsf	3,5	;RP0=1, select bank1
 11293  0423  1303               	bcf	3,6	;RP1=0, select bank1
 11294  0424  00BC               	movwf	(sprintf@val+2)^(0+128)
 11295  0425  1283               	bcf	3,5	;RP0=0, select bank0
 11296  0426  1303               	bcf	3,6	;RP1=0, select bank0
 11297  0427  0827               	movf	?___llmod+1,w
 11298  0428  1683               	bsf	3,5	;RP0=1, select bank1
 11299  0429  1303               	bcf	3,6	;RP1=0, select bank1
 11300  042A  00BB               	movwf	(sprintf@val+1)^(0+128)
 11301  042B  1283               	bcf	3,5	;RP0=0, select bank0
 11302  042C  1303               	bcf	3,6	;RP1=0, select bank0
 11303  042D  0826               	movf	?___llmod,w
 11304  042E  1683               	bsf	3,5	;RP0=1, select bank1
 11305  042F  1303               	bcf	3,6	;RP1=0, select bank1
 11306  0430  00BA               	movwf	sprintf@val^(0+128)
 11307  0431                     l3559:	
 11308                           
 11309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
 11310  0431  3001               	movlw	1
 11311  0432  02C7               	subwf	sprintf@c^(0+128),f
 11312  0433  0A47               	incf	sprintf@c^(0+128),w
 11313  0434  1D03               	btfss	3,2
 11314  0435  2C37               	goto	u5581
 11315  0436  2C38               	goto	u5580
 11316  0437                     u5581:	
 11317  0437  2B50               	goto	l3551
 11318  0438                     u5580:	
 11319  0438  2C4A               	goto	l3567
 11320  0439                     l3561:	
 11321                           
 11322                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
 11323  0439  3030               	movlw	48
 11324  043A  00A8               	movwf	??_sprintf^(0+128)
 11325  043B  0844               	movf	sprintf@sp^(0+128),w
 11326  043C  0084               	movwf	4
 11327  043D  0828               	movf	??_sprintf^(0+128),w
 11328  043E  1383               	bcf	3,7	;select IRP bank0
 11329  043F  0080               	movwf	0
 11330  0440                     l3563:	
 11331  0440  3001               	movlw	1
 11332  0441  00A8               	movwf	??_sprintf^(0+128)
 11333  0442  0828               	movf	??_sprintf^(0+128),w
 11334  0443  07C4               	addwf	sprintf@sp^(0+128),f
 11335  0444                     l3565:	
 11336                           
 11337                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
 11338  0444  30FF               	movlw	255
 11339  0445  07C5               	addwf	sprintf@prec^(0+128),f
 11340  0446  1803               	skipnc
 11341  0447  0AC6               	incf	(sprintf@prec+1)^(0+128),f
 11342  0448  30FF               	movlw	255
 11343  0449  07C6               	addwf	(sprintf@prec+1)^(0+128),f
 11344  044A                     l3567:	
 11345                           
 11346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
 11347  044A  0845               	movf	sprintf@prec^(0+128),w
 11348  044B  0446               	iorwf	(sprintf@prec+1)^(0+128),w
 11349  044C  1D03               	btfss	3,2
 11350  044D  2C4F               	goto	u5591
 11351  044E  2C50               	goto	u5590
 11352  044F                     u5591:	
 11353  044F  2C39               	goto	l3561
 11354  0450                     u5590:	
 11355  0450  2DEE               	goto	l3647
 11356  0451                     l3569:	
 11357                           
 11358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1279:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1285:     val
      +                           = (unsigned long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11359  0451  0831               	movf	sprintf@ap^(0+128),w
 11360  0452  0084               	movwf	4
 11361  0453  1383               	bcf	3,7	;select IRP bank0
 11362  0454  0800               	movf	0,w
 11363  0455  00A8               	movwf	??_sprintf^(0+128)
 11364  0456  0A84               	incf	4,f
 11365  0457  0800               	movf	0,w
 11366  0458  00A9               	movwf	(??_sprintf^(0+128)+1)
 11367  0459  0828               	movf	??_sprintf^(0+128),w
 11368  045A  00BA               	movwf	sprintf@val^(0+128)
 11369  045B  0829               	movf	(??_sprintf+1)^(0+128),w
 11370  045C  00BB               	movwf	(sprintf@val+1)^(0+128)
 11371  045D  3000               	movlw	0
 11372  045E  1BBB               	btfsc	(sprintf@val+1)^(0+128),7
 11373  045F  30FF               	movlw	255
 11374  0460  00BC               	movwf	(sprintf@val+2)^(0+128)
 11375  0461  00BD               	movwf	(sprintf@val+3)^(0+128)
 11376  0462                     l3571:	
 11377  0462  3002               	movlw	2
 11378  0463  00A8               	movwf	??_sprintf^(0+128)
 11379  0464  0828               	movf	??_sprintf^(0+128),w
 11380  0465  07B1               	addwf	sprintf@ap^(0+128),f
 11381  0466                     l3573:	
 11382                           
 11383                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1287:    if
      +                          ((long)val < 0) {
 11384  0466  1FBD               	btfss	(sprintf@val+3)^(0+128),7
 11385  0467  2C69               	goto	u5601
 11386  0468  2C6A               	goto	u5600
 11387  0469                     u5601:	
 11388  0469  2C79               	goto	l3579
 11389  046A                     u5600:	
 11390  046A                     l3575:	
 11391                           
 11392                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1288:     f
      +                          lag |= 0x03;
 11393  046A  3003               	movlw	3
 11394  046B  04B2               	iorwf	sprintf@flag^(0+128),f
 11395  046C  3000               	movlw	0
 11396  046D  04B3               	iorwf	(sprintf@flag+1)^(0+128),f
 11397  046E                     l3577:	
 11398                           
 11399                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1289:     v
      +                          al = -val;
 11400  046E  09BA               	comf	sprintf@val^(0+128),f
 11401  046F  09BB               	comf	(sprintf@val+1)^(0+128),f
 11402  0470  09BC               	comf	(sprintf@val+2)^(0+128),f
 11403  0471  09BD               	comf	(sprintf@val+3)^(0+128),f
 11404  0472  0ABA               	incf	sprintf@val^(0+128),f
 11405  0473  1903               	skipnz
 11406  0474  0ABB               	incf	(sprintf@val+1)^(0+128),f
 11407  0475  1903               	skipnz
 11408  0476  0ABC               	incf	(sprintf@val+2)^(0+128),f
 11409  0477  1903               	skipnz
 11410  0478  0ABD               	incf	(sprintf@val+3)^(0+128),f
 11411  0479                     l3579:	
 11412                           
 11413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1292:   };C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(pr
      +                          ec == 0 && val == 0)
 11414  0479  0845               	movf	sprintf@prec^(0+128),w
 11415  047A  0446               	iorwf	(sprintf@prec+1)^(0+128),w
 11416  047B  1D03               	btfss	3,2
 11417  047C  2C7E               	goto	u5611
 11418  047D  2C7F               	goto	u5610
 11419  047E                     u5611:	
 11420  047E  2C8D               	goto	l3585
 11421  047F                     u5610:	
 11422  047F                     l3581:	
 11423  047F  083D               	movf	(sprintf@val+3)^(0+128),w
 11424  0480  043C               	iorwf	(sprintf@val+2)^(0+128),w
 11425  0481  043B               	iorwf	(sprintf@val+1)^(0+128),w
 11426  0482  043A               	iorwf	sprintf@val^(0+128),w
 11427  0483  1D03               	skipz
 11428  0484  2C86               	goto	u5621
 11429  0485  2C87               	goto	u5620
 11430  0486                     u5621:	
 11431  0486  2C8D               	goto	l3585
 11432  0487                     u5620:	
 11433  0487                     l3583:	
 11434                           
 11435                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
 11436  0487  3001               	movlw	1
 11437  0488  07C5               	addwf	sprintf@prec^(0+128),f
 11438  0489  1803               	skipnc
 11439  048A  0AC6               	incf	(sprintf@prec+1)^(0+128),f
 11440  048B  3000               	movlw	0
 11441  048C  07C6               	addwf	(sprintf@prec+1)^(0+128),f
 11442  048D                     l3585:	
 11443                           
 11444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1331:    fo
      +                          r(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11445  048D  01C7               	clrf	sprintf@c^(0+128)
 11446  048E  0AC7               	incf	sprintf@c^(0+128),f
 11447  048F                     l3591:	
 11448                           
 11449                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1332:     i
      +                          f(val < dpowers[c])
 11450  048F  0847               	movf	sprintf@c^(0+128),w
 11451  0490  00A8               	movwf	??_sprintf^(0+128)
 11452  0491  3001               	movlw	1
 11453  0492                     u5635:	
 11454  0492  1003               	clrc
 11455  0493  0DA8               	rlf	??_sprintf^(0+128),f
 11456  0494  3EFF               	addlw	-1
 11457  0495  1D03               	skipz
 11458  0496  2C92               	goto	u5635
 11459  0497  1003               	clrc
 11460  0498  0D28               	rlf	??_sprintf^(0+128),w
 11461  0499  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11462  049A  0084               	movwf	4
 11463  049B  160A  158A  200A  120A  118A  	fcall	stringdir
 11464  04A0  00A9               	movwf	(??_sprintf+1)^(0+128)
 11465  04A1  160A  158A  200A  120A  118A  	fcall	stringdir
 11466  04A6  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
 11467  04A7  160A  158A  200A  120A  118A  	fcall	stringdir
 11468  04AC  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
 11469  04AD  160A  158A  200A  120A  118A  	fcall	stringdir
 11470  04B2  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
 11471  04B3  082C               	movf	(??_sprintf+4)^(0+128),w
 11472  04B4  023D               	subwf	(sprintf@val+3)^(0+128),w
 11473  04B5  1D03               	skipz
 11474  04B6  2CC1               	goto	u5645
 11475  04B7  082B               	movf	(??_sprintf+3)^(0+128),w
 11476  04B8  023C               	subwf	(sprintf@val+2)^(0+128),w
 11477  04B9  1D03               	skipz
 11478  04BA  2CC1               	goto	u5645
 11479  04BB  082A               	movf	(??_sprintf+2)^(0+128),w
 11480  04BC  023B               	subwf	(sprintf@val+1)^(0+128),w
 11481  04BD  1D03               	skipz
 11482  04BE  2CC1               	goto	u5645
 11483  04BF  0829               	movf	(??_sprintf+1)^(0+128),w
 11484  04C0  023A               	subwf	sprintf@val^(0+128),w
 11485  04C1                     u5645:	
 11486  04C1  1803               	skipnc
 11487  04C2  2CC4               	goto	u5641
 11488  04C3  2CC5               	goto	u5640
 11489  04C4                     u5641:	
 11490  04C4  2CC6               	goto	l3595
 11491  04C5                     u5640:	
 11492  04C5  2CD0               	goto	l3597
 11493  04C6                     l3595:	
 11494  04C6  3001               	movlw	1
 11495  04C7  00A8               	movwf	??_sprintf^(0+128)
 11496  04C8  0828               	movf	??_sprintf^(0+128),w
 11497  04C9  07C7               	addwf	sprintf@c^(0+128),f
 11498  04CA  300A               	movlw	10
 11499  04CB  0647               	xorwf	sprintf@c^(0+128),w
 11500  04CC  1D03               	btfss	3,2
 11501  04CD  2CCF               	goto	u5651
 11502  04CE  2CD0               	goto	u5650
 11503  04CF                     u5651:	
 11504  04CF  2C8F               	goto	l3591
 11505  04D0                     u5650:	
 11506  04D0                     l3597:	
 11507                           
 11508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
 11509  04D0  0846               	movf	(sprintf@prec+1)^(0+128),w
 11510  04D1  3A80               	xorlw	128
 11511  04D2  3C80               	sublw	128
 11512  04D3  1D03               	skipz
 11513  04D4  2CD7               	goto	u5665
 11514  04D5  0845               	movf	sprintf@prec^(0+128),w
 11515  04D6  0247               	subwf	sprintf@c^(0+128),w
 11516  04D7                     u5665:	
 11517  04D7  1803               	skipnc
 11518  04D8  2CDA               	goto	u5661
 11519  04D9  2CDB               	goto	u5660
 11520  04DA                     u5661:	
 11521  04DA  2CE2               	goto	l3601
 11522  04DB                     u5660:	
 11523  04DB                     l3599:	
 11524                           
 11525                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1366:    c 
      +                          = (char)prec;
 11526  04DB  1683               	bsf	3,5	;RP0=1, select bank1
 11527  04DC  1303               	bcf	3,6	;RP1=0, select bank1
 11528  04DD  0845               	movf	sprintf@prec^(0+128),w
 11529  04DE  00A8               	movwf	??_sprintf^(0+128)
 11530  04DF  0828               	movf	??_sprintf^(0+128),w
 11531  04E0  00C7               	movwf	sprintf@c^(0+128)
 11532  04E1  2CFA               	goto	l3605
 11533  04E2                     l3601:	
 11534  04E2  1683               	bsf	3,5	;RP0=1, select bank1
 11535  04E3  1303               	bcf	3,6	;RP1=0, select bank1
 11536  04E4  0846               	movf	(sprintf@prec+1)^(0+128),w
 11537  04E5  3A80               	xorlw	128
 11538  04E6  00A8               	movwf	??_sprintf^(0+128)
 11539  04E7  3080               	movlw	128
 11540  04E8  0228               	subwf	??_sprintf^(0+128),w
 11541  04E9  1D03               	skipz
 11542  04EA  2CED               	goto	u5675
 11543  04EB  0847               	movf	sprintf@c^(0+128),w
 11544  04EC  0245               	subwf	sprintf@prec^(0+128),w
 11545  04ED                     u5675:	
 11546  04ED  1803               	skipnc
 11547  04EE  2CF0               	goto	u5671
 11548  04EF  2CF1               	goto	u5670
 11549  04F0                     u5671:	
 11550  04F0  2CFA               	goto	l3605
 11551  04F1                     u5670:	
 11552  04F1                     l3603:	
 11553                           
 11554                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
 11555  04F1  1683               	bsf	3,5	;RP0=1, select bank1
 11556  04F2  1303               	bcf	3,6	;RP1=0, select bank1
 11557  04F3  0847               	movf	sprintf@c^(0+128),w
 11558  04F4  00A8               	movwf	??_sprintf^(0+128)
 11559  04F5  01A9               	clrf	(??_sprintf^(0+128)+1)
 11560  04F6  0828               	movf	??_sprintf^(0+128),w
 11561  04F7  00C5               	movwf	sprintf@prec^(0+128)
 11562  04F8  0829               	movf	(??_sprintf+1)^(0+128),w
 11563  04F9  00C6               	movwf	(sprintf@prec+1)^(0+128)
 11564  04FA                     l3605:	
 11565                           
 11566                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
 11567  04FA  1683               	bsf	3,5	;RP0=1, select bank1
 11568  04FB  1303               	bcf	3,6	;RP1=0, select bank1
 11569  04FC  0834               	movf	sprintf@width^(0+128),w
 11570  04FD  0435               	iorwf	(sprintf@width+1)^(0+128),w
 11571  04FE  1903               	btfsc	3,2
 11572  04FF  2D01               	goto	u5681
 11573  0500  2D02               	goto	u5680
 11574  0501                     u5681:	
 11575  0501  2D14               	goto	l3611
 11576  0502                     u5680:	
 11577  0502                     l3607:	
 11578  0502  3003               	movlw	3
 11579  0503  0532               	andwf	sprintf@flag^(0+128),w
 11580  0504  00A8               	movwf	??_sprintf^(0+128)
 11581  0505  3000               	movlw	0
 11582  0506  0533               	andwf	(sprintf@flag+1)^(0+128),w
 11583  0507  00A9               	movwf	(??_sprintf+1)^(0+128)
 11584  0508  0828               	movf	??_sprintf^(0+128),w
 11585  0509  0429               	iorwf	(??_sprintf^(0+128)+1),w
 11586  050A  1903               	btfsc	3,2
 11587  050B  2D0D               	goto	u5691
 11588  050C  2D0E               	goto	u5690
 11589  050D                     u5691:	
 11590  050D  2D14               	goto	l3611
 11591  050E                     u5690:	
 11592  050E                     l3609:	
 11593                           
 11594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
 11595  050E  30FF               	movlw	255
 11596  050F  07B4               	addwf	sprintf@width^(0+128),f
 11597  0510  1803               	skipnc
 11598  0511  0AB5               	incf	(sprintf@width+1)^(0+128),f
 11599  0512  30FF               	movlw	255
 11600  0513  07B5               	addwf	(sprintf@width+1)^(0+128),f
 11601  0514                     l3611:	
 11602                           
 11603                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1374:   if(
      +                          flag & 0x4000) {
 11604  0514  1F33               	btfss	(sprintf@flag+1)^(0+128),6
 11605  0515  2D17               	goto	u5701
 11606  0516  2D18               	goto	u5700
 11607  0517                     u5701:	
 11608  0517  2D33               	goto	l3619
 11609  0518                     u5700:	
 11610  0518                     l3613:	
 11611                           
 11612                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1375:    if
      +                          (width > prec)
 11613  0518  0846               	movf	(sprintf@prec+1)^(0+128),w
 11614  0519  3A80               	xorlw	128
 11615  051A  00A8               	movwf	??_sprintf^(0+128)
 11616  051B  0835               	movf	(sprintf@width+1)^(0+128),w
 11617  051C  3A80               	xorlw	128
 11618  051D  0228               	subwf	??_sprintf^(0+128),w
 11619  051E  1D03               	skipz
 11620  051F  2D22               	goto	u5715
 11621  0520  0834               	movf	sprintf@width^(0+128),w
 11622  0521  0245               	subwf	sprintf@prec^(0+128),w
 11623  0522                     u5715:	
 11624  0522  1803               	skipnc
 11625  0523  2D25               	goto	u5711
 11626  0524  2D26               	goto	u5710
 11627  0525                     u5711:	
 11628  0525  2D2F               	goto	l3617
 11629  0526                     u5710:	
 11630  0526                     l3615:	
 11631                           
 11632                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1376:     w
      +                          idth -= prec;
 11633  0526  1683               	bsf	3,5	;RP0=1, select bank1
 11634  0527  1303               	bcf	3,6	;RP1=0, select bank1
 11635  0528  0845               	movf	sprintf@prec^(0+128),w
 11636  0529  02B4               	subwf	sprintf@width^(0+128),f
 11637  052A  0846               	movf	(sprintf@prec+1)^(0+128),w
 11638  052B  1C03               	skipc
 11639  052C  03B5               	decf	(sprintf@width+1)^(0+128),f
 11640  052D  02B5               	subwf	(sprintf@width+1)^(0+128),f
 11641  052E  2D33               	goto	l3619
 11642  052F                     l3617:	
 11643                           
 11644                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1378:     w
      +                          idth = 0;
 11645  052F  1683               	bsf	3,5	;RP0=1, select bank1
 11646  0530  1303               	bcf	3,6	;RP1=0, select bank1
 11647  0531  01B4               	clrf	sprintf@width^(0+128)
 11648  0532  01B5               	clrf	(sprintf@width+1)^(0+128)
 11649  0533                     l3619:	
 11650                           
 11651                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
 11652  0533  0835               	movf	(sprintf@width+1)^(0+128),w
 11653  0534  3A80               	xorlw	128
 11654  0535  3C80               	sublw	128
 11655  0536  1D03               	skipz
 11656  0537  2D3A               	goto	u5725
 11657  0538  0834               	movf	sprintf@width^(0+128),w
 11658  0539  0247               	subwf	sprintf@c^(0+128),w
 11659  053A                     u5725:	
 11660  053A  1803               	skipnc
 11661  053B  2D3D               	goto	u5721
 11662  053C  2D3E               	goto	u5720
 11663  053D                     u5721:	
 11664  053D  2D4A               	goto	l3623
 11665  053E                     u5720:	
 11666  053E                     l3621:	
 11667                           
 11668                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
 11669  053E  1683               	bsf	3,5	;RP0=1, select bank1
 11670  053F  1303               	bcf	3,6	;RP1=0, select bank1
 11671  0540  0847               	movf	sprintf@c^(0+128),w
 11672  0541  00A8               	movwf	??_sprintf^(0+128)
 11673  0542  01A9               	clrf	(??_sprintf^(0+128)+1)
 11674  0543  0828               	movf	??_sprintf^(0+128),w
 11675  0544  02B4               	subwf	sprintf@width^(0+128),f
 11676  0545  0829               	movf	(??_sprintf+1)^(0+128),w
 11677  0546  1C03               	skipc
 11678  0547  03B5               	decf	(sprintf@width+1)^(0+128),f
 11679  0548  02B5               	subwf	(sprintf@width+1)^(0+128),f
 11680  0549  2D4E               	goto	l3625
 11681  054A                     l3623:	
 11682                           
 11683                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
 11684  054A  1683               	bsf	3,5	;RP0=1, select bank1
 11685  054B  1303               	bcf	3,6	;RP1=0, select bank1
 11686  054C  01B4               	clrf	sprintf@width^(0+128)
 11687  054D  01B5               	clrf	(sprintf@width+1)^(0+128)
 11688  054E                     l3625:	
 11689                           
 11690                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
 11691  054E  0834               	movf	sprintf@width^(0+128),w
 11692  054F  0435               	iorwf	(sprintf@width+1)^(0+128),w
 11693  0550  1903               	btfsc	3,2
 11694  0551  2D53               	goto	u5731
 11695  0552  2D54               	goto	u5730
 11696  0553                     u5731:	
 11697  0553  2D6B               	goto	l3633
 11698  0554                     u5730:	
 11699  0554                     l3627:	
 11700                           
 11701                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
 11702  0554  3020               	movlw	32
 11703  0555  00A8               	movwf	??_sprintf^(0+128)
 11704  0556  0844               	movf	sprintf@sp^(0+128),w
 11705  0557  0084               	movwf	4
 11706  0558  0828               	movf	??_sprintf^(0+128),w
 11707  0559  1383               	bcf	3,7	;select IRP bank0
 11708  055A  0080               	movwf	0
 11709  055B                     l3629:	
 11710  055B  3001               	movlw	1
 11711  055C  00A8               	movwf	??_sprintf^(0+128)
 11712  055D  0828               	movf	??_sprintf^(0+128),w
 11713  055E  07C4               	addwf	sprintf@sp^(0+128),f
 11714  055F                     l3631:	
 11715  055F  30FF               	movlw	255
 11716  0560  07B4               	addwf	sprintf@width^(0+128),f
 11717  0561  1803               	skipnc
 11718  0562  0AB5               	incf	(sprintf@width+1)^(0+128),f
 11719  0563  30FF               	movlw	255
 11720  0564  07B5               	addwf	(sprintf@width+1)^(0+128),f
 11721  0565  0834               	movf	sprintf@width^(0+128),w
 11722  0566  0435               	iorwf	(sprintf@width+1)^(0+128),w
 11723  0567  1D03               	btfss	3,2
 11724  0568  2D6A               	goto	u5741
 11725  0569  2D6B               	goto	u5740
 11726  056A                     u5741:	
 11727  056A  2D54               	goto	l3627
 11728  056B                     u5740:	
 11729  056B                     l3633:	
 11730                           
 11731                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
 11732  056B  3003               	movlw	3
 11733  056C  0532               	andwf	sprintf@flag^(0+128),w
 11734  056D  00A8               	movwf	??_sprintf^(0+128)
 11735  056E  3000               	movlw	0
 11736  056F  0533               	andwf	(sprintf@flag+1)^(0+128),w
 11737  0570  00A9               	movwf	(??_sprintf+1)^(0+128)
 11738  0571  0828               	movf	??_sprintf^(0+128),w
 11739  0572  0429               	iorwf	(??_sprintf^(0+128)+1),w
 11740  0573  1903               	btfsc	3,2
 11741  0574  2D76               	goto	u5751
 11742  0575  2D77               	goto	u5750
 11743  0576                     u5751:	
 11744  0576  2DE0               	goto	l3645
 11745  0577                     u5750:	
 11746  0577                     l3635:	
 11747                           
 11748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
 11749  0577  302D               	movlw	45
 11750  0578  00A8               	movwf	??_sprintf^(0+128)
 11751  0579  0844               	movf	sprintf@sp^(0+128),w
 11752  057A  0084               	movwf	4
 11753  057B  0828               	movf	??_sprintf^(0+128),w
 11754  057C  1383               	bcf	3,7	;select IRP bank0
 11755  057D  0080               	movwf	0
 11756  057E                     l3637:	
 11757  057E  3001               	movlw	1
 11758  057F  00A8               	movwf	??_sprintf^(0+128)
 11759  0580  0828               	movf	??_sprintf^(0+128),w
 11760  0581  07C4               	addwf	sprintf@sp^(0+128),f
 11761  0582  2DE0               	goto	l3645
 11762  0583                     l3639:	
 11763                           
 11764                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1504:    {;
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1515:     c 
      +                          = (val / dpowers[(unsigned int)prec]) % 10 + '0';
 11765  0583  3000               	movlw	0
 11766  0584  1283               	bcf	3,5	;RP0=0, select bank0
 11767  0585  1303               	bcf	3,6	;RP1=0, select bank0
 11768  0586  00A9               	movwf	___llmod@divisor+3
 11769  0587  3000               	movlw	0
 11770  0588  00A8               	movwf	___llmod@divisor+2
 11771  0589  3000               	movlw	0
 11772  058A  00A7               	movwf	___llmod@divisor+1
 11773  058B  300A               	movlw	10
 11774  058C  00A6               	movwf	___llmod@divisor
 11775  058D  1683               	bsf	3,5	;RP0=1, select bank1
 11776  058E  1303               	bcf	3,6	;RP1=0, select bank1
 11777  058F  0845               	movf	sprintf@prec^(0+128),w
 11778  0590  00A8               	movwf	??_sprintf^(0+128)
 11779  0591  3001               	movlw	1
 11780  0592                     u5765:	
 11781  0592  1003               	clrc
 11782  0593  0DA8               	rlf	??_sprintf^(0+128),f
 11783  0594  3EFF               	addlw	-1
 11784  0595  1D03               	skipz
 11785  0596  2D92               	goto	u5765
 11786  0597  1003               	clrc
 11787  0598  0D28               	rlf	??_sprintf^(0+128),w
 11788  0599  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11789  059A  0084               	movwf	4
 11790  059B  160A  158A  200A  120A  118A  	fcall	stringdir
 11791  05A0  00F3               	movwf	___lldiv@divisor
 11792  05A1  160A  158A  200A  120A  118A  	fcall	stringdir
 11793  05A6  00F4               	movwf	___lldiv@divisor+1
 11794  05A7  160A  158A  200A  120A  118A  	fcall	stringdir
 11795  05AC  00F5               	movwf	___lldiv@divisor+2
 11796  05AD  160A  158A  200A  120A  118A  	fcall	stringdir
 11797  05B2  00F6               	movwf	___lldiv@divisor+3
 11798  05B3  083D               	movf	(sprintf@val+3)^(0+128),w
 11799  05B4  00FA               	movwf	___lldiv@dividend+3
 11800  05B5  083C               	movf	(sprintf@val+2)^(0+128),w
 11801  05B6  00F9               	movwf	___lldiv@dividend+2
 11802  05B7  083B               	movf	(sprintf@val+1)^(0+128),w
 11803  05B8  00F8               	movwf	___lldiv@dividend+1
 11804  05B9  083A               	movf	sprintf@val^(0+128),w
 11805  05BA  00F7               	movwf	___lldiv@dividend
 11806  05BB  160A  158A  24BD  120A  118A  	fcall	___lldiv
 11807  05C0  0876               	movf	?___lldiv+3,w
 11808  05C1  1283               	bcf	3,5	;RP0=0, select bank0
 11809  05C2  1303               	bcf	3,6	;RP1=0, select bank0
 11810  05C3  00AD               	movwf	___llmod@dividend+3
 11811  05C4  0875               	movf	?___lldiv+2,w
 11812  05C5  00AC               	movwf	___llmod@dividend+2
 11813  05C6  0874               	movf	?___lldiv+1,w
 11814  05C7  00AB               	movwf	___llmod@dividend+1
 11815  05C8  0873               	movf	?___lldiv,w
 11816  05C9  00AA               	movwf	___llmod@dividend
 11817  05CA  160A  158A  240E  120A  118A  	fcall	___llmod
 11818  05CF  1283               	bcf	3,5	;RP0=0, select bank0
 11819  05D0  1303               	bcf	3,6	;RP1=0, select bank0
 11820  05D1  0826               	movf	?___llmod,w
 11821  05D2  3E30               	addlw	48
 11822  05D3  1683               	bsf	3,5	;RP0=1, select bank1
 11823  05D4  1303               	bcf	3,6	;RP1=0, select bank1
 11824  05D5  00A9               	movwf	(??_sprintf+1)^(0+128)
 11825  05D6  0829               	movf	(??_sprintf+1)^(0+128),w
 11826  05D7  00C7               	movwf	sprintf@c^(0+128)
 11827  05D8                     l3641:	
 11828                           
 11829                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1549:    };
      +                          C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1550:    ((*
      +                          sp++ = (c)));
 11830  05D8  0847               	movf	sprintf@c^(0+128),w
 11831  05D9  00A8               	movwf	??_sprintf^(0+128)
 11832  05DA  0844               	movf	sprintf@sp^(0+128),w
 11833  05DB  0084               	movwf	4
 11834  05DC  0828               	movf	??_sprintf^(0+128),w
 11835  05DD  1383               	bcf	3,7	;select IRP bank0
 11836  05DE  0080               	movwf	0
 11837  05DF  2D7E               	goto	l3637
 11838  05E0                     l3645:	
 11839                           
 11840                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1500:   whi
      +                          le(prec--) {
 11841  05E0  30FF               	movlw	255
 11842  05E1  07C5               	addwf	sprintf@prec^(0+128),f
 11843  05E2  1803               	skipnc
 11844  05E3  0AC6               	incf	(sprintf@prec+1)^(0+128),f
 11845  05E4  30FF               	movlw	255
 11846  05E5  07C6               	addwf	(sprintf@prec+1)^(0+128),f
 11847  05E6  0A45               	incf	sprintf@prec^(0+128),w
 11848  05E7  1D03               	skipz
 11849  05E8  2DED               	goto	u5771
 11850  05E9  0A46               	incf	(sprintf@prec+1)^(0+128),w
 11851  05EA  1D03               	btfss	3,2
 11852  05EB  2DED               	goto	u5771
 11853  05EC  2DEE               	goto	u5770
 11854  05ED                     u5771:	
 11855  05ED  2D83               	goto	l3639
 11856  05EE                     u5770:	
 11857  05EE                     l3647:	
 11858                           
 11859                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
 11860  05EE  3001               	movlw	1
 11861  05EF  1283               	bcf	3,5	;RP0=0, select bank0
 11862  05F0  1303               	bcf	3,6	;RP1=0, select bank0
 11863  05F1  07EA               	addwf	sprintf@f,f
 11864  05F2  30FF               	movlw	-1
 11865  05F3  076A               	addwf	sprintf@f,w
 11866  05F4  0084               	movwf	4
 11867  05F5  160A  158A  200A  120A  118A  	fcall	stringdir
 11868  05FA  1683               	bsf	3,5	;RP0=1, select bank1
 11869  05FB  1303               	bcf	3,6	;RP1=0, select bank1
 11870  05FC  00A8               	movwf	??_sprintf^(0+128)
 11871  05FD  0828               	movf	??_sprintf^(0+128),w
 11872  05FE  00C7               	movwf	sprintf@c^(0+128)
 11873  05FF  0847               	movf	sprintf@c^(0+128),w
 11874  0600  1D03               	btfss	3,2
 11875  0601  2E03               	goto	u5781
 11876  0602  2E06               	goto	u5780
 11877  0603                     u5781:	
 11878  0603  160A  118A  2D1F   	goto	l3367
 11879  0606                     u5780:	
 11880  0606                     l3649:	
 11881                           
 11882                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
 11883  0606  0844               	movf	sprintf@sp^(0+128),w
 11884  0607  0084               	movwf	4
 11885  0608  1383               	bcf	3,7	;select IRP bank0
 11886  0609  0180               	clrf	0
 11887  060A                     l412:	
 11888  060A  0008               	return
 11889  060B                     __end_of_sprintf:	


Data Sizes:
    Strings     24
    Constant    144
    Data        0
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      80
    BANK1            80     44      68
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_3(CODE[3]), STR_2(CODE[6]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> string3(BANK1[3]), string2(BANK1[4]), string1(BANK1[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SEND_STRING@a	PTR unsigned char  size(1) Largest target is 4
		 -> string3(BANK1[3]), string2(BANK1[4]), string1(BANK1[4]), 

    LCD_WRITE_STRING@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_4(CODE[15]), string3(BANK1[3]), string2(BANK1[4]), string1(BANK1[4]), 


Critical Paths under _main in COMMON

    _main->_LCD_WRITE_STRING
    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _SEND_STRING->_SEND_CHAR
    _LCD_WRITE_STRING->_LCD_WRITE_CHAR
    _LCD_SET_CURSOR->_LCD_CMD
    _LCD_INIT->_LCD_CMD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   39746
                                             40 BANK1      4     4      0
                           _ADC_init
                        _EUSART_Init
                           _LCD_INIT
                     _LCD_SET_CURSOR
                   _LCD_WRITE_STRING
                          _Port_init
                        _SEND_STRING
                            ___flmul
                           ___xxtofl
                            _sprintf
                   _start_conversion
 ---------------------------------------------------------------------------------
 (1) _start_conversion                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32954
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              6 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _SEND_STRING                                          4     4      0     211
                                              4 COMMON     4     4      0
                          _SEND_CHAR
 ---------------------------------------------------------------------------------
 (2) _SEND_CHAR                                            1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_WRITE_STRING                                     7     5      2     416
                                              6 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _LCD_WRITE_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_WRITE_CHAR                                       3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_SET_CURSOR                                       4     3      1     460
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             2     2      0      22
                                              6 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          2     1      1     120
                                              3 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _EUSART_Init
   _LCD_INIT
     _LCD_CMD
   _LCD_SET_CURSOR
     _LCD_CMD
   _LCD_WRITE_STRING
     _LCD_WRITE_CHAR
   _Port_init
   _SEND_STRING
     _SEND_CHAR
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _start_conversion

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      44       7       85.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9F      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 23:34:56 2020

          ?_LCD_WRITE_CHAR 0070                          l9 1978                          pc 0002  
              __CFG_CP$OFF 0000                         l21 1C0D                         l30 1B1A  
                       l24 198F                         l18 19EC               ___awdiv@sign 0025  
                       fsr 0004        ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022  
        ?_LCD_WRITE_STRING 0076                        l211 1950                        l124 19A7  
                      l205 19C8                        l150 0889                        l142 0803  
                      l151 088E                        l160 08C7                        l208 194C  
                      l320 0FFF                        l161 08CC                        l153 08A9  
                      l313 128C                        l162 08D1                        l154 0923  
                      l146 087A                        l163 08D6                        l155 08AE  
                      l164 08DB                        l156 08B3                        l148 087F  
                      l412 060A                        l165 08E0                        l157 08B8  
                      l149 0884                        l166 08E5                        l158 08BD  
                      l190 1A55                        l342 15F3                        l167 08EA  
                      l159 08C2                        l192 1A66                        l416 19F9  
                      l169 093B                        l602 1B39                        l610 1DAF  
                      l418 1A11                        l603 1B55                        l611 1DC8  
                      l604 1B6A                        l452 1D24                        l382 02BE  
                      l607 1D43                        l615 080E                        l375 027A  
                      l633 1F41                        l626 106A                        l634 1EB3  
                      l722 07FD                        l619 107F                        l644 1F34  
                      l732 1AD4                        l629 107F                        l637 1F04  
                      l590 1FC2                        l582 1CBC                        l743 12F0  
                      l672 1C63                        l905 1A28                        l569 0877  
                      l586 1FFF                        l747 1397                        l587 1F64  
                      l907 1A3A                        l851 0C90                        l764 1462  
                      l756 1514                        l749 136E                        l597 1FF2  
                      l845 0C08                        l774 14A8                        l839 0C9C  
                      l768 1486                        l785 1508                        l777 14E6  
                      l786 1514                        l890 1E4E                        l891 1E5A  
                      l883 1E32                        l789 1BBA                        l877 1DED  
                      l879 1E84                        l897 1962               __CFG_CPD$OFF 0000  
                      _isr 1A67                        fsr0 0004         ??_LCD_WRITE_STRING 0078  
                      indf 0000               ___awmod@sign 0079               ___flmul@aexp 003A  
             ___flmul@bexp 003B   __end_of_start_conversion 0804               ___flmul@sign 0035  
             ___flmul@temp 0040               ___flmul@prod 003C            __end_of_LCD_CMD 1979  
             ?_EUSART_Init 0073               __CFG_LVP$OFF 0000               ___fltol@exp1 005F  
                     l3001 1EDD                       l3011 1F08                       l3003 1EEB  
                     l3101 1CD2                       l3005 1EF5                       l3111 1D0C  
                     l3103 1CDF                       l3031 1F42                       l3007 1EF6  
                     l3121 1B1B                       l3113 1D0D                       l3105 1CE3  
                     l3201 1C1B                       l3033 1F4F                       l3025 1F29  
                     l3017 1F10                       l3009 1EFE                       l3123 1B31  
                     l3115 1D16                       l3107 1CEC                       l3211 1C55  
                     l3203 1C28                       l3051 1F89                       l3043 1F65  
                     l3027 1F39                       l3019 1F22                       l2411 1A15  
                     l3301 1BFB                       l3125 1B4D                       l3141 1D63  
                     l3133 1D25                       l3109 1CFE                       l3117 1D1C  
                     l3205 1C2C                       l3213 1C5B                       l3061 1FBC  
                     l3053 1F92                       l3045 1F6D                       l3037 1F58  
                     l2421 1A36                       l2413 1A17                       l2501 1CB3  
                     l3303 1C01                       l3311 1AF6                       l3127 1B67  
                     l3143 1D87                       l3135 1D3B                       l3207 1C3E  
                     l3231 1DF5                       l3223 1DCC                       l3063 1FC6  
                     l3071 1FE0                       l3055 1FA4                       l3047 1F7E  
                     l2415 1A1E                       l2511 07C2                       l2431 081B  
                     l2503 1CB8                       l3321 0879                       l3305 1C07  
                     l3313 1AFE                       l3129 1B69                       l3145 1D8B  
                     l3137 1D57                       l3153 0804                       l2601 12FA  
                     l3217 1B6B                       l3161 1004                       l3209 1C4C  
                     l3241 1E17                       l3225 1DD1                       l3057 1FB2  
                     l3049 1F80                       l2417 1A22                       l2521 07E5  
                     l2513 07C5                       l2441 082C                       l2433 081D  
                     l2425 080F                       l3401 15DB                       l3331 0924  
                     l3307 1AD5                       l3315 1990                       l3147 1DC5  
                     l3139 1D5F                       l3155 080C                       l2611 130E  
                     l2603 12FE                       l3219 1B6F                       l3171 1030  
                     l3163 1011                       l3091 1A07                       l3083 19ED  
                     l3251 1E48                       l3243 1E1B                       l3235 1DFE  
                     l3227 1DD5                       l3059 1FB3                       l2419 1A31  
                     l2523 07EB                       l2515 07CC                       l2507 07B8  
                     l2451 0844                       l2443 0832                       l2435 0821  
                     l2427 0812                       l3411 1619                       l3403 15ED  
                     l3341 0938                       l3333 0929                       l3325 0893  
                     l3309 1ADA                       l3317 1994                       l3149 1DC7  
                     l3157 080E                       l2701 148A                       l2621 1322  
                     l2613 1312                       l2605 1302                       l3173 1038  
                     l3093 1A0D                       l3085 19EF                       l3261 1E7B  
                     l3253 1E52                       l3245 1E29                       l3237 1E03  
                     l3229 1DE5                       l3077 1FE7                       l3069 1FCE  
                     l2525 07EC                       l2517 07D0                       l2509 07BC  
                     l2541 1AAF                       l2533 1A9B                       l2453 0855  
                     l2445 0835                       l2461 0869                       l2437 0826  
                     l2429 0816                       l3501 01A6                       l3421 1641  
                     l3413 1627                       l3405 15F1                       l3335 092F  
                     l3351 1A3C                       l3271 19D4                       l3319 1997  
                     l2703 148D                       l2711 149A                       l2631 1336  
                     l2623 1326                       l2615 1316                       l2607 1306  
                     l3191 105F                       l3183 1046                       l3175 103A  
                     l3167 101A                       l3087 19F3                       l3263 1E7C  
                     l3255 1E5C                       l3247 1E39                       l3239 1E10  
                     l3079 1FF7                       l2527 07F3                       l2519 07D4  
                     l2543 1AB3                       l2535 1AA1                       l2551 1AD0  
                     l2463 086E                       l2455 085B                       l2447 083C  
                     l2439 082A                       l2471 1C65                       l3503 01AC  
                     l3431 1694                       l3423 165A                       l3415 162B  
                     l3337 0936                       l3329 08EF                       l3361 1A60  
                     l3353 1A46                       l3281 1BBE                       l3273 19DB  
                     l2721 14AD                       l2713 149B                       l2705 148F  
                     l2641 137B                       l2625 132A                       l2617 131A  
                     l2609 130A                       l2633 133A                       l2561 129E  
                     l3193 106F                       l3177 103E                       l3185 1058  
                     l3169 102F                       l3097 1CBD                       l3089 1A00  
                     l3257 1E72                       l3249 1E44                       l2801 09FF  
                     l2529 07F9                       l2545 1ABD                       l2537 1AA4  
                     l2465 0873                       l2457 085C                       l2449 0840  
                     l2481 1C79                       l2473 1C69                       l3601 04E2  
                     l3521 01F4                       l3505 01B8                       l3513 01CD  
                     l3441 16DF                       l3433 169F                       l3425 1673  
                     l3417 162F                       l3409 15F5                       l3339 0937  
                     l3355 1A4A                       l3291 1BDF                       l3283 1BC7  
                     l3275 19E1                       l3267 19CA                       l2731 14EB  
                     l2723 14B2                       l2715 149F                       l2707 1494  
                     l2643 137D                       l2651 138F                       l2635 133B  
                     l2627 132E                       l2619 131E                       l2571 12B2  
                     l2563 129F                       l2555 128D                       l3195 1074  
                     l3099 1CCF                       l3259 1E77                       l2811 0A7C  
                     l2803 0A2B                       l2547 1AC3                       l2539 1AAB  
                     l2459 0863                       l2491 1C91                       l2483 1C7F  
                     l2475 1C6E                       l3611 0514                       l3603 04F1  
                     l3531 028F                       l3523 022F                       l3515 01DA  
                     l3507 01BF                       l3451 1771                       l3443 16E5  
                     l3435 16A5                       l3427 1677                       l3419 163D  
                     l3371 152C                       l3363 0800                       l3357 1A4F  
                     l3293 1BE5                       l3285 1BCD                       l3277 19E6  
                     l3269 19CF                       l2901 197D                       l2741 1502  
                     l2733 14F0                       l2725 14C0                       l2717 14A5  
                     l2709 1496                       l2661 13C0                       l2653 139B  
                     l2645 1381                       l2637 1352                       l2629 1332  
                     l2581 12C8                       l2565 12A4                       l2573 12B4  
                     l2557 1294                       l3197 1C0E                       l2821 0AFC  
                     l2813 0A99                       l2805 0A47                       l2549 1ACA  
                     l2493 1C9B                       l2485 1C82                       l2477 1C70  
                     l2469 1C64                       l3621 053E                       l3613 0518  
                     l3605 04FA                       l3541 02C7                       l3533 0295  
                     l3525 026E                       l3517 01E8                       l3509 01C8  
                     l3461 001F                       l3453 178C                       l3445 1704  
                     l3437 16B8                       l3429 167B                       l3381 1560  
                     l3373 1531                       l3365 1518                       l3701 0633  
                     l3359 1A5B                       l3295 1BE9                       l3287 1BD5  
                     l3279 1BBB                       l2903 197F                       l2743 1504  
                     l2735 14F8                       l2727 14C4                       l2671 13D7  
                     l2663 13C4                       l2655 13A0                       l2647 1382  
                     l2639 1372                       l2591 12DD                       l2583 12CE  
                     l2575 12BC                       l2567 12A9                       l2559 129A  
                     l3199 1C18                       l2831 0BB4                       l2823 0B29  
                     l2815 0AA9                       l2807 0A63                       l2751 0943  
                     l2911 1089                       l2495 1CA1                       l2487 1C89  
                     l2479 1C74                       l3631 055F                       l3623 054A  
                     l3615 0526                       l3607 0502                       l3551 0350  
                     l3543 02CC                       l3535 02A2                       l3527 0282  
                     l3519 01EF                       l3471 0094                       l3463 003A  
                     l3447 174F                       l3439 16DB                       l3455 1794  
                     l3391 159E                       l3383 1577                       l3375 1535  
                     l3367 151F                       l3711 0650                       l3703 0636  
                     l3297 1BEF                       l3289 1BDB                       l2905 1984  
                     l2745 150F                       l2737 14FD                       l2729 14E2  
                     l2681 143A                       l2673 13D8                       l2665 13C8  
                     l2649 138B                       l2593 12E5                       l2585 12D2  
                     l2577 12C1                       l2569 12B1                       l2841 0BD9  
                     l2833 0BBD                       l2825 0B39                       l2817 0AC6  
                     l2809 0A6C                       l2761 0958                       l2753 0949  
                     l2497 1CA8                       l2489 1C8D                       l3641 05D8  
                     l3633 056B                       l3625 054E                       l3617 052F  
                     l3609 050E                       l3561 0439                       l3553 038B  
                     l3545 02D3                       l3537 02B1                       l3529 028B  
                     l3473 009C                       l3465 0061                       l3481 00E2  
                     l3457 17A3                       l3449 1768                       l3393 15A4  
                     l3385 157D                       l3377 1547                       l3369 1525  
                     l3721 06EE                       l3705 063E                       l3299 1BF5  
                     l2907 1948                       l2747 1513                       l2739 14FE  
                     l2691 146F                       l2683 1440                       l2675 13E1  
                     l2667 13D1                       l2659 13A9                       l2595 12E6  
                     l2587 12D3                       l2579 12C7                       l2851 0BF1  
                     l2843 0BE2                       l2835 0BCB                       l2827 0B66  
                     l2819 0ADF                       l2771 0975                       l2763 0960  
                     l2755 094D                       l2923 1249                       l2499 1CAE  
                     l2931 0CA6                       l3635 0577                       l3627 0554  
                     l3619 0533                       l3571 0462                       l3563 0440  
                     l3555 03CA                       l3547 02D7                       l3539 02B8  
                     l3483 0117                       l3475 00BA                       l3467 0070  
                     l3459 17EA                       l3395 15A9                       l3379 154B  
                     l3387 158D                       l3731 0763                       l3723 0712  
                     l3715 0659                       l3707 0646                       l3661 19AC  
                     l2685 1445                       l2669 13D3                       l2677 13E6  
                     l2589 12D8                       l2597 12E8                       l2861 0C20  
                     l2853 0C05                       l2837 0BD4                       l2845 0BE8  
                     l2829 0B8C                       l2781 098C                       l2773 0979  
                     l2765 0962                       l2757 094E                       l2749 093C  
                     l2917 1198                       l2909 1083                       l2941 0D9E  
                     l2933 0CAD                       l3637 057E                       l3645 05E0  
                     l3629 055B                       l3581 047F                       l3573 0466  
                     l3565 0444                       l3557 03D6                       l3549 02F5  
                     l3493 014A                       l3485 0146                       l3469 008B  
                     l3821 160B                       l3397 15BE                       l3389 159B  
                     l3741 0795                       l3733 076B                       l3725 0738  
                     l3717 0662                       l3709 064A                       l3823 089B  
                     l3663 19B7                       l2695 1478                       l2679 13FC  
                     l2687 1454                       l2599 12F6                       l2871 0C5B  
                     l2863 0C24                       l2847 0BEC                       l2839 0BD8  
                     l2783 098E                       l2775 097A                       l2767 096A  
                     l2759 0953                       l2919 119E                       l2951 0E5A  
                     l2927 0CA0                       l3639 0583                       l3591 048F  
                     l3583 0487                       l3575 046A                       l3567 044A  
                     l3559 0431                       l3487 0148                       l3479 00D9  
                     l3399 15D5                       l3647 05EE                       l3743 079E  
                     l3735 0774                       l3727 0752                       l3719 06A8  
                     l3825 08F7                       l3665 19BD                       l2697 1481  
                     l2689 146A                       l2881 0C88                       l2873 0C6A  
                     l2865 0C3D                       l2857 0C0D                       l2849 0BED  
                     l2793 09A9                       l2785 0996                       l2777 097F  
                     l2769 096F                       l2945 0E26                       l2929 0CA4  
                     l3585 048D                       l3577 046E                       l3497 0181  
                     l3569 0451                       l3649 0606                       l3745 07A2  
                     l3737 0780                       l3729 075A                       l2891 1967  
                     l3659 19A9                       l2699 1485                       l2883 0C89  
                     l2875 0C74                       l2859 0C12                       l2867 0C43  
                     l2795 09B9                       l2787 099B                       l2779 0984  
                     l2971 1959                       l2963 0FD3                       l2939 0D97  
                     l3595 04C6                       l3579 0479                       l3499 018B  
                     l3747 07A8                       l3739 0789                       l3691 060B  
                     l2893 1969                       l2981 1E98                       l2885 0C94  
                     l2877 0C76                       l2869 0C50                       l2797 09C6  
                     l2789 09A0                       l2973 195F                       l2957 0F44  
                     l2949 0E53                       l3597 04D0                       l3749 07AE  
                     l3693 0615                       l2895 196A                       l2991 1EB4  
                     l2879 0C84                       l2799 09E3                       l2975 1961  
                     l2967 1952                       l2959 0F4B                       l3599 04DB  
                     l3695 0620                       l2897 196D                       l2889 1964  
                     l2993 1EBA                       l2985 1EA1                       l2969 1953  
                     l3697 0627                       l2899 197A                       l2995 1EC9  
                     l2979 1E85                       l3699 062E                       l2997 1ECB  
                     l2999 1ED4                       ?_isr 0070                       STR_1 18AF  
                     STR_2 18AF                       STR_3 18B5                       STR_4 18A0  
                     u3010 0844                       u3011 0843                       u3005 0836  
                     u3030 0855                       u3110 1C91                       u3031 0854  
                     u3111 1C90                       u4000 0BD8                       u3200 07E5  
                     u3120 1C9B                       u4001 0BD7                       u3201 07E4  
                     u3025 0845                       u3121 1C9A                       u3105 1C83  
                     u3050 0869                       u3051 0868                       u3035 0851  
                     u3300 12A4                       u4100 0C6A                       u4020 0BEC  
                     u3220 07F9                       u3060 086E                       u3140 1CAE  
                     u3301 12A3                       u4101 0C69                       u4021 0BEB  
                     u3221 07F8                       u3205 07E1                       u3061 086D  
                     u3045 085D                       u3141 1CAD                       u3125 1C97  
                     u3310 12A9                       u4110 0C88                       u4030 0BF1  
                     u3230 1AA1                       u3150 1CB3                       u3070 1C69  
                     u3311 12A8                       u4111 0C87                       u4031 0BF0  
                     u4015 0BDB                       u3215 07ED                       u3231 1AA0  
                     u3151 1CB2                       u3135 1CA2                       u3071 1C68  
                     u4120 1950                       u3400 135E                       u3320 12C7  
                     u5000 1C2C                       u4040 0C05                       u3160 07C2  
                     u3080 1C74                       u4121 194F                       u3321 12C6  
                     u5001 1C2B                       u4105 0C66                       u4041 0C04  
                     u3161 07C1                       u3081 1C73                       u3410 1372  
                     u3330 12D2                       u5010 1C3E                       u4050 0C0C  
                     u3250 1AB3                       u4130 1089                       u3090 1C7F  
                     u4210 0CA4                       u3411 1371                       u3331 12D1  
                     u5011 1C3D                       u4051 0C0B                       u3251 1AB2  
                     u4131 1088                       u3091 1C7E                       u4211 0CA3  
                     u3500 13D7                       u3420 1381                       u3340 12D8  
                     u5100 1E38                       u4060 0C12                       u3180 07D4  
                     u3260 1ABD                       u4300 0E5A                       u4220 0CAD  
                     u3501 13D6                       u3421 1380                       u3341 12D7  
                     u5101 1E37                       u4061 0C11                       u3181 07D3  
                     u3261 1ABC                       u3245 1AA5                       u4205 1254  
                     u4301 0E59                       u4221 0CAC                       u3350 12DD  
                     u5030 1C5B                       u4070 0C24                       u3351 12DC  
                     u5031 1C5A                       u5015 1C3A                       u4071 0C23  
                     u3175 07C6                       u5200 1AE4                       u3600 148A  
                     u3520 13FC                       u3440 1397                       u3360 12F6  
                     u5120 1E48                       u5040 1DD1                       u4400 1E98  
                     u4080 0C33                       u3280 1AD0                       u3601 1489  
                     u3521 13FB                       u3441 1396                       u3361 12F5  
                     u5025 1C4D                       u5121 1E47                       u5041 1DD0  
                     u4401 1E97                       u3281 1ACF                       u3265 1AB9  
                     u4145 10A6                       u5210 1B08                       u3610 1494  
                     u3450 139B                       u3370 12FA                       u3290 129E  
                     u5130 1E4E                       u5050 1DD5                       u4410 1EB2  
                     u4090 0C50                       u4170 119E                       u3611 1493  
                     u3531 1413                       u3523 13F8                       u3515 13DA  
                     u3451 139A                       u3435 1384                       u3371 12F9  
                     u3291 129D                       u5131 1E4D                       u5115 1E3D  
                     u5051 1DD4                       u4411 1EB1                       u4091 0C4F  
                     u3195 07D5                       u3275 1AC4                       u4171 119D  
                     u4155 1102                       u4315 0E7C                       u4235 0CCF  
                     u5220 1B1A                       u3700 14EB                       u3620 149A  
                     u3540 1427                       u3532 1414                       u3460 13A0  
                     u3380 1352                       u5140 1E52                       u5060 1DF5  
                     u4500 1F28                       u4340 0F4B                       u4260 0D9E  
                     u5300 15EC                       u5221 1B19                       u3701 14EA  
                     u3621 1499                       u3541 1428                       u3533 1419  
                     u3461 139F                       u3381 1351                       u5141 1E51  
                     u5061 1DF4                       u4501 1F27                       u4085 0C2E  
                     u4165 1157                       u4341 0F4A                       u4325 0EB8  
                     u4261 0D9D                       u4245 0D0B                       u5301 15EB  
                     u5230 0929                       u3710 14F0                       u3630 149F  
                     u3550 1445                       u3542 142D                       u3534 141A  
                     u3390 135D                       u5150 1E67                       u4430 1EEB  
                     u5310 1627                       u5231 0928                       u3711 14EF  
                     u3631 149E                       u3551 1444                       u3543 142E  
                     u3535 141F                       u3471 13B2                       u3391 135B  
                     u4431 1EEA                       u4095 0C4C                       u4335 0F03  
                     u4255 0D56                       u5311 1624                       u5240 1A4F  
                     u3720 14FD                       u3640 14A5                       u3560 146A  
                     u3536 1420                       u3480 13C4                       u3472 13B9  
                     u5160 1E77                       u5080 1E16                       u4600 1FCD  
                     u4520 1F39                       u3800 0984                       u5400 003A  
                     u5320 162B                       u5241 1A4E                       u3721 14FC  
                     u3641 14A4                       u3561 1469                       u3481 13C3  
                     u3473 13C0                       u3385 134E                       u5161 1E76  
                     u5081 1E15                       u4601 1FCC                       u4521 1F38  
                     u4425 1ED6                       u3801 0983                       u4185 11BB  
                     u5401 0039                       u5321 162A                       u5250 1A60  
                     u3730 1502                       u3650 14AC                       u3570 146F  
                     u3490 13C8                       u5170 1E7B                       u4530 1F4F  
                     u4450 1F04                       u3810 099B                       u5410 0061  
                     u5330 165A                       u5251 1A5F                       u3731 1501  
                     u3651 14AB                       u3571 146E                       u3491 13C7  
                     u5171 1E7A                       u5155 1E62                       u5075 1E08  
                     u4531 1F4E                       u4515 1F2B                       u4451 1F03  
                     u4435 1EE7                       u3811 099A                       u4195 1208  
                     u4355 0F5E                       u4275 0DB1                       u5411 0060  
                     u5331 1659                       u5180 19CF                       u3740 1513  
                     u3660 14B2                       u4700 1CCF                       u4620 1FDF  
                     u4540 1F63                       u4460 1F08                       u2940 1A22  
                     u3820 09A0                       u4380 1959                       u5500 01E8  
                     u5420 0070                       u5340 1694                       u5260 1525  
                     u5181 19CE                       u3741 1512                       u3661 14B1  
                     u4701 1CCE                       u4621 1FDE                       u4541 1F62  
                     u4461 1F07                       u4445 1EF7                       u2941 1A21  
                     u3821 099F                       u4381 1958                       u4365 0F9A  
                     u4285 0DED                       u5501 01E7                       u5421 006F  
                     u5341 1693                       u5261 1524                       u5190 19E1  
                     u3670 14C4                       u3590 1485                       u4630 1FE6  
                     u4470 1F0F                       u3750 094D                       u4390 195F  
                     u5430 008B                       u5350 16DF                       u5270 1547  
                     u5191 19E0                       u3671 14C3                       u3591 1484  
                     u5095 1E2A                       u4631 1FE5                       u4615 1FCF  
                     u4471 1F0E                       u3911 0AEE                       u3831 09F1  
                     u3751 094C                       u4391 195E                       u4375 0FD6  
                     u4295 0E29                       u5431 008A                       u5351 16DE  
                     u5271 1546                       u4800 1D3B                       u3680 14D3  
                     u4720 1CE3                       u4560 1FA4                       u2960 1A36  
                     u3912 0AF5                       u3832 09F8                       u3760 0953  
                     u5600 046A                       u5520 0281                       u5360 1768  
                     u5280 158D                       u4801 1D3A                       u3585 147A  
                     u4721 1CE2                       u4561 1FA3                       u2961 1A35  
                     u3921 0B1B                       u3913 0AFC                       u3905 0AC8  
                     u3841 0A0D                       u3833 09FF                       u3761 0952  
                     u5601 0469                       u5521 0280                       u5425 006C  
                     u5361 1767                       u5281 158C                       u4810 1D57  
                     u3690 14E2                       u4650 1FF7                       u4490 1F21  
                     u3922 0B22                       u3842 0A14                       u3770 0958  
                     u2970 0816                       u5610 047F                       u5530 02A2  
                     u5450 0180                       u5370 178C                       u5290 159B  
                     u4811 1D56                       u3691 14E1                       u4715 1CD4  
                     u4651 1FF6                       u4555 1F8B                       u4491 1F20  
                     u2955 1A29                       u3931 0B48                       u3923 0B29  
                     u3851 0A39                       u3843 0A1B                       u3771 0957  
                     u2971 0815                       u5611 047E                       u5531 02A1  
                     u5515 01F7                       u5451 017F                       u5371 178B  
                     u5291 159A                       u4820 1D63                       u4900 103E  
                     u4740 1CFE                       u4660 19F3                       u4580 1FC2  
                     u3940 0B72                       u3932 0B4F                       u3852 0A40  
                     u3780 0979                       u2980 0821                       u5700 0518  
                     u5620 0487                       u5540 02B1                       u5460 018B  
                     u5380 17A3                       u4821 1D62                       u3685 14CE  
                     u4901 103D                       u4741 1CFD                       u4661 19F2  
                     u4645 1FE9                       u4581 1FC1                       u4565 1FA0  
                     u4485 1F11                       u3933 0B56                       u3861 0A55  
                     u3853 0A47                       u3781 0978                       u2981 0820  
                     u5701 0517                       u5621 0486                       u5541 02B0  
                     u5461 018A                       u5445 014D                       u5381 17A2  
                     u4910 1045                       u4590 1FC6                       u3862 0A5C  
                     u3790 097F                       u2990 0832                       u5710 0526  
                     u5550 02CC                       u5470 01A6                       u5390 001F  
                     u4831 1D72                       u4911 1044                       u4735 1CE5  
                     u4591 1FC5                       u4575 1FB5                       u3951 0B7E  
                     u3863 0A63                       u3791 097E                       u2991 0831  
                     u5711 0525                       u5551 02CB                       u5535 029E  
                     u5471 01A5                       u5455 017C                       u5391 17FA  
                     u4840 1D8B                       u4832 1D73                       u4760 1D1C  
                     u3960 0B9A                       u3952 0B85                       u5720 053E  
                     u5640 04C5                       u5480 01B8                       u4841 1D8A  
                     u4833 1D78                       u4761 1D1B                       u4745 1CFA  
                     u3953 0B8C                       u3945 0B6D                       u3881 0A8B  
                     u5721 053D                       u5641 04C4                       u5545 02AD  
                     u5481 01B7                       u5385 179F                       u4770 1B31  
                     u4834 1D79                       u4930 1057                       u4690 1A0D  
                     u3882 0A92                       u5730 0554                       u5650 04D0  
                     u5490 01DA                       u4771 1B30                       u4851 1D9A  
                     u4835 1D7E                       u4931 1056                       u4755 1D0E  
                     u4691 1A0C                       u4675 19FA                       u3971 0BA6  
                     u3891 0AB8                       u3883 0A99                       u3875 0A65  
                     u5731 0553                       u5715 0522                       u5651 04CF  
                     u5635 0492                       u5491 01D9                       u5395 17F5  
                     u4780 1B4D                       u4860 1DC5                       u4852 1D9B  
                     u4836 1D7F                       u4940 105E                       u3972 0BAD  
                     u3892 0ABF                       u5740 056B                       u5660 04DB  
                     u5580 0438                       u4781 1B4C                       u4861 1DC4  
                     u4853 1DA0                       u4941 105D                       u4925 1047  
                     u4685 1A01                       u3973 0BB4                       u3965 0B95  
                     u3893 0AC6                       u5741 056A                       u5725 053A  
                     u5661 04DA                       u5645 04C1                       u5581 0437  
                     u5565 0353                       u4790 1B67                       u4854 1DA1  
                     u4870 080C                       u5750 0577                       u5670 04F1  
                     u5590 0450                       u5830 062E                       u4791 1B66  
                     u4855 1DA6                       u4871 080B                       u5751 0576  
                     u5671 04F0                       u5591 044F                       u5575 03D9  
                     u5495 01D6                       u5831 062D                       u4856 1DA7  
                     u4960 106F                       u4880 1011                       u5680 0502  
                     u5840 063E                       u4865 1DC1                       u4961 106E  
                     u4881 1010                       u3985 0BB6                       u5681 0501  
                     u5665 04D7                       u5841 063D                       u4970 1074  
                     u4890 1028                       u5770 05EE                       u5690 050E  
                     u5850 0650                       u5907 1BDD                       u4795 1B63  
                     u4971 1073                       u4955 1061                       u3995 0BCD  
                     u5771 05ED                       u5691 050D                       u5675 04ED  
                     u5851 064F                       u4980 1C18                       u5780 0606  
                     u5917 1BE7                       u4981 1C17                       u5781 0603  
                     u5765 0592                       u5790 19C8                       u5927 1974  
                     u5791 19C7                       u4895 1023                       u5867 1982  
                     u4995 1C1D                       u5877 198B                       u5887 1BC2  
                     u5897 1BD1               __CFG_WRT$OFF 0000                       _main 060B  
                     _pot1 00D8                       _pot2 00D7                       btemp 007E  
                     start 000C           __end_of_ADC_init 093C              __CFG_IESO$OFF 0000  
             _sprintf$1234 00AD           __end_of_LCD_INIT 1C0E                      ??_isr 0070  
       __size_of_SEND_CHAR 000A              ___fltol@sign1 005E            __end_of___fladd 1515  
                    ?_main 0070            __end_of___awdiv 0878            __end_of___flneg 080F  
            __CFG_WDTE$OFF 0000            __end_of___awmod 1CBD            __end_of___flmul 0C9D  
          __end_of___flsub 1BBB            __end_of___fltol 1080                      _ANSEL 0188  
          __end_of___lldiv 1D25            ___awdiv@divisor 0020            __end_of___llmod 1C64  
          __end_of___lwdiv 07FE                      i1l109 1A94            __end_of___lwmod 1AD5  
          ___awdiv@counter 0024                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TXREG 0019              _start_another 00D6             __CFG_FCMEN$OFF 0000  
          __end_of_dpowers 18A0                      _scale 0C9D            __end_of_isdigit 1963  
                    _valor 00D4                      _volt1 00D0                      _volt2 00CC  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 060B             __CFG_MCLRE$OFF 0000  
             ?_SEND_STRING 0070            __initialization 000F               __end_of_main 07B8  
           ADC_init@int_on 0074                     ??_main 00C8                  ??_LCD_CMD 0073  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 002A                     ?_scale 0042  
                   _ADRESH 001E           ___awdiv@dividend 0022                     _ANSELH 0189  
                   i1l3681 1A82                     i1l3673 1A67                     i1l3683 1A88  
                   i1l3675 1A6D                     i1l3677 1A78                     i1l3685 1A8B  
                   i1l3687 1A8F                     i1l3679 1A7E                     i1l3689 1A93  
                   u580_20 1A6D                     u580_21 1A6C                     u581_20 1A78  
                   u581_21 1A77                     u582_20 1A8F                     u582_21 1A8E  
        __end_of_SEND_CHAR 1951           __end_of___xxtofl 1E85             __CFG_PWRTE$OFF 0000  
         ??_LCD_SET_CURSOR 0077           __end_of__powers_ 1844                     ___flge 1D25  
                   ___fleq 1B1B                  ??___fladd 005E                     ___wmul 19ED  
                ??___awdiv 007A                  ??___flneg 0077                  ??___awmod 0077  
                ??___flmul 0030                  ??___flsub 007B                  ??___fltol 0059  
                ??___lldiv 0020                  ??___llmod 002E                  ??___lwdiv 0079  
                ??___lwmod 0077                     _fround 1080           ___awdiv@quotient 0026  
          ___awmod@divisor 0073            ___awmod@counter 0078               EUSART_Init@a 0074  
             EUSART_Init@b 0073                  ??_isdigit 0073         __size_of__Umul8_16 0029  
                   saved_w 007E         __size_of_Port_init 0018                  ?_ADC_init 0073  
                ??_sprintf 00A8                 ___flge@ff1 0073                 ___flge@ff2 0077  
             ___xxtofl@arg 0022       __size_of_EUSART_Init 002C                  ?_LCD_INIT 0070  
             ___xxtofl@exp 0021               ___xxtofl@val 0073                 ___fleq@ff1 0073  
               ___fleq@ff2 0077    __end_of__initialization 001B                 ___flneg@f1 0073  
         ??_LCD_WRITE_CHAR 0073                 ___fltol@f1 0055             __pcstackCOMMON 0070  
            __end_of_scale 1000            ADC_init@channel 0073                 __div_to_l_ 1F42  
               ??_ADC_init 0076          ?_start_conversion 0070            __div_to_l_@exp1 0026  
          __div_to_l_@cntr 0025                    ??_scale 0046            __div_to_l_@quot 0021  
             sprintf@width 00B4         ??_start_conversion 0073                 __pbssBANK0 006F  
               __pbssBANK1 00CC                 ??_LCD_INIT 0076  __size_of_LCD_WRITE_STRING 0046  
            __div_to_l_@f1 0073              __div_to_l_@f2 0077          __end_of__Umul8_16 1A3B  
        __end_of_Port_init 19A8                 __pmaintext 060B                    ?___flge 0073  
                  ?___fleq 0073                    ?___wmul 0073       __size_of_SEND_STRING 0021  
               __pintentry 0004                    ?_fround 0042                    _LCD_CMD 1963  
                ?___xxtofl 0073            LCD_SET_CURSOR@a 0078            LCD_SET_CURSOR@b 0076  
               __stringtab 1800          LCD_WRITE_STRING@a 0076          LCD_WRITE_STRING@i 0020  
        __end_of__npowers_ 1878                 _scale$1233 0050            __size_of___flge 00A4  
          __size_of___fleq 0050                    ___fladd 128D      ADC_init@left_or_right 0075  
                  ___awdiv 080F                    ___flneg 0804                    ___awmod 1C64  
                  ___flmul 093C                    ___flsub 1B6B                    ___fltol 1004  
                  ___lldiv 1CBD            __size_of___wmul 0025                    ___llmod 1C0E  
                  ___lwdiv 07B8                    ___lwmod 1A9B            __size_of_fround 020D  
                  __ptext1 0800                    __ptext2 1515                    __ptext3 0C9D  
                  __ptext4 1C64                    __ptext5 080F                    __ptext6 1951  
                  __ptext7 1080                    __ptext8 1A9B                    __ptext9 07B8  
              ?__div_to_l_ 0073                    _dpowers 1878                    _isdigit 1951  
             __size_of_isr 0034                 ??___xxtofl 0077           ___awmod@dividend 0075  
                  _sprintf 1515                    clrloop0 1940                    _string1 00DD  
                  _string2 00D9                    _string3 00E1       end_of_initialization 001B  
          ___lldiv@divisor 0073            ___lldiv@counter 0025                  _SEND_CHAR 1947  
                _RCSTAbits 0018                    psplit$0 C002E             __tdiv_to_l_@f1 0073  
           __tdiv_to_l_@f2 0077              ??__tdiv_to_l_ 0020                  _PORTDbits 0008  
              ___fladd@grs 0069              ___xxtofl@sign 0020          __size_of_ADC_init 00C4  
         _LCD_WRITE_STRING 1AD5                ___flmul@grs 0036                  _TXSTAbits 0098  
        __size_of_LCD_INIT 0053        __size_of__div_to_l_ 00BE                 ?_SEND_CHAR 0070  
             ADC_init@Fosc 0078             __end_of___flge 1DC9             __end_of___fleq 1B6B  
           __end_of___wmul 1A12                _BAUDCTLbits 0187          pnum$text2_split_1 002E  
           __end_of_fround 128D        start_initialization 000F        __end_of__tdiv_to_l_ 1F42  
              __end_of_isr 1A9B              ??_EUSART_Init 0074            LCD_WRITE_CHAR@a 0075  
          ___llmod@divisor 0026            ___llmod@counter 002F   __CFG_FOSC$INTRC_NOCLKOUT 0000  
__size_of_start_conversion 0004               SEND_STRING@a 0077               SEND_STRING@i 0075  
                 ??___flge 0020                   ??___fleq 0020                   ??___wmul 0077  
                __Umul8_16 1A12                  _Port_init 1990                   ??_fround 0046  
            sprintf@tmpval 00B6                  ___fladd@a 005A                  ___fladd@b 0056  
                 LCD_CMD@a 0075                   ?_LCD_CMD 0070                 fround@prec 0055  
  __size_of_LCD_SET_CURSOR 0024                  ___flmul@a 002C                  ___flmul@b 0028  
                ___flsub@a 00A0                  ___flsub@b 00A4                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0                 SEND_CHAR@a 0073  
        __size_of___xxtofl 00BC               _isdigit$1032 0073                sprintf@flag 00B2  
              sprintf@eexp 00BE                sprintf@fval 00C0                sprintf@prec 00C5  
      __end_of_EUSART_Init 1A67                ??_SEND_CHAR 0073              ??_SEND_STRING 0074  
         ___lwdiv@dividend 0022                   ?___fladd 0056                   ?___awdiv 0020  
                 ?___flneg 0073                   ?___awmod 0073                   ?___flmul 0028  
                 ?___flsub 00A0                   ?___fltol 0055                   ?___lldiv 0073  
                 ?___llmod 0026                  __npowers_ 1844                 ?__Umul8_16 0073  
                 ?___lwdiv 0020                   ?___lwmod 0073    __size_of_LCD_WRITE_CHAR 0017  
               ?_Port_init 0070                  __pstrings 1800                __tdiv_to_l_ 1E85  
             ??__div_to_l_ 0020                   ?_isdigit 0070                   _ADC_init 0878  
         ___lwdiv@quotient 0024                   ?_sprintf 006A             __size_of_scale 0363  
   LCD_SET_CURSOR@temporal 0079                   _LCD_INIT 1BBB          interrupt_function 0004  
           ___wmul@product 0077                  clear_ram0 193F                   _PIE1bits 008C  
                 _PIR1bits 000C         __end_of__div_to_l_ 2000        __end_of_SEND_STRING 19C9  
 __end_of_LCD_WRITE_STRING 1B1B                 _ADCON0bits 001F                __stringbase 180F  
               _ADCON1bits 009F          ___wmul@multiplier 0073           __size_of_LCD_CMD 0016  
              _EUSART_Init 1A3B                   _Contador 006F           _start_conversion 0800  
              ??__Umul8_16 0075           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059                ??_Port_init 0073  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003A                _fround$1231 0051                _fround$1232 004D  
       __end_of__stringtab 1810             _LCD_SET_CURSOR 19C9                 sprintf@val 00BA  
                 ___xxtofl 1DC9           __size_of_isdigit 0012            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0026                   __ptext10 093C                   __ptext11 1A12  
                 __ptext20 128D                   __ptext12 1E85                   __ptext21 0804  
                 __ptext13 1F42                   __ptext30 1BBB                   __ptext22 1D25  
                 __ptext14 1DC9                   __ptext31 1963                   __ptext23 1B1B  
                 __ptext15 19ED                   __ptext32 1A3B                   __ptext24 19A8  
                 __ptext16 1C0E                   __ptext33 0878                   __ptext25 1947  
                 __ptext17 1CBD                   __ptext34 1A67                   __ptext26 1990  
                 __ptext18 1004                   __ptext27 1AD5                   __ptext19 1B6B  
                 __ptext28 1979                   __ptext29 19C9          __CFG_BOR4V$BOR40V 0000  
                 __powers_ 1810           __size_of_sprintf F0F6              __size_of_main 01AD  
                pnum$text2 000C                _SEND_STRING 19A8             _LCD_WRITE_CHAR 1979  
   __end_of_LCD_SET_CURSOR 19ED                 _INTCONbits 000B                   isdigit@c 0074  
                 scale@scl 0054                   intlevel1 0000                  sprintf@ap 00B1  
         __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028                  sprintf@sp 00C4  
         __tdiv_to_l_@quot 0024           ___lwmod@dividend 0075           ___lldiv@dividend 0077  
                stringcode 180A     __end_of_LCD_WRITE_CHAR 1990            ?_LCD_SET_CURSOR 0076  
             ?__tdiv_to_l_ 0073     __Umul8_16@multiplicand 0073                   sprintf@c 00C7  
                 sprintf@f 006A           ___lldiv@quotient 0021            ___lwmod@divisor 0073  
          ___lwmod@counter 0078                   stringdir 180A                   stringtab 1800  
            ___fladd@signs 0066               ___fladd@aexp 0067               ___fladd@bexp 0068  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  

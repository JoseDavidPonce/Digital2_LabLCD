

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 11 08:14:26 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	dabs	1,0x7E,2
    46  0000                     
    47                           ; Version 2.10
    48                           ; Generated 31/07/2019 GMT
    49                           ; 
    50                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81  0000                     	;# 
    82  0001                     	;# 
    83  0002                     	;# 
    84  0003                     	;# 
    85  0004                     	;# 
    86  0005                     	;# 
    87  0006                     	;# 
    88  0007                     	;# 
    89  0008                     	;# 
    90  0009                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000D                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0015                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001B                     	;# 
   112  001C                     	;# 
   113  001D                     	;# 
   114  001E                     	;# 
   115  001F                     	;# 
   116  0081                     	;# 
   117  0085                     	;# 
   118  0086                     	;# 
   119  0087                     	;# 
   120  0088                     	;# 
   121  0089                     	;# 
   122  008C                     	;# 
   123  008D                     	;# 
   124  008E                     	;# 
   125  008F                     	;# 
   126  0090                     	;# 
   127  0091                     	;# 
   128  0092                     	;# 
   129  0093                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0094                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009C                     	;# 
   141  009D                     	;# 
   142  009E                     	;# 
   143  009F                     	;# 
   144  0105                     	;# 
   145  0107                     	;# 
   146  0108                     	;# 
   147  0109                     	;# 
   148  010C                     	;# 
   149  010C                     	;# 
   150  010D                     	;# 
   151  010E                     	;# 
   152  010F                     	;# 
   153  0185                     	;# 
   154  0187                     	;# 
   155  0188                     	;# 
   156  0189                     	;# 
   157  018C                     	;# 
   158  018D                     	;# 
   159  0000                     	;# 
   160  0001                     	;# 
   161  0002                     	;# 
   162  0003                     	;# 
   163  0004                     	;# 
   164  0005                     	;# 
   165  0006                     	;# 
   166  0007                     	;# 
   167  0008                     	;# 
   168  0009                     	;# 
   169  000A                     	;# 
   170  000B                     	;# 
   171  000C                     	;# 
   172  000D                     	;# 
   173  000E                     	;# 
   174  000E                     	;# 
   175  000F                     	;# 
   176  0010                     	;# 
   177  0011                     	;# 
   178  0012                     	;# 
   179  0013                     	;# 
   180  0014                     	;# 
   181  0015                     	;# 
   182  0015                     	;# 
   183  0016                     	;# 
   184  0017                     	;# 
   185  0018                     	;# 
   186  0019                     	;# 
   187  001A                     	;# 
   188  001B                     	;# 
   189  001B                     	;# 
   190  001C                     	;# 
   191  001D                     	;# 
   192  001E                     	;# 
   193  001F                     	;# 
   194  0081                     	;# 
   195  0085                     	;# 
   196  0086                     	;# 
   197  0087                     	;# 
   198  0088                     	;# 
   199  0089                     	;# 
   200  008C                     	;# 
   201  008D                     	;# 
   202  008E                     	;# 
   203  008F                     	;# 
   204  0090                     	;# 
   205  0091                     	;# 
   206  0092                     	;# 
   207  0093                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0094                     	;# 
   211  0095                     	;# 
   212  0096                     	;# 
   213  0097                     	;# 
   214  0098                     	;# 
   215  0099                     	;# 
   216  009A                     	;# 
   217  009B                     	;# 
   218  009C                     	;# 
   219  009D                     	;# 
   220  009E                     	;# 
   221  009F                     	;# 
   222  0105                     	;# 
   223  0107                     	;# 
   224  0108                     	;# 
   225  0109                     	;# 
   226  010C                     	;# 
   227  010C                     	;# 
   228  010D                     	;# 
   229  010E                     	;# 
   230  010F                     	;# 
   231  0185                     	;# 
   232  0187                     	;# 
   233  0188                     	;# 
   234  0189                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  008F                     	;# 
   282  0090                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0094                     	;# 
   289  0095                     	;# 
   290  0096                     	;# 
   291  0097                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009A                     	;# 
   295  009B                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  0105                     	;# 
   301  0107                     	;# 
   302  0108                     	;# 
   303  0109                     	;# 
   304  010C                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  0185                     	;# 
   310  0187                     	;# 
   311  0188                     	;# 
   312  0189                     	;# 
   313  018C                     	;# 
   314  018D                     	;# 
   315  0000                     	;# 
   316  0001                     	;# 
   317  0002                     	;# 
   318  0003                     	;# 
   319  0004                     	;# 
   320  0005                     	;# 
   321  0006                     	;# 
   322  0007                     	;# 
   323  0008                     	;# 
   324  0009                     	;# 
   325  000A                     	;# 
   326  000B                     	;# 
   327  000C                     	;# 
   328  000D                     	;# 
   329  000E                     	;# 
   330  000E                     	;# 
   331  000F                     	;# 
   332  0010                     	;# 
   333  0011                     	;# 
   334  0012                     	;# 
   335  0013                     	;# 
   336  0014                     	;# 
   337  0015                     	;# 
   338  0015                     	;# 
   339  0016                     	;# 
   340  0017                     	;# 
   341  0018                     	;# 
   342  0019                     	;# 
   343  001A                     	;# 
   344  001B                     	;# 
   345  001B                     	;# 
   346  001C                     	;# 
   347  001D                     	;# 
   348  001E                     	;# 
   349  001F                     	;# 
   350  0081                     	;# 
   351  0085                     	;# 
   352  0086                     	;# 
   353  0087                     	;# 
   354  0088                     	;# 
   355  0089                     	;# 
   356  008C                     	;# 
   357  008D                     	;# 
   358  008E                     	;# 
   359  008F                     	;# 
   360  0090                     	;# 
   361  0091                     	;# 
   362  0092                     	;# 
   363  0093                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0094                     	;# 
   367  0095                     	;# 
   368  0096                     	;# 
   369  0097                     	;# 
   370  0098                     	;# 
   371  0099                     	;# 
   372  009A                     	;# 
   373  009B                     	;# 
   374  009C                     	;# 
   375  009D                     	;# 
   376  009E                     	;# 
   377  009F                     	;# 
   378  0105                     	;# 
   379  0107                     	;# 
   380  0108                     	;# 
   381  0109                     	;# 
   382  010C                     	;# 
   383  010C                     	;# 
   384  010D                     	;# 
   385  010E                     	;# 
   386  010F                     	;# 
   387  0185                     	;# 
   388  0187                     	;# 
   389  0188                     	;# 
   390  0189                     	;# 
   391  018C                     	;# 
   392  018D                     	;# 
   393  0000                     	;# 
   394  0001                     	;# 
   395  0002                     	;# 
   396  0003                     	;# 
   397  0004                     	;# 
   398  0005                     	;# 
   399  0006                     	;# 
   400  0007                     	;# 
   401  0008                     	;# 
   402  0009                     	;# 
   403  000A                     	;# 
   404  000B                     	;# 
   405  000C                     	;# 
   406  000D                     	;# 
   407  000E                     	;# 
   408  000E                     	;# 
   409  000F                     	;# 
   410  0010                     	;# 
   411  0011                     	;# 
   412  0012                     	;# 
   413  0013                     	;# 
   414  0014                     	;# 
   415  0015                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0017                     	;# 
   419  0018                     	;# 
   420  0019                     	;# 
   421  001A                     	;# 
   422  001B                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001D                     	;# 
   426  001E                     	;# 
   427  001F                     	;# 
   428  0081                     	;# 
   429  0085                     	;# 
   430  0086                     	;# 
   431  0087                     	;# 
   432  0088                     	;# 
   433  0089                     	;# 
   434  008C                     	;# 
   435  008D                     	;# 
   436  008E                     	;# 
   437  008F                     	;# 
   438  0090                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0094                     	;# 
   445  0095                     	;# 
   446  0096                     	;# 
   447  0097                     	;# 
   448  0098                     	;# 
   449  0099                     	;# 
   450  009A                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  0105                     	;# 
   457  0107                     	;# 
   458  0108                     	;# 
   459  0109                     	;# 
   460  010C                     	;# 
   461  010C                     	;# 
   462  010D                     	;# 
   463  010E                     	;# 
   464  010F                     	;# 
   465  0185                     	;# 
   466  0187                     	;# 
   467  0188                     	;# 
   468  0189                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471                           
   472                           	psect	strings
   473  1800                     __pstrings:	
   474  1800                     stringtab:	
   475  1800                     __stringtab:	
   476                           
   477                           ;	String table - string pointers are 1 byte each
   478  1800  1BFF               	btfsc	btemp+1,7
   479  1801  280A               	ljmp	stringcode
   480  1802  1383               	bcf	3,7
   481  1803  187F               	btfsc	btemp+1,0
   482  1804  1783               	bsf	3,7
   483  1805  0800               	movf	0,w
   484  1806  0A84               	incf	4,f
   485  1807  1903               	skipnz
   486  1808  0AFF               	incf	btemp+1,f
   487  1809  0008               	return
   488  180A                     stringcode:	
   489  180A                     stringdir:	
   490  180A  3018               	movlw	high stringdir
   491  180B  008A               	movwf	10
   492  180C  0804               	movf	4,w
   493  180D  0A84               	incf	4,f
   494  180E  0782               	addwf	2,f
   495  180F                     __stringbase:	
   496  180F  3400               	retlw	0
   497  1810                     __end_of__stringtab:	
   498  1810                     __powers_:	
   499  1810  3400               	retlw	0
   500  1811  3400               	retlw	0
   501  1812  3480               	retlw	128
   502  1813  343F               	retlw	63
   503  1814  3400               	retlw	0
   504  1815  3400               	retlw	0
   505  1816  3420               	retlw	32
   506  1817  3441               	retlw	65
   507  1818  3400               	retlw	0
   508  1819  3400               	retlw	0
   509  181A  34C8               	retlw	200
   510  181B  3442               	retlw	66
   511  181C  3400               	retlw	0
   512  181D  3400               	retlw	0
   513  181E  347A               	retlw	122
   514  181F  3444               	retlw	68
   515  1820  3400               	retlw	0
   516  1821  3440               	retlw	64
   517  1822  341C               	retlw	28
   518  1823  3446               	retlw	70
   519  1824  3400               	retlw	0
   520  1825  3450               	retlw	80
   521  1826  34C3               	retlw	195
   522  1827  3447               	retlw	71
   523  1828  3400               	retlw	0
   524  1829  3424               	retlw	36
   525  182A  3474               	retlw	116
   526  182B  3449               	retlw	73
   527  182C  3480               	retlw	128
   528  182D  3496               	retlw	150
   529  182E  3418               	retlw	24
   530  182F  344B               	retlw	75
   531  1830  3420               	retlw	32
   532  1831  34BC               	retlw	188
   533  1832  34BE               	retlw	190
   534  1833  344C               	retlw	76
   535  1834  3428               	retlw	40
   536  1835  346B               	retlw	107
   537  1836  346E               	retlw	110
   538  1837  344E               	retlw	78
   539  1838  34F9               	retlw	249
   540  1839  3402               	retlw	2
   541  183A  3415               	retlw	21
   542  183B  3450               	retlw	80
   543  183C  34EC               	retlw	236
   544  183D  3478               	retlw	120
   545  183E  34AD               	retlw	173
   546  183F  3460               	retlw	96
   547  1840  34CA               	retlw	202
   548  1841  34F2               	retlw	242
   549  1842  3449               	retlw	73
   550  1843  3471               	retlw	113
   551  1844                     __end_of__powers_:	
   552  1844                     __npowers_:	
   553  1844  3400               	retlw	0
   554  1845  3400               	retlw	0
   555  1846  3480               	retlw	128
   556  1847  343F               	retlw	63
   557  1848  34CD               	retlw	205
   558  1849  34CC               	retlw	204
   559  184A  34CC               	retlw	204
   560  184B  343D               	retlw	61
   561  184C  340A               	retlw	10
   562  184D  34D7               	retlw	215
   563  184E  3423               	retlw	35
   564  184F  343C               	retlw	60
   565  1850  346F               	retlw	111
   566  1851  3412               	retlw	18
   567  1852  3483               	retlw	131
   568  1853  343A               	retlw	58
   569  1854  3417               	retlw	23
   570  1855  34B7               	retlw	183
   571  1856  34D1               	retlw	209
   572  1857  3438               	retlw	56
   573  1858  34AC               	retlw	172
   574  1859  34C5               	retlw	197
   575  185A  3427               	retlw	39
   576  185B  3437               	retlw	55
   577  185C  34BD               	retlw	189
   578  185D  3437               	retlw	55
   579  185E  3486               	retlw	134
   580  185F  3435               	retlw	53
   581  1860  3495               	retlw	149
   582  1861  34BF               	retlw	191
   583  1862  34D6               	retlw	214
   584  1863  3433               	retlw	51
   585  1864  3477               	retlw	119
   586  1865  34CC               	retlw	204
   587  1866  342B               	retlw	43
   588  1867  3432               	retlw	50
   589  1868  345F               	retlw	95
   590  1869  3470               	retlw	112
   591  186A  3489               	retlw	137
   592  186B  3430               	retlw	48
   593  186C  34FF               	retlw	255
   594  186D  34E6               	retlw	230
   595  186E  34DB               	retlw	219
   596  186F  342E               	retlw	46
   597  1870  3408               	retlw	8
   598  1871  34E5               	retlw	229
   599  1872  343C               	retlw	60
   600  1873  341E               	retlw	30
   601  1874  3460               	retlw	96
   602  1875  3442               	retlw	66
   603  1876  34A2               	retlw	162
   604  1877  340D               	retlw	13
   605  1878                     __end_of__npowers_:	
   606  1878                     _dpowers:	
   607  1878  3401               	retlw	1
   608  1879  3400               	retlw	0
   609  187A  3400               	retlw	0
   610  187B  3400               	retlw	0
   611  187C  340A               	retlw	10
   612  187D  3400               	retlw	0
   613  187E  3400               	retlw	0
   614  187F  3400               	retlw	0
   615  1880  3464               	retlw	100
   616  1881  3400               	retlw	0
   617  1882  3400               	retlw	0
   618  1883  3400               	retlw	0
   619  1884  34E8               	retlw	232
   620  1885  3403               	retlw	3
   621  1886  3400               	retlw	0
   622  1887  3400               	retlw	0
   623  1888  3410               	retlw	16
   624  1889  3427               	retlw	39
   625  188A  3400               	retlw	0
   626  188B  3400               	retlw	0
   627  188C  34A0               	retlw	160
   628  188D  3486               	retlw	134
   629  188E  3401               	retlw	1
   630  188F  3400               	retlw	0
   631  1890  3440               	retlw	64
   632  1891  3442               	retlw	66
   633  1892  340F               	retlw	15
   634  1893  3400               	retlw	0
   635  1894  3480               	retlw	128
   636  1895  3496               	retlw	150
   637  1896  3498               	retlw	152
   638  1897  3400               	retlw	0
   639  1898  3400               	retlw	0
   640  1899  34E1               	retlw	225
   641  189A  34F5               	retlw	245
   642  189B  3405               	retlw	5
   643  189C  3400               	retlw	0
   644  189D  34CA               	retlw	202
   645  189E  349A               	retlw	154
   646  189F  343B               	retlw	59
   647  18A0                     __end_of_dpowers:	
   648  0018                     _RCSTAbits	set	24
   649  000B                     _INTCONbits	set	11
   650  0005                     _PORTA	set	5
   651  0008                     _PORTD	set	8
   652  001E                     _ADRESH	set	30
   653  001F                     _ADCON0bits	set	31
   654  000C                     _PIR1bits	set	12
   655  0006                     _PORTB	set	6
   656  0008                     _PORTDbits	set	8
   657  0098                     _TXSTAbits	set	152
   658  009F                     _ADCON1bits	set	159
   659  008C                     _PIE1bits	set	140
   660  0088                     _TRISD	set	136
   661  0086                     _TRISB	set	134
   662  0085                     _TRISA	set	133
   663  0187                     _BAUDCTLbits	set	391
   664  0189                     _ANSELH	set	393
   665  0188                     _ANSEL	set	392
   666  18A0                     STR_3:	
   667  18A0  3456               	retlw	86	;'V'
   668  18A1  3431               	retlw	49	;'1'
   669  18A2  3420               	retlw	32	;' '
   670  18A3  3420               	retlw	32	;' '
   671  18A4  3420               	retlw	32	;' '
   672  18A5  3456               	retlw	86	;'V'
   673  18A6  3432               	retlw	50	;'2'
   674  18A7  3420               	retlw	32	;' '
   675  18A8  3420               	retlw	32	;' '
   676  18A9  3443               	retlw	67	;'C'
   677  18AA  346F               	retlw	111	;'o'
   678  18AB  346E               	retlw	110	;'n'
   679  18AC  3474               	retlw	116	;'t'
   680  18AD  342E               	retlw	46	;'.'
   681  18AE  3400               	retlw	0
   682  18AF                     STR_1:	
   683  18AF  3425               	retlw	37	;'%'
   684  18B0  3431               	retlw	49	;'1'
   685  18B1  342E               	retlw	46	;'.'
   686  18B2  3432               	retlw	50	;'2'
   687  18B3  3466               	retlw	102	;'f'
   688  18B4  3400               	retlw	0
   689  18AF                     
   690                           ; #config settings
   691  0000                     
   692                           	psect	cinit
   693  000F                     start_initialization:	
   694  000F                     __initialization:	
   695                           
   696                           ; Clear objects allocated to BANK0
   697  000F  1283               	bcf	3,5	;RP0=0, select bank0
   698  0010  1303               	bcf	3,6	;RP1=0, select bank0
   699  0011  01EF               	clrf	__pbssBANK0& (0+127)
   700                           
   701                           ; Clear objects allocated to BANK1
   702  0012  1383               	bcf	3,7	;select IRP bank0
   703  0013  30CC               	movlw	low __pbssBANK1
   704  0014  0084               	movwf	4
   705  0015  30E0               	movlw	low (__pbssBANK1+20)
   706  0016  160A  158A  2363  120A  118A  	fcall	clear_ram0
   707  001B                     end_of_initialization:	
   708                           ;End of C runtime variable initialization code
   709                           
   710  001B                     __end_of__initialization:	
   711  001B  0183               	clrf	3
   712  001C  120A  158A  2807   	ljmp	_main	;jump to C main() function
   713                           
   714                           	psect	bssBANK0
   715  006F                     __pbssBANK0:	
   716  006F                     _pot1:	
   717  006F                     	ds	1
   718                           
   719                           	psect	bssBANK1
   720  00CC                     __pbssBANK1:	
   721  00CC                     _volt2:	
   722  00CC                     	ds	4
   723  00D0                     _volt1:	
   724  00D0                     	ds	4
   725  00D4                     _start_another:	
   726  00D4                     	ds	1
   727  00D5                     _pot2:	
   728  00D5                     	ds	1
   729  00D6                     _string2:	
   730  00D6                     	ds	5
   731  00DB                     _string1:	
   732  00DB                     	ds	5
   733                           
   734                           	psect	clrtext
   735  1B63                     clear_ram0:	
   736                           ;	Called with FSR containing the base address, and
   737                           ;	W with the last address+1
   738                           
   739  1B63  0064               	clrwdt	;clear the watchdog before getting into this loop
   740  1B64                     clrloop0:	
   741  1B64  0180               	clrf	0	;clear RAM location pointed to by FSR
   742  1B65  0A84               	incf	4,f	;increment pointer
   743  1B66  0604               	xorwf	4,w	;XOR with final address
   744  1B67  1903               	btfsc	3,2	;have we reached the end yet?
   745  1B68  3400               	retlw	0	;all done for this memory range, return
   746  1B69  0604               	xorwf	4,w	;XOR again to restore value
   747  1B6A  2B64               	goto	clrloop0	;do the next byte
   748                           
   749                           	psect	cstackBANK1
   750  00A0                     __pcstackBANK1:	
   751  00A0                     ?___flsub:	
   752  00A0                     ___flsub@a:	
   753                           ; 4 bytes @ 0x0
   754                           
   755                           
   756                           ; 4 bytes @ 0x0
   757  00A0                     	ds	4
   758  00A4                     ___flsub@b:	
   759                           
   760                           ; 4 bytes @ 0x4
   761  00A4                     	ds	4
   762  00A8                     ??_sprintf:	
   763                           
   764                           ; 1 bytes @ 0x8
   765  00A8                     	ds	5
   766  00AD                     _sprintf$1196:	
   767                           
   768                           ; 4 bytes @ 0xD
   769  00AD                     	ds	4
   770  00B1                     sprintf@ap:	
   771                           
   772                           ; 1 bytes @ 0x11
   773  00B1                     	ds	1
   774  00B2                     sprintf@val:	
   775                           
   776                           ; 4 bytes @ 0x12
   777  00B2                     	ds	4
   778  00B6                     sprintf@flag:	
   779                           
   780                           ; 2 bytes @ 0x16
   781  00B6                     	ds	2
   782  00B8                     sprintf@width:	
   783                           
   784                           ; 2 bytes @ 0x18
   785  00B8                     	ds	2
   786  00BA                     sprintf@tmpval:	
   787                           
   788                           ; 4 bytes @ 0x1A
   789  00BA                     	ds	4
   790  00BE                     sprintf@eexp:	
   791                           
   792                           ; 2 bytes @ 0x1E
   793  00BE                     	ds	2
   794  00C0                     sprintf@fval:	
   795                           
   796                           ; 4 bytes @ 0x20
   797  00C0                     	ds	4
   798  00C4                     sprintf@sp:	
   799                           
   800                           ; 1 bytes @ 0x24
   801  00C4                     	ds	1
   802  00C5                     sprintf@prec:	
   803                           
   804                           ; 2 bytes @ 0x25
   805  00C5                     	ds	2
   806  00C7                     sprintf@c:	
   807                           
   808                           ; 1 bytes @ 0x27
   809  00C7                     	ds	1
   810  00C8                     ??_main:	
   811                           
   812                           ; 1 bytes @ 0x28
   813  00C8                     	ds	4
   814                           
   815                           	psect	cstackCOMMON
   816  0070                     __pcstackCOMMON:	
   817  0070                     ?_isdigit:	
   818  0070                     ?_Port_init:	
   819                           ; 1 bit 
   820                           
   821  0070                     ?_start_conversion:	
   822                           ; 1 bytes @ 0x0
   823                           
   824  0070                     ?_LCD_CMD:	
   825                           ; 1 bytes @ 0x0
   826                           
   827  0070                     ?_LCD_INIT:	
   828                           ; 1 bytes @ 0x0
   829                           
   830  0070                     ?_LCD_WRITE_CHAR:	
   831                           ; 1 bytes @ 0x0
   832                           
   833  0070                     ?_isr:	
   834                           ; 1 bytes @ 0x0
   835                           
   836  0070                     ??_isr:	
   837                           ; 1 bytes @ 0x0
   838                           
   839  0070                     ?_main:	
   840                           ; 1 bytes @ 0x0
   841                           
   842                           
   843                           ; 1 bytes @ 0x0
   844  0070                     	ds	3
   845  0073                     ?___fleq:	
   846  0073                     ?___flge:	
   847                           ; 1 bit 
   848                           
   849  0073                     ??_Port_init:	
   850                           ; 1 bit 
   851                           
   852  0073                     ?_ADC_init:	
   853                           ; 1 bytes @ 0x3
   854                           
   855  0073                     ??_start_conversion:	
   856                           ; 1 bytes @ 0x3
   857                           
   858  0073                     ??_isdigit:	
   859                           ; 1 bytes @ 0x3
   860                           
   861  0073                     ??_LCD_CMD:	
   862                           ; 1 bytes @ 0x3
   863                           
   864  0073                     ??_LCD_WRITE_CHAR:	
   865                           ; 1 bytes @ 0x3
   866                           
   867  0073                     ?__Umul8_16:	
   868                           ; 1 bytes @ 0x3
   869                           
   870  0073                     ?___wmul:	
   871                           ; 2 bytes @ 0x3
   872                           
   873  0073                     ?___awmod:	
   874                           ; 2 bytes @ 0x3
   875                           
   876  0073                     ?___lwmod:	
   877                           ; 2 bytes @ 0x3
   878                           
   879  0073                     ?__tdiv_to_l_:	
   880                           ; 2 bytes @ 0x3
   881                           
   882  0073                     ?__div_to_l_:	
   883                           ; 4 bytes @ 0x3
   884                           
   885  0073                     ?___lldiv:	
   886                           ; 4 bytes @ 0x3
   887                           
   888  0073                     ?___flneg:	
   889                           ; 4 bytes @ 0x3
   890                           
   891  0073                     ?___llmod:	
   892                           ; 4 bytes @ 0x3
   893                           
   894  0073                     ?___xxtofl:	
   895                           ; 4 bytes @ 0x3
   896                           
   897  0073                     ADC_init@channel:	
   898                           ; 4 bytes @ 0x3
   899                           
   900  0073                     _isdigit$991:	
   901                           ; 1 bytes @ 0x3
   902                           
   903  0073                     __Umul8_16@multiplicand:	
   904                           ; 1 bytes @ 0x3
   905                           
   906  0073                     ___wmul@multiplier:	
   907                           ; 1 bytes @ 0x3
   908                           
   909  0073                     ___awmod@divisor:	
   910                           ; 2 bytes @ 0x3
   911                           
   912  0073                     ___lwmod@divisor:	
   913                           ; 2 bytes @ 0x3
   914                           
   915  0073                     ___lldiv@divisor:	
   916                           ; 2 bytes @ 0x3
   917                           
   918  0073                     __div_to_l_@f1:	
   919                           ; 4 bytes @ 0x3
   920                           
   921  0073                     ___fleq@ff1:	
   922                           ; 4 bytes @ 0x3
   923                           
   924  0073                     ___flge@ff1:	
   925                           ; 4 bytes @ 0x3
   926                           
   927  0073                     ___flneg@f1:	
   928                           ; 4 bytes @ 0x3
   929                           
   930  0073                     __tdiv_to_l_@f1:	
   931                           ; 4 bytes @ 0x3
   932                           
   933  0073                     ___llmod@divisor:	
   934                           ; 4 bytes @ 0x3
   935                           
   936  0073                     ___xxtofl@val:	
   937                           ; 4 bytes @ 0x3
   938                           
   939                           
   940                           ; 4 bytes @ 0x3
   941  0073                     	ds	1
   942  0074                     ADC_init@int_on:	
   943  0074                     isdigit@c:	
   944                           ; 1 bytes @ 0x4
   945                           
   946                           
   947                           ; 1 bytes @ 0x4
   948  0074                     	ds	1
   949  0075                     ??__Umul8_16:	
   950  0075                     LCD_CMD@a:	
   951                           ; 1 bytes @ 0x5
   952                           
   953  0075                     LCD_WRITE_CHAR@a:	
   954                           ; 1 bytes @ 0x5
   955                           
   956  0075                     ADC_init@left_or_right:	
   957                           ; 1 bytes @ 0x5
   958                           
   959  0075                     ___wmul@multiplicand:	
   960                           ; 1 bytes @ 0x5
   961                           
   962  0075                     ___awmod@dividend:	
   963                           ; 2 bytes @ 0x5
   964                           
   965  0075                     ___lwmod@dividend:	
   966                           ; 2 bytes @ 0x5
   967                           
   968                           
   969                           ; 2 bytes @ 0x5
   970  0075                     	ds	1
   971  0076                     ??_ADC_init:	
   972  0076                     ?_LCD_SET_CURSOR:	
   973                           ; 1 bytes @ 0x6
   974                           
   975  0076                     ??_LCD_INIT:	
   976                           ; 1 bytes @ 0x6
   977                           
   978  0076                     ?_LCD_WRITE_STRING:	
   979                           ; 1 bytes @ 0x6
   980                           
   981  0076                     LCD_SET_CURSOR@b:	
   982                           ; 1 bytes @ 0x6
   983                           
   984  0076                     LCD_WRITE_STRING@a:	
   985                           ; 1 bytes @ 0x6
   986                           
   987                           
   988                           ; 2 bytes @ 0x6
   989  0076                     	ds	1
   990  0077                     ??_LCD_SET_CURSOR:	
   991  0077                     ??___wmul:	
   992                           ; 1 bytes @ 0x7
   993                           
   994  0077                     ??___awmod:	
   995                           ; 1 bytes @ 0x7
   996                           
   997  0077                     ??___flneg:	
   998                           ; 1 bytes @ 0x7
   999                           
  1000  0077                     ??___lwmod:	
  1001                           ; 1 bytes @ 0x7
  1002                           
  1003  0077                     ??___xxtofl:	
  1004                           ; 1 bytes @ 0x7
  1005                           
  1006  0077                     ___wmul@product:	
  1007                           ; 1 bytes @ 0x7
  1008                           
  1009  0077                     ___lldiv@dividend:	
  1010                           ; 2 bytes @ 0x7
  1011                           
  1012  0077                     __div_to_l_@f2:	
  1013                           ; 4 bytes @ 0x7
  1014                           
  1015  0077                     ___fleq@ff2:	
  1016                           ; 4 bytes @ 0x7
  1017                           
  1018  0077                     ___flge@ff2:	
  1019                           ; 4 bytes @ 0x7
  1020                           
  1021  0077                     __tdiv_to_l_@f2:	
  1022                           ; 4 bytes @ 0x7
  1023                           
  1024  0077                     ___llmod@dividend:	
  1025                           ; 4 bytes @ 0x7
  1026                           
  1027                           
  1028                           ; 4 bytes @ 0x7
  1029  0077                     	ds	1
  1030  0078                     ??_LCD_WRITE_STRING:	
  1031  0078                     LCD_SET_CURSOR@a:	
  1032                           ; 1 bytes @ 0x8
  1033                           
  1034  0078                     ADC_init@Fosc:	
  1035                           ; 1 bytes @ 0x8
  1036                           
  1037  0078                     ___awmod@counter:	
  1038                           ; 1 bytes @ 0x8
  1039                           
  1040  0078                     ___lwmod@counter:	
  1041                           ; 1 bytes @ 0x8
  1042                           
  1043                           
  1044                           ; 1 bytes @ 0x8
  1045  0078                     	ds	1
  1046  0079                     ??___lwdiv:	
  1047  0079                     LCD_SET_CURSOR@temporal:	
  1048                           ; 1 bytes @ 0x9
  1049                           
  1050  0079                     ___awmod@sign:	
  1051                           ; 1 bytes @ 0x9
  1052                           
  1053                           
  1054                           ; 1 bytes @ 0x9
  1055  0079                     	ds	1
  1056  007A                     ??___awdiv:	
  1057                           
  1058                           ; 1 bytes @ 0xA
  1059  007A                     	ds	1
  1060  007B                     ??___flsub:	
  1061                           
  1062                           	psect	cstackBANK0
  1063  0020                     __pcstackBANK0:	
  1064                           ; 1 bytes @ 0xB
  1065                           
  1066  0020                     ??__tdiv_to_l_:	
  1067  0020                     ??__div_to_l_:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0020                     ??___lldiv:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0020                     ??___fleq:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0020                     ??___flge:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0020                     ??___llmod:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0020                     ?___awdiv:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0020                     ?___lwdiv:	
  1086                           ; 2 bytes @ 0x0
  1087                           
  1088  0020                     ___xxtofl@sign:	
  1089                           ; 2 bytes @ 0x0
  1090                           
  1091  0020                     LCD_WRITE_STRING@i:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0020                     ___awdiv@divisor:	
  1095                           ; 2 bytes @ 0x0
  1096                           
  1097  0020                     ___lwdiv@divisor:	
  1098                           ; 2 bytes @ 0x0
  1099                           
  1100  0020                     __Umul8_16@product:	
  1101                           ; 2 bytes @ 0x0
  1102                           
  1103                           
  1104                           ; 2 bytes @ 0x0
  1105  0020                     	ds	1
  1106  0021                     ___llmod@counter:	
  1107  0021                     ___xxtofl@exp:	
  1108                           ; 1 bytes @ 0x1
  1109                           
  1110  0021                     ___lldiv@quotient:	
  1111                           ; 1 bytes @ 0x1
  1112                           
  1113  0021                     __div_to_l_@quot:	
  1114                           ; 4 bytes @ 0x1
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0x1
  1118  0021                     	ds	1
  1119  0022                     ___awdiv@dividend:	
  1120  0022                     ___lwdiv@dividend:	
  1121                           ; 2 bytes @ 0x2
  1122                           
  1123  0022                     __Umul8_16@word_mpld:	
  1124                           ; 2 bytes @ 0x2
  1125                           
  1126  0022                     ___xxtofl@arg:	
  1127                           ; 2 bytes @ 0x2
  1128                           
  1129                           
  1130                           ; 4 bytes @ 0x2
  1131  0022                     	ds	2
  1132  0024                     ___awdiv@counter:	
  1133  0024                     __Umul8_16@multiplier:	
  1134                           ; 1 bytes @ 0x4
  1135                           
  1136  0024                     ___lwdiv@quotient:	
  1137                           ; 1 bytes @ 0x4
  1138                           
  1139  0024                     __tdiv_to_l_@quot:	
  1140                           ; 2 bytes @ 0x4
  1141                           
  1142                           
  1143                           ; 4 bytes @ 0x4
  1144  0024                     	ds	1
  1145  0025                     ___lldiv@counter:	
  1146  0025                     ___awdiv@sign:	
  1147                           ; 1 bytes @ 0x5
  1148                           
  1149  0025                     __div_to_l_@cntr:	
  1150                           ; 1 bytes @ 0x5
  1151                           
  1152                           
  1153                           ; 1 bytes @ 0x5
  1154  0025                     	ds	1
  1155  0026                     __div_to_l_@exp1:	
  1156  0026                     ___lwdiv@counter:	
  1157                           ; 1 bytes @ 0x6
  1158                           
  1159  0026                     ___awdiv@quotient:	
  1160                           ; 1 bytes @ 0x6
  1161                           
  1162                           
  1163                           ; 2 bytes @ 0x6
  1164  0026                     	ds	2
  1165  0028                     ?___flmul:	
  1166  0028                     __tdiv_to_l_@cntr:	
  1167                           ; 4 bytes @ 0x8
  1168                           
  1169  0028                     ___flmul@b:	
  1170                           ; 1 bytes @ 0x8
  1171                           
  1172                           
  1173                           ; 4 bytes @ 0x8
  1174  0028                     	ds	1
  1175  0029                     __tdiv_to_l_@exp1:	
  1176                           
  1177                           ; 1 bytes @ 0x9
  1178  0029                     	ds	3
  1179  002C                     ___flmul@a:	
  1180                           
  1181                           ; 4 bytes @ 0xC
  1182  002C                     	ds	4
  1183  0030                     ??___flmul:	
  1184                           
  1185                           ; 1 bytes @ 0x10
  1186  0030                     	ds	5
  1187  0035                     ___flmul@sign:	
  1188                           
  1189                           ; 1 bytes @ 0x15
  1190  0035                     	ds	1
  1191  0036                     ___flmul@grs:	
  1192                           
  1193                           ; 4 bytes @ 0x16
  1194  0036                     	ds	4
  1195  003A                     ___flmul@aexp:	
  1196                           
  1197                           ; 1 bytes @ 0x1A
  1198  003A                     	ds	1
  1199  003B                     ___flmul@bexp:	
  1200                           
  1201                           ; 1 bytes @ 0x1B
  1202  003B                     	ds	1
  1203  003C                     ___flmul@prod:	
  1204                           
  1205                           ; 4 bytes @ 0x1C
  1206  003C                     	ds	4
  1207  0040                     ___flmul@temp:	
  1208                           
  1209                           ; 2 bytes @ 0x20
  1210  0040                     	ds	2
  1211  0042                     ?_fround:	
  1212  0042                     ?_scale:	
  1213                           ; 4 bytes @ 0x22
  1214                           
  1215                           
  1216                           ; 4 bytes @ 0x22
  1217  0042                     	ds	4
  1218  0046                     ??_fround:	
  1219  0046                     ??_scale:	
  1220                           ; 1 bytes @ 0x26
  1221                           
  1222                           
  1223                           ; 1 bytes @ 0x26
  1224  0046                     	ds	7
  1225  004D                     _fround$1194:	
  1226                           
  1227                           ; 4 bytes @ 0x2D
  1228  004D                     	ds	3
  1229  0050                     _scale$1195:	
  1230                           
  1231                           ; 4 bytes @ 0x30
  1232  0050                     	ds	1
  1233  0051                     _fround$1193:	
  1234                           
  1235                           ; 4 bytes @ 0x31
  1236  0051                     	ds	3
  1237  0054                     scale@scl:	
  1238                           
  1239                           ; 1 bytes @ 0x34
  1240  0054                     	ds	1
  1241  0055                     ?___fltol:	
  1242  0055                     fround@prec:	
  1243                           ; 4 bytes @ 0x35
  1244                           
  1245  0055                     ___fltol@f1:	
  1246                           ; 1 bytes @ 0x35
  1247                           
  1248                           
  1249                           ; 4 bytes @ 0x35
  1250  0055                     	ds	1
  1251  0056                     ?___fladd:	
  1252  0056                     ___fladd@b:	
  1253                           ; 4 bytes @ 0x36
  1254                           
  1255                           
  1256                           ; 4 bytes @ 0x36
  1257  0056                     	ds	3
  1258  0059                     ??___fltol:	
  1259                           
  1260                           ; 1 bytes @ 0x39
  1261  0059                     	ds	1
  1262  005A                     ___fladd@a:	
  1263                           
  1264                           ; 4 bytes @ 0x3A
  1265  005A                     	ds	4
  1266  005E                     ??___fladd:	
  1267  005E                     ___fltol@sign1:	
  1268                           ; 1 bytes @ 0x3E
  1269                           
  1270                           
  1271                           ; 1 bytes @ 0x3E
  1272  005E                     	ds	1
  1273  005F                     ___fltol@exp1:	
  1274                           
  1275                           ; 1 bytes @ 0x3F
  1276  005F                     	ds	7
  1277  0066                     ___fladd@signs:	
  1278                           
  1279                           ; 1 bytes @ 0x46
  1280  0066                     	ds	1
  1281  0067                     ___fladd@aexp:	
  1282                           
  1283                           ; 1 bytes @ 0x47
  1284  0067                     	ds	1
  1285  0068                     ___fladd@bexp:	
  1286                           
  1287                           ; 1 bytes @ 0x48
  1288  0068                     	ds	1
  1289  0069                     ___fladd@grs:	
  1290                           
  1291                           ; 1 bytes @ 0x49
  1292  0069                     	ds	1
  1293  006A                     ?_sprintf:	
  1294  006A                     sprintf@f:	
  1295                           ; 2 bytes @ 0x4A
  1296                           
  1297                           
  1298                           ; 1 bytes @ 0x4A
  1299  006A                     	ds	5
  1300                           
  1301                           	psect	maintext
  1302  0807                     __pmaintext:	
  1303 ;;
  1304 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1305 ;;
  1306 ;; *************** function _main *****************
  1307 ;; Defined at:
  1308 ;;		line 51 in file "main_lab3.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;		None
  1311 ;; Auto vars:     Size  Location     Type
  1312 ;;		None
  1313 ;; Return value:  Size  Location     Type
  1314 ;;                  1    wreg      void 
  1315 ;; Registers used:
  1316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1317 ;; Tracked objects:
  1318 ;;		On entry : B00/0
  1319 ;;		On exit  : 0/0
  1320 ;;		Unchanged: 0/0
  1321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1322 ;;      Params:         0       0       0       0       0
  1323 ;;      Locals:         0       0       0       0       0
  1324 ;;      Temps:          0       0       4       0       0
  1325 ;;      Totals:         0       0       4       0       0
  1326 ;;Total ram usage:        4 bytes
  1327 ;; Hardware stack levels required when called:    5
  1328 ;; This function calls:
  1329 ;;		_ADC_init
  1330 ;;		_LCD_INIT
  1331 ;;		_LCD_SET_CURSOR
  1332 ;;		_LCD_WRITE_STRING
  1333 ;;		_Port_init
  1334 ;;		___flmul
  1335 ;;		___xxtofl
  1336 ;;		_sprintf
  1337 ;;		_start_conversion
  1338 ;; This function is called by:
  1339 ;;		Startup code after reset
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           
  1344                           ;psect for function _main
  1345  0807                     _main:	
  1346  0807                     l3499:	
  1347                           ;incstack = 0
  1348                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1349                           
  1350                           
  1351                           ;main_lab3.c: 52:     Port_init();
  1352  0807  160A  158A  23B5  120A  158A  	fcall	_Port_init
  1353                           
  1354                           ;main_lab3.c: 53:     LCD_INIT();
  1355  080C  160A  158A  25CC  120A  158A  	fcall	_LCD_INIT
  1356  0811                     l3501:	
  1357                           
  1358                           ;main_lab3.c: 54:     ADC_init(1,1,1,0);
  1359  0811  01F3               	clrf	ADC_init@channel
  1360  0812  0AF3               	incf	ADC_init@channel,f
  1361  0813  01F4               	clrf	ADC_init@int_on
  1362  0814  0AF4               	incf	ADC_init@int_on,f
  1363  0815  01F5               	clrf	ADC_init@left_or_right
  1364  0816  3001               	movlw	1
  1365  0817  160A  118A  22A7  120A  158A  	fcall	_ADC_init
  1366  081C                     l3503:	
  1367                           
  1368                           ;main_lab3.c: 56:         if (start_another == 1){
  1369  081C  1683               	bsf	3,5	;RP0=1, select bank1
  1370  081D  1303               	bcf	3,6	;RP1=0, select bank1
  1371  081E  0354               	decf	_start_another^(0+128),w
  1372  081F  1D03               	btfss	3,2
  1373  0820  2822               	goto	u5601
  1374  0821  2823               	goto	u5600
  1375  0822                     u5601:	
  1376  0822  282B               	goto	l3509
  1377  0823                     u5600:	
  1378  0823                     l3505:	
  1379                           
  1380                           ;main_lab3.c: 57:             start_conversion();
  1381  0823  120A  158A  2003  120A  158A  	fcall	_start_conversion
  1382  0828                     l3507:	
  1383                           
  1384                           ;main_lab3.c: 58:             start_another = 0;
  1385  0828  1683               	bsf	3,5	;RP0=1, select bank1
  1386  0829  1303               	bcf	3,6	;RP1=0, select bank1
  1387  082A  01D4               	clrf	_start_another^(0+128)
  1388  082B                     l3509:	
  1389                           
  1390                           ;main_lab3.c: 60:         volt1 = pot1*(5.0/255);
  1391  082B  303C               	movlw	60
  1392  082C  1283               	bcf	3,5	;RP0=0, select bank0
  1393  082D  1303               	bcf	3,6	;RP1=0, select bank0
  1394  082E  00AB               	movwf	___flmul@b+3
  1395  082F  30A0               	movlw	160
  1396  0830  00AA               	movwf	___flmul@b+2
  1397  0831  30A0               	movlw	160
  1398  0832  00A9               	movwf	___flmul@b+1
  1399  0833  30A1               	movlw	161
  1400  0834  00A8               	movwf	___flmul@b
  1401  0835  086F               	movf	_pot1,w
  1402  0836  1683               	bsf	3,5	;RP0=1, select bank1
  1403  0837  1303               	bcf	3,6	;RP1=0, select bank1
  1404  0838  00C8               	movwf	??_main^(0+128)
  1405  0839  01C9               	clrf	(??_main^(0+128)+1)
  1406  083A  01CA               	clrf	(??_main^(0+128)+2)
  1407  083B  01CB               	clrf	(??_main^(0+128)+3)
  1408  083C  084B               	movf	(??_main+3)^(0+128),w
  1409  083D  00F6               	movwf	___xxtofl@val+3
  1410  083E  084A               	movf	(??_main+2)^(0+128),w
  1411  083F  00F5               	movwf	___xxtofl@val+2
  1412  0840  0849               	movf	(??_main+1)^(0+128),w
  1413  0841  00F4               	movwf	___xxtofl@val+1
  1414  0842  0848               	movf	??_main^(0+128),w
  1415  0843  00F3               	movwf	___xxtofl@val
  1416  0844  3001               	movlw	1
  1417  0845  160A  118A  2070  120A  158A  	fcall	___xxtofl
  1418  084A  0876               	movf	?___xxtofl+3,w
  1419  084B  1283               	bcf	3,5	;RP0=0, select bank0
  1420  084C  1303               	bcf	3,6	;RP1=0, select bank0
  1421  084D  00AF               	movwf	___flmul@a+3
  1422  084E  0875               	movf	?___xxtofl+2,w
  1423  084F  00AE               	movwf	___flmul@a+2
  1424  0850  0874               	movf	?___xxtofl+1,w
  1425  0851  00AD               	movwf	___flmul@a+1
  1426  0852  0873               	movf	?___xxtofl,w
  1427  0853  00AC               	movwf	___flmul@a
  1428  0854  120A  158A  213C  120A  158A  	fcall	___flmul
  1429  0859  1283               	bcf	3,5	;RP0=0, select bank0
  1430  085A  1303               	bcf	3,6	;RP1=0, select bank0
  1431  085B  082B               	movf	?___flmul+3,w
  1432  085C  1683               	bsf	3,5	;RP0=1, select bank1
  1433  085D  1303               	bcf	3,6	;RP1=0, select bank1
  1434  085E  00D3               	movwf	(_volt1+3)^(0+128)
  1435  085F  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0860  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0861  082A               	movf	?___flmul+2,w
  1438  0862  1683               	bsf	3,5	;RP0=1, select bank1
  1439  0863  1303               	bcf	3,6	;RP1=0, select bank1
  1440  0864  00D2               	movwf	(_volt1+2)^(0+128)
  1441  0865  1283               	bcf	3,5	;RP0=0, select bank0
  1442  0866  1303               	bcf	3,6	;RP1=0, select bank0
  1443  0867  0829               	movf	?___flmul+1,w
  1444  0868  1683               	bsf	3,5	;RP0=1, select bank1
  1445  0869  1303               	bcf	3,6	;RP1=0, select bank1
  1446  086A  00D1               	movwf	(_volt1+1)^(0+128)
  1447  086B  1283               	bcf	3,5	;RP0=0, select bank0
  1448  086C  1303               	bcf	3,6	;RP1=0, select bank0
  1449  086D  0828               	movf	?___flmul,w
  1450  086E  1683               	bsf	3,5	;RP0=1, select bank1
  1451  086F  1303               	bcf	3,6	;RP1=0, select bank1
  1452  0870  00D0               	movwf	_volt1^(0+128)
  1453  0871                     l3511:	
  1454                           
  1455                           ;main_lab3.c: 61:         volt2 = pot2*(5.0/255);
  1456  0871  303C               	movlw	60
  1457  0872  1283               	bcf	3,5	;RP0=0, select bank0
  1458  0873  1303               	bcf	3,6	;RP1=0, select bank0
  1459  0874  00AB               	movwf	___flmul@b+3
  1460  0875  30A0               	movlw	160
  1461  0876  00AA               	movwf	___flmul@b+2
  1462  0877  30A0               	movlw	160
  1463  0878  00A9               	movwf	___flmul@b+1
  1464  0879  30A1               	movlw	161
  1465  087A  00A8               	movwf	___flmul@b
  1466  087B  1683               	bsf	3,5	;RP0=1, select bank1
  1467  087C  1303               	bcf	3,6	;RP1=0, select bank1
  1468  087D  0855               	movf	_pot2^(0+128),w
  1469  087E  00C8               	movwf	??_main^(0+128)
  1470  087F  01C9               	clrf	(??_main^(0+128)+1)
  1471  0880  01CA               	clrf	(??_main^(0+128)+2)
  1472  0881  01CB               	clrf	(??_main^(0+128)+3)
  1473  0882  084B               	movf	(??_main+3)^(0+128),w
  1474  0883  00F6               	movwf	___xxtofl@val+3
  1475  0884  084A               	movf	(??_main+2)^(0+128),w
  1476  0885  00F5               	movwf	___xxtofl@val+2
  1477  0886  0849               	movf	(??_main+1)^(0+128),w
  1478  0887  00F4               	movwf	___xxtofl@val+1
  1479  0888  0848               	movf	??_main^(0+128),w
  1480  0889  00F3               	movwf	___xxtofl@val
  1481  088A  3001               	movlw	1
  1482  088B  160A  118A  2070  120A  158A  	fcall	___xxtofl
  1483  0890  0876               	movf	?___xxtofl+3,w
  1484  0891  1283               	bcf	3,5	;RP0=0, select bank0
  1485  0892  1303               	bcf	3,6	;RP1=0, select bank0
  1486  0893  00AF               	movwf	___flmul@a+3
  1487  0894  0875               	movf	?___xxtofl+2,w
  1488  0895  00AE               	movwf	___flmul@a+2
  1489  0896  0874               	movf	?___xxtofl+1,w
  1490  0897  00AD               	movwf	___flmul@a+1
  1491  0898  0873               	movf	?___xxtofl,w
  1492  0899  00AC               	movwf	___flmul@a
  1493  089A  120A  158A  213C  120A  158A  	fcall	___flmul
  1494  089F  1283               	bcf	3,5	;RP0=0, select bank0
  1495  08A0  1303               	bcf	3,6	;RP1=0, select bank0
  1496  08A1  082B               	movf	?___flmul+3,w
  1497  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  1498  08A3  1303               	bcf	3,6	;RP1=0, select bank1
  1499  08A4  00CF               	movwf	(_volt2+3)^(0+128)
  1500  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  1501  08A6  1303               	bcf	3,6	;RP1=0, select bank0
  1502  08A7  082A               	movf	?___flmul+2,w
  1503  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  1504  08A9  1303               	bcf	3,6	;RP1=0, select bank1
  1505  08AA  00CE               	movwf	(_volt2+2)^(0+128)
  1506  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  1507  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  1508  08AD  0829               	movf	?___flmul+1,w
  1509  08AE  1683               	bsf	3,5	;RP0=1, select bank1
  1510  08AF  1303               	bcf	3,6	;RP1=0, select bank1
  1511  08B0  00CD               	movwf	(_volt2+1)^(0+128)
  1512  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  1513  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  1514  08B3  0828               	movf	?___flmul,w
  1515  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  1516  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  1517  08B6  00CC               	movwf	_volt2^(0+128)
  1518  08B7                     l3513:	
  1519                           
  1520                           ;main_lab3.c: 62:         sprintf(string1,"%1.2f", volt1);
  1521  08B7  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1522  08B8  00C8               	movwf	??_main^(0+128)
  1523  08B9  0848               	movf	??_main^(0+128),w
  1524  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  1525  08BB  1303               	bcf	3,6	;RP1=0, select bank0
  1526  08BC  00EA               	movwf	sprintf@f
  1527  08BD  1683               	bsf	3,5	;RP0=1, select bank1
  1528  08BE  1303               	bcf	3,6	;RP1=0, select bank1
  1529  08BF  0853               	movf	(_volt1+3)^(0+128),w
  1530  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  1531  08C1  1303               	bcf	3,6	;RP1=0, select bank0
  1532  08C2  00EE               	movwf	?_sprintf+4
  1533  08C3  1683               	bsf	3,5	;RP0=1, select bank1
  1534  08C4  1303               	bcf	3,6	;RP1=0, select bank1
  1535  08C5  0852               	movf	(_volt1+2)^(0+128),w
  1536  08C6  1283               	bcf	3,5	;RP0=0, select bank0
  1537  08C7  1303               	bcf	3,6	;RP1=0, select bank0
  1538  08C8  00ED               	movwf	?_sprintf+3
  1539  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  1540  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  1541  08CB  0851               	movf	(_volt1+1)^(0+128),w
  1542  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  1543  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  1544  08CE  00EC               	movwf	?_sprintf+2
  1545  08CF  1683               	bsf	3,5	;RP0=1, select bank1
  1546  08D0  1303               	bcf	3,6	;RP1=0, select bank1
  1547  08D1  0850               	movf	_volt1^(0+128),w
  1548  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  1549  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  1550  08D4  00EB               	movwf	?_sprintf+1
  1551  08D5  30DB               	movlw	(low (_string1| 0))& (0+255)
  1552  08D6  120A  118A  201F  120A  158A  	fcall	_sprintf
  1553  08DB                     l3515:	
  1554                           
  1555                           ;main_lab3.c: 63:         sprintf(string2, "%1.2f", volt2);
  1556  08DB  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1557  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  1558  08DD  1303               	bcf	3,6	;RP1=0, select bank1
  1559  08DE  00C8               	movwf	??_main^(0+128)
  1560  08DF  0848               	movf	??_main^(0+128),w
  1561  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  1562  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  1563  08E2  00EA               	movwf	sprintf@f
  1564  08E3  1683               	bsf	3,5	;RP0=1, select bank1
  1565  08E4  1303               	bcf	3,6	;RP1=0, select bank1
  1566  08E5  084F               	movf	(_volt2+3)^(0+128),w
  1567  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  1568  08E7  1303               	bcf	3,6	;RP1=0, select bank0
  1569  08E8  00EE               	movwf	?_sprintf+4
  1570  08E9  1683               	bsf	3,5	;RP0=1, select bank1
  1571  08EA  1303               	bcf	3,6	;RP1=0, select bank1
  1572  08EB  084E               	movf	(_volt2+2)^(0+128),w
  1573  08EC  1283               	bcf	3,5	;RP0=0, select bank0
  1574  08ED  1303               	bcf	3,6	;RP1=0, select bank0
  1575  08EE  00ED               	movwf	?_sprintf+3
  1576  08EF  1683               	bsf	3,5	;RP0=1, select bank1
  1577  08F0  1303               	bcf	3,6	;RP1=0, select bank1
  1578  08F1  084D               	movf	(_volt2+1)^(0+128),w
  1579  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  1580  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  1581  08F4  00EC               	movwf	?_sprintf+2
  1582  08F5  1683               	bsf	3,5	;RP0=1, select bank1
  1583  08F6  1303               	bcf	3,6	;RP1=0, select bank1
  1584  08F7  084C               	movf	_volt2^(0+128),w
  1585  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  1586  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  1587  08FA  00EB               	movwf	?_sprintf+1
  1588  08FB  30D6               	movlw	(low (_string2| 0))& (0+255)
  1589  08FC  120A  118A  201F  120A  158A  	fcall	_sprintf
  1590  0901                     l3517:	
  1591                           
  1592                           ;main_lab3.c: 64:         LCD_SET_CURSOR(1,1);
  1593  0901  01F6               	clrf	LCD_SET_CURSOR@b
  1594  0902  0AF6               	incf	LCD_SET_CURSOR@b,f
  1595  0903  3001               	movlw	1
  1596  0904  160A  158A  23CD  120A  158A  	fcall	_LCD_SET_CURSOR
  1597  0909                     l3519:	
  1598                           
  1599                           ;main_lab3.c: 65:         LCD_WRITE_STRING("V1   V2  Cont.");
  1600  0909  3091               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1601  090A  00F6               	movwf	LCD_WRITE_STRING@a
  1602  090B  3080               	movlw	128
  1603  090C  00F7               	movwf	LCD_WRITE_STRING@a+1
  1604  090D  160A  158A  24A0  120A  158A  	fcall	_LCD_WRITE_STRING
  1605  0912                     l3521:	
  1606                           
  1607                           ;main_lab3.c: 66:         LCD_SET_CURSOR(2,1);
  1608  0912  01F6               	clrf	LCD_SET_CURSOR@b
  1609  0913  0AF6               	incf	LCD_SET_CURSOR@b,f
  1610  0914  3002               	movlw	2
  1611  0915  160A  158A  23CD  120A  158A  	fcall	_LCD_SET_CURSOR
  1612  091A                     l3523:	
  1613                           
  1614                           ;main_lab3.c: 67:         LCD_WRITE_STRING(string1);
  1615  091A  30DB               	movlw	(low (_string1| 0))& (0+255)
  1616  091B  00F6               	movwf	LCD_WRITE_STRING@a
  1617  091C  3000               	movlw	0
  1618  091D  00F7               	movwf	LCD_WRITE_STRING@a+1
  1619  091E  160A  158A  24A0  120A  158A  	fcall	_LCD_WRITE_STRING
  1620  0923                     l3525:	
  1621                           
  1622                           ;main_lab3.c: 68:         LCD_SET_CURSOR(2,6);
  1623  0923  3006               	movlw	6
  1624  0924  1683               	bsf	3,5	;RP0=1, select bank1
  1625  0925  1303               	bcf	3,6	;RP1=0, select bank1
  1626  0926  00C8               	movwf	??_main^(0+128)
  1627  0927  0848               	movf	??_main^(0+128),w
  1628  0928  00F6               	movwf	LCD_SET_CURSOR@b
  1629  0929  3002               	movlw	2
  1630  092A  160A  158A  23CD  120A  158A  	fcall	_LCD_SET_CURSOR
  1631  092F                     l3527:	
  1632                           
  1633                           ;main_lab3.c: 69:         LCD_WRITE_STRING(string2);
  1634  092F  30D6               	movlw	(low (_string2| 0))& (0+255)
  1635  0930  00F6               	movwf	LCD_WRITE_STRING@a
  1636  0931  3000               	movlw	0
  1637  0932  00F7               	movwf	LCD_WRITE_STRING@a+1
  1638  0933  160A  158A  24A0  120A  158A  	fcall	_LCD_WRITE_STRING
  1639  0938  281C               	goto	l3503
  1640  0939  120A  118A  280C   	ljmp	start
  1641  093C                     __end_of_main:	
  1642                           
  1643                           	psect	text1
  1644  0803                     __ptext1:	
  1645 ;; *************** function _start_conversion *****************
  1646 ;; Defined at:
  1647 ;;		line 24 in file "../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;		None
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;		None
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		None
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       0       0       0       0
  1662 ;;      Locals:         0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0
  1664 ;;      Totals:         0       0       0       0       0
  1665 ;;Total ram usage:        0 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    1
  1668 ;; This function calls:
  1669 ;;		Nothing
  1670 ;; This function is called by:
  1671 ;;		_main
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _start_conversion
  1677  0803                     _start_conversion:	
  1678  0803                     l3217:	
  1679                           ;incstack = 0
  1680                           ; Regs used in _start_conversion: []
  1681                           
  1682                           
  1683                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 25:     ADCON0bits.GO_DONE
      +                           = 1;
  1684  0803  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0804  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0805  149F               	bsf	31,1	;volatile
  1687  0806                     l124:	
  1688  0806  0008               	return
  1689  0807                     __end_of_start_conversion:	
  1690                           
  1691                           	psect	text2
  1692  001F                     __ptext2:	
  1693 ;; *************** function _sprintf *****************
  1694 ;; Defined at:
  1695 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  sp              1    wreg     PTR unsigned char 
  1698 ;;		 -> string2(5), string1(5), 
  1699 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1700 ;;		 -> STR_2(6), STR_1(6), 
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;  sp              1   36[BANK1 ] PTR unsigned char 
  1703 ;;		 -> string2(5), string1(5), 
  1704 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1705 ;;  tmpval          4   26[BANK1 ] struct .
  1706 ;;  val             4   18[BANK1 ] unsigned long 
  1707 ;;  prec            2   37[BANK1 ] int 
  1708 ;;  eexp            2   30[BANK1 ] int 
  1709 ;;  width           2   24[BANK1 ] int 
  1710 ;;  flag            2   22[BANK1 ] unsigned short 
  1711 ;;  cp              2    0        PTR const unsigned char 
  1712 ;;  len             2    0        unsigned int 
  1713 ;;  c               1   39[BANK1 ] unsigned char 
  1714 ;;  ap              1   17[BANK1 ] PTR void [1]
  1715 ;;		 -> ?_sprintf(2), 
  1716 ;;  d               1    0        unsigned char 
  1717 ;; Return value:  Size  Location     Type
  1718 ;;                  2   74[BANK0 ] int 
  1719 ;; Registers used:
  1720 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1721 ;; Tracked objects:
  1722 ;;		On entry : 0/0
  1723 ;;		On exit  : 0/0
  1724 ;;		Unchanged: 0/0
  1725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1726 ;;      Params:         0       5       0       0       0
  1727 ;;      Locals:         0       0      27       0       0
  1728 ;;      Temps:          0       0       5       0       0
  1729 ;;      Totals:         0       5      32       0       0
  1730 ;;Total ram usage:       37 bytes
  1731 ;; Hardware stack levels used:    1
  1732 ;; Hardware stack levels required when called:    4
  1733 ;; This function calls:
  1734 ;;		___awdiv
  1735 ;;		___fladd
  1736 ;;		___fleq
  1737 ;;		___flge
  1738 ;;		___flmul
  1739 ;;		___flneg
  1740 ;;		___flsub
  1741 ;;		___fltol
  1742 ;;		___lldiv
  1743 ;;		___llmod
  1744 ;;		___wmul
  1745 ;;		___xxtofl
  1746 ;;		__div_to_l_
  1747 ;;		__tdiv_to_l_
  1748 ;;		_fround
  1749 ;;		_isdigit
  1750 ;;		_scale
  1751 ;; This function is called by:
  1752 ;;		_main
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _sprintf
  1758  001F                     _sprintf:	
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1762                           ;sprintf@sp stored from wreg
  1763  001F  1683               	bsf	3,5	;RP0=1, select bank1
  1764  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1765  0021  00C4               	movwf	sprintf@sp^(0+128)
  1766  0022                     l3219:	
  1767                           
  1768                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1769  0022  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1770  0023  00A8               	movwf	??_sprintf^(0+128)
  1771  0024  0828               	movf	??_sprintf^(0+128),w
  1772  0025  00B1               	movwf	sprintf@ap^(0+128)
  1773                           
  1774                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1775  0026  2F8E               	goto	l3469
  1776  0027                     l3221:	
  1777                           
  1778                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1779  0027  3025               	movlw	37
  1780  0028  0647               	xorwf	sprintf@c^(0+128),w
  1781  0029  1903               	btfsc	3,2
  1782  002A  282C               	goto	u5111
  1783  002B  282D               	goto	u5110
  1784  002C                     u5111:	
  1785  002C  2839               	goto	l3227
  1786  002D                     u5110:	
  1787  002D                     l3223:	
  1788                           
  1789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1790  002D  0847               	movf	sprintf@c^(0+128),w
  1791  002E  00A8               	movwf	??_sprintf^(0+128)
  1792  002F  0844               	movf	sprintf@sp^(0+128),w
  1793  0030  0084               	movwf	4
  1794  0031  0828               	movf	??_sprintf^(0+128),w
  1795  0032  1383               	bcf	3,7	;select IRP bank0
  1796  0033  0080               	movwf	0
  1797  0034                     l3225:	
  1798  0034  3001               	movlw	1
  1799  0035  00A8               	movwf	??_sprintf^(0+128)
  1800  0036  0828               	movf	??_sprintf^(0+128),w
  1801  0037  07C4               	addwf	sprintf@sp^(0+128),f
  1802                           
  1803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1804  0038  2F8E               	goto	l3469
  1805  0039                     l3227:	
  1806                           
  1807                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  1808  0039  01B8               	clrf	sprintf@width^(0+128)
  1809  003A  01B9               	clrf	(sprintf@width+1)^(0+128)
  1810                           
  1811                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1812  003B  01B6               	clrf	sprintf@flag^(0+128)
  1813  003C  01B7               	clrf	(sprintf@flag+1)^(0+128)
  1814  003D                     l3229:	
  1815                           
  1816                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  1817  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1818  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1819  003F  086A               	movf	sprintf@f,w
  1820  0040  0084               	movwf	4
  1821  0041  160A  158A  200A  120A  118A  	fcall	stringdir
  1822  0046  160A  158A  2376  120A  118A  	fcall	_isdigit
  1823  004B  1C03               	btfss	3,0
  1824  004C  284E               	goto	u5121
  1825  004D  284F               	goto	u5120
  1826  004E                     u5121:	
  1827  004E  2895               	goto	l3241
  1828  004F                     u5120:	
  1829  004F                     l3231:	
  1830                           
  1831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  1832  004F  1683               	bsf	3,5	;RP0=1, select bank1
  1833  0050  1303               	bcf	3,6	;RP1=0, select bank1
  1834  0051  01B8               	clrf	sprintf@width^(0+128)
  1835  0052  01B9               	clrf	(sprintf@width+1)^(0+128)
  1836  0053                     l3233:	
  1837                           
  1838                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  1839  0053  300A               	movlw	10
  1840  0054  00F3               	movwf	___wmul@multiplier
  1841  0055  3000               	movlw	0
  1842  0056  00F4               	movwf	___wmul@multiplier+1
  1843  0057  1683               	bsf	3,5	;RP0=1, select bank1
  1844  0058  1303               	bcf	3,6	;RP1=0, select bank1
  1845  0059  0839               	movf	(sprintf@width+1)^(0+128),w
  1846  005A  00F6               	movwf	___wmul@multiplicand+1
  1847  005B  0838               	movf	sprintf@width^(0+128),w
  1848  005C  00F5               	movwf	___wmul@multiplicand
  1849  005D  160A  158A  23F1  120A  118A  	fcall	___wmul
  1850  0062  0874               	movf	?___wmul+1,w
  1851  0063  1683               	bsf	3,5	;RP0=1, select bank1
  1852  0064  1303               	bcf	3,6	;RP1=0, select bank1
  1853  0065  00B9               	movwf	(sprintf@width+1)^(0+128)
  1854  0066  0873               	movf	?___wmul,w
  1855  0067  00B8               	movwf	sprintf@width^(0+128)
  1856  0068                     l3235:	
  1857                           
  1858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  1859  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1860  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1861  006A  086A               	movf	sprintf@f,w
  1862  006B  0084               	movwf	4
  1863  006C  160A  158A  200A  120A  118A  	fcall	stringdir
  1864  0071  3ED0               	addlw	208
  1865  0072  1683               	bsf	3,5	;RP0=1, select bank1
  1866  0073  1303               	bcf	3,6	;RP1=0, select bank1
  1867  0074  00A8               	movwf	??_sprintf^(0+128)
  1868  0075  30FF               	movlw	255
  1869  0076  1803               	skipnc
  1870  0077  3000               	movlw	0
  1871  0078  00A9               	movwf	(??_sprintf^(0+128)+1)
  1872  0079  0828               	movf	??_sprintf^(0+128),w
  1873  007A  07B8               	addwf	sprintf@width^(0+128),f
  1874  007B  1803               	skipnc
  1875  007C  0AB9               	incf	(sprintf@width+1)^(0+128),f
  1876  007D  0829               	movf	(??_sprintf+1)^(0+128),w
  1877  007E  07B9               	addwf	(sprintf@width+1)^(0+128),f
  1878  007F                     l3237:	
  1879  007F  3001               	movlw	1
  1880  0080  00A8               	movwf	??_sprintf^(0+128)
  1881  0081  0828               	movf	??_sprintf^(0+128),w
  1882  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0084  07EA               	addwf	sprintf@f,f
  1885  0085                     l3239:	
  1886                           
  1887                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  1888  0085  086A               	movf	sprintf@f,w
  1889  0086  0084               	movwf	4
  1890  0087  160A  158A  200A  120A  118A  	fcall	stringdir
  1891  008C  160A  158A  2376  120A  118A  	fcall	_isdigit
  1892  0091  1803               	btfsc	3,0
  1893  0092  2894               	goto	u5131
  1894  0093  2895               	goto	u5130
  1895  0094                     u5131:	
  1896  0094  2853               	goto	l3233
  1897  0095                     u5130:	
  1898  0095                     l3241:	
  1899                           
  1900                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1901  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0097  086A               	movf	sprintf@f,w
  1904  0098  0084               	movwf	4
  1905  0099  160A  158A  200A  120A  118A  	fcall	stringdir
  1906  009E  3A2E               	xorlw	46
  1907  009F  1D03               	skipz
  1908  00A0  28A2               	goto	u5141
  1909  00A1  28A3               	goto	u5140
  1910  00A2                     u5141:	
  1911  00A2  28F5               	goto	l3257
  1912  00A3                     u5140:	
  1913  00A3                     l3243:	
  1914                           
  1915                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1916  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1917  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1918  00A5  1737               	bsf	(sprintf@flag^(0+128)+1),6
  1919  00A6                     l3245:	
  1920                           
  1921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1922  00A6  3001               	movlw	1
  1923  00A7  00A8               	movwf	??_sprintf^(0+128)
  1924  00A8  0828               	movf	??_sprintf^(0+128),w
  1925  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1926  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1927  00AB  07EA               	addwf	sprintf@f,f
  1928  00AC                     l3247:	
  1929                           
  1930                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1931  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  1932  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  1933  00AE  01C5               	clrf	sprintf@prec^(0+128)
  1934  00AF  01C6               	clrf	(sprintf@prec+1)^(0+128)
  1935                           
  1936                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1937  00B0  28E3               	goto	l3255
  1938  00B1                     l3249:	
  1939                           
  1940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1941  00B1  300A               	movlw	10
  1942  00B2  00F3               	movwf	___wmul@multiplier
  1943  00B3  3000               	movlw	0
  1944  00B4  00F4               	movwf	___wmul@multiplier+1
  1945  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1946  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1947  00B7  0846               	movf	(sprintf@prec+1)^(0+128),w
  1948  00B8  00F6               	movwf	___wmul@multiplicand+1
  1949  00B9  0845               	movf	sprintf@prec^(0+128),w
  1950  00BA  00F5               	movwf	___wmul@multiplicand
  1951  00BB  160A  158A  23F1  120A  118A  	fcall	___wmul
  1952  00C0  0874               	movf	?___wmul+1,w
  1953  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1954  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1955  00C3  00C6               	movwf	(sprintf@prec+1)^(0+128)
  1956  00C4  0873               	movf	?___wmul,w
  1957  00C5  00C5               	movwf	sprintf@prec^(0+128)
  1958  00C6                     l3251:	
  1959                           
  1960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1961  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1962  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1963  00C8  086A               	movf	sprintf@f,w
  1964  00C9  0084               	movwf	4
  1965  00CA  160A  158A  200A  120A  118A  	fcall	stringdir
  1966  00CF  3ED0               	addlw	208
  1967  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  1968  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  1969  00D2  00A8               	movwf	??_sprintf^(0+128)
  1970  00D3  30FF               	movlw	255
  1971  00D4  1803               	skipnc
  1972  00D5  3000               	movlw	0
  1973  00D6  00A9               	movwf	(??_sprintf^(0+128)+1)
  1974  00D7  0828               	movf	??_sprintf^(0+128),w
  1975  00D8  07C5               	addwf	sprintf@prec^(0+128),f
  1976  00D9  1803               	skipnc
  1977  00DA  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  1978  00DB  0829               	movf	(??_sprintf+1)^(0+128),w
  1979  00DC  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  1980  00DD                     l3253:	
  1981  00DD  3001               	movlw	1
  1982  00DE  00A8               	movwf	??_sprintf^(0+128)
  1983  00DF  0828               	movf	??_sprintf^(0+128),w
  1984  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1985  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1986  00E2  07EA               	addwf	sprintf@f,f
  1987  00E3                     l3255:	
  1988                           
  1989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1990  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1991  00E4  086A               	movf	sprintf@f,w
  1992  00E5  0084               	movwf	4
  1993  00E6  160A  158A  200A  120A  118A  	fcall	stringdir
  1994  00EB  160A  158A  2376  120A  118A  	fcall	_isdigit
  1995  00F0  1803               	btfsc	3,0
  1996  00F1  28F3               	goto	u5151
  1997  00F2  28F4               	goto	u5150
  1998  00F3                     u5151:	
  1999  00F3  28B1               	goto	l3249
  2000  00F4                     u5150:	
  2001  00F4  28FD               	goto	l3263
  2002  00F5                     l3257:	
  2003                           
  2004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  2005  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  2006  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  2007  00F7  01C5               	clrf	sprintf@prec^(0+128)
  2008  00F8  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2009  00F9                     l3259:	
  2010                           
  2011                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  2012  00F9  1637               	bsf	(sprintf@flag^(0+128)+1),4
  2013  00FA  28FD               	goto	l3263
  2014  00FB                     l303:	
  2015                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  2016                           
  2017                           
  2018                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  2019  00FB  1537               	bsf	(sprintf@flag^(0+128)+1),2
  2020                           
  2021                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  2022  00FC  291B               	goto	l3265
  2023  00FD                     l3263:	
  2024  00FD  3001               	movlw	1
  2025  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2026  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2027  0100  07EA               	addwf	sprintf@f,f
  2028  0101  30FF               	movlw	-1
  2029  0102  076A               	addwf	sprintf@f,w
  2030  0103  0084               	movwf	4
  2031  0104  160A  158A  200A  120A  118A  	fcall	stringdir
  2032  0109  1683               	bsf	3,5	;RP0=1, select bank1
  2033  010A  1303               	bcf	3,6	;RP1=0, select bank1
  2034  010B  00C7               	movwf	sprintf@c^(0+128)
  2035  010C  00A8               	movwf	??_sprintf^(0+128)
  2036  010D  01A9               	clrf	(??_sprintf^(0+128)+1)
  2037                           
  2038                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2039                           ; Switch size 1, requested type "simple"
  2040                           ; Number of cases is 1, Range of values is 0 to 0
  2041                           ; switch strategies available:
  2042                           ; Name         Instructions Cycles
  2043                           ; simple_byte            4     3 (average)
  2044                           ; direct_byte           11     8 (fixed)
  2045                           ; jumptable            260     6 (fixed)
  2046                           ;	Chosen strategy is simple_byte
  2047  010E  0829               	movf	(??_sprintf+1)^(0+128),w
  2048  010F  3A00               	xorlw	0	; case 0
  2049  0110  1903               	skipnz
  2050  0111  2913               	goto	l3599
  2051  0112  2F8E               	goto	l3469
  2052  0113                     l3599:	
  2053                           
  2054                           ; Switch size 1, requested type "simple"
  2055                           ; Number of cases is 2, Range of values is 0 to 102
  2056                           ; switch strategies available:
  2057                           ; Name         Instructions Cycles
  2058                           ; simple_byte            7     4 (average)
  2059                           ; jumptable            260     6 (fixed)
  2060                           ;	Chosen strategy is simple_byte
  2061  0113  0828               	movf	??_sprintf^(0+128),w
  2062  0114  3A00               	xorlw	0	; case 0
  2063  0115  1903               	skipnz
  2064  0116  2FA4               	goto	l3471
  2065  0117  3A66               	xorlw	102	; case 102
  2066  0118  1903               	skipnz
  2067  0119  28FB               	goto	l303
  2068  011A  2F8E               	goto	l3469
  2069  011B                     l3265:	
  2070                           
  2071                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  2072  011B  3000               	movlw	0
  2073  011C  0536               	andwf	sprintf@flag^(0+128),w
  2074  011D  00A8               	movwf	??_sprintf^(0+128)
  2075  011E  3007               	movlw	7
  2076  011F  0537               	andwf	(sprintf@flag+1)^(0+128),w
  2077  0120  00A9               	movwf	(??_sprintf+1)^(0+128)
  2078  0121  0828               	movf	??_sprintf^(0+128),w
  2079  0122  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2080  0123  1903               	btfsc	3,2
  2081  0124  2926               	goto	u5161
  2082  0125  2927               	goto	u5160
  2083  0126                     u5161:	
  2084  0126  2ECB               	goto	l3423
  2085  0127                     u5160:	
  2086  0127                     l3267:	
  2087                           
  2088                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  2089  0127  1E37               	btfss	(sprintf@flag+1)^(0+128),4
  2090  0128  292A               	goto	u5171
  2091  0129  292B               	goto	u5170
  2092  012A                     u5171:	
  2093  012A  292F               	goto	l3271
  2094  012B                     u5170:	
  2095  012B                     l3269:	
  2096                           
  2097                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  2098  012B  3006               	movlw	6
  2099  012C  00C5               	movwf	sprintf@prec^(0+128)
  2100  012D  3000               	movlw	0
  2101  012E  00C6               	movwf	(sprintf@prec^(0+128)+1)
  2102  012F                     l3271:	
  2103                           
  2104                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2105  012F  0831               	movf	sprintf@ap^(0+128),w
  2106  0130  0084               	movwf	4
  2107  0131  1383               	bcf	3,7	;select IRP bank0
  2108  0132  0800               	movf	0,w
  2109  0133  00C0               	movwf	sprintf@fval^(0+128)
  2110  0134  0A84               	incf	4,f
  2111  0135  0800               	movf	0,w
  2112  0136  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2113  0137  0A84               	incf	4,f
  2114  0138  0800               	movf	0,w
  2115  0139  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2116  013A  0A84               	incf	4,f
  2117  013B  0800               	movf	0,w
  2118  013C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2119  013D                     l3273:	
  2120  013D  3004               	movlw	4
  2121  013E  00A8               	movwf	??_sprintf^(0+128)
  2122  013F  0828               	movf	??_sprintf^(0+128),w
  2123  0140  07B1               	addwf	sprintf@ap^(0+128),f
  2124  0141                     l3275:	
  2125                           
  2126                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  2127  0141  0843               	movf	(sprintf@fval+3)^(0+128),w
  2128  0142  00F6               	movwf	___flge@ff1+3
  2129  0143  0842               	movf	(sprintf@fval+2)^(0+128),w
  2130  0144  00F5               	movwf	___flge@ff1+2
  2131  0145  0841               	movf	(sprintf@fval+1)^(0+128),w
  2132  0146  00F4               	movwf	___flge@ff1+1
  2133  0147  0840               	movf	sprintf@fval^(0+128),w
  2134  0148  00F3               	movwf	___flge@ff1
  2135  0149  3000               	movlw	0
  2136  014A  00FA               	movwf	___flge@ff2+3
  2137  014B  3000               	movlw	0
  2138  014C  00F9               	movwf	___flge@ff2+2
  2139  014D  3000               	movlw	0
  2140  014E  00F8               	movwf	___flge@ff2+1
  2141  014F  3000               	movlw	0
  2142  0150  00F7               	movwf	___flge@ff2
  2143  0151  160A  158A  275C  120A  118A  	fcall	___flge
  2144  0156  1803               	btfsc	3,0
  2145  0157  2959               	goto	u5181
  2146  0158  295A               	goto	u5180
  2147  0159                     u5181:	
  2148  0159  2977               	goto	l3281
  2149  015A                     u5180:	
  2150  015A                     l3277:	
  2151                           
  2152                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  2153  015A  1683               	bsf	3,5	;RP0=1, select bank1
  2154  015B  1303               	bcf	3,6	;RP1=0, select bank1
  2155  015C  0843               	movf	(sprintf@fval+3)^(0+128),w
  2156  015D  00F6               	movwf	___flneg@f1+3
  2157  015E  0842               	movf	(sprintf@fval+2)^(0+128),w
  2158  015F  00F5               	movwf	___flneg@f1+2
  2159  0160  0841               	movf	(sprintf@fval+1)^(0+128),w
  2160  0161  00F4               	movwf	___flneg@f1+1
  2161  0162  0840               	movf	sprintf@fval^(0+128),w
  2162  0163  00F3               	movwf	___flneg@f1
  2163  0164  160A  158A  236B  120A  118A  	fcall	___flneg
  2164  0169  0876               	movf	?___flneg+3,w
  2165  016A  1683               	bsf	3,5	;RP0=1, select bank1
  2166  016B  1303               	bcf	3,6	;RP1=0, select bank1
  2167  016C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2168  016D  0875               	movf	?___flneg+2,w
  2169  016E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2170  016F  0874               	movf	?___flneg+1,w
  2171  0170  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2172  0171  0873               	movf	?___flneg,w
  2173  0172  00C0               	movwf	sprintf@fval^(0+128)
  2174  0173                     l3279:	
  2175                           
  2176                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2177  0173  3003               	movlw	3
  2178  0174  04B6               	iorwf	sprintf@flag^(0+128),f
  2179  0175  3000               	movlw	0
  2180  0176  04B7               	iorwf	(sprintf@flag+1)^(0+128),f
  2181  0177                     l3281:	
  2182                           
  2183                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2184  0177  1683               	bsf	3,5	;RP0=1, select bank1
  2185  0178  1303               	bcf	3,6	;RP1=0, select bank1
  2186  0179  01BE               	clrf	sprintf@eexp^(0+128)
  2187  017A  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  2188  017B                     l3283:	
  2189                           
  2190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2191  017B  0843               	movf	(sprintf@fval+3)^(0+128),w
  2192  017C  00F6               	movwf	___fleq@ff1+3
  2193  017D  0842               	movf	(sprintf@fval+2)^(0+128),w
  2194  017E  00F5               	movwf	___fleq@ff1+2
  2195  017F  0841               	movf	(sprintf@fval+1)^(0+128),w
  2196  0180  00F4               	movwf	___fleq@ff1+1
  2197  0181  0840               	movf	sprintf@fval^(0+128),w
  2198  0182  00F3               	movwf	___fleq@ff1
  2199  0183  3000               	movlw	0
  2200  0184  00FA               	movwf	___fleq@ff2+3
  2201  0185  3000               	movlw	0
  2202  0186  00F9               	movwf	___fleq@ff2+2
  2203  0187  3000               	movlw	0
  2204  0188  00F8               	movwf	___fleq@ff2+1
  2205  0189  3000               	movlw	0
  2206  018A  00F7               	movwf	___fleq@ff2
  2207  018B  160A  158A  252C  120A  118A  	fcall	___fleq
  2208  0190  1803               	btfsc	3,0
  2209  0191  2993               	goto	u5191
  2210  0192  2994               	goto	u5190
  2211  0193                     u5191:	
  2212  0193  2A94               	goto	l3309
  2213  0194                     u5190:	
  2214  0194                     l3285:	
  2215                           
  2216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2217  0194  1003               	clrc
  2218  0195  1683               	bsf	3,5	;RP0=1, select bank1
  2219  0196  1303               	bcf	3,6	;RP1=0, select bank1
  2220  0197  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  2221  0198  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  2222  0199  3E82               	addlw	130
  2223  019A  00BE               	movwf	sprintf@eexp^(0+128)
  2224  019B  30FF               	movlw	255
  2225  019C  1803               	skipnc
  2226  019D  3000               	movlw	0
  2227  019E  00BF               	movwf	(sprintf@eexp^(0+128)+1)
  2228  019F                     l3287:	
  2229                           
  2230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2231  019F  30FF               	movlw	255
  2232  01A0  07BE               	addwf	sprintf@eexp^(0+128),f
  2233  01A1  1803               	skipnc
  2234  01A2  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2235  01A3  30FF               	movlw	255
  2236  01A4  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2237  01A5                     l3289:	
  2238                           
  2239                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2240  01A5  3003               	movlw	3
  2241  01A6  00F3               	movwf	___wmul@multiplier
  2242  01A7  3000               	movlw	0
  2243  01A8  00F4               	movwf	___wmul@multiplier+1
  2244  01A9  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2245  01AA  00F6               	movwf	___wmul@multiplicand+1
  2246  01AB  083E               	movf	sprintf@eexp^(0+128),w
  2247  01AC  00F5               	movwf	___wmul@multiplicand
  2248  01AD  160A  158A  23F1  120A  118A  	fcall	___wmul
  2249  01B2  0874               	movf	?___wmul+1,w
  2250  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2251  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2252  01B5  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  2253  01B6  0873               	movf	?___wmul,w
  2254  01B7  00BE               	movwf	sprintf@eexp^(0+128)
  2255  01B8                     l3291:	
  2256                           
  2257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2258  01B8  300A               	movlw	10
  2259  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2260  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2261  01BB  00A0               	movwf	___awdiv@divisor
  2262  01BC  3000               	movlw	0
  2263  01BD  00A1               	movwf	___awdiv@divisor+1
  2264  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2265  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  2266  01C0  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2267  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2268  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2269  01C3  00A3               	movwf	___awdiv@dividend+1
  2270  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2271  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  2272  01C6  083E               	movf	sprintf@eexp^(0+128),w
  2273  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2274  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2275  01C9  00A2               	movwf	___awdiv@dividend
  2276  01CA  160A  118A  2007  120A  118A  	fcall	___awdiv
  2277  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2278  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2279  01D1  0821               	movf	?___awdiv+1,w
  2280  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2281  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2282  01D4  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  2283  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2284  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2285  01D7  0820               	movf	?___awdiv,w
  2286  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2287  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2288  01DA  00BE               	movwf	sprintf@eexp^(0+128)
  2289  01DB                     l3293:	
  2290                           
  2291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2292  01DB  1FBF               	btfss	(sprintf@eexp+1)^(0+128),7
  2293  01DC  29DE               	goto	u5201
  2294  01DD  29DF               	goto	u5200
  2295  01DE                     u5201:	
  2296  01DE  29E5               	goto	l3297
  2297  01DF                     u5200:	
  2298  01DF                     l3295:	
  2299                           
  2300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2301  01DF  30FF               	movlw	255
  2302  01E0  07BE               	addwf	sprintf@eexp^(0+128),f
  2303  01E1  1803               	skipnc
  2304  01E2  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2305  01E3  30FF               	movlw	255
  2306  01E4  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2307  01E5                     l3297:	
  2308                           
  2309                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2310  01E5  033E               	decf	sprintf@eexp^(0+128),w
  2311  01E6  3AFF               	xorlw	255
  2312  01E7  120A  158A  249D  120A  118A  	fcall	_scale
  2313  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2314  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2315  01EE  0845               	movf	?_scale+3,w
  2316  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2317  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2318  01F1  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2319  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2320  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2321  01F4  0844               	movf	?_scale+2,w
  2322  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  2323  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  2324  01F7  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2325  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2326  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2327  01FA  0843               	movf	?_scale+1,w
  2328  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  2329  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  2330  01FD  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2331  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2332  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2333  0200  0842               	movf	?_scale,w
  2334  0201  1683               	bsf	3,5	;RP0=1, select bank1
  2335  0202  1303               	bcf	3,6	;RP1=0, select bank1
  2336  0203  00BA               	movwf	sprintf@tmpval^(0+128)
  2337  0204                     l3299:	
  2338                           
  2339                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2340  0204  0843               	movf	(sprintf@fval+3)^(0+128),w
  2341  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2342  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2343  0207  00AB               	movwf	___flmul@b+3
  2344  0208  1683               	bsf	3,5	;RP0=1, select bank1
  2345  0209  1303               	bcf	3,6	;RP1=0, select bank1
  2346  020A  0842               	movf	(sprintf@fval+2)^(0+128),w
  2347  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2348  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2349  020D  00AA               	movwf	___flmul@b+2
  2350  020E  1683               	bsf	3,5	;RP0=1, select bank1
  2351  020F  1303               	bcf	3,6	;RP1=0, select bank1
  2352  0210  0841               	movf	(sprintf@fval+1)^(0+128),w
  2353  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2354  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2355  0213  00A9               	movwf	___flmul@b+1
  2356  0214  1683               	bsf	3,5	;RP0=1, select bank1
  2357  0215  1303               	bcf	3,6	;RP1=0, select bank1
  2358  0216  0840               	movf	sprintf@fval^(0+128),w
  2359  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2361  0219  00A8               	movwf	___flmul@b
  2362  021A  1683               	bsf	3,5	;RP0=1, select bank1
  2363  021B  1303               	bcf	3,6	;RP1=0, select bank1
  2364  021C  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2365  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2366  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2367  021F  00AF               	movwf	___flmul@a+3
  2368  0220  1683               	bsf	3,5	;RP0=1, select bank1
  2369  0221  1303               	bcf	3,6	;RP1=0, select bank1
  2370  0222  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2371  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2372  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2373  0225  00AE               	movwf	___flmul@a+2
  2374  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2375  0227  1303               	bcf	3,6	;RP1=0, select bank1
  2376  0228  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2377  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2378  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2379  022B  00AD               	movwf	___flmul@a+1
  2380  022C  1683               	bsf	3,5	;RP0=1, select bank1
  2381  022D  1303               	bcf	3,6	;RP1=0, select bank1
  2382  022E  083A               	movf	sprintf@tmpval^(0+128),w
  2383  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0231  00AC               	movwf	___flmul@a
  2386  0232  120A  158A  213C  120A  118A  	fcall	___flmul
  2387  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2388  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2389  0239  082B               	movf	?___flmul+3,w
  2390  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2391  023B  1303               	bcf	3,6	;RP1=0, select bank1
  2392  023C  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2393  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2394  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2395  023F  082A               	movf	?___flmul+2,w
  2396  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0242  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2399  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0245  0829               	movf	?___flmul+1,w
  2402  0246  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0247  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0248  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2405  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2406  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2407  024B  0828               	movf	?___flmul,w
  2408  024C  1683               	bsf	3,5	;RP0=1, select bank1
  2409  024D  1303               	bcf	3,6	;RP1=0, select bank1
  2410  024E  00BA               	movwf	sprintf@tmpval^(0+128)
  2411  024F                     l3301:	
  2412                           
  2413                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2414  024F  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2415  0250  00F6               	movwf	___flge@ff1+3
  2416  0251  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2417  0252  00F5               	movwf	___flge@ff1+2
  2418  0253  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2419  0254  00F4               	movwf	___flge@ff1+1
  2420  0255  083A               	movf	sprintf@tmpval^(0+128),w
  2421  0256  00F3               	movwf	___flge@ff1
  2422  0257  303F               	movlw	63
  2423  0258  00FA               	movwf	___flge@ff2+3
  2424  0259  3080               	movlw	128
  2425  025A  00F9               	movwf	___flge@ff2+2
  2426  025B  3000               	movlw	0
  2427  025C  00F8               	movwf	___flge@ff2+1
  2428  025D  3000               	movlw	0
  2429  025E  00F7               	movwf	___flge@ff2
  2430  025F  160A  158A  275C  120A  118A  	fcall	___flge
  2431  0264  1803               	btfsc	3,0
  2432  0265  2A67               	goto	u5211
  2433  0266  2A68               	goto	u5210
  2434  0267                     u5211:	
  2435  0267  2A71               	goto	l3305
  2436  0268                     u5210:	
  2437  0268                     l3303:	
  2438                           
  2439                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2440  0268  30FF               	movlw	255
  2441  0269  1683               	bsf	3,5	;RP0=1, select bank1
  2442  026A  1303               	bcf	3,6	;RP1=0, select bank1
  2443  026B  07BE               	addwf	sprintf@eexp^(0+128),f
  2444  026C  1803               	skipnc
  2445  026D  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2446  026E  30FF               	movlw	255
  2447  026F  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2448  0270  2A94               	goto	l3309
  2449  0271                     l3305:	
  2450  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2451  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2452  0273  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2453  0274  00F6               	movwf	___flge@ff1+3
  2454  0275  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2455  0276  00F5               	movwf	___flge@ff1+2
  2456  0277  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2457  0278  00F4               	movwf	___flge@ff1+1
  2458  0279  083A               	movf	sprintf@tmpval^(0+128),w
  2459  027A  00F3               	movwf	___flge@ff1
  2460  027B  3041               	movlw	65
  2461  027C  00FA               	movwf	___flge@ff2+3
  2462  027D  3020               	movlw	32
  2463  027E  00F9               	movwf	___flge@ff2+2
  2464  027F  3000               	movlw	0
  2465  0280  00F8               	movwf	___flge@ff2+1
  2466  0281  3000               	movlw	0
  2467  0282  00F7               	movwf	___flge@ff2
  2468  0283  160A  158A  275C  120A  118A  	fcall	___flge
  2469  0288  1C03               	btfss	3,0
  2470  0289  2A8B               	goto	u5221
  2471  028A  2A8C               	goto	u5220
  2472  028B                     u5221:	
  2473  028B  2A94               	goto	l3309
  2474  028C                     u5220:	
  2475  028C                     l3307:	
  2476                           
  2477                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2478  028C  3001               	movlw	1
  2479  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2480  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2481  028F  07BE               	addwf	sprintf@eexp^(0+128),f
  2482  0290  1803               	skipnc
  2483  0291  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2484  0292  3000               	movlw	0
  2485  0293  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2486  0294                     l3309:	
  2487                           
  2488                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2489  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2490  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2491  0296  0846               	movf	(sprintf@prec+1)^(0+128),w
  2492  0297  3A80               	xorlw	128
  2493  0298  00FF               	movwf	btemp+1
  2494  0299  3080               	movlw	128
  2495  029A  027F               	subwf	btemp+1,w
  2496  029B  1D03               	skipz
  2497  029C  2A9F               	goto	u5235
  2498  029D  300D               	movlw	13
  2499  029E  0245               	subwf	sprintf@prec^(0+128),w
  2500  029F                     u5235:	
  2501  029F  1803               	skipnc
  2502  02A0  2AA2               	goto	u5231
  2503  02A1  2AA3               	goto	u5230
  2504  02A2                     u5231:	
  2505  02A2  2AEA               	goto	l3313
  2506  02A3                     u5230:	
  2507  02A3                     l3311:	
  2508                           
  2509                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2510  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2511  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2512  02A5  0845               	movf	sprintf@prec^(0+128),w
  2513  02A6  160A  118A  236B  120A  118A  	fcall	_fround
  2514  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2515  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2516  02AD  0845               	movf	?_fround+3,w
  2517  02AE  00D9               	movwf	___fladd@b+3
  2518  02AF  0844               	movf	?_fround+2,w
  2519  02B0  00D8               	movwf	___fladd@b+2
  2520  02B1  0843               	movf	?_fround+1,w
  2521  02B2  00D7               	movwf	___fladd@b+1
  2522  02B3  0842               	movf	?_fround,w
  2523  02B4  00D6               	movwf	___fladd@b
  2524  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2525  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2526  02B7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2527  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2528  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2529  02BA  00DD               	movwf	___fladd@a+3
  2530  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2531  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2532  02BD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2533  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2534  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2535  02C0  00DC               	movwf	___fladd@a+2
  2536  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2537  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2538  02C3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2539  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2540  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2541  02C6  00DB               	movwf	___fladd@a+1
  2542  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2543  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2544  02C9  0840               	movf	sprintf@fval^(0+128),w
  2545  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2546  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2547  02CC  00DA               	movwf	___fladd@a
  2548  02CD  160A  118A  2578  120A  118A  	fcall	___fladd
  2549  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2550  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2551  02D4  0859               	movf	?___fladd+3,w
  2552  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2553  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  2554  02D7  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2555  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2556  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2557  02DA  0858               	movf	?___fladd+2,w
  2558  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2559  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2560  02DD  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2561  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2562  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2563  02E0  0857               	movf	?___fladd+1,w
  2564  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2565  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  2566  02E3  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2567  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2568  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2569  02E6  0856               	movf	?___fladd,w
  2570  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2571  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2572  02E9  00C0               	movwf	sprintf@fval^(0+128)
  2573  02EA                     l3313:	
  2574                           
  2575                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2576  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2577  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2578  02EC  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2579  02ED  3A80               	xorlw	128
  2580  02EE  00FF               	movwf	btemp+1
  2581  02EF  3080               	movlw	128
  2582  02F0  027F               	subwf	btemp+1,w
  2583  02F1  1D03               	skipz
  2584  02F2  2AF5               	goto	u5245
  2585  02F3  300A               	movlw	10
  2586  02F4  023E               	subwf	sprintf@eexp^(0+128),w
  2587  02F5                     u5245:	
  2588  02F5  1803               	skipnc
  2589  02F6  2AF8               	goto	u5241
  2590  02F7  2AF9               	goto	u5240
  2591  02F8                     u5241:	
  2592  02F8  2B4A               	goto	l3321
  2593  02F9                     u5240:	
  2594  02F9                     l3315:	
  2595  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  2596  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  2597  02FB  0843               	movf	(sprintf@fval+3)^(0+128),w
  2598  02FC  00F6               	movwf	___fleq@ff1+3
  2599  02FD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2600  02FE  00F5               	movwf	___fleq@ff1+2
  2601  02FF  0841               	movf	(sprintf@fval+1)^(0+128),w
  2602  0300  00F4               	movwf	___fleq@ff1+1
  2603  0301  0840               	movf	sprintf@fval^(0+128),w
  2604  0302  00F3               	movwf	___fleq@ff1
  2605  0303  3000               	movlw	0
  2606  0304  00FA               	movwf	___fleq@ff2+3
  2607  0305  3000               	movlw	0
  2608  0306  00F9               	movwf	___fleq@ff2+2
  2609  0307  3000               	movlw	0
  2610  0308  00F8               	movwf	___fleq@ff2+1
  2611  0309  3000               	movlw	0
  2612  030A  00F7               	movwf	___fleq@ff2
  2613  030B  160A  158A  252C  120A  118A  	fcall	___fleq
  2614  0310  1803               	btfsc	3,0
  2615  0311  2B13               	goto	u5251
  2616  0312  2B14               	goto	u5250
  2617  0313                     u5251:	
  2618  0313  2BBC               	goto	l3335
  2619  0314                     u5250:	
  2620  0314                     l3317:	
  2621  0314  1683               	bsf	3,5	;RP0=1, select bank1
  2622  0315  1303               	bcf	3,6	;RP1=0, select bank1
  2623  0316  0843               	movf	(sprintf@fval+3)^(0+128),w
  2624  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2625  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2626  0319  00D8               	movwf	___fltol@f1+3
  2627  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2628  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2629  031C  0842               	movf	(sprintf@fval+2)^(0+128),w
  2630  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2631  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2632  031F  00D7               	movwf	___fltol@f1+2
  2633  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2634  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2635  0322  0841               	movf	(sprintf@fval+1)^(0+128),w
  2636  0323  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0324  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0325  00D6               	movwf	___fltol@f1+1
  2639  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2640  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2641  0328  0840               	movf	sprintf@fval^(0+128),w
  2642  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2643  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2644  032B  00D5               	movwf	___fltol@f1
  2645  032C  160A  158A  26E0  120A  118A  	fcall	___fltol
  2646  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2647  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2648  0333  0858               	movf	?___fltol+3,w
  2649  0334  0457               	iorwf	?___fltol+2,w
  2650  0335  0456               	iorwf	?___fltol+1,w
  2651  0336  0455               	iorwf	?___fltol,w
  2652  0337  1D03               	skipz
  2653  0338  2B3A               	goto	u5261
  2654  0339  2B3B               	goto	u5260
  2655  033A                     u5261:	
  2656  033A  2BBC               	goto	l3335
  2657  033B                     u5260:	
  2658  033B                     l3319:	
  2659  033B  1683               	bsf	3,5	;RP0=1, select bank1
  2660  033C  1303               	bcf	3,6	;RP1=0, select bank1
  2661  033D  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2662  033E  3A80               	xorlw	128
  2663  033F  00FF               	movwf	btemp+1
  2664  0340  3080               	movlw	128
  2665  0341  027F               	subwf	btemp+1,w
  2666  0342  1D03               	skipz
  2667  0343  2B46               	goto	u5275
  2668  0344  3002               	movlw	2
  2669  0345  023E               	subwf	sprintf@eexp^(0+128),w
  2670  0346                     u5275:	
  2671  0346  1C03               	skipc
  2672  0347  2B49               	goto	u5271
  2673  0348  2B4A               	goto	u5270
  2674  0349                     u5271:	
  2675  0349  2BBC               	goto	l3335
  2676  034A                     u5270:	
  2677  034A                     l3321:	
  2678                           
  2679                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  2680  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2681  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2682  034C  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2683  034D  00F6               	movwf	___flge@ff1+3
  2684  034E  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2685  034F  00F5               	movwf	___flge@ff1+2
  2686  0350  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2687  0351  00F4               	movwf	___flge@ff1+1
  2688  0352  083A               	movf	sprintf@tmpval^(0+128),w
  2689  0353  00F3               	movwf	___flge@ff1
  2690  0354  3040               	movlw	64
  2691  0355  00FA               	movwf	___flge@ff2+3
  2692  0356  3089               	movlw	137
  2693  0357  00F9               	movwf	___flge@ff2+2
  2694  0358  3070               	movlw	112
  2695  0359  00F8               	movwf	___flge@ff2+1
  2696  035A  305F               	movlw	95
  2697  035B  00F7               	movwf	___flge@ff2
  2698  035C  160A  158A  275C  120A  118A  	fcall	___flge
  2699  0361  1803               	btfsc	3,0
  2700  0362  2B64               	goto	u5281
  2701  0363  2B65               	goto	u5280
  2702  0364                     u5281:	
  2703  0364  2B6E               	goto	l3325
  2704  0365                     u5280:	
  2705  0365                     l3323:	
  2706                           
  2707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2708  0365  30F7               	movlw	247
  2709  0366  1683               	bsf	3,5	;RP0=1, select bank1
  2710  0367  1303               	bcf	3,6	;RP1=0, select bank1
  2711  0368  07BE               	addwf	sprintf@eexp^(0+128),f
  2712  0369  1803               	skipnc
  2713  036A  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2714  036B  30FF               	movlw	255
  2715  036C  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2716                           
  2717                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  2718  036D  2B76               	goto	l3327
  2719  036E                     l3325:	
  2720                           
  2721                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2722  036E  30F8               	movlw	248
  2723  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2724  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2725  0371  07BE               	addwf	sprintf@eexp^(0+128),f
  2726  0372  1803               	skipnc
  2727  0373  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2728  0374  30FF               	movlw	255
  2729  0375  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2730  0376                     l3327:	
  2731                           
  2732                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2733  0376  083E               	movf	sprintf@eexp^(0+128),w
  2734  0377  120A  158A  249D  120A  118A  	fcall	_scale
  2735  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2736  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2737  037E  0845               	movf	?_scale+3,w
  2738  037F  1683               	bsf	3,5	;RP0=1, select bank1
  2739  0380  1303               	bcf	3,6	;RP1=0, select bank1
  2740  0381  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2741  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2742  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0384  0844               	movf	?_scale+2,w
  2744  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2745  0386  1303               	bcf	3,6	;RP1=0, select bank1
  2746  0387  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2747  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2749  038A  0843               	movf	?_scale+1,w
  2750  038B  1683               	bsf	3,5	;RP0=1, select bank1
  2751  038C  1303               	bcf	3,6	;RP1=0, select bank1
  2752  038D  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2753  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2754  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0390  0842               	movf	?_scale,w
  2756  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2757  0392  1303               	bcf	3,6	;RP1=0, select bank1
  2758  0393  00BA               	movwf	sprintf@tmpval^(0+128)
  2759  0394                     l3329:	
  2760  0394  0843               	movf	(sprintf@fval+3)^(0+128),w
  2761  0395  00F6               	movwf	__div_to_l_@f1+3
  2762  0396  0842               	movf	(sprintf@fval+2)^(0+128),w
  2763  0397  00F5               	movwf	__div_to_l_@f1+2
  2764  0398  0841               	movf	(sprintf@fval+1)^(0+128),w
  2765  0399  00F4               	movwf	__div_to_l_@f1+1
  2766  039A  0840               	movf	sprintf@fval^(0+128),w
  2767  039B  00F3               	movwf	__div_to_l_@f1
  2768  039C  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2769  039D  00FA               	movwf	__div_to_l_@f2+3
  2770  039E  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2771  039F  00F9               	movwf	__div_to_l_@f2+2
  2772  03A0  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2773  03A1  00F8               	movwf	__div_to_l_@f2+1
  2774  03A2  083A               	movf	sprintf@tmpval^(0+128),w
  2775  03A3  00F7               	movwf	__div_to_l_@f2
  2776  03A4  160A  118A  21E9  120A  118A  	fcall	__div_to_l_
  2777  03A9  0876               	movf	?__div_to_l_+3,w
  2778  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2779  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2780  03AC  00B5               	movwf	(sprintf@val+3)^(0+128)
  2781  03AD  0875               	movf	?__div_to_l_+2,w
  2782  03AE  00B4               	movwf	(sprintf@val+2)^(0+128)
  2783  03AF  0874               	movf	?__div_to_l_+1,w
  2784  03B0  00B3               	movwf	(sprintf@val+1)^(0+128)
  2785  03B1  0873               	movf	?__div_to_l_,w
  2786  03B2  00B2               	movwf	sprintf@val^(0+128)
  2787  03B3                     l3333:	
  2788                           
  2789                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  2790  03B3  3000               	movlw	0
  2791  03B4  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2792  03B5  3000               	movlw	0
  2793  03B6  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2794  03B7  3000               	movlw	0
  2795  03B8  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2796  03B9  3000               	movlw	0
  2797  03BA  00C0               	movwf	sprintf@fval^(0+128)
  2798                           
  2799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  2800  03BB  2C22               	goto	l3341
  2801  03BC                     l3335:	
  2802                           
  2803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  2804  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2805  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  2806  03BE  0843               	movf	(sprintf@fval+3)^(0+128),w
  2807  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2808  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2809  03C1  00D8               	movwf	___fltol@f1+3
  2810  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2811  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2812  03C4  0842               	movf	(sprintf@fval+2)^(0+128),w
  2813  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2814  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2815  03C7  00D7               	movwf	___fltol@f1+2
  2816  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2817  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2818  03CA  0841               	movf	(sprintf@fval+1)^(0+128),w
  2819  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2820  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2821  03CD  00D6               	movwf	___fltol@f1+1
  2822  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  2823  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  2824  03D0  0840               	movf	sprintf@fval^(0+128),w
  2825  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2826  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2827  03D3  00D5               	movwf	___fltol@f1
  2828  03D4  160A  158A  26E0  120A  118A  	fcall	___fltol
  2829  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2830  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2831  03DB  0858               	movf	?___fltol+3,w
  2832  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2833  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  2834  03DE  00B5               	movwf	(sprintf@val+3)^(0+128)
  2835  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2836  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2837  03E1  0857               	movf	?___fltol+2,w
  2838  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2839  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2840  03E4  00B4               	movwf	(sprintf@val+2)^(0+128)
  2841  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2842  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2843  03E7  0856               	movf	?___fltol+1,w
  2844  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2845  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2846  03EA  00B3               	movwf	(sprintf@val+1)^(0+128)
  2847  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2848  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2849  03ED  0855               	movf	?___fltol,w
  2850  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2851  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2852  03F0  00B2               	movwf	sprintf@val^(0+128)
  2853  03F1                     l3337:	
  2854                           
  2855                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  2856  03F1  0835               	movf	(sprintf@val+3)^(0+128),w
  2857  03F2  00F6               	movwf	___xxtofl@val+3
  2858  03F3  0834               	movf	(sprintf@val+2)^(0+128),w
  2859  03F4  00F5               	movwf	___xxtofl@val+2
  2860  03F5  0833               	movf	(sprintf@val+1)^(0+128),w
  2861  03F6  00F4               	movwf	___xxtofl@val+1
  2862  03F7  0832               	movf	sprintf@val^(0+128),w
  2863  03F8  00F3               	movwf	___xxtofl@val
  2864  03F9  3000               	movlw	0
  2865  03FA  160A  118A  2070  120A  118A  	fcall	___xxtofl
  2866  03FF  0876               	movf	?___xxtofl+3,w
  2867  0400  1683               	bsf	3,5	;RP0=1, select bank1
  2868  0401  1303               	bcf	3,6	;RP1=0, select bank1
  2869  0402  00A3               	movwf	(___flsub@a+3)^(0+128)
  2870  0403  0875               	movf	?___xxtofl+2,w
  2871  0404  00A2               	movwf	(___flsub@a+2)^(0+128)
  2872  0405  0874               	movf	?___xxtofl+1,w
  2873  0406  00A1               	movwf	(___flsub@a+1)^(0+128)
  2874  0407  0873               	movf	?___xxtofl,w
  2875  0408  00A0               	movwf	___flsub@a^(0+128)
  2876  0409  0843               	movf	(sprintf@fval+3)^(0+128),w
  2877  040A  00A7               	movwf	(___flsub@b+3)^(0+128)
  2878  040B  0842               	movf	(sprintf@fval+2)^(0+128),w
  2879  040C  00A6               	movwf	(___flsub@b+2)^(0+128)
  2880  040D  0841               	movf	(sprintf@fval+1)^(0+128),w
  2881  040E  00A5               	movwf	(___flsub@b+1)^(0+128)
  2882  040F  0840               	movf	sprintf@fval^(0+128),w
  2883  0410  00A4               	movwf	___flsub@b^(0+128)
  2884  0411  160A  158A  257C  120A  118A  	fcall	___flsub
  2885  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2886  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2887  0418  0823               	movf	(?___flsub+3)^(0+128),w
  2888  0419  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2889  041A  0822               	movf	(?___flsub+2)^(0+128),w
  2890  041B  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2891  041C  0821               	movf	(?___flsub+1)^(0+128),w
  2892  041D  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2893  041E  0820               	movf	?___flsub^(0+128),w
  2894  041F  00C0               	movwf	sprintf@fval^(0+128)
  2895  0420                     l3339:	
  2896                           
  2897                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  2898  0420  01BE               	clrf	sprintf@eexp^(0+128)
  2899  0421  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  2900  0422                     l3341:	
  2901                           
  2902                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2903  0422  01C7               	clrf	sprintf@c^(0+128)
  2904  0423  0AC7               	incf	sprintf@c^(0+128),f
  2905  0424                     l3347:	
  2906                           
  2907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  2908  0424  0847               	movf	sprintf@c^(0+128),w
  2909  0425  00A8               	movwf	??_sprintf^(0+128)
  2910  0426  3001               	movlw	1
  2911  0427                     u5295:	
  2912  0427  1003               	clrc
  2913  0428  0DA8               	rlf	??_sprintf^(0+128),f
  2914  0429  3EFF               	addlw	-1
  2915  042A  1D03               	skipz
  2916  042B  2C27               	goto	u5295
  2917  042C  1003               	clrc
  2918  042D  0D28               	rlf	??_sprintf^(0+128),w
  2919  042E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2920  042F  0084               	movwf	4
  2921  0430  160A  158A  200A  120A  118A  	fcall	stringdir
  2922  0435  00A9               	movwf	(??_sprintf+1)^(0+128)
  2923  0436  160A  158A  200A  120A  118A  	fcall	stringdir
  2924  043B  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  2925  043C  160A  158A  200A  120A  118A  	fcall	stringdir
  2926  0441  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  2927  0442  160A  158A  200A  120A  118A  	fcall	stringdir
  2928  0447  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  2929  0448  082C               	movf	(??_sprintf+4)^(0+128),w
  2930  0449  0235               	subwf	(sprintf@val+3)^(0+128),w
  2931  044A  1D03               	skipz
  2932  044B  2C56               	goto	u5305
  2933  044C  082B               	movf	(??_sprintf+3)^(0+128),w
  2934  044D  0234               	subwf	(sprintf@val+2)^(0+128),w
  2935  044E  1D03               	skipz
  2936  044F  2C56               	goto	u5305
  2937  0450  082A               	movf	(??_sprintf+2)^(0+128),w
  2938  0451  0233               	subwf	(sprintf@val+1)^(0+128),w
  2939  0452  1D03               	skipz
  2940  0453  2C56               	goto	u5305
  2941  0454  0829               	movf	(??_sprintf+1)^(0+128),w
  2942  0455  0232               	subwf	sprintf@val^(0+128),w
  2943  0456                     u5305:	
  2944  0456  1803               	skipnc
  2945  0457  2C59               	goto	u5301
  2946  0458  2C5A               	goto	u5300
  2947  0459                     u5301:	
  2948  0459  2C5B               	goto	l3351
  2949  045A                     u5300:	
  2950  045A  2C65               	goto	l3353
  2951  045B                     l3351:	
  2952  045B  3001               	movlw	1
  2953  045C  00A8               	movwf	??_sprintf^(0+128)
  2954  045D  0828               	movf	??_sprintf^(0+128),w
  2955  045E  07C7               	addwf	sprintf@c^(0+128),f
  2956  045F  300A               	movlw	10
  2957  0460  0647               	xorwf	sprintf@c^(0+128),w
  2958  0461  1D03               	btfss	3,2
  2959  0462  2C64               	goto	u5311
  2960  0463  2C65               	goto	u5310
  2961  0464                     u5311:	
  2962  0464  2C24               	goto	l3347
  2963  0465                     u5310:	
  2964  0465                     l3353:	
  2965                           
  2966                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1168:     w
      +                          idth -= prec + c + eexp;
  2967  0465  0847               	movf	sprintf@c^(0+128),w
  2968  0466  0745               	addwf	sprintf@prec^(0+128),w
  2969  0467  00A8               	movwf	??_sprintf^(0+128)
  2970  0468  0846               	movf	(sprintf@prec+1)^(0+128),w
  2971  0469  1803               	skipnc
  2972  046A  0A46               	incf	(sprintf@prec+1)^(0+128),w
  2973  046B  00A9               	movwf	(??_sprintf^(0+128)+1)
  2974  046C  083E               	movf	sprintf@eexp^(0+128),w
  2975  046D  0728               	addwf	??_sprintf^(0+128),w
  2976  046E  00AA               	movwf	(??_sprintf+2)^(0+128)
  2977  046F  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2978  0470  1803               	skipnc
  2979  0471  0A3F               	incf	(sprintf@eexp+1)^(0+128),w
  2980  0472  0729               	addwf	(??_sprintf+1)^(0+128),w
  2981  0473  00AB               	movwf	(??_sprintf+3)^(0+128)
  2982  0474  082A               	movf	(??_sprintf+2)^(0+128),w
  2983  0475  02B8               	subwf	sprintf@width^(0+128),f
  2984  0476  082B               	movf	(??_sprintf+3)^(0+128),w
  2985  0477  1C03               	skipc
  2986  0478  03B9               	decf	(sprintf@width+1)^(0+128),f
  2987  0479  02B9               	subwf	(sprintf@width+1)^(0+128),f
  2988                           
  2989                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1169:     i
      +                          f(
  2990  047A  0845               	movf	sprintf@prec^(0+128),w
  2991  047B  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  2992  047C  1903               	btfsc	3,2
  2993  047D  2C7F               	goto	u5321
  2994  047E  2C80               	goto	u5320
  2995  047F                     u5321:	
  2996  047F  2C86               	goto	l3357
  2997  0480                     u5320:	
  2998  0480                     l3355:	
  2999                           
  3000                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1174:      
      +                          width--;
  3001  0480  30FF               	movlw	255
  3002  0481  07B8               	addwf	sprintf@width^(0+128),f
  3003  0482  1803               	skipnc
  3004  0483  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3005  0484  30FF               	movlw	255
  3006  0485  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3007  0486                     l3357:	
  3008                           
  3009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1175:     i
      +                          f(flag & 0x03)
  3010  0486  3003               	movlw	3
  3011  0487  0536               	andwf	sprintf@flag^(0+128),w
  3012  0488  00A8               	movwf	??_sprintf^(0+128)
  3013  0489  3000               	movlw	0
  3014  048A  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3015  048B  00A9               	movwf	(??_sprintf+1)^(0+128)
  3016  048C  0828               	movf	??_sprintf^(0+128),w
  3017  048D  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3018  048E  1903               	btfsc	3,2
  3019  048F  2C91               	goto	u5331
  3020  0490  2C92               	goto	u5330
  3021  0491                     u5331:	
  3022  0491  2CA7               	goto	l3367
  3023  0492                     u5330:	
  3024  0492                     l3359:	
  3025                           
  3026                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1176:      
      +                          width--;
  3027  0492  30FF               	movlw	255
  3028  0493  07B8               	addwf	sprintf@width^(0+128),f
  3029  0494  1803               	skipnc
  3030  0495  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3031  0496  30FF               	movlw	255
  3032  0497  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3033  0498  2CA7               	goto	l3367
  3034  0499                     l3361:	
  3035                           
  3036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1207:      
      +                           ((*sp++ = (' ')));
  3037  0499  3020               	movlw	32
  3038  049A  1683               	bsf	3,5	;RP0=1, select bank1
  3039  049B  1303               	bcf	3,6	;RP1=0, select bank1
  3040  049C  00A8               	movwf	??_sprintf^(0+128)
  3041  049D  0844               	movf	sprintf@sp^(0+128),w
  3042  049E  0084               	movwf	4
  3043  049F  0828               	movf	??_sprintf^(0+128),w
  3044  04A0  1383               	bcf	3,7	;select IRP bank0
  3045  04A1  0080               	movwf	0
  3046  04A2                     l3363:	
  3047  04A2  3001               	movlw	1
  3048  04A3  00A8               	movwf	??_sprintf^(0+128)
  3049  04A4  0828               	movf	??_sprintf^(0+128),w
  3050  04A5  07C4               	addwf	sprintf@sp^(0+128),f
  3051  04A6  2C92               	goto	l3359
  3052  04A7                     l3367:	
  3053                           
  3054                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1206:      
      +                          while(width > 0) {
  3055  04A7  0839               	movf	(sprintf@width+1)^(0+128),w
  3056  04A8  3A80               	xorlw	128
  3057  04A9  00FF               	movwf	btemp+1
  3058  04AA  3080               	movlw	128
  3059  04AB  027F               	subwf	btemp+1,w
  3060  04AC  1D03               	skipz
  3061  04AD  2CB0               	goto	u5345
  3062  04AE  3001               	movlw	1
  3063  04AF  0238               	subwf	sprintf@width^(0+128),w
  3064  04B0                     u5345:	
  3065  04B0  1803               	skipnc
  3066  04B1  2CB3               	goto	u5341
  3067  04B2  2CB4               	goto	u5340
  3068  04B3                     u5341:	
  3069  04B3  2C99               	goto	l3361
  3070  04B4                     u5340:	
  3071  04B4                     l3369:	
  3072                           
  3073                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  3074  04B4  3003               	movlw	3
  3075  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  3076  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  3077  04B7  0536               	andwf	sprintf@flag^(0+128),w
  3078  04B8  00A8               	movwf	??_sprintf^(0+128)
  3079  04B9  3000               	movlw	0
  3080  04BA  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3081  04BB  00A9               	movwf	(??_sprintf+1)^(0+128)
  3082  04BC  0828               	movf	??_sprintf^(0+128),w
  3083  04BD  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3084  04BE  1903               	btfsc	3,2
  3085  04BF  2CC1               	goto	u5351
  3086  04C0  2CC2               	goto	u5350
  3087  04C1                     u5351:	
  3088  04C1  2D34               	goto	l334
  3089  04C2                     u5350:	
  3090  04C2                     l3371:	
  3091                           
  3092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  3093  04C2  302D               	movlw	45
  3094  04C3  00A8               	movwf	??_sprintf^(0+128)
  3095  04C4  0844               	movf	sprintf@sp^(0+128),w
  3096  04C5  0084               	movwf	4
  3097  04C6  0828               	movf	??_sprintf^(0+128),w
  3098  04C7  1383               	bcf	3,7	;select IRP bank0
  3099  04C8  0080               	movwf	0
  3100  04C9                     l3373:	
  3101  04C9  3001               	movlw	1
  3102  04CA  00A8               	movwf	??_sprintf^(0+128)
  3103  04CB  0828               	movf	??_sprintf^(0+128),w
  3104  04CC  07C4               	addwf	sprintf@sp^(0+128),f
  3105  04CD  2D34               	goto	l334
  3106  04CE                     l3375:	
  3107                           
  3108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  3109  04CE  0847               	movf	sprintf@c^(0+128),w
  3110  04CF  00A8               	movwf	??_sprintf^(0+128)
  3111  04D0  3001               	movlw	1
  3112  04D1                     u5365:	
  3113  04D1  1003               	clrc
  3114  04D2  0DA8               	rlf	??_sprintf^(0+128),f
  3115  04D3  3EFF               	addlw	-1
  3116  04D4  1D03               	skipz
  3117  04D5  2CD1               	goto	u5365
  3118  04D6  1003               	clrc
  3119  04D7  0D28               	rlf	??_sprintf^(0+128),w
  3120  04D8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3121  04D9  0084               	movwf	4
  3122  04DA  160A  158A  200A  120A  118A  	fcall	stringdir
  3123  04DF  00F3               	movwf	___lldiv@divisor
  3124  04E0  160A  158A  200A  120A  118A  	fcall	stringdir
  3125  04E5  00F4               	movwf	___lldiv@divisor+1
  3126  04E6  160A  158A  200A  120A  118A  	fcall	stringdir
  3127  04EB  00F5               	movwf	___lldiv@divisor+2
  3128  04EC  160A  158A  200A  120A  118A  	fcall	stringdir
  3129  04F1  00F6               	movwf	___lldiv@divisor+3
  3130  04F2  0835               	movf	(sprintf@val+3)^(0+128),w
  3131  04F3  00FA               	movwf	___lldiv@dividend+3
  3132  04F4  0834               	movf	(sprintf@val+2)^(0+128),w
  3133  04F5  00F9               	movwf	___lldiv@dividend+2
  3134  04F6  0833               	movf	(sprintf@val+1)^(0+128),w
  3135  04F7  00F8               	movwf	___lldiv@dividend+1
  3136  04F8  0832               	movf	sprintf@val^(0+128),w
  3137  04F9  00F7               	movwf	___lldiv@dividend
  3138  04FA  160A  158A  2678  120A  118A  	fcall	___lldiv
  3139  04FF  0876               	movf	?___lldiv+3,w
  3140  0500  1683               	bsf	3,5	;RP0=1, select bank1
  3141  0501  1303               	bcf	3,6	;RP1=0, select bank1
  3142  0502  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3143  0503  0875               	movf	?___lldiv+2,w
  3144  0504  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3145  0505  0874               	movf	?___lldiv+1,w
  3146  0506  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3147  0507  0873               	movf	?___lldiv,w
  3148  0508  00BA               	movwf	sprintf@tmpval^(0+128)
  3149  0509                     l3377:	
  3150                           
  3151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  3152  0509  3000               	movlw	0
  3153  050A  00F6               	movwf	___llmod@divisor+3
  3154  050B  3000               	movlw	0
  3155  050C  00F5               	movwf	___llmod@divisor+2
  3156  050D  3000               	movlw	0
  3157  050E  00F4               	movwf	___llmod@divisor+1
  3158  050F  300A               	movlw	10
  3159  0510  00F3               	movwf	___llmod@divisor
  3160  0511  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3161  0512  00FA               	movwf	___llmod@dividend+3
  3162  0513  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3163  0514  00F9               	movwf	___llmod@dividend+2
  3164  0515  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3165  0516  00F8               	movwf	___llmod@dividend+1
  3166  0517  083A               	movf	sprintf@tmpval^(0+128),w
  3167  0518  00F7               	movwf	___llmod@dividend
  3168  0519  120A  118A  27A9  120A  118A  	fcall	___llmod
  3169  051E  0876               	movf	?___llmod+3,w
  3170  051F  1683               	bsf	3,5	;RP0=1, select bank1
  3171  0520  1303               	bcf	3,6	;RP1=0, select bank1
  3172  0521  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3173  0522  0875               	movf	?___llmod+2,w
  3174  0523  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3175  0524  0874               	movf	?___llmod+1,w
  3176  0525  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3177  0526  0873               	movf	?___llmod,w
  3178  0527  00BA               	movwf	sprintf@tmpval^(0+128)
  3179  0528                     l3379:	
  3180                           
  3181                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  3182  0528  083A               	movf	sprintf@tmpval^(0+128),w
  3183  0529  3E30               	addlw	48
  3184  052A  00A8               	movwf	??_sprintf^(0+128)
  3185  052B  0844               	movf	sprintf@sp^(0+128),w
  3186  052C  0084               	movwf	4
  3187  052D  0828               	movf	??_sprintf^(0+128),w
  3188  052E  1383               	bcf	3,7	;select IRP bank0
  3189  052F  0080               	movwf	0
  3190  0530  3001               	movlw	1
  3191  0531  00A8               	movwf	??_sprintf^(0+128)
  3192  0532  0828               	movf	??_sprintf^(0+128),w
  3193  0533  07C4               	addwf	sprintf@sp^(0+128),f
  3194  0534                     l334:	
  3195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  3196                           
  3197                           
  3198                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  3199  0534  3001               	movlw	1
  3200  0535  02C7               	subwf	sprintf@c^(0+128),f
  3201  0536  0A47               	incf	sprintf@c^(0+128),w
  3202  0537  1D03               	btfss	3,2
  3203  0538  2D3A               	goto	u5371
  3204  0539  2D3B               	goto	u5370
  3205  053A                     u5371:	
  3206  053A  2CCE               	goto	l3375
  3207  053B                     u5370:	
  3208  053B  2D4F               	goto	l3387
  3209  053C                     l3381:	
  3210                           
  3211                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  3212  053C  3030               	movlw	48
  3213  053D  1683               	bsf	3,5	;RP0=1, select bank1
  3214  053E  1303               	bcf	3,6	;RP1=0, select bank1
  3215  053F  00A8               	movwf	??_sprintf^(0+128)
  3216  0540  0844               	movf	sprintf@sp^(0+128),w
  3217  0541  0084               	movwf	4
  3218  0542  0828               	movf	??_sprintf^(0+128),w
  3219  0543  1383               	bcf	3,7	;select IRP bank0
  3220  0544  0080               	movwf	0
  3221  0545                     l3383:	
  3222  0545  3001               	movlw	1
  3223  0546  00A8               	movwf	??_sprintf^(0+128)
  3224  0547  0828               	movf	??_sprintf^(0+128),w
  3225  0548  07C4               	addwf	sprintf@sp^(0+128),f
  3226  0549                     l3385:	
  3227                           
  3228                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  3229  0549  30FF               	movlw	255
  3230  054A  07BE               	addwf	sprintf@eexp^(0+128),f
  3231  054B  1803               	skipnc
  3232  054C  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  3233  054D  30FF               	movlw	255
  3234  054E  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  3235  054F                     l3387:	
  3236                           
  3237                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  3238  054F  083F               	movf	(sprintf@eexp+1)^(0+128),w
  3239  0550  3A80               	xorlw	128
  3240  0551  00FF               	movwf	btemp+1
  3241  0552  3080               	movlw	128
  3242  0553  027F               	subwf	btemp+1,w
  3243  0554  1D03               	skipz
  3244  0555  2D58               	goto	u5385
  3245  0556  3001               	movlw	1
  3246  0557  023E               	subwf	sprintf@eexp^(0+128),w
  3247  0558                     u5385:	
  3248  0558  1803               	skipnc
  3249  0559  2D5B               	goto	u5381
  3250  055A  2D5C               	goto	u5380
  3251  055B                     u5381:	
  3252  055B  2D3C               	goto	l3381
  3253  055C                     u5380:	
  3254  055C                     l3389:	
  3255                           
  3256                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3257  055C  1683               	bsf	3,5	;RP0=1, select bank1
  3258  055D  1303               	bcf	3,6	;RP1=0, select bank1
  3259  055E  0846               	movf	(sprintf@prec+1)^(0+128),w
  3260  055F  3A80               	xorlw	128
  3261  0560  00FF               	movwf	btemp+1
  3262  0561  3080               	movlw	128
  3263  0562  027F               	subwf	btemp+1,w
  3264  0563  1D03               	skipz
  3265  0564  2D67               	goto	u5395
  3266  0565  3009               	movlw	9
  3267  0566  0245               	subwf	sprintf@prec^(0+128),w
  3268  0567                     u5395:	
  3269  0567  1C03               	skipc
  3270  0568  2D6A               	goto	u5391
  3271  0569  2D6B               	goto	u5390
  3272  056A                     u5391:	
  3273  056A  2D72               	goto	l3393
  3274  056B                     u5390:	
  3275  056B                     l3391:	
  3276                           
  3277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  3278  056B  3008               	movlw	8
  3279  056C  1683               	bsf	3,5	;RP0=1, select bank1
  3280  056D  1303               	bcf	3,6	;RP1=0, select bank1
  3281  056E  00A8               	movwf	??_sprintf^(0+128)
  3282  056F  0828               	movf	??_sprintf^(0+128),w
  3283  0570  00C7               	movwf	sprintf@c^(0+128)
  3284  0571  2D78               	goto	l341
  3285  0572                     l3393:	
  3286                           
  3287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  3288  0572  1683               	bsf	3,5	;RP0=1, select bank1
  3289  0573  1303               	bcf	3,6	;RP1=0, select bank1
  3290  0574  0845               	movf	sprintf@prec^(0+128),w
  3291  0575  00A8               	movwf	??_sprintf^(0+128)
  3292  0576  0828               	movf	??_sprintf^(0+128),w
  3293  0577  00C7               	movwf	sprintf@c^(0+128)
  3294  0578                     l341:	
  3295                           
  3296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  3297  0578  0847               	movf	sprintf@c^(0+128),w
  3298  0579  00A8               	movwf	??_sprintf^(0+128)
  3299  057A  01A9               	clrf	(??_sprintf^(0+128)+1)
  3300  057B  0828               	movf	??_sprintf^(0+128),w
  3301  057C  02C5               	subwf	sprintf@prec^(0+128),f
  3302  057D  0829               	movf	(??_sprintf+1)^(0+128),w
  3303  057E  1C03               	skipc
  3304  057F  03C6               	decf	(sprintf@prec+1)^(0+128),f
  3305  0580  02C6               	subwf	(sprintf@prec+1)^(0+128),f
  3306  0581                     l3395:	
  3307                           
  3308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  3309  0581  0847               	movf	sprintf@c^(0+128),w
  3310  0582  1903               	btfsc	3,2
  3311  0583  2D85               	goto	u5401
  3312  0584  2D86               	goto	u5400
  3313  0585                     u5401:	
  3314  0585  2D91               	goto	l3401
  3315  0586                     u5400:	
  3316  0586                     l3397:	
  3317                           
  3318                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  3319  0586  302E               	movlw	46
  3320  0587  00A8               	movwf	??_sprintf^(0+128)
  3321  0588  0844               	movf	sprintf@sp^(0+128),w
  3322  0589  0084               	movwf	4
  3323  058A  0828               	movf	??_sprintf^(0+128),w
  3324  058B  1383               	bcf	3,7	;select IRP bank0
  3325  058C  0080               	movwf	0
  3326  058D                     l3399:	
  3327  058D  3001               	movlw	1
  3328  058E  00A8               	movwf	??_sprintf^(0+128)
  3329  058F  0828               	movf	??_sprintf^(0+128),w
  3330  0590  07C4               	addwf	sprintf@sp^(0+128),f
  3331  0591                     l3401:	
  3332                           
  3333                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3334  0591  0847               	movf	sprintf@c^(0+128),w
  3335  0592  120A  158A  249D  120A  118A  	fcall	_scale
  3336  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3337  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3338  0599  0845               	movf	?_scale+3,w
  3339  059A  1683               	bsf	3,5	;RP0=1, select bank1
  3340  059B  1303               	bcf	3,6	;RP1=0, select bank1
  3341  059C  00B0               	movwf	(_sprintf$1196+3)^(0+128)
  3342  059D  1283               	bcf	3,5	;RP0=0, select bank0
  3343  059E  1303               	bcf	3,6	;RP1=0, select bank0
  3344  059F  0844               	movf	?_scale+2,w
  3345  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  3346  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  3347  05A2  00AF               	movwf	(_sprintf$1196+2)^(0+128)
  3348  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3349  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3350  05A5  0843               	movf	?_scale+1,w
  3351  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  3352  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  3353  05A8  00AE               	movwf	(_sprintf$1196+1)^(0+128)
  3354  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3355  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3356  05AB  0842               	movf	?_scale,w
  3357  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  3358  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  3359  05AE  00AD               	movwf	_sprintf$1196^(0+128)
  3360  05AF                     l3403:	
  3361                           
  3362                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3363  05AF  0830               	movf	(_sprintf$1196+3)^(0+128),w
  3364  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  3365  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  3366  05B2  00AF               	movwf	___flmul@a+3
  3367  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  3368  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  3369  05B5  082F               	movf	(_sprintf$1196+2)^(0+128),w
  3370  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  3371  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  3372  05B8  00AE               	movwf	___flmul@a+2
  3373  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3374  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  3375  05BB  082E               	movf	(_sprintf$1196+1)^(0+128),w
  3376  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3377  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3378  05BE  00AD               	movwf	___flmul@a+1
  3379  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  3380  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  3381  05C1  082D               	movf	_sprintf$1196^(0+128),w
  3382  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3383  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3384  05C4  00AC               	movwf	___flmul@a
  3385  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  3386  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  3387  05C7  0843               	movf	(sprintf@fval+3)^(0+128),w
  3388  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  3389  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  3390  05CA  00AB               	movwf	___flmul@b+3
  3391  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  3392  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  3393  05CD  0842               	movf	(sprintf@fval+2)^(0+128),w
  3394  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3395  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3396  05D0  00AA               	movwf	___flmul@b+2
  3397  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  3398  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  3399  05D3  0841               	movf	(sprintf@fval+1)^(0+128),w
  3400  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3401  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3402  05D6  00A9               	movwf	___flmul@b+1
  3403  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  3404  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  3405  05D9  0840               	movf	sprintf@fval^(0+128),w
  3406  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3407  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3408  05DC  00A8               	movwf	___flmul@b
  3409  05DD  120A  158A  213C  120A  118A  	fcall	___flmul
  3410  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3411  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3412  05E4  082B               	movf	?___flmul+3,w
  3413  05E5  00D8               	movwf	___fltol@f1+3
  3414  05E6  082A               	movf	?___flmul+2,w
  3415  05E7  00D7               	movwf	___fltol@f1+2
  3416  05E8  0829               	movf	?___flmul+1,w
  3417  05E9  00D6               	movwf	___fltol@f1+1
  3418  05EA  0828               	movf	?___flmul,w
  3419  05EB  00D5               	movwf	___fltol@f1
  3420  05EC  160A  158A  26E0  120A  118A  	fcall	___fltol
  3421  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3422  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3423  05F3  0858               	movf	?___fltol+3,w
  3424  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3425  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3426  05F6  00B5               	movwf	(sprintf@val+3)^(0+128)
  3427  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3428  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3429  05F9  0857               	movf	?___fltol+2,w
  3430  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3431  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3432  05FC  00B4               	movwf	(sprintf@val+2)^(0+128)
  3433  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3434  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3435  05FF  0856               	movf	?___fltol+1,w
  3436  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3437  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3438  0602  00B3               	movwf	(sprintf@val+1)^(0+128)
  3439  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0605  0855               	movf	?___fltol,w
  3442  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3443  0607  1303               	bcf	3,6	;RP1=0, select bank1
  3444  0608  00B2               	movwf	sprintf@val^(0+128)
  3445                           
  3446                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3447  0609  2EAB               	goto	l3413
  3448  060A                     l3405:	
  3449                           
  3450                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3451  060A  0847               	movf	sprintf@c^(0+128),w
  3452  060B  00A8               	movwf	??_sprintf^(0+128)
  3453  060C  3001               	movlw	1
  3454  060D                     u5415:	
  3455  060D  1003               	clrc
  3456  060E  0DA8               	rlf	??_sprintf^(0+128),f
  3457  060F  3EFF               	addlw	-1
  3458  0610  1D03               	skipz
  3459  0611  2E0D               	goto	u5415
  3460  0612  1003               	clrc
  3461  0613  0D28               	rlf	??_sprintf^(0+128),w
  3462  0614  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3463  0615  0084               	movwf	4
  3464  0616  160A  158A  200A  120A  118A  	fcall	stringdir
  3465  061B  00F3               	movwf	___lldiv@divisor
  3466  061C  160A  158A  200A  120A  118A  	fcall	stringdir
  3467  0621  00F4               	movwf	___lldiv@divisor+1
  3468  0622  160A  158A  200A  120A  118A  	fcall	stringdir
  3469  0627  00F5               	movwf	___lldiv@divisor+2
  3470  0628  160A  158A  200A  120A  118A  	fcall	stringdir
  3471  062D  00F6               	movwf	___lldiv@divisor+3
  3472  062E  0835               	movf	(sprintf@val+3)^(0+128),w
  3473  062F  00FA               	movwf	___lldiv@dividend+3
  3474  0630  0834               	movf	(sprintf@val+2)^(0+128),w
  3475  0631  00F9               	movwf	___lldiv@dividend+2
  3476  0632  0833               	movf	(sprintf@val+1)^(0+128),w
  3477  0633  00F8               	movwf	___lldiv@dividend+1
  3478  0634  0832               	movf	sprintf@val^(0+128),w
  3479  0635  00F7               	movwf	___lldiv@dividend
  3480  0636  160A  158A  2678  120A  118A  	fcall	___lldiv
  3481  063B  0876               	movf	?___lldiv+3,w
  3482  063C  1683               	bsf	3,5	;RP0=1, select bank1
  3483  063D  1303               	bcf	3,6	;RP1=0, select bank1
  3484  063E  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3485  063F  0875               	movf	?___lldiv+2,w
  3486  0640  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3487  0641  0874               	movf	?___lldiv+1,w
  3488  0642  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3489  0643  0873               	movf	?___lldiv,w
  3490  0644  00BA               	movwf	sprintf@tmpval^(0+128)
  3491  0645                     l3407:	
  3492                           
  3493                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3494  0645  3000               	movlw	0
  3495  0646  00F6               	movwf	___llmod@divisor+3
  3496  0647  3000               	movlw	0
  3497  0648  00F5               	movwf	___llmod@divisor+2
  3498  0649  3000               	movlw	0
  3499  064A  00F4               	movwf	___llmod@divisor+1
  3500  064B  300A               	movlw	10
  3501  064C  00F3               	movwf	___llmod@divisor
  3502  064D  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3503  064E  00FA               	movwf	___llmod@dividend+3
  3504  064F  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3505  0650  00F9               	movwf	___llmod@dividend+2
  3506  0651  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3507  0652  00F8               	movwf	___llmod@dividend+1
  3508  0653  083A               	movf	sprintf@tmpval^(0+128),w
  3509  0654  00F7               	movwf	___llmod@dividend
  3510  0655  120A  118A  27A9  120A  118A  	fcall	___llmod
  3511  065A  0876               	movf	?___llmod+3,w
  3512  065B  1683               	bsf	3,5	;RP0=1, select bank1
  3513  065C  1303               	bcf	3,6	;RP1=0, select bank1
  3514  065D  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3515  065E  0875               	movf	?___llmod+2,w
  3516  065F  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3517  0660  0874               	movf	?___llmod+1,w
  3518  0661  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3519  0662  0873               	movf	?___llmod,w
  3520  0663  00BA               	movwf	sprintf@tmpval^(0+128)
  3521  0664                     l3409:	
  3522                           
  3523                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3524  0664  083A               	movf	sprintf@tmpval^(0+128),w
  3525  0665  3E30               	addlw	48
  3526  0666  00A8               	movwf	??_sprintf^(0+128)
  3527  0667  0844               	movf	sprintf@sp^(0+128),w
  3528  0668  0084               	movwf	4
  3529  0669  0828               	movf	??_sprintf^(0+128),w
  3530  066A  1383               	bcf	3,7	;select IRP bank0
  3531  066B  0080               	movwf	0
  3532  066C  3001               	movlw	1
  3533  066D  00A8               	movwf	??_sprintf^(0+128)
  3534  066E  0828               	movf	??_sprintf^(0+128),w
  3535  066F  07C4               	addwf	sprintf@sp^(0+128),f
  3536  0670                     l3411:	
  3537                           
  3538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  3539  0670  0847               	movf	sprintf@c^(0+128),w
  3540  0671  00A8               	movwf	??_sprintf^(0+128)
  3541  0672  3001               	movlw	1
  3542  0673                     u5425:	
  3543  0673  1003               	clrc
  3544  0674  0DA8               	rlf	??_sprintf^(0+128),f
  3545  0675  3EFF               	addlw	-1
  3546  0676  1D03               	skipz
  3547  0677  2E73               	goto	u5425
  3548  0678  1003               	clrc
  3549  0679  0D28               	rlf	??_sprintf^(0+128),w
  3550  067A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3551  067B  0084               	movwf	4
  3552  067C  160A  158A  200A  120A  118A  	fcall	stringdir
  3553  0681  00F3               	movwf	___llmod@divisor
  3554  0682  160A  158A  200A  120A  118A  	fcall	stringdir
  3555  0687  00F4               	movwf	___llmod@divisor+1
  3556  0688  160A  158A  200A  120A  118A  	fcall	stringdir
  3557  068D  00F5               	movwf	___llmod@divisor+2
  3558  068E  160A  158A  200A  120A  118A  	fcall	stringdir
  3559  0693  00F6               	movwf	___llmod@divisor+3
  3560  0694  0835               	movf	(sprintf@val+3)^(0+128),w
  3561  0695  00FA               	movwf	___llmod@dividend+3
  3562  0696  0834               	movf	(sprintf@val+2)^(0+128),w
  3563  0697  00F9               	movwf	___llmod@dividend+2
  3564  0698  0833               	movf	(sprintf@val+1)^(0+128),w
  3565  0699  00F8               	movwf	___llmod@dividend+1
  3566  069A  0832               	movf	sprintf@val^(0+128),w
  3567  069B  00F7               	movwf	___llmod@dividend
  3568  069C  120A  118A  27A9  120A  118A  	fcall	___llmod
  3569  06A1  0876               	movf	?___llmod+3,w
  3570  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3571  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3572  06A4  00B5               	movwf	(sprintf@val+3)^(0+128)
  3573  06A5  0875               	movf	?___llmod+2,w
  3574  06A6  00B4               	movwf	(sprintf@val+2)^(0+128)
  3575  06A7  0874               	movf	?___llmod+1,w
  3576  06A8  00B3               	movwf	(sprintf@val+1)^(0+128)
  3577  06A9  0873               	movf	?___llmod,w
  3578  06AA  00B2               	movwf	sprintf@val^(0+128)
  3579  06AB                     l3413:	
  3580                           
  3581                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3582  06AB  3001               	movlw	1
  3583  06AC  02C7               	subwf	sprintf@c^(0+128),f
  3584  06AD  0A47               	incf	sprintf@c^(0+128),w
  3585  06AE  1D03               	btfss	3,2
  3586  06AF  2EB1               	goto	u5431
  3587  06B0  2EB2               	goto	u5430
  3588  06B1                     u5431:	
  3589  06B1  2E0A               	goto	l3405
  3590  06B2                     u5430:	
  3591  06B2  2EC4               	goto	l3421
  3592  06B3                     l3415:	
  3593                           
  3594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  3595  06B3  3030               	movlw	48
  3596  06B4  00A8               	movwf	??_sprintf^(0+128)
  3597  06B5  0844               	movf	sprintf@sp^(0+128),w
  3598  06B6  0084               	movwf	4
  3599  06B7  0828               	movf	??_sprintf^(0+128),w
  3600  06B8  1383               	bcf	3,7	;select IRP bank0
  3601  06B9  0080               	movwf	0
  3602  06BA                     l3417:	
  3603  06BA  3001               	movlw	1
  3604  06BB  00A8               	movwf	??_sprintf^(0+128)
  3605  06BC  0828               	movf	??_sprintf^(0+128),w
  3606  06BD  07C4               	addwf	sprintf@sp^(0+128),f
  3607  06BE                     l3419:	
  3608                           
  3609                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  3610  06BE  30FF               	movlw	255
  3611  06BF  07C5               	addwf	sprintf@prec^(0+128),f
  3612  06C0  1803               	skipnc
  3613  06C1  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  3614  06C2  30FF               	movlw	255
  3615  06C3  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  3616  06C4                     l3421:	
  3617                           
  3618                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  3619  06C4  0845               	movf	sprintf@prec^(0+128),w
  3620  06C5  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  3621  06C6  1D03               	btfss	3,2
  3622  06C7  2EC9               	goto	u5441
  3623  06C8  2ECA               	goto	u5440
  3624  06C9                     u5441:	
  3625  06C9  2EB3               	goto	l3415
  3626  06CA                     u5440:	
  3627  06CA  2F8E               	goto	l3469
  3628  06CB                     l3423:	
  3629                           
  3630                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
  3631  06CB  0845               	movf	sprintf@prec^(0+128),w
  3632  06CC  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  3633  06CD  1D03               	btfss	3,2
  3634  06CE  2ED0               	goto	u5451
  3635  06CF  2ED1               	goto	u5450
  3636  06D0                     u5451:	
  3637  06D0  2EDF               	goto	l349
  3638  06D1                     u5450:	
  3639  06D1                     l3425:	
  3640  06D1  0835               	movf	(sprintf@val+3)^(0+128),w
  3641  06D2  0434               	iorwf	(sprintf@val+2)^(0+128),w
  3642  06D3  0433               	iorwf	(sprintf@val+1)^(0+128),w
  3643  06D4  0432               	iorwf	sprintf@val^(0+128),w
  3644  06D5  1D03               	skipz
  3645  06D6  2ED8               	goto	u5461
  3646  06D7  2ED9               	goto	u5460
  3647  06D8                     u5461:	
  3648  06D8  2EDF               	goto	l349
  3649  06D9                     u5460:	
  3650  06D9                     l3427:	
  3651                           
  3652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  3653  06D9  3001               	movlw	1
  3654  06DA  07C5               	addwf	sprintf@prec^(0+128),f
  3655  06DB  1803               	skipnc
  3656  06DC  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  3657  06DD  3000               	movlw	0
  3658  06DE  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  3659  06DF                     l349:	
  3660                           
  3661                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  3662  06DF  0846               	movf	(sprintf@prec+1)^(0+128),w
  3663  06E0  3A80               	xorlw	128
  3664  06E1  3C80               	sublw	128
  3665  06E2  1D03               	skipz
  3666  06E3  2EE6               	goto	u5475
  3667  06E4  0845               	movf	sprintf@prec^(0+128),w
  3668  06E5  0247               	subwf	sprintf@c^(0+128),w
  3669  06E6                     u5475:	
  3670  06E6  1803               	skipnc
  3671  06E7  2EE9               	goto	u5471
  3672  06E8  2EEA               	goto	u5470
  3673  06E9                     u5471:	
  3674  06E9  2EF1               	goto	l3431
  3675  06EA                     u5470:	
  3676  06EA                     l3429:	
  3677                           
  3678                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1366:    c 
      +                          = (char)prec;
  3679  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  3680  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  3681  06EC  0845               	movf	sprintf@prec^(0+128),w
  3682  06ED  00A8               	movwf	??_sprintf^(0+128)
  3683  06EE  0828               	movf	??_sprintf^(0+128),w
  3684  06EF  00C7               	movwf	sprintf@c^(0+128)
  3685  06F0  2F09               	goto	l3435
  3686  06F1                     l3431:	
  3687  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  3688  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  3689  06F3  0846               	movf	(sprintf@prec+1)^(0+128),w
  3690  06F4  3A80               	xorlw	128
  3691  06F5  00A8               	movwf	??_sprintf^(0+128)
  3692  06F6  3080               	movlw	128
  3693  06F7  0228               	subwf	??_sprintf^(0+128),w
  3694  06F8  1D03               	skipz
  3695  06F9  2EFC               	goto	u5485
  3696  06FA  0847               	movf	sprintf@c^(0+128),w
  3697  06FB  0245               	subwf	sprintf@prec^(0+128),w
  3698  06FC                     u5485:	
  3699  06FC  1803               	skipnc
  3700  06FD  2EFF               	goto	u5481
  3701  06FE  2F00               	goto	u5480
  3702  06FF                     u5481:	
  3703  06FF  2F09               	goto	l3435
  3704  0700                     u5480:	
  3705  0700                     l3433:	
  3706                           
  3707                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
  3708  0700  1683               	bsf	3,5	;RP0=1, select bank1
  3709  0701  1303               	bcf	3,6	;RP1=0, select bank1
  3710  0702  0847               	movf	sprintf@c^(0+128),w
  3711  0703  00A8               	movwf	??_sprintf^(0+128)
  3712  0704  01A9               	clrf	(??_sprintf^(0+128)+1)
  3713  0705  0828               	movf	??_sprintf^(0+128),w
  3714  0706  00C5               	movwf	sprintf@prec^(0+128)
  3715  0707  0829               	movf	(??_sprintf+1)^(0+128),w
  3716  0708  00C6               	movwf	(sprintf@prec+1)^(0+128)
  3717  0709                     l3435:	
  3718                           
  3719                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
  3720  0709  1683               	bsf	3,5	;RP0=1, select bank1
  3721  070A  1303               	bcf	3,6	;RP1=0, select bank1
  3722  070B  0838               	movf	sprintf@width^(0+128),w
  3723  070C  0439               	iorwf	(sprintf@width+1)^(0+128),w
  3724  070D  1903               	btfsc	3,2
  3725  070E  2F10               	goto	u5491
  3726  070F  2F11               	goto	u5490
  3727  0710                     u5491:	
  3728  0710  2F23               	goto	l3441
  3729  0711                     u5490:	
  3730  0711                     l3437:	
  3731  0711  3003               	movlw	3
  3732  0712  0536               	andwf	sprintf@flag^(0+128),w
  3733  0713  00A8               	movwf	??_sprintf^(0+128)
  3734  0714  3000               	movlw	0
  3735  0715  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3736  0716  00A9               	movwf	(??_sprintf+1)^(0+128)
  3737  0717  0828               	movf	??_sprintf^(0+128),w
  3738  0718  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3739  0719  1903               	btfsc	3,2
  3740  071A  2F1C               	goto	u5501
  3741  071B  2F1D               	goto	u5500
  3742  071C                     u5501:	
  3743  071C  2F23               	goto	l3441
  3744  071D                     u5500:	
  3745  071D                     l3439:	
  3746                           
  3747                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
  3748  071D  30FF               	movlw	255
  3749  071E  07B8               	addwf	sprintf@width^(0+128),f
  3750  071F  1803               	skipnc
  3751  0720  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3752  0721  30FF               	movlw	255
  3753  0722  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3754  0723                     l3441:	
  3755                           
  3756                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1374:   if(
      +                          flag & 0x4000) {
  3757  0723  1F37               	btfss	(sprintf@flag+1)^(0+128),6
  3758  0724  2F26               	goto	u5511
  3759  0725  2F27               	goto	u5510
  3760  0726                     u5511:	
  3761  0726  2F42               	goto	l3449
  3762  0727                     u5510:	
  3763  0727                     l3443:	
  3764                           
  3765                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1375:    if
      +                          (width > prec)
  3766  0727  0846               	movf	(sprintf@prec+1)^(0+128),w
  3767  0728  3A80               	xorlw	128
  3768  0729  00A8               	movwf	??_sprintf^(0+128)
  3769  072A  0839               	movf	(sprintf@width+1)^(0+128),w
  3770  072B  3A80               	xorlw	128
  3771  072C  0228               	subwf	??_sprintf^(0+128),w
  3772  072D  1D03               	skipz
  3773  072E  2F31               	goto	u5525
  3774  072F  0838               	movf	sprintf@width^(0+128),w
  3775  0730  0245               	subwf	sprintf@prec^(0+128),w
  3776  0731                     u5525:	
  3777  0731  1803               	skipnc
  3778  0732  2F34               	goto	u5521
  3779  0733  2F35               	goto	u5520
  3780  0734                     u5521:	
  3781  0734  2F3E               	goto	l3447
  3782  0735                     u5520:	
  3783  0735                     l3445:	
  3784                           
  3785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1376:     w
      +                          idth -= prec;
  3786  0735  1683               	bsf	3,5	;RP0=1, select bank1
  3787  0736  1303               	bcf	3,6	;RP1=0, select bank1
  3788  0737  0845               	movf	sprintf@prec^(0+128),w
  3789  0738  02B8               	subwf	sprintf@width^(0+128),f
  3790  0739  0846               	movf	(sprintf@prec+1)^(0+128),w
  3791  073A  1C03               	skipc
  3792  073B  03B9               	decf	(sprintf@width+1)^(0+128),f
  3793  073C  02B9               	subwf	(sprintf@width+1)^(0+128),f
  3794  073D  2F42               	goto	l3449
  3795  073E                     l3447:	
  3796                           
  3797                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1378:     w
      +                          idth = 0;
  3798  073E  1683               	bsf	3,5	;RP0=1, select bank1
  3799  073F  1303               	bcf	3,6	;RP1=0, select bank1
  3800  0740  01B8               	clrf	sprintf@width^(0+128)
  3801  0741  01B9               	clrf	(sprintf@width+1)^(0+128)
  3802  0742                     l3449:	
  3803                           
  3804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  3805  0742  0839               	movf	(sprintf@width+1)^(0+128),w
  3806  0743  3A80               	xorlw	128
  3807  0744  3C80               	sublw	128
  3808  0745  1D03               	skipz
  3809  0746  2F49               	goto	u5535
  3810  0747  0838               	movf	sprintf@width^(0+128),w
  3811  0748  0247               	subwf	sprintf@c^(0+128),w
  3812  0749                     u5535:	
  3813  0749  1803               	skipnc
  3814  074A  2F4C               	goto	u5531
  3815  074B  2F4D               	goto	u5530
  3816  074C                     u5531:	
  3817  074C  2F59               	goto	l3453
  3818  074D                     u5530:	
  3819  074D                     l3451:	
  3820                           
  3821                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  3822  074D  1683               	bsf	3,5	;RP0=1, select bank1
  3823  074E  1303               	bcf	3,6	;RP1=0, select bank1
  3824  074F  0847               	movf	sprintf@c^(0+128),w
  3825  0750  00A8               	movwf	??_sprintf^(0+128)
  3826  0751  01A9               	clrf	(??_sprintf^(0+128)+1)
  3827  0752  0828               	movf	??_sprintf^(0+128),w
  3828  0753  02B8               	subwf	sprintf@width^(0+128),f
  3829  0754  0829               	movf	(??_sprintf+1)^(0+128),w
  3830  0755  1C03               	skipc
  3831  0756  03B9               	decf	(sprintf@width+1)^(0+128),f
  3832  0757  02B9               	subwf	(sprintf@width+1)^(0+128),f
  3833  0758  2F5D               	goto	l3455
  3834  0759                     l3453:	
  3835                           
  3836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  3837  0759  1683               	bsf	3,5	;RP0=1, select bank1
  3838  075A  1303               	bcf	3,6	;RP1=0, select bank1
  3839  075B  01B8               	clrf	sprintf@width^(0+128)
  3840  075C  01B9               	clrf	(sprintf@width+1)^(0+128)
  3841  075D                     l3455:	
  3842                           
  3843                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  3844  075D  0838               	movf	sprintf@width^(0+128),w
  3845  075E  0439               	iorwf	(sprintf@width+1)^(0+128),w
  3846  075F  1903               	btfsc	3,2
  3847  0760  2F62               	goto	u5541
  3848  0761  2F63               	goto	u5540
  3849  0762                     u5541:	
  3850  0762  2F7A               	goto	l3463
  3851  0763                     u5540:	
  3852  0763                     l3457:	
  3853                           
  3854                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  3855  0763  3020               	movlw	32
  3856  0764  00A8               	movwf	??_sprintf^(0+128)
  3857  0765  0844               	movf	sprintf@sp^(0+128),w
  3858  0766  0084               	movwf	4
  3859  0767  0828               	movf	??_sprintf^(0+128),w
  3860  0768  1383               	bcf	3,7	;select IRP bank0
  3861  0769  0080               	movwf	0
  3862  076A                     l3459:	
  3863  076A  3001               	movlw	1
  3864  076B  00A8               	movwf	??_sprintf^(0+128)
  3865  076C  0828               	movf	??_sprintf^(0+128),w
  3866  076D  07C4               	addwf	sprintf@sp^(0+128),f
  3867  076E                     l3461:	
  3868  076E  30FF               	movlw	255
  3869  076F  07B8               	addwf	sprintf@width^(0+128),f
  3870  0770  1803               	skipnc
  3871  0771  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3872  0772  30FF               	movlw	255
  3873  0773  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3874  0774  0838               	movf	sprintf@width^(0+128),w
  3875  0775  0439               	iorwf	(sprintf@width+1)^(0+128),w
  3876  0776  1D03               	btfss	3,2
  3877  0777  2F79               	goto	u5551
  3878  0778  2F7A               	goto	u5550
  3879  0779                     u5551:	
  3880  0779  2F63               	goto	l3457
  3881  077A                     u5550:	
  3882  077A                     l3463:	
  3883                           
  3884                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
  3885  077A  3003               	movlw	3
  3886  077B  0536               	andwf	sprintf@flag^(0+128),w
  3887  077C  00A8               	movwf	??_sprintf^(0+128)
  3888  077D  3000               	movlw	0
  3889  077E  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3890  077F  00A9               	movwf	(??_sprintf+1)^(0+128)
  3891  0780  0828               	movf	??_sprintf^(0+128),w
  3892  0781  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3893  0782  1903               	btfsc	3,2
  3894  0783  2F85               	goto	u5561
  3895  0784  2F86               	goto	u5560
  3896  0785                     u5561:	
  3897  0785  2F8E               	goto	l3469
  3898  0786                     u5560:	
  3899  0786                     l3465:	
  3900                           
  3901                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3902  0786  302D               	movlw	45
  3903  0787  00A8               	movwf	??_sprintf^(0+128)
  3904  0788  0844               	movf	sprintf@sp^(0+128),w
  3905  0789  0084               	movwf	4
  3906  078A  0828               	movf	??_sprintf^(0+128),w
  3907  078B  1383               	bcf	3,7	;select IRP bank0
  3908  078C  0080               	movwf	0
  3909  078D  2834               	goto	l3225
  3910  078E                     l3469:	
  3911                           
  3912                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3913  078E  3001               	movlw	1
  3914  078F  1283               	bcf	3,5	;RP0=0, select bank0
  3915  0790  1303               	bcf	3,6	;RP1=0, select bank0
  3916  0791  07EA               	addwf	sprintf@f,f
  3917  0792  30FF               	movlw	-1
  3918  0793  076A               	addwf	sprintf@f,w
  3919  0794  0084               	movwf	4
  3920  0795  160A  158A  200A  120A  118A  	fcall	stringdir
  3921  079A  1683               	bsf	3,5	;RP0=1, select bank1
  3922  079B  1303               	bcf	3,6	;RP1=0, select bank1
  3923  079C  00A8               	movwf	??_sprintf^(0+128)
  3924  079D  0828               	movf	??_sprintf^(0+128),w
  3925  079E  00C7               	movwf	sprintf@c^(0+128)
  3926  079F  0847               	movf	sprintf@c^(0+128),w
  3927  07A0  1D03               	btfss	3,2
  3928  07A1  2FA3               	goto	u5571
  3929  07A2  2FA4               	goto	u5570
  3930  07A3                     u5571:	
  3931  07A3  2827               	goto	l3221
  3932  07A4                     u5570:	
  3933  07A4                     l3471:	
  3934                           
  3935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3936  07A4  0844               	movf	sprintf@sp^(0+128),w
  3937  07A5  0084               	movwf	4
  3938  07A6  1383               	bcf	3,7	;select IRP bank0
  3939  07A7  0180               	clrf	0
  3940  07A8                     l364:	
  3941  07A8  0008               	return
  3942  07A9                     __end_of_sprintf:	
  3943                           
  3944                           	psect	text3
  3945  0C9D                     __ptext3:	
  3946 ;; *************** function _scale *****************
  3947 ;; Defined at:
  3948 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;  scl             1    wreg     char 
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;  scl             1   52[BANK0 ] char 
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  4   34[BANK0 ] char 
  3955 ;; Registers used:
  3956 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3962 ;;      Params:         0       4       0       0       0
  3963 ;;      Locals:         0       5       0       0       0
  3964 ;;      Temps:          0      10       0       0       0
  3965 ;;      Totals:         0      19       0       0       0
  3966 ;;Total ram usage:       19 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:    3
  3969 ;; This function calls:
  3970 ;;		___awdiv
  3971 ;;		___awmod
  3972 ;;		___flmul
  3973 ;; This function is called by:
  3974 ;;		_sprintf
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           
  3979                           ;psect for function _scale
  3980  0C9D                     _scale:	
  3981                           
  3982                           ;incstack = 0
  3983                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3984                           ;scale@scl stored from wreg
  3985  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  3986  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  3987  0C9F  00D4               	movwf	scale@scl
  3988  0CA0                     l2793:	
  3989                           
  3990                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3991  0CA0  1FD4               	btfss	scale@scl,7
  3992  0CA1  2CA3               	goto	u4081
  3993  0CA2  2CA4               	goto	u4080
  3994  0CA3                     u4081:	
  3995  0CA3  2E53               	goto	l2815
  3996  0CA4                     u4080:	
  3997  0CA4                     l2795:	
  3998                           
  3999                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  4000  0CA4  09D4               	comf	scale@scl,f
  4001  0CA5  0AD4               	incf	scale@scl,f
  4002  0CA6                     l2797:	
  4003                           
  4004                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  4005  0CA6  0854               	movf	scale@scl,w
  4006  0CA7  3A80               	xorlw	128
  4007  0CA8  3E12               	addlw	-238
  4008  0CA9  1C03               	skipc
  4009  0CAA  2CAC               	goto	u4091
  4010  0CAB  2CAD               	goto	u4090
  4011  0CAC                     u4091:	
  4012  0CAC  2D97               	goto	l2805
  4013  0CAD                     u4090:	
  4014  0CAD                     l2799:	
  4015                           
  4016                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4017  0CAD  300A               	movlw	10
  4018  0CAE  00A0               	movwf	___awdiv@divisor
  4019  0CAF  3000               	movlw	0
  4020  0CB0  00A1               	movwf	___awdiv@divisor+1
  4021  0CB1  0854               	movf	scale@scl,w
  4022  0CB2  00F5               	movwf	___awmod@dividend
  4023  0CB3  01F6               	clrf	___awmod@dividend+1
  4024  0CB4  1BF5               	btfsc	___awmod@dividend,7
  4025  0CB5  03F6               	decf	___awmod@dividend+1,f
  4026  0CB6  3064               	movlw	100
  4027  0CB7  00F3               	movwf	___awmod@divisor
  4028  0CB8  3000               	movlw	0
  4029  0CB9  00F4               	movwf	___awmod@divisor+1
  4030  0CBA  160A  158A  261F  120A  158A  	fcall	___awmod
  4031  0CBF  0874               	movf	?___awmod+1,w
  4032  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  4033  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  4034  0CC2  00A3               	movwf	___awdiv@dividend+1
  4035  0CC3  0873               	movf	?___awmod,w
  4036  0CC4  00A2               	movwf	___awdiv@dividend
  4037  0CC5  160A  118A  2007  120A  158A  	fcall	___awdiv
  4038  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  4039  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  4040  0CCC  0820               	movf	?___awdiv,w
  4041  0CCD  00C6               	movwf	??_scale
  4042  0CCE  3001               	movlw	1
  4043  0CCF                     u4105:	
  4044  0CCF  1003               	clrc
  4045  0CD0  0DC6               	rlf	??_scale,f
  4046  0CD1  3EFF               	addlw	-1
  4047  0CD2  1D03               	skipz
  4048  0CD3  2CCF               	goto	u4105
  4049  0CD4  1003               	clrc
  4050  0CD5  0D46               	rlf	??_scale,w
  4051  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4052  0CD7  0084               	movwf	4
  4053  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  4054  0CDD  00C7               	movwf	??_scale+1
  4055  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  4056  0CE3  00C8               	movwf	??_scale+2
  4057  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  4058  0CE9  00C9               	movwf	??_scale+3
  4059  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  4060  0CEF  00CA               	movwf	??_scale+4
  4061  0CF0  084A               	movf	??_scale+4,w
  4062  0CF1  00AB               	movwf	___flmul@b+3
  4063  0CF2  0849               	movf	??_scale+3,w
  4064  0CF3  00AA               	movwf	___flmul@b+2
  4065  0CF4  0848               	movf	??_scale+2,w
  4066  0CF5  00A9               	movwf	___flmul@b+1
  4067  0CF6  0847               	movf	??_scale+1,w
  4068  0CF7  00A8               	movwf	___flmul@b
  4069  0CF8  3064               	movlw	100
  4070  0CF9  00A0               	movwf	___awdiv@divisor
  4071  0CFA  3000               	movlw	0
  4072  0CFB  00A1               	movwf	___awdiv@divisor+1
  4073  0CFC  0854               	movf	scale@scl,w
  4074  0CFD  00A2               	movwf	___awdiv@dividend
  4075  0CFE  01A3               	clrf	___awdiv@dividend+1
  4076  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  4077  0D00  03A3               	decf	___awdiv@dividend+1,f
  4078  0D01  160A  118A  2007  120A  158A  	fcall	___awdiv
  4079  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4080  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4081  0D08  0820               	movf	?___awdiv,w
  4082  0D09  00CB               	movwf	??_scale+5
  4083  0D0A  3001               	movlw	1
  4084  0D0B                     u4115:	
  4085  0D0B  1003               	clrc
  4086  0D0C  0DCB               	rlf	??_scale+5,f
  4087  0D0D  3EFF               	addlw	-1
  4088  0D0E  1D03               	skipz
  4089  0D0F  2D0B               	goto	u4115
  4090  0D10  1003               	clrc
  4091  0D11  0D4B               	rlf	??_scale+5,w
  4092  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4093  0D13  0084               	movwf	4
  4094  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  4095  0D19  00CC               	movwf	??_scale+6
  4096  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  4097  0D1F  00CD               	movwf	??_scale+7
  4098  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  4099  0D25  00CE               	movwf	??_scale+8
  4100  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  4101  0D2B  00CF               	movwf	??_scale+9
  4102  0D2C  084F               	movf	??_scale+9,w
  4103  0D2D  00AF               	movwf	___flmul@a+3
  4104  0D2E  084E               	movf	??_scale+8,w
  4105  0D2F  00AE               	movwf	___flmul@a+2
  4106  0D30  084D               	movf	??_scale+7,w
  4107  0D31  00AD               	movwf	___flmul@a+1
  4108  0D32  084C               	movf	??_scale+6,w
  4109  0D33  00AC               	movwf	___flmul@a
  4110  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  4111  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4112  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4113  0D3B  082B               	movf	?___flmul+3,w
  4114  0D3C  00D3               	movwf	_scale$1195+3
  4115  0D3D  082A               	movf	?___flmul+2,w
  4116  0D3E  00D2               	movwf	_scale$1195+2
  4117  0D3F  0829               	movf	?___flmul+1,w
  4118  0D40  00D1               	movwf	_scale$1195+1
  4119  0D41  0828               	movf	?___flmul,w
  4120  0D42  00D0               	movwf	_scale$1195
  4121                           
  4122                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4123  0D43  300A               	movlw	10
  4124  0D44  00F3               	movwf	___awmod@divisor
  4125  0D45  3000               	movlw	0
  4126  0D46  00F4               	movwf	___awmod@divisor+1
  4127  0D47  0854               	movf	scale@scl,w
  4128  0D48  00F5               	movwf	___awmod@dividend
  4129  0D49  01F6               	clrf	___awmod@dividend+1
  4130  0D4A  1BF5               	btfsc	___awmod@dividend,7
  4131  0D4B  03F6               	decf	___awmod@dividend+1,f
  4132  0D4C  160A  158A  261F  120A  158A  	fcall	___awmod
  4133  0D51  0873               	movf	?___awmod,w
  4134  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4135  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4136  0D54  00C6               	movwf	??_scale
  4137  0D55  3001               	movlw	1
  4138  0D56                     u4125:	
  4139  0D56  1003               	clrc
  4140  0D57  0DC6               	rlf	??_scale,f
  4141  0D58  3EFF               	addlw	-1
  4142  0D59  1D03               	skipz
  4143  0D5A  2D56               	goto	u4125
  4144  0D5B  1003               	clrc
  4145  0D5C  0D46               	rlf	??_scale,w
  4146  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4147  0D5E  0084               	movwf	4
  4148  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  4149  0D64  00C7               	movwf	??_scale+1
  4150  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  4151  0D6A  00C8               	movwf	??_scale+2
  4152  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  4153  0D70  00C9               	movwf	??_scale+3
  4154  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  4155  0D76  00CA               	movwf	??_scale+4
  4156  0D77  084A               	movf	??_scale+4,w
  4157  0D78  00AB               	movwf	___flmul@b+3
  4158  0D79  0849               	movf	??_scale+3,w
  4159  0D7A  00AA               	movwf	___flmul@b+2
  4160  0D7B  0848               	movf	??_scale+2,w
  4161  0D7C  00A9               	movwf	___flmul@b+1
  4162  0D7D  0847               	movf	??_scale+1,w
  4163  0D7E  00A8               	movwf	___flmul@b
  4164  0D7F  0853               	movf	_scale$1195+3,w
  4165  0D80  00AF               	movwf	___flmul@a+3
  4166  0D81  0852               	movf	_scale$1195+2,w
  4167  0D82  00AE               	movwf	___flmul@a+2
  4168  0D83  0851               	movf	_scale$1195+1,w
  4169  0D84  00AD               	movwf	___flmul@a+1
  4170  0D85  0850               	movf	_scale$1195,w
  4171  0D86  00AC               	movwf	___flmul@a
  4172  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  4173  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4174  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4175  0D8E  082B               	movf	?___flmul+3,w
  4176  0D8F  00C5               	movwf	?_scale+3
  4177  0D90  082A               	movf	?___flmul+2,w
  4178  0D91  00C4               	movwf	?_scale+2
  4179  0D92  0829               	movf	?___flmul+1,w
  4180  0D93  00C3               	movwf	?_scale+1
  4181  0D94  0828               	movf	?___flmul,w
  4182  0D95  00C2               	movwf	?_scale
  4183  0D96  2FFF               	goto	l281
  4184  0D97                     l2805:	
  4185  0D97  0854               	movf	scale@scl,w
  4186  0D98  3A80               	xorlw	128
  4187  0D99  3E75               	addlw	-139
  4188  0D9A  1C03               	skipc
  4189  0D9B  2D9D               	goto	u4131
  4190  0D9C  2D9E               	goto	u4130
  4191  0D9D                     u4131:	
  4192  0D9D  2E26               	goto	l2811
  4193  0D9E                     u4130:	
  4194  0D9E                     l2807:	
  4195                           
  4196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4197  0D9E  300A               	movlw	10
  4198  0D9F  00F3               	movwf	___awmod@divisor
  4199  0DA0  3000               	movlw	0
  4200  0DA1  00F4               	movwf	___awmod@divisor+1
  4201  0DA2  0854               	movf	scale@scl,w
  4202  0DA3  00F5               	movwf	___awmod@dividend
  4203  0DA4  01F6               	clrf	___awmod@dividend+1
  4204  0DA5  1BF5               	btfsc	___awmod@dividend,7
  4205  0DA6  03F6               	decf	___awmod@dividend+1,f
  4206  0DA7  160A  158A  261F  120A  158A  	fcall	___awmod
  4207  0DAC  0873               	movf	?___awmod,w
  4208  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4209  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4210  0DAF  00C6               	movwf	??_scale
  4211  0DB0  3001               	movlw	1
  4212  0DB1                     u4145:	
  4213  0DB1  1003               	clrc
  4214  0DB2  0DC6               	rlf	??_scale,f
  4215  0DB3  3EFF               	addlw	-1
  4216  0DB4  1D03               	skipz
  4217  0DB5  2DB1               	goto	u4145
  4218  0DB6  1003               	clrc
  4219  0DB7  0D46               	rlf	??_scale,w
  4220  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4221  0DB9  0084               	movwf	4
  4222  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  4223  0DBF  00C7               	movwf	??_scale+1
  4224  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  4225  0DC5  00C8               	movwf	??_scale+2
  4226  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  4227  0DCB  00C9               	movwf	??_scale+3
  4228  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  4229  0DD1  00CA               	movwf	??_scale+4
  4230  0DD2  084A               	movf	??_scale+4,w
  4231  0DD3  00AB               	movwf	___flmul@b+3
  4232  0DD4  0849               	movf	??_scale+3,w
  4233  0DD5  00AA               	movwf	___flmul@b+2
  4234  0DD6  0848               	movf	??_scale+2,w
  4235  0DD7  00A9               	movwf	___flmul@b+1
  4236  0DD8  0847               	movf	??_scale+1,w
  4237  0DD9  00A8               	movwf	___flmul@b
  4238  0DDA  300A               	movlw	10
  4239  0DDB  00A0               	movwf	___awdiv@divisor
  4240  0DDC  3000               	movlw	0
  4241  0DDD  00A1               	movwf	___awdiv@divisor+1
  4242  0DDE  0854               	movf	scale@scl,w
  4243  0DDF  00A2               	movwf	___awdiv@dividend
  4244  0DE0  01A3               	clrf	___awdiv@dividend+1
  4245  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  4246  0DE2  03A3               	decf	___awdiv@dividend+1,f
  4247  0DE3  160A  118A  2007  120A  158A  	fcall	___awdiv
  4248  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4249  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4250  0DEA  0820               	movf	?___awdiv,w
  4251  0DEB  00CB               	movwf	??_scale+5
  4252  0DEC  3001               	movlw	1
  4253  0DED                     u4155:	
  4254  0DED  1003               	clrc
  4255  0DEE  0DCB               	rlf	??_scale+5,f
  4256  0DEF  3EFF               	addlw	-1
  4257  0DF0  1D03               	skipz
  4258  0DF1  2DED               	goto	u4155
  4259  0DF2  1003               	clrc
  4260  0DF3  0D4B               	rlf	??_scale+5,w
  4261  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4262  0DF5  0084               	movwf	4
  4263  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  4264  0DFB  00CC               	movwf	??_scale+6
  4265  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  4266  0E01  00CD               	movwf	??_scale+7
  4267  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  4268  0E07  00CE               	movwf	??_scale+8
  4269  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  4270  0E0D  00CF               	movwf	??_scale+9
  4271  0E0E  084F               	movf	??_scale+9,w
  4272  0E0F  00AF               	movwf	___flmul@a+3
  4273  0E10  084E               	movf	??_scale+8,w
  4274  0E11  00AE               	movwf	___flmul@a+2
  4275  0E12  084D               	movf	??_scale+7,w
  4276  0E13  00AD               	movwf	___flmul@a+1
  4277  0E14  084C               	movf	??_scale+6,w
  4278  0E15  00AC               	movwf	___flmul@a
  4279  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4280  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4281  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4282  0E1D  082B               	movf	?___flmul+3,w
  4283  0E1E  00C5               	movwf	?_scale+3
  4284  0E1F  082A               	movf	?___flmul+2,w
  4285  0E20  00C4               	movwf	?_scale+2
  4286  0E21  0829               	movf	?___flmul+1,w
  4287  0E22  00C3               	movwf	?_scale+1
  4288  0E23  0828               	movf	?___flmul,w
  4289  0E24  00C2               	movwf	?_scale
  4290  0E25  2FFF               	goto	l281
  4291  0E26                     l2811:	
  4292                           
  4293                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  4294  0E26  0854               	movf	scale@scl,w
  4295  0E27  00C6               	movwf	??_scale
  4296  0E28  3001               	movlw	1
  4297  0E29                     u4165:	
  4298  0E29  1003               	clrc
  4299  0E2A  0DC6               	rlf	??_scale,f
  4300  0E2B  3EFF               	addlw	-1
  4301  0E2C  1D03               	skipz
  4302  0E2D  2E29               	goto	u4165
  4303  0E2E  1003               	clrc
  4304  0E2F  0D46               	rlf	??_scale,w
  4305  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4306  0E31  0084               	movwf	4
  4307  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  4308  0E37  00C7               	movwf	??_scale+1
  4309  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  4310  0E3D  00C8               	movwf	??_scale+2
  4311  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  4312  0E43  00C9               	movwf	??_scale+3
  4313  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  4314  0E49  00CA               	movwf	??_scale+4
  4315  0E4A  084A               	movf	??_scale+4,w
  4316  0E4B  00C5               	movwf	?_scale+3
  4317  0E4C  0849               	movf	??_scale+3,w
  4318  0E4D  00C4               	movwf	?_scale+2
  4319  0E4E  0848               	movf	??_scale+2,w
  4320  0E4F  00C3               	movwf	?_scale+1
  4321  0E50  0847               	movf	??_scale+1,w
  4322  0E51  00C2               	movwf	?_scale
  4323  0E52  2FFF               	goto	l281
  4324  0E53                     l2815:	
  4325                           
  4326                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  4327  0E53  0854               	movf	scale@scl,w
  4328  0E54  3A80               	xorlw	128
  4329  0E55  3E12               	addlw	-238
  4330  0E56  1C03               	skipc
  4331  0E57  2E59               	goto	u4171
  4332  0E58  2E5A               	goto	u4170
  4333  0E59                     u4171:	
  4334  0E59  2F44               	goto	l2823
  4335  0E5A                     u4170:	
  4336  0E5A                     l2817:	
  4337                           
  4338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4339  0E5A  300A               	movlw	10
  4340  0E5B  00A0               	movwf	___awdiv@divisor
  4341  0E5C  3000               	movlw	0
  4342  0E5D  00A1               	movwf	___awdiv@divisor+1
  4343  0E5E  0854               	movf	scale@scl,w
  4344  0E5F  00F5               	movwf	___awmod@dividend
  4345  0E60  01F6               	clrf	___awmod@dividend+1
  4346  0E61  1BF5               	btfsc	___awmod@dividend,7
  4347  0E62  03F6               	decf	___awmod@dividend+1,f
  4348  0E63  3064               	movlw	100
  4349  0E64  00F3               	movwf	___awmod@divisor
  4350  0E65  3000               	movlw	0
  4351  0E66  00F4               	movwf	___awmod@divisor+1
  4352  0E67  160A  158A  261F  120A  158A  	fcall	___awmod
  4353  0E6C  0874               	movf	?___awmod+1,w
  4354  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0E6F  00A3               	movwf	___awdiv@dividend+1
  4357  0E70  0873               	movf	?___awmod,w
  4358  0E71  00A2               	movwf	___awdiv@dividend
  4359  0E72  160A  118A  2007  120A  158A  	fcall	___awdiv
  4360  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4361  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4362  0E79  0820               	movf	?___awdiv,w
  4363  0E7A  00C6               	movwf	??_scale
  4364  0E7B  3001               	movlw	1
  4365  0E7C                     u4185:	
  4366  0E7C  1003               	clrc
  4367  0E7D  0DC6               	rlf	??_scale,f
  4368  0E7E  3EFF               	addlw	-1
  4369  0E7F  1D03               	skipz
  4370  0E80  2E7C               	goto	u4185
  4371  0E81  1003               	clrc
  4372  0E82  0D46               	rlf	??_scale,w
  4373  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4374  0E84  0084               	movwf	4
  4375  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  4376  0E8A  00C7               	movwf	??_scale+1
  4377  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  4378  0E90  00C8               	movwf	??_scale+2
  4379  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  4380  0E96  00C9               	movwf	??_scale+3
  4381  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  4382  0E9C  00CA               	movwf	??_scale+4
  4383  0E9D  084A               	movf	??_scale+4,w
  4384  0E9E  00AB               	movwf	___flmul@b+3
  4385  0E9F  0849               	movf	??_scale+3,w
  4386  0EA0  00AA               	movwf	___flmul@b+2
  4387  0EA1  0848               	movf	??_scale+2,w
  4388  0EA2  00A9               	movwf	___flmul@b+1
  4389  0EA3  0847               	movf	??_scale+1,w
  4390  0EA4  00A8               	movwf	___flmul@b
  4391  0EA5  3064               	movlw	100
  4392  0EA6  00A0               	movwf	___awdiv@divisor
  4393  0EA7  3000               	movlw	0
  4394  0EA8  00A1               	movwf	___awdiv@divisor+1
  4395  0EA9  0854               	movf	scale@scl,w
  4396  0EAA  00A2               	movwf	___awdiv@dividend
  4397  0EAB  01A3               	clrf	___awdiv@dividend+1
  4398  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4399  0EAD  03A3               	decf	___awdiv@dividend+1,f
  4400  0EAE  160A  118A  2007  120A  158A  	fcall	___awdiv
  4401  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4402  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4403  0EB5  0820               	movf	?___awdiv,w
  4404  0EB6  00CB               	movwf	??_scale+5
  4405  0EB7  3001               	movlw	1
  4406  0EB8                     u4195:	
  4407  0EB8  1003               	clrc
  4408  0EB9  0DCB               	rlf	??_scale+5,f
  4409  0EBA  3EFF               	addlw	-1
  4410  0EBB  1D03               	skipz
  4411  0EBC  2EB8               	goto	u4195
  4412  0EBD  1003               	clrc
  4413  0EBE  0D4B               	rlf	??_scale+5,w
  4414  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4415  0EC0  0084               	movwf	4
  4416  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  4417  0EC6  00CC               	movwf	??_scale+6
  4418  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  4419  0ECC  00CD               	movwf	??_scale+7
  4420  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  4421  0ED2  00CE               	movwf	??_scale+8
  4422  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  4423  0ED8  00CF               	movwf	??_scale+9
  4424  0ED9  084F               	movf	??_scale+9,w
  4425  0EDA  00AF               	movwf	___flmul@a+3
  4426  0EDB  084E               	movf	??_scale+8,w
  4427  0EDC  00AE               	movwf	___flmul@a+2
  4428  0EDD  084D               	movf	??_scale+7,w
  4429  0EDE  00AD               	movwf	___flmul@a+1
  4430  0EDF  084C               	movf	??_scale+6,w
  4431  0EE0  00AC               	movwf	___flmul@a
  4432  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4433  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4434  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4435  0EE8  082B               	movf	?___flmul+3,w
  4436  0EE9  00D3               	movwf	_scale$1195+3
  4437  0EEA  082A               	movf	?___flmul+2,w
  4438  0EEB  00D2               	movwf	_scale$1195+2
  4439  0EEC  0829               	movf	?___flmul+1,w
  4440  0EED  00D1               	movwf	_scale$1195+1
  4441  0EEE  0828               	movf	?___flmul,w
  4442  0EEF  00D0               	movwf	_scale$1195
  4443                           
  4444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4445  0EF0  300A               	movlw	10
  4446  0EF1  00F3               	movwf	___awmod@divisor
  4447  0EF2  3000               	movlw	0
  4448  0EF3  00F4               	movwf	___awmod@divisor+1
  4449  0EF4  0854               	movf	scale@scl,w
  4450  0EF5  00F5               	movwf	___awmod@dividend
  4451  0EF6  01F6               	clrf	___awmod@dividend+1
  4452  0EF7  1BF5               	btfsc	___awmod@dividend,7
  4453  0EF8  03F6               	decf	___awmod@dividend+1,f
  4454  0EF9  160A  158A  261F  120A  158A  	fcall	___awmod
  4455  0EFE  0873               	movf	?___awmod,w
  4456  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4457  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4458  0F01  00C6               	movwf	??_scale
  4459  0F02  3001               	movlw	1
  4460  0F03                     u4205:	
  4461  0F03  1003               	clrc
  4462  0F04  0DC6               	rlf	??_scale,f
  4463  0F05  3EFF               	addlw	-1
  4464  0F06  1D03               	skipz
  4465  0F07  2F03               	goto	u4205
  4466  0F08  1003               	clrc
  4467  0F09  0D46               	rlf	??_scale,w
  4468  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4469  0F0B  0084               	movwf	4
  4470  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4471  0F11  00C7               	movwf	??_scale+1
  4472  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  4473  0F17  00C8               	movwf	??_scale+2
  4474  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  4475  0F1D  00C9               	movwf	??_scale+3
  4476  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  4477  0F23  00CA               	movwf	??_scale+4
  4478  0F24  084A               	movf	??_scale+4,w
  4479  0F25  00AB               	movwf	___flmul@b+3
  4480  0F26  0849               	movf	??_scale+3,w
  4481  0F27  00AA               	movwf	___flmul@b+2
  4482  0F28  0848               	movf	??_scale+2,w
  4483  0F29  00A9               	movwf	___flmul@b+1
  4484  0F2A  0847               	movf	??_scale+1,w
  4485  0F2B  00A8               	movwf	___flmul@b
  4486  0F2C  0853               	movf	_scale$1195+3,w
  4487  0F2D  00AF               	movwf	___flmul@a+3
  4488  0F2E  0852               	movf	_scale$1195+2,w
  4489  0F2F  00AE               	movwf	___flmul@a+2
  4490  0F30  0851               	movf	_scale$1195+1,w
  4491  0F31  00AD               	movwf	___flmul@a+1
  4492  0F32  0850               	movf	_scale$1195,w
  4493  0F33  00AC               	movwf	___flmul@a
  4494  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4495  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0F3B  082B               	movf	?___flmul+3,w
  4498  0F3C  00C5               	movwf	?_scale+3
  4499  0F3D  082A               	movf	?___flmul+2,w
  4500  0F3E  00C4               	movwf	?_scale+2
  4501  0F3F  0829               	movf	?___flmul+1,w
  4502  0F40  00C3               	movwf	?_scale+1
  4503  0F41  0828               	movf	?___flmul,w
  4504  0F42  00C2               	movwf	?_scale
  4505  0F43  2FFF               	goto	l281
  4506  0F44                     l2823:	
  4507  0F44  0854               	movf	scale@scl,w
  4508  0F45  3A80               	xorlw	128
  4509  0F46  3E75               	addlw	-139
  4510  0F47  1C03               	skipc
  4511  0F48  2F4A               	goto	u4211
  4512  0F49  2F4B               	goto	u4210
  4513  0F4A                     u4211:	
  4514  0F4A  2FD3               	goto	l2829
  4515  0F4B                     u4210:	
  4516  0F4B                     l2825:	
  4517                           
  4518                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4519  0F4B  300A               	movlw	10
  4520  0F4C  00F3               	movwf	___awmod@divisor
  4521  0F4D  3000               	movlw	0
  4522  0F4E  00F4               	movwf	___awmod@divisor+1
  4523  0F4F  0854               	movf	scale@scl,w
  4524  0F50  00F5               	movwf	___awmod@dividend
  4525  0F51  01F6               	clrf	___awmod@dividend+1
  4526  0F52  1BF5               	btfsc	___awmod@dividend,7
  4527  0F53  03F6               	decf	___awmod@dividend+1,f
  4528  0F54  160A  158A  261F  120A  158A  	fcall	___awmod
  4529  0F59  0873               	movf	?___awmod,w
  4530  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4531  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4532  0F5C  00C6               	movwf	??_scale
  4533  0F5D  3001               	movlw	1
  4534  0F5E                     u4225:	
  4535  0F5E  1003               	clrc
  4536  0F5F  0DC6               	rlf	??_scale,f
  4537  0F60  3EFF               	addlw	-1
  4538  0F61  1D03               	skipz
  4539  0F62  2F5E               	goto	u4225
  4540  0F63  1003               	clrc
  4541  0F64  0D46               	rlf	??_scale,w
  4542  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4543  0F66  0084               	movwf	4
  4544  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  4545  0F6C  00C7               	movwf	??_scale+1
  4546  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4547  0F72  00C8               	movwf	??_scale+2
  4548  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  4549  0F78  00C9               	movwf	??_scale+3
  4550  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  4551  0F7E  00CA               	movwf	??_scale+4
  4552  0F7F  084A               	movf	??_scale+4,w
  4553  0F80  00AB               	movwf	___flmul@b+3
  4554  0F81  0849               	movf	??_scale+3,w
  4555  0F82  00AA               	movwf	___flmul@b+2
  4556  0F83  0848               	movf	??_scale+2,w
  4557  0F84  00A9               	movwf	___flmul@b+1
  4558  0F85  0847               	movf	??_scale+1,w
  4559  0F86  00A8               	movwf	___flmul@b
  4560  0F87  300A               	movlw	10
  4561  0F88  00A0               	movwf	___awdiv@divisor
  4562  0F89  3000               	movlw	0
  4563  0F8A  00A1               	movwf	___awdiv@divisor+1
  4564  0F8B  0854               	movf	scale@scl,w
  4565  0F8C  00A2               	movwf	___awdiv@dividend
  4566  0F8D  01A3               	clrf	___awdiv@dividend+1
  4567  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4568  0F8F  03A3               	decf	___awdiv@dividend+1,f
  4569  0F90  160A  118A  2007  120A  158A  	fcall	___awdiv
  4570  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4571  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4572  0F97  0820               	movf	?___awdiv,w
  4573  0F98  00CB               	movwf	??_scale+5
  4574  0F99  3001               	movlw	1
  4575  0F9A                     u4235:	
  4576  0F9A  1003               	clrc
  4577  0F9B  0DCB               	rlf	??_scale+5,f
  4578  0F9C  3EFF               	addlw	-1
  4579  0F9D  1D03               	skipz
  4580  0F9E  2F9A               	goto	u4235
  4581  0F9F  1003               	clrc
  4582  0FA0  0D4B               	rlf	??_scale+5,w
  4583  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4584  0FA2  0084               	movwf	4
  4585  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4586  0FA8  00CC               	movwf	??_scale+6
  4587  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4588  0FAE  00CD               	movwf	??_scale+7
  4589  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  4590  0FB4  00CE               	movwf	??_scale+8
  4591  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  4592  0FBA  00CF               	movwf	??_scale+9
  4593  0FBB  084F               	movf	??_scale+9,w
  4594  0FBC  00AF               	movwf	___flmul@a+3
  4595  0FBD  084E               	movf	??_scale+8,w
  4596  0FBE  00AE               	movwf	___flmul@a+2
  4597  0FBF  084D               	movf	??_scale+7,w
  4598  0FC0  00AD               	movwf	___flmul@a+1
  4599  0FC1  084C               	movf	??_scale+6,w
  4600  0FC2  00AC               	movwf	___flmul@a
  4601  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4602  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4603  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4604  0FCA  082B               	movf	?___flmul+3,w
  4605  0FCB  00C5               	movwf	?_scale+3
  4606  0FCC  082A               	movf	?___flmul+2,w
  4607  0FCD  00C4               	movwf	?_scale+2
  4608  0FCE  0829               	movf	?___flmul+1,w
  4609  0FCF  00C3               	movwf	?_scale+1
  4610  0FD0  0828               	movf	?___flmul,w
  4611  0FD1  00C2               	movwf	?_scale
  4612  0FD2  2FFF               	goto	l281
  4613  0FD3                     l2829:	
  4614                           
  4615                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4616  0FD3  0854               	movf	scale@scl,w
  4617  0FD4  00C6               	movwf	??_scale
  4618  0FD5  3001               	movlw	1
  4619  0FD6                     u4245:	
  4620  0FD6  1003               	clrc
  4621  0FD7  0DC6               	rlf	??_scale,f
  4622  0FD8  3EFF               	addlw	-1
  4623  0FD9  1D03               	skipz
  4624  0FDA  2FD6               	goto	u4245
  4625  0FDB  1003               	clrc
  4626  0FDC  0D46               	rlf	??_scale,w
  4627  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4628  0FDE  0084               	movwf	4
  4629  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  4630  0FE4  00C7               	movwf	??_scale+1
  4631  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4632  0FEA  00C8               	movwf	??_scale+2
  4633  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  4634  0FF0  00C9               	movwf	??_scale+3
  4635  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  4636  0FF6  00CA               	movwf	??_scale+4
  4637  0FF7  084A               	movf	??_scale+4,w
  4638  0FF8  00C5               	movwf	?_scale+3
  4639  0FF9  0849               	movf	??_scale+3,w
  4640  0FFA  00C4               	movwf	?_scale+2
  4641  0FFB  0848               	movf	??_scale+2,w
  4642  0FFC  00C3               	movwf	?_scale+1
  4643  0FFD  0847               	movf	??_scale+1,w
  4644  0FFE  00C2               	movwf	?_scale
  4645  0FFF                     l281:	
  4646  0FFF  0008               	return
  4647  1000                     __end_of_scale:	
  4648                           
  4649                           	psect	text4
  4650  1E1F                     __ptext4:	
  4651 ;; *************** function ___awmod *****************
  4652 ;; Defined at:
  4653 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  divisor         2    3[COMMON] int 
  4656 ;;  dividend        2    5[COMMON] int 
  4657 ;; Auto vars:     Size  Location     Type
  4658 ;;  sign            1    9[COMMON] unsigned char 
  4659 ;;  counter         1    8[COMMON] unsigned char 
  4660 ;; Return value:  Size  Location     Type
  4661 ;;                  2    3[COMMON] int 
  4662 ;; Registers used:
  4663 ;;		wreg, status,2, status,0
  4664 ;; Tracked objects:
  4665 ;;		On entry : 0/0
  4666 ;;		On exit  : 0/0
  4667 ;;		Unchanged: 0/0
  4668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4669 ;;      Params:         4       0       0       0       0
  4670 ;;      Locals:         2       0       0       0       0
  4671 ;;      Temps:          1       0       0       0       0
  4672 ;;      Totals:         7       0       0       0       0
  4673 ;;Total ram usage:        7 bytes
  4674 ;; Hardware stack levels used:    1
  4675 ;; Hardware stack levels required when called:    1
  4676 ;; This function calls:
  4677 ;;		Nothing
  4678 ;; This function is called by:
  4679 ;;		_scale
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683                           
  4684                           ;psect for function ___awmod
  4685  1E1F                     ___awmod:	
  4686  1E1F                     l2337:	
  4687                           ;incstack = 0
  4688                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4689                           
  4690  1E1F  01F9               	clrf	___awmod@sign
  4691  1E20                     l2339:	
  4692  1E20  1FF6               	btfss	___awmod@dividend+1,7
  4693  1E21  2E23               	goto	u2951
  4694  1E22  2E24               	goto	u2950
  4695  1E23                     u2951:	
  4696  1E23  2E2B               	goto	l2345
  4697  1E24                     u2950:	
  4698  1E24                     l2341:	
  4699  1E24  09F5               	comf	___awmod@dividend,f
  4700  1E25  09F6               	comf	___awmod@dividend+1,f
  4701  1E26  0AF5               	incf	___awmod@dividend,f
  4702  1E27  1903               	skipnz
  4703  1E28  0AF6               	incf	___awmod@dividend+1,f
  4704  1E29                     l2343:	
  4705  1E29  01F9               	clrf	___awmod@sign
  4706  1E2A  0AF9               	incf	___awmod@sign,f
  4707  1E2B                     l2345:	
  4708  1E2B  1FF4               	btfss	___awmod@divisor+1,7
  4709  1E2C  2E2E               	goto	u2961
  4710  1E2D  2E2F               	goto	u2960
  4711  1E2E                     u2961:	
  4712  1E2E  2E34               	goto	l2349
  4713  1E2F                     u2960:	
  4714  1E2F                     l2347:	
  4715  1E2F  09F3               	comf	___awmod@divisor,f
  4716  1E30  09F4               	comf	___awmod@divisor+1,f
  4717  1E31  0AF3               	incf	___awmod@divisor,f
  4718  1E32  1903               	skipnz
  4719  1E33  0AF4               	incf	___awmod@divisor+1,f
  4720  1E34                     l2349:	
  4721  1E34  0873               	movf	___awmod@divisor,w
  4722  1E35  0474               	iorwf	___awmod@divisor+1,w
  4723  1E36  1903               	btfsc	3,2
  4724  1E37  2E39               	goto	u2971
  4725  1E38  2E3A               	goto	u2970
  4726  1E39                     u2971:	
  4727  1E39  2E69               	goto	l2367
  4728  1E3A                     u2970:	
  4729  1E3A                     l2351:	
  4730  1E3A  01F8               	clrf	___awmod@counter
  4731  1E3B  0AF8               	incf	___awmod@counter,f
  4732  1E3C  2E48               	goto	l2357
  4733  1E3D                     l2353:	
  4734  1E3D  3001               	movlw	1
  4735  1E3E                     u2985:	
  4736  1E3E  1003               	clrc
  4737  1E3F  0DF3               	rlf	___awmod@divisor,f
  4738  1E40  0DF4               	rlf	___awmod@divisor+1,f
  4739  1E41  3EFF               	addlw	-1
  4740  1E42  1D03               	skipz
  4741  1E43  2E3E               	goto	u2985
  4742  1E44                     l2355:	
  4743  1E44  3001               	movlw	1
  4744  1E45  00F7               	movwf	??___awmod
  4745  1E46  0877               	movf	??___awmod,w
  4746  1E47  07F8               	addwf	___awmod@counter,f
  4747  1E48                     l2357:	
  4748  1E48  1FF4               	btfss	___awmod@divisor+1,7
  4749  1E49  2E4B               	goto	u2991
  4750  1E4A  2E4C               	goto	u2990
  4751  1E4B                     u2991:	
  4752  1E4B  2E3D               	goto	l2353
  4753  1E4C                     u2990:	
  4754  1E4C                     l2359:	
  4755  1E4C  0874               	movf	___awmod@divisor+1,w
  4756  1E4D  0276               	subwf	___awmod@dividend+1,w
  4757  1E4E  1D03               	skipz
  4758  1E4F  2E52               	goto	u3005
  4759  1E50  0873               	movf	___awmod@divisor,w
  4760  1E51  0275               	subwf	___awmod@dividend,w
  4761  1E52                     u3005:	
  4762  1E52  1C03               	skipc
  4763  1E53  2E55               	goto	u3001
  4764  1E54  2E56               	goto	u3000
  4765  1E55                     u3001:	
  4766  1E55  2E5C               	goto	l2363
  4767  1E56                     u3000:	
  4768  1E56                     l2361:	
  4769  1E56  0873               	movf	___awmod@divisor,w
  4770  1E57  02F5               	subwf	___awmod@dividend,f
  4771  1E58  0874               	movf	___awmod@divisor+1,w
  4772  1E59  1C03               	skipc
  4773  1E5A  03F6               	decf	___awmod@dividend+1,f
  4774  1E5B  02F6               	subwf	___awmod@dividend+1,f
  4775  1E5C                     l2363:	
  4776  1E5C  3001               	movlw	1
  4777  1E5D                     u3015:	
  4778  1E5D  1003               	clrc
  4779  1E5E  0CF4               	rrf	___awmod@divisor+1,f
  4780  1E5F  0CF3               	rrf	___awmod@divisor,f
  4781  1E60  3EFF               	addlw	-1
  4782  1E61  1D03               	skipz
  4783  1E62  2E5D               	goto	u3015
  4784  1E63                     l2365:	
  4785  1E63  3001               	movlw	1
  4786  1E64  02F8               	subwf	___awmod@counter,f
  4787  1E65  1D03               	btfss	3,2
  4788  1E66  2E68               	goto	u3021
  4789  1E67  2E69               	goto	u3020
  4790  1E68                     u3021:	
  4791  1E68  2E4C               	goto	l2359
  4792  1E69                     u3020:	
  4793  1E69                     l2367:	
  4794  1E69  0879               	movf	___awmod@sign,w
  4795  1E6A  1903               	btfsc	3,2
  4796  1E6B  2E6D               	goto	u3031
  4797  1E6C  2E6E               	goto	u3030
  4798  1E6D                     u3031:	
  4799  1E6D  2E73               	goto	l2371
  4800  1E6E                     u3030:	
  4801  1E6E                     l2369:	
  4802  1E6E  09F5               	comf	___awmod@dividend,f
  4803  1E6F  09F6               	comf	___awmod@dividend+1,f
  4804  1E70  0AF5               	incf	___awmod@dividend,f
  4805  1E71  1903               	skipnz
  4806  1E72  0AF6               	incf	___awmod@dividend+1,f
  4807  1E73                     l2371:	
  4808  1E73  0876               	movf	___awmod@dividend+1,w
  4809  1E74  00F4               	movwf	?___awmod+1
  4810  1E75  0875               	movf	___awmod@dividend,w
  4811  1E76  00F3               	movwf	?___awmod
  4812  1E77                     l534:	
  4813  1E77  0008               	return
  4814  1E78                     __end_of___awmod:	
  4815                           
  4816                           	psect	text5
  4817  1007                     __ptext5:	
  4818 ;; *************** function ___awdiv *****************
  4819 ;; Defined at:
  4820 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4821 ;; Parameters:    Size  Location     Type
  4822 ;;  divisor         2    0[BANK0 ] int 
  4823 ;;  dividend        2    2[BANK0 ] int 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  quotient        2    6[BANK0 ] int 
  4826 ;;  sign            1    5[BANK0 ] unsigned char 
  4827 ;;  counter         1    4[BANK0 ] unsigned char 
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  2    0[BANK0 ] int 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4837 ;;      Params:         0       4       0       0       0
  4838 ;;      Locals:         0       4       0       0       0
  4839 ;;      Temps:          1       0       0       0       0
  4840 ;;      Totals:         1       8       0       0       0
  4841 ;;Total ram usage:        9 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    1
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_scale
  4848 ;;		_sprintf
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           
  4853                           ;psect for function ___awdiv
  4854  1007                     ___awdiv:	
  4855  1007                     l2293:	
  4856                           ;incstack = 0
  4857                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4858                           
  4859  1007  1283               	bcf	3,5	;RP0=0, select bank0
  4860  1008  1303               	bcf	3,6	;RP1=0, select bank0
  4861  1009  01A5               	clrf	___awdiv@sign
  4862  100A                     l2295:	
  4863  100A  1FA1               	btfss	___awdiv@divisor+1,7
  4864  100B  280D               	goto	u2851
  4865  100C  280E               	goto	u2850
  4866  100D                     u2851:	
  4867  100D  2815               	goto	l2301
  4868  100E                     u2850:	
  4869  100E                     l2297:	
  4870  100E  09A0               	comf	___awdiv@divisor,f
  4871  100F  09A1               	comf	___awdiv@divisor+1,f
  4872  1010  0AA0               	incf	___awdiv@divisor,f
  4873  1011  1903               	skipnz
  4874  1012  0AA1               	incf	___awdiv@divisor+1,f
  4875  1013                     l2299:	
  4876  1013  01A5               	clrf	___awdiv@sign
  4877  1014  0AA5               	incf	___awdiv@sign,f
  4878  1015                     l2301:	
  4879  1015  1FA3               	btfss	___awdiv@dividend+1,7
  4880  1016  2818               	goto	u2861
  4881  1017  2819               	goto	u2860
  4882  1018                     u2861:	
  4883  1018  2822               	goto	l2307
  4884  1019                     u2860:	
  4885  1019                     l2303:	
  4886  1019  09A2               	comf	___awdiv@dividend,f
  4887  101A  09A3               	comf	___awdiv@dividend+1,f
  4888  101B  0AA2               	incf	___awdiv@dividend,f
  4889  101C  1903               	skipnz
  4890  101D  0AA3               	incf	___awdiv@dividend+1,f
  4891  101E                     l2305:	
  4892  101E  3001               	movlw	1
  4893  101F  00FA               	movwf	??___awdiv
  4894  1020  087A               	movf	??___awdiv,w
  4895  1021  06A5               	xorwf	___awdiv@sign,f
  4896  1022                     l2307:	
  4897  1022  01A6               	clrf	___awdiv@quotient
  4898  1023  01A7               	clrf	___awdiv@quotient+1
  4899  1024                     l2309:	
  4900  1024  0820               	movf	___awdiv@divisor,w
  4901  1025  0421               	iorwf	___awdiv@divisor+1,w
  4902  1026  1903               	btfsc	3,2
  4903  1027  2829               	goto	u2871
  4904  1028  282A               	goto	u2870
  4905  1029                     u2871:	
  4906  1029  2861               	goto	l2329
  4907  102A                     u2870:	
  4908  102A                     l2311:	
  4909  102A  01A4               	clrf	___awdiv@counter
  4910  102B  0AA4               	incf	___awdiv@counter,f
  4911  102C  2838               	goto	l2317
  4912  102D                     l2313:	
  4913  102D  3001               	movlw	1
  4914  102E                     u2885:	
  4915  102E  1003               	clrc
  4916  102F  0DA0               	rlf	___awdiv@divisor,f
  4917  1030  0DA1               	rlf	___awdiv@divisor+1,f
  4918  1031  3EFF               	addlw	-1
  4919  1032  1D03               	skipz
  4920  1033  282E               	goto	u2885
  4921  1034                     l2315:	
  4922  1034  3001               	movlw	1
  4923  1035  00FA               	movwf	??___awdiv
  4924  1036  087A               	movf	??___awdiv,w
  4925  1037  07A4               	addwf	___awdiv@counter,f
  4926  1038                     l2317:	
  4927  1038  1FA1               	btfss	___awdiv@divisor+1,7
  4928  1039  283B               	goto	u2891
  4929  103A  283C               	goto	u2890
  4930  103B                     u2891:	
  4931  103B  282D               	goto	l2313
  4932  103C                     u2890:	
  4933  103C                     l2319:	
  4934  103C  3001               	movlw	1
  4935  103D                     u2905:	
  4936  103D  1003               	clrc
  4937  103E  0DA6               	rlf	___awdiv@quotient,f
  4938  103F  0DA7               	rlf	___awdiv@quotient+1,f
  4939  1040  3EFF               	addlw	-1
  4940  1041  1D03               	skipz
  4941  1042  283D               	goto	u2905
  4942  1043  0821               	movf	___awdiv@divisor+1,w
  4943  1044  0223               	subwf	___awdiv@dividend+1,w
  4944  1045  1D03               	skipz
  4945  1046  2849               	goto	u2915
  4946  1047  0820               	movf	___awdiv@divisor,w
  4947  1048  0222               	subwf	___awdiv@dividend,w
  4948  1049                     u2915:	
  4949  1049  1C03               	skipc
  4950  104A  284C               	goto	u2911
  4951  104B  284D               	goto	u2910
  4952  104C                     u2911:	
  4953  104C  2854               	goto	l2325
  4954  104D                     u2910:	
  4955  104D                     l2321:	
  4956  104D  0820               	movf	___awdiv@divisor,w
  4957  104E  02A2               	subwf	___awdiv@dividend,f
  4958  104F  0821               	movf	___awdiv@divisor+1,w
  4959  1050  1C03               	skipc
  4960  1051  03A3               	decf	___awdiv@dividend+1,f
  4961  1052  02A3               	subwf	___awdiv@dividend+1,f
  4962  1053                     l2323:	
  4963  1053  1426               	bsf	___awdiv@quotient,0
  4964  1054                     l2325:	
  4965  1054  3001               	movlw	1
  4966  1055                     u2925:	
  4967  1055  1003               	clrc
  4968  1056  0CA1               	rrf	___awdiv@divisor+1,f
  4969  1057  0CA0               	rrf	___awdiv@divisor,f
  4970  1058  3EFF               	addlw	-1
  4971  1059  1D03               	skipz
  4972  105A  2855               	goto	u2925
  4973  105B                     l2327:	
  4974  105B  3001               	movlw	1
  4975  105C  02A4               	subwf	___awdiv@counter,f
  4976  105D  1D03               	btfss	3,2
  4977  105E  2860               	goto	u2931
  4978  105F  2861               	goto	u2930
  4979  1060                     u2931:	
  4980  1060  283C               	goto	l2319
  4981  1061                     u2930:	
  4982  1061                     l2329:	
  4983  1061  0825               	movf	___awdiv@sign,w
  4984  1062  1903               	btfsc	3,2
  4985  1063  2865               	goto	u2941
  4986  1064  2866               	goto	u2940
  4987  1065                     u2941:	
  4988  1065  286B               	goto	l2333
  4989  1066                     u2940:	
  4990  1066                     l2331:	
  4991  1066  09A6               	comf	___awdiv@quotient,f
  4992  1067  09A7               	comf	___awdiv@quotient+1,f
  4993  1068  0AA6               	incf	___awdiv@quotient,f
  4994  1069  1903               	skipnz
  4995  106A  0AA7               	incf	___awdiv@quotient+1,f
  4996  106B                     l2333:	
  4997  106B  0827               	movf	___awdiv@quotient+1,w
  4998  106C  00A1               	movwf	?___awdiv+1
  4999  106D  0826               	movf	___awdiv@quotient,w
  5000  106E  00A0               	movwf	?___awdiv
  5001  106F                     l521:	
  5002  106F  0008               	return
  5003  1070                     __end_of___awdiv:	
  5004                           
  5005                           	psect	text6
  5006  1B76                     __ptext6:	
  5007 ;; *************** function _isdigit *****************
  5008 ;; Defined at:
  5009 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  c               1    wreg     unsigned char 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  c               1    4[COMMON] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;		None               void
  5016 ;; Registers used:
  5017 ;;		wreg, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5023 ;;      Params:         0       0       0       0       0
  5024 ;;      Locals:         2       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0
  5026 ;;      Totals:         2       0       0       0       0
  5027 ;;Total ram usage:        2 bytes
  5028 ;; Hardware stack levels used:    1
  5029 ;; Hardware stack levels required when called:    1
  5030 ;; This function calls:
  5031 ;;		Nothing
  5032 ;; This function is called by:
  5033 ;;		_sprintf
  5034 ;; This function uses a non-reentrant model
  5035 ;;
  5036                           
  5037                           
  5038                           ;psect for function _isdigit
  5039  1B76                     _isdigit:	
  5040                           
  5041                           ;incstack = 0
  5042                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5043                           ;isdigit@c stored from wreg
  5044  1B76  00F4               	movwf	isdigit@c
  5045  1B77                     l2833:	
  5046  1B77  01F3               	clrf	_isdigit$991
  5047  1B78                     l2835:	
  5048  1B78  303A               	movlw	58
  5049  1B79  0274               	subwf	isdigit@c,w
  5050  1B7A  1803               	skipnc
  5051  1B7B  2B7D               	goto	u4251
  5052  1B7C  2B7E               	goto	u4250
  5053  1B7D                     u4251:	
  5054  1B7D  2B86               	goto	l2841
  5055  1B7E                     u4250:	
  5056  1B7E                     l2837:	
  5057  1B7E  3030               	movlw	48
  5058  1B7F  0274               	subwf	isdigit@c,w
  5059  1B80  1C03               	skipc
  5060  1B81  2B83               	goto	u4261
  5061  1B82  2B84               	goto	u4260
  5062  1B83                     u4261:	
  5063  1B83  2B86               	goto	l2841
  5064  1B84                     u4260:	
  5065  1B84                     l2839:	
  5066  1B84  01F3               	clrf	_isdigit$991
  5067  1B85  0AF3               	incf	_isdigit$991,f
  5068  1B86                     l2841:	
  5069  1B86  0C73               	rrf	_isdigit$991,w
  5070  1B87                     l849:	
  5071  1B87  0008               	return
  5072  1B88                     __end_of_isdigit:	
  5073                           
  5074                           	psect	text7
  5075  136B                     __ptext7:	
  5076 ;; *************** function _fround *****************
  5077 ;; Defined at:
  5078 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  prec            1    wreg     unsigned char 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;  prec            1   53[BANK0 ] unsigned char 
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  4   34[BANK0 ] unsigned char 
  5085 ;; Registers used:
  5086 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5092 ;;      Params:         0       4       0       0       0
  5093 ;;      Locals:         0       9       0       0       0
  5094 ;;      Temps:          0       7       0       0       0
  5095 ;;      Totals:         0      20       0       0       0
  5096 ;;Total ram usage:       20 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    3
  5099 ;; This function calls:
  5100 ;;		___flmul
  5101 ;;		___lwdiv
  5102 ;;		___lwmod
  5103 ;; This function is called by:
  5104 ;;		_sprintf
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           
  5109                           ;psect for function _fround
  5110  136B                     _fround:	
  5111                           
  5112                           ;incstack = 0
  5113                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5114                           ;fround@prec stored from wreg
  5115  136B  1283               	bcf	3,5	;RP0=0, select bank0
  5116  136C  1303               	bcf	3,6	;RP1=0, select bank0
  5117  136D  00D5               	movwf	fround@prec
  5118  136E                     l2775:	
  5119                           
  5120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  5121  136E  306E               	movlw	110
  5122  136F  0255               	subwf	fround@prec,w
  5123  1370  1C03               	skipc
  5124  1371  2B73               	goto	u4001
  5125  1372  2B74               	goto	u4000
  5126  1373                     u4001:	
  5127  1373  2C83               	goto	l2783
  5128  1374                     u4000:	
  5129  1374                     l2777:	
  5130                           
  5131                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5132  1374  303F               	movlw	63
  5133  1375  00AB               	movwf	___flmul@b+3
  5134  1376  3000               	movlw	0
  5135  1377  00AA               	movwf	___flmul@b+2
  5136  1378  3000               	movlw	0
  5137  1379  00A9               	movwf	___flmul@b+1
  5138  137A  3000               	movlw	0
  5139  137B  00A8               	movwf	___flmul@b
  5140  137C  3064               	movlw	100
  5141  137D  00A0               	movwf	___lwdiv@divisor
  5142  137E  3000               	movlw	0
  5143  137F  00A1               	movwf	___lwdiv@divisor+1
  5144  1380  0855               	movf	fround@prec,w
  5145  1381  00C6               	movwf	??_fround
  5146  1382  01C7               	clrf	??_fround+1
  5147  1383  0846               	movf	??_fround,w
  5148  1384  00A2               	movwf	___lwdiv@dividend
  5149  1385  0847               	movf	??_fround+1,w
  5150  1386  00A3               	movwf	___lwdiv@dividend+1
  5151  1387  160A  158A  24E6  160A  118A  	fcall	___lwdiv
  5152  138C  1283               	bcf	3,5	;RP0=0, select bank0
  5153  138D  1303               	bcf	3,6	;RP1=0, select bank0
  5154  138E  0820               	movf	?___lwdiv,w
  5155  138F  00C8               	movwf	??_fround+2
  5156  1390  3001               	movlw	1
  5157  1391                     u4015:	
  5158  1391  1003               	clrc
  5159  1392  0DC8               	rlf	??_fround+2,f
  5160  1393  3EFF               	addlw	-1
  5161  1394  1D03               	skipz
  5162  1395  2B91               	goto	u4015
  5163  1396  1003               	clrc
  5164  1397  0D48               	rlf	??_fround+2,w
  5165  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5166  1399  0084               	movwf	4
  5167  139A  160A  158A  200A  160A  118A  	fcall	stringdir
  5168  139F  00C9               	movwf	??_fround+3
  5169  13A0  160A  158A  200A  160A  118A  	fcall	stringdir
  5170  13A5  00CA               	movwf	??_fround+4
  5171  13A6  160A  158A  200A  160A  118A  	fcall	stringdir
  5172  13AB  00CB               	movwf	??_fround+5
  5173  13AC  160A  158A  200A  160A  118A  	fcall	stringdir
  5174  13B1  00CC               	movwf	??_fround+6
  5175  13B2  084C               	movf	??_fround+6,w
  5176  13B3  00AF               	movwf	___flmul@a+3
  5177  13B4  084B               	movf	??_fround+5,w
  5178  13B5  00AE               	movwf	___flmul@a+2
  5179  13B6  084A               	movf	??_fround+4,w
  5180  13B7  00AD               	movwf	___flmul@a+1
  5181  13B8  0849               	movf	??_fround+3,w
  5182  13B9  00AC               	movwf	___flmul@a
  5183  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  5184  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5185  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5186  13C1  082B               	movf	?___flmul+3,w
  5187  13C2  00D4               	movwf	_fround$1193+3
  5188  13C3  082A               	movf	?___flmul+2,w
  5189  13C4  00D3               	movwf	_fround$1193+2
  5190  13C5  0829               	movf	?___flmul+1,w
  5191  13C6  00D2               	movwf	_fround$1193+1
  5192  13C7  0828               	movf	?___flmul,w
  5193  13C8  00D1               	movwf	_fround$1193
  5194                           
  5195                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5196  13C9  300A               	movlw	10
  5197  13CA  00A0               	movwf	___lwdiv@divisor
  5198  13CB  3000               	movlw	0
  5199  13CC  00A1               	movwf	___lwdiv@divisor+1
  5200  13CD  0855               	movf	fround@prec,w
  5201  13CE  00C6               	movwf	??_fround
  5202  13CF  01C7               	clrf	??_fround+1
  5203  13D0  0846               	movf	??_fround,w
  5204  13D1  00F5               	movwf	___lwmod@dividend
  5205  13D2  0847               	movf	??_fround+1,w
  5206  13D3  00F6               	movwf	___lwmod@dividend+1
  5207  13D4  3064               	movlw	100
  5208  13D5  00F3               	movwf	___lwmod@divisor
  5209  13D6  3000               	movlw	0
  5210  13D7  00F4               	movwf	___lwmod@divisor+1
  5211  13D8  160A  158A  2466  160A  118A  	fcall	___lwmod
  5212  13DD  0874               	movf	?___lwmod+1,w
  5213  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  5214  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  5215  13E0  00A3               	movwf	___lwdiv@dividend+1
  5216  13E1  0873               	movf	?___lwmod,w
  5217  13E2  00A2               	movwf	___lwdiv@dividend
  5218  13E3  160A  158A  24E6  160A  118A  	fcall	___lwdiv
  5219  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  5220  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  5221  13EA  0820               	movf	?___lwdiv,w
  5222  13EB  00C8               	movwf	??_fround+2
  5223  13EC  3001               	movlw	1
  5224  13ED                     u4025:	
  5225  13ED  1003               	clrc
  5226  13EE  0DC8               	rlf	??_fround+2,f
  5227  13EF  3EFF               	addlw	-1
  5228  13F0  1D03               	skipz
  5229  13F1  2BED               	goto	u4025
  5230  13F2  1003               	clrc
  5231  13F3  0D48               	rlf	??_fround+2,w
  5232  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5233  13F5  0084               	movwf	4
  5234  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  5235  13FB  00C9               	movwf	??_fround+3
  5236  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5237  1401  00CA               	movwf	??_fround+4
  5238  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  5239  1407  00CB               	movwf	??_fround+5
  5240  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  5241  140D  00CC               	movwf	??_fround+6
  5242  140E  084C               	movf	??_fround+6,w
  5243  140F  00AB               	movwf	___flmul@b+3
  5244  1410  084B               	movf	??_fround+5,w
  5245  1411  00AA               	movwf	___flmul@b+2
  5246  1412  084A               	movf	??_fround+4,w
  5247  1413  00A9               	movwf	___flmul@b+1
  5248  1414  0849               	movf	??_fround+3,w
  5249  1415  00A8               	movwf	___flmul@b
  5250  1416  0854               	movf	_fround$1193+3,w
  5251  1417  00AF               	movwf	___flmul@a+3
  5252  1418  0853               	movf	_fround$1193+2,w
  5253  1419  00AE               	movwf	___flmul@a+2
  5254  141A  0852               	movf	_fround$1193+1,w
  5255  141B  00AD               	movwf	___flmul@a+1
  5256  141C  0851               	movf	_fround$1193,w
  5257  141D  00AC               	movwf	___flmul@a
  5258  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  5259  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5260  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5261  1425  082B               	movf	?___flmul+3,w
  5262  1426  00D0               	movwf	_fround$1194+3
  5263  1427  082A               	movf	?___flmul+2,w
  5264  1428  00CF               	movwf	_fround$1194+2
  5265  1429  0829               	movf	?___flmul+1,w
  5266  142A  00CE               	movwf	_fround$1194+1
  5267  142B  0828               	movf	?___flmul,w
  5268  142C  00CD               	movwf	_fround$1194
  5269                           
  5270                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5271  142D  300A               	movlw	10
  5272  142E  00F3               	movwf	___lwmod@divisor
  5273  142F  3000               	movlw	0
  5274  1430  00F4               	movwf	___lwmod@divisor+1
  5275  1431  0855               	movf	fround@prec,w
  5276  1432  00C6               	movwf	??_fround
  5277  1433  01C7               	clrf	??_fround+1
  5278  1434  0846               	movf	??_fround,w
  5279  1435  00F5               	movwf	___lwmod@dividend
  5280  1436  0847               	movf	??_fround+1,w
  5281  1437  00F6               	movwf	___lwmod@dividend+1
  5282  1438  160A  158A  2466  160A  118A  	fcall	___lwmod
  5283  143D  0873               	movf	?___lwmod,w
  5284  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5285  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5286  1440  00C8               	movwf	??_fround+2
  5287  1441  3001               	movlw	1
  5288  1442                     u4035:	
  5289  1442  1003               	clrc
  5290  1443  0DC8               	rlf	??_fround+2,f
  5291  1444  3EFF               	addlw	-1
  5292  1445  1D03               	skipz
  5293  1446  2C42               	goto	u4035
  5294  1447  1003               	clrc
  5295  1448  0D48               	rlf	??_fround+2,w
  5296  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5297  144A  0084               	movwf	4
  5298  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  5299  1450  00C9               	movwf	??_fround+3
  5300  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  5301  1456  00CA               	movwf	??_fround+4
  5302  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  5303  145C  00CB               	movwf	??_fround+5
  5304  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  5305  1462  00CC               	movwf	??_fround+6
  5306  1463  084C               	movf	??_fround+6,w
  5307  1464  00AB               	movwf	___flmul@b+3
  5308  1465  084B               	movf	??_fround+5,w
  5309  1466  00AA               	movwf	___flmul@b+2
  5310  1467  084A               	movf	??_fround+4,w
  5311  1468  00A9               	movwf	___flmul@b+1
  5312  1469  0849               	movf	??_fround+3,w
  5313  146A  00A8               	movwf	___flmul@b
  5314  146B  0850               	movf	_fround$1194+3,w
  5315  146C  00AF               	movwf	___flmul@a+3
  5316  146D  084F               	movf	_fround$1194+2,w
  5317  146E  00AE               	movwf	___flmul@a+2
  5318  146F  084E               	movf	_fround$1194+1,w
  5319  1470  00AD               	movwf	___flmul@a+1
  5320  1471  084D               	movf	_fround$1194,w
  5321  1472  00AC               	movwf	___flmul@a
  5322  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5323  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5324  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5325  147A  082B               	movf	?___flmul+3,w
  5326  147B  00C5               	movwf	?_fround+3
  5327  147C  082A               	movf	?___flmul+2,w
  5328  147D  00C4               	movwf	?_fround+2
  5329  147E  0829               	movf	?___flmul+1,w
  5330  147F  00C3               	movwf	?_fround+1
  5331  1480  0828               	movf	?___flmul,w
  5332  1481  00C2               	movwf	?_fround
  5333  1482  2D77               	goto	l274
  5334  1483                     l2783:	
  5335  1483  300B               	movlw	11
  5336  1484  0255               	subwf	fround@prec,w
  5337  1485  1C03               	skipc
  5338  1486  2C88               	goto	u4041
  5339  1487  2C89               	goto	u4040
  5340  1488                     u4041:	
  5341  1488  2D34               	goto	l2789
  5342  1489                     u4040:	
  5343  1489                     l2785:	
  5344                           
  5345                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5346  1489  303F               	movlw	63
  5347  148A  00AB               	movwf	___flmul@b+3
  5348  148B  3000               	movlw	0
  5349  148C  00AA               	movwf	___flmul@b+2
  5350  148D  3000               	movlw	0
  5351  148E  00A9               	movwf	___flmul@b+1
  5352  148F  3000               	movlw	0
  5353  1490  00A8               	movwf	___flmul@b
  5354  1491  300A               	movlw	10
  5355  1492  00A0               	movwf	___lwdiv@divisor
  5356  1493  3000               	movlw	0
  5357  1494  00A1               	movwf	___lwdiv@divisor+1
  5358  1495  0855               	movf	fround@prec,w
  5359  1496  00C6               	movwf	??_fround
  5360  1497  01C7               	clrf	??_fround+1
  5361  1498  0846               	movf	??_fround,w
  5362  1499  00A2               	movwf	___lwdiv@dividend
  5363  149A  0847               	movf	??_fround+1,w
  5364  149B  00A3               	movwf	___lwdiv@dividend+1
  5365  149C  160A  158A  24E6  160A  118A  	fcall	___lwdiv
  5366  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5367  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5368  14A3  0820               	movf	?___lwdiv,w
  5369  14A4  00C8               	movwf	??_fround+2
  5370  14A5  3001               	movlw	1
  5371  14A6                     u4055:	
  5372  14A6  1003               	clrc
  5373  14A7  0DC8               	rlf	??_fround+2,f
  5374  14A8  3EFF               	addlw	-1
  5375  14A9  1D03               	skipz
  5376  14AA  2CA6               	goto	u4055
  5377  14AB  1003               	clrc
  5378  14AC  0D48               	rlf	??_fround+2,w
  5379  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5380  14AE  0084               	movwf	4
  5381  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  5382  14B4  00C9               	movwf	??_fround+3
  5383  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  5384  14BA  00CA               	movwf	??_fround+4
  5385  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  5386  14C0  00CB               	movwf	??_fround+5
  5387  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  5388  14C6  00CC               	movwf	??_fround+6
  5389  14C7  084C               	movf	??_fround+6,w
  5390  14C8  00AF               	movwf	___flmul@a+3
  5391  14C9  084B               	movf	??_fround+5,w
  5392  14CA  00AE               	movwf	___flmul@a+2
  5393  14CB  084A               	movf	??_fround+4,w
  5394  14CC  00AD               	movwf	___flmul@a+1
  5395  14CD  0849               	movf	??_fround+3,w
  5396  14CE  00AC               	movwf	___flmul@a
  5397  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5398  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5399  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5400  14D6  082B               	movf	?___flmul+3,w
  5401  14D7  00D4               	movwf	_fround$1193+3
  5402  14D8  082A               	movf	?___flmul+2,w
  5403  14D9  00D3               	movwf	_fround$1193+2
  5404  14DA  0829               	movf	?___flmul+1,w
  5405  14DB  00D2               	movwf	_fround$1193+1
  5406  14DC  0828               	movf	?___flmul,w
  5407  14DD  00D1               	movwf	_fround$1193
  5408                           
  5409                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5410  14DE  300A               	movlw	10
  5411  14DF  00F3               	movwf	___lwmod@divisor
  5412  14E0  3000               	movlw	0
  5413  14E1  00F4               	movwf	___lwmod@divisor+1
  5414  14E2  0855               	movf	fround@prec,w
  5415  14E3  00C6               	movwf	??_fround
  5416  14E4  01C7               	clrf	??_fround+1
  5417  14E5  0846               	movf	??_fround,w
  5418  14E6  00F5               	movwf	___lwmod@dividend
  5419  14E7  0847               	movf	??_fround+1,w
  5420  14E8  00F6               	movwf	___lwmod@dividend+1
  5421  14E9  160A  158A  2466  160A  118A  	fcall	___lwmod
  5422  14EE  0873               	movf	?___lwmod,w
  5423  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5424  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5425  14F1  00C8               	movwf	??_fround+2
  5426  14F2  3001               	movlw	1
  5427  14F3                     u4065:	
  5428  14F3  1003               	clrc
  5429  14F4  0DC8               	rlf	??_fround+2,f
  5430  14F5  3EFF               	addlw	-1
  5431  14F6  1D03               	skipz
  5432  14F7  2CF3               	goto	u4065
  5433  14F8  1003               	clrc
  5434  14F9  0D48               	rlf	??_fround+2,w
  5435  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5436  14FB  0084               	movwf	4
  5437  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5438  1501  00C9               	movwf	??_fround+3
  5439  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  5440  1507  00CA               	movwf	??_fround+4
  5441  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  5442  150D  00CB               	movwf	??_fround+5
  5443  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  5444  1513  00CC               	movwf	??_fround+6
  5445  1514  084C               	movf	??_fround+6,w
  5446  1515  00AB               	movwf	___flmul@b+3
  5447  1516  084B               	movf	??_fround+5,w
  5448  1517  00AA               	movwf	___flmul@b+2
  5449  1518  084A               	movf	??_fround+4,w
  5450  1519  00A9               	movwf	___flmul@b+1
  5451  151A  0849               	movf	??_fround+3,w
  5452  151B  00A8               	movwf	___flmul@b
  5453  151C  0854               	movf	_fround$1193+3,w
  5454  151D  00AF               	movwf	___flmul@a+3
  5455  151E  0853               	movf	_fround$1193+2,w
  5456  151F  00AE               	movwf	___flmul@a+2
  5457  1520  0852               	movf	_fround$1193+1,w
  5458  1521  00AD               	movwf	___flmul@a+1
  5459  1522  0851               	movf	_fround$1193,w
  5460  1523  00AC               	movwf	___flmul@a
  5461  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5462  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5463  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5464  152B  082B               	movf	?___flmul+3,w
  5465  152C  00C5               	movwf	?_fround+3
  5466  152D  082A               	movf	?___flmul+2,w
  5467  152E  00C4               	movwf	?_fround+2
  5468  152F  0829               	movf	?___flmul+1,w
  5469  1530  00C3               	movwf	?_fround+1
  5470  1531  0828               	movf	?___flmul,w
  5471  1532  00C2               	movwf	?_fround
  5472  1533  2D77               	goto	l274
  5473  1534                     l2789:	
  5474                           
  5475                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  5476  1534  303F               	movlw	63
  5477  1535  00AB               	movwf	___flmul@b+3
  5478  1536  3000               	movlw	0
  5479  1537  00AA               	movwf	___flmul@b+2
  5480  1538  3000               	movlw	0
  5481  1539  00A9               	movwf	___flmul@b+1
  5482  153A  3000               	movlw	0
  5483  153B  00A8               	movwf	___flmul@b
  5484  153C  0855               	movf	fround@prec,w
  5485  153D  00C6               	movwf	??_fround
  5486  153E  3001               	movlw	1
  5487  153F                     u4075:	
  5488  153F  1003               	clrc
  5489  1540  0DC6               	rlf	??_fround,f
  5490  1541  3EFF               	addlw	-1
  5491  1542  1D03               	skipz
  5492  1543  2D3F               	goto	u4075
  5493  1544  1003               	clrc
  5494  1545  0D46               	rlf	??_fround,w
  5495  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5496  1547  0084               	movwf	4
  5497  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  5498  154D  00C7               	movwf	??_fround+1
  5499  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  5500  1553  00C8               	movwf	??_fround+2
  5501  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  5502  1559  00C9               	movwf	??_fround+3
  5503  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  5504  155F  00CA               	movwf	??_fround+4
  5505  1560  084A               	movf	??_fround+4,w
  5506  1561  00AF               	movwf	___flmul@a+3
  5507  1562  0849               	movf	??_fround+3,w
  5508  1563  00AE               	movwf	___flmul@a+2
  5509  1564  0848               	movf	??_fround+2,w
  5510  1565  00AD               	movwf	___flmul@a+1
  5511  1566  0847               	movf	??_fround+1,w
  5512  1567  00AC               	movwf	___flmul@a
  5513  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5514  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5515  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5516  156F  082B               	movf	?___flmul+3,w
  5517  1570  00C5               	movwf	?_fround+3
  5518  1571  082A               	movf	?___flmul+2,w
  5519  1572  00C4               	movwf	?_fround+2
  5520  1573  0829               	movf	?___flmul+1,w
  5521  1574  00C3               	movwf	?_fround+1
  5522  1575  0828               	movf	?___flmul,w
  5523  1576  00C2               	movwf	?_fround
  5524  1577                     l274:	
  5525  1577  0008               	return
  5526  1578                     __end_of_fround:	
  5527                           
  5528                           	psect	text8
  5529  1C66                     __ptext8:	
  5530 ;; *************** function ___lwmod *****************
  5531 ;; Defined at:
  5532 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5533 ;; Parameters:    Size  Location     Type
  5534 ;;  divisor         2    3[COMMON] unsigned int 
  5535 ;;  dividend        2    5[COMMON] unsigned int 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  counter         1    8[COMMON] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  2    3[COMMON] unsigned int 
  5540 ;; Registers used:
  5541 ;;		wreg, status,2, status,0
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5547 ;;      Params:         4       0       0       0       0
  5548 ;;      Locals:         1       0       0       0       0
  5549 ;;      Temps:          1       0       0       0       0
  5550 ;;      Totals:         6       0       0       0       0
  5551 ;;Total ram usage:        6 bytes
  5552 ;; Hardware stack levels used:    1
  5553 ;; Hardware stack levels required when called:    1
  5554 ;; This function calls:
  5555 ;;		Nothing
  5556 ;; This function is called by:
  5557 ;;		_fround
  5558 ;; This function uses a non-reentrant model
  5559 ;;
  5560                           
  5561                           
  5562                           ;psect for function ___lwmod
  5563  1C66                     ___lwmod:	
  5564  1C66                     l2401:	
  5565                           ;incstack = 0
  5566                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5567                           
  5568  1C66  0873               	movf	___lwmod@divisor,w
  5569  1C67  0474               	iorwf	___lwmod@divisor+1,w
  5570  1C68  1903               	btfsc	3,2
  5571  1C69  2C6B               	goto	u3111
  5572  1C6A  2C6C               	goto	u3110
  5573  1C6B                     u3111:	
  5574  1C6B  2C9B               	goto	l2419
  5575  1C6C                     u3110:	
  5576  1C6C                     l2403:	
  5577  1C6C  01F8               	clrf	___lwmod@counter
  5578  1C6D  0AF8               	incf	___lwmod@counter,f
  5579  1C6E  2C7A               	goto	l2409
  5580  1C6F                     l2405:	
  5581  1C6F  3001               	movlw	1
  5582  1C70                     u3125:	
  5583  1C70  1003               	clrc
  5584  1C71  0DF3               	rlf	___lwmod@divisor,f
  5585  1C72  0DF4               	rlf	___lwmod@divisor+1,f
  5586  1C73  3EFF               	addlw	-1
  5587  1C74  1D03               	skipz
  5588  1C75  2C70               	goto	u3125
  5589  1C76                     l2407:	
  5590  1C76  3001               	movlw	1
  5591  1C77  00F7               	movwf	??___lwmod
  5592  1C78  0877               	movf	??___lwmod,w
  5593  1C79  07F8               	addwf	___lwmod@counter,f
  5594  1C7A                     l2409:	
  5595  1C7A  1FF4               	btfss	___lwmod@divisor+1,7
  5596  1C7B  2C7D               	goto	u3131
  5597  1C7C  2C7E               	goto	u3130
  5598  1C7D                     u3131:	
  5599  1C7D  2C6F               	goto	l2405
  5600  1C7E                     u3130:	
  5601  1C7E                     l2411:	
  5602  1C7E  0874               	movf	___lwmod@divisor+1,w
  5603  1C7F  0276               	subwf	___lwmod@dividend+1,w
  5604  1C80  1D03               	skipz
  5605  1C81  2C84               	goto	u3145
  5606  1C82  0873               	movf	___lwmod@divisor,w
  5607  1C83  0275               	subwf	___lwmod@dividend,w
  5608  1C84                     u3145:	
  5609  1C84  1C03               	skipc
  5610  1C85  2C87               	goto	u3141
  5611  1C86  2C88               	goto	u3140
  5612  1C87                     u3141:	
  5613  1C87  2C8E               	goto	l2415
  5614  1C88                     u3140:	
  5615  1C88                     l2413:	
  5616  1C88  0873               	movf	___lwmod@divisor,w
  5617  1C89  02F5               	subwf	___lwmod@dividend,f
  5618  1C8A  0874               	movf	___lwmod@divisor+1,w
  5619  1C8B  1C03               	skipc
  5620  1C8C  03F6               	decf	___lwmod@dividend+1,f
  5621  1C8D  02F6               	subwf	___lwmod@dividend+1,f
  5622  1C8E                     l2415:	
  5623  1C8E  3001               	movlw	1
  5624  1C8F                     u3155:	
  5625  1C8F  1003               	clrc
  5626  1C90  0CF4               	rrf	___lwmod@divisor+1,f
  5627  1C91  0CF3               	rrf	___lwmod@divisor,f
  5628  1C92  3EFF               	addlw	-1
  5629  1C93  1D03               	skipz
  5630  1C94  2C8F               	goto	u3155
  5631  1C95                     l2417:	
  5632  1C95  3001               	movlw	1
  5633  1C96  02F8               	subwf	___lwmod@counter,f
  5634  1C97  1D03               	btfss	3,2
  5635  1C98  2C9A               	goto	u3161
  5636  1C99  2C9B               	goto	u3160
  5637  1C9A                     u3161:	
  5638  1C9A  2C7E               	goto	l2411
  5639  1C9B                     u3160:	
  5640  1C9B                     l2419:	
  5641  1C9B  0876               	movf	___lwmod@dividend+1,w
  5642  1C9C  00F4               	movwf	?___lwmod+1
  5643  1C9D  0875               	movf	___lwmod@dividend,w
  5644  1C9E  00F3               	movwf	?___lwmod
  5645  1C9F                     l684:	
  5646  1C9F  0008               	return
  5647  1CA0                     __end_of___lwmod:	
  5648                           
  5649                           	psect	text9
  5650  1CE6                     __ptext9:	
  5651 ;; *************** function ___lwdiv *****************
  5652 ;; Defined at:
  5653 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  divisor         2    0[BANK0 ] unsigned int 
  5656 ;;  dividend        2    2[BANK0 ] unsigned int 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  quotient        2    4[BANK0 ] unsigned int 
  5659 ;;  counter         1    6[BANK0 ] unsigned char 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  2    0[BANK0 ] unsigned int 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5669 ;;      Params:         0       4       0       0       0
  5670 ;;      Locals:         0       3       0       0       0
  5671 ;;      Temps:          1       0       0       0       0
  5672 ;;      Totals:         1       7       0       0       0
  5673 ;;Total ram usage:        8 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; Hardware stack levels required when called:    1
  5676 ;; This function calls:
  5677 ;;		Nothing
  5678 ;; This function is called by:
  5679 ;;		_fround
  5680 ;; This function uses a non-reentrant model
  5681 ;;
  5682                           
  5683                           
  5684                           ;psect for function ___lwdiv
  5685  1CE6                     ___lwdiv:	
  5686  1CE6                     l2375:	
  5687                           ;incstack = 0
  5688                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5689                           
  5690  1CE6  1283               	bcf	3,5	;RP0=0, select bank0
  5691  1CE7  1303               	bcf	3,6	;RP1=0, select bank0
  5692  1CE8  01A4               	clrf	___lwdiv@quotient
  5693  1CE9  01A5               	clrf	___lwdiv@quotient+1
  5694  1CEA                     l2377:	
  5695  1CEA  0820               	movf	___lwdiv@divisor,w
  5696  1CEB  0421               	iorwf	___lwdiv@divisor+1,w
  5697  1CEC  1903               	btfsc	3,2
  5698  1CED  2CEF               	goto	u3041
  5699  1CEE  2CF0               	goto	u3040
  5700  1CEF                     u3041:	
  5701  1CEF  2D27               	goto	l2397
  5702  1CF0                     u3040:	
  5703  1CF0                     l2379:	
  5704  1CF0  01A6               	clrf	___lwdiv@counter
  5705  1CF1  0AA6               	incf	___lwdiv@counter,f
  5706  1CF2  2CFE               	goto	l2385
  5707  1CF3                     l2381:	
  5708  1CF3  3001               	movlw	1
  5709  1CF4                     u3055:	
  5710  1CF4  1003               	clrc
  5711  1CF5  0DA0               	rlf	___lwdiv@divisor,f
  5712  1CF6  0DA1               	rlf	___lwdiv@divisor+1,f
  5713  1CF7  3EFF               	addlw	-1
  5714  1CF8  1D03               	skipz
  5715  1CF9  2CF4               	goto	u3055
  5716  1CFA                     l2383:	
  5717  1CFA  3001               	movlw	1
  5718  1CFB  00F9               	movwf	??___lwdiv
  5719  1CFC  0879               	movf	??___lwdiv,w
  5720  1CFD  07A6               	addwf	___lwdiv@counter,f
  5721  1CFE                     l2385:	
  5722  1CFE  1FA1               	btfss	___lwdiv@divisor+1,7
  5723  1CFF  2D01               	goto	u3061
  5724  1D00  2D02               	goto	u3060
  5725  1D01                     u3061:	
  5726  1D01  2CF3               	goto	l2381
  5727  1D02                     u3060:	
  5728  1D02                     l2387:	
  5729  1D02  3001               	movlw	1
  5730  1D03                     u3075:	
  5731  1D03  1003               	clrc
  5732  1D04  0DA4               	rlf	___lwdiv@quotient,f
  5733  1D05  0DA5               	rlf	___lwdiv@quotient+1,f
  5734  1D06  3EFF               	addlw	-1
  5735  1D07  1D03               	skipz
  5736  1D08  2D03               	goto	u3075
  5737  1D09  0821               	movf	___lwdiv@divisor+1,w
  5738  1D0A  0223               	subwf	___lwdiv@dividend+1,w
  5739  1D0B  1D03               	skipz
  5740  1D0C  2D0F               	goto	u3085
  5741  1D0D  0820               	movf	___lwdiv@divisor,w
  5742  1D0E  0222               	subwf	___lwdiv@dividend,w
  5743  1D0F                     u3085:	
  5744  1D0F  1C03               	skipc
  5745  1D10  2D12               	goto	u3081
  5746  1D11  2D13               	goto	u3080
  5747  1D12                     u3081:	
  5748  1D12  2D1A               	goto	l2393
  5749  1D13                     u3080:	
  5750  1D13                     l2389:	
  5751  1D13  0820               	movf	___lwdiv@divisor,w
  5752  1D14  02A2               	subwf	___lwdiv@dividend,f
  5753  1D15  0821               	movf	___lwdiv@divisor+1,w
  5754  1D16  1C03               	skipc
  5755  1D17  03A3               	decf	___lwdiv@dividend+1,f
  5756  1D18  02A3               	subwf	___lwdiv@dividend+1,f
  5757  1D19                     l2391:	
  5758  1D19  1424               	bsf	___lwdiv@quotient,0
  5759  1D1A                     l2393:	
  5760  1D1A  3001               	movlw	1
  5761  1D1B                     u3095:	
  5762  1D1B  1003               	clrc
  5763  1D1C  0CA1               	rrf	___lwdiv@divisor+1,f
  5764  1D1D  0CA0               	rrf	___lwdiv@divisor,f
  5765  1D1E  3EFF               	addlw	-1
  5766  1D1F  1D03               	skipz
  5767  1D20  2D1B               	goto	u3095
  5768  1D21                     l2395:	
  5769  1D21  3001               	movlw	1
  5770  1D22  02A6               	subwf	___lwdiv@counter,f
  5771  1D23  1D03               	btfss	3,2
  5772  1D24  2D26               	goto	u3101
  5773  1D25  2D27               	goto	u3100
  5774  1D26                     u3101:	
  5775  1D26  2D02               	goto	l2387
  5776  1D27                     u3100:	
  5777  1D27                     l2397:	
  5778  1D27  0825               	movf	___lwdiv@quotient+1,w
  5779  1D28  00A1               	movwf	?___lwdiv+1
  5780  1D29  0824               	movf	___lwdiv@quotient,w
  5781  1D2A  00A0               	movwf	?___lwdiv
  5782  1D2B                     l674:	
  5783  1D2B  0008               	return
  5784  1D2C                     __end_of___lwdiv:	
  5785                           
  5786                           	psect	text10
  5787  093C                     __ptext10:	
  5788 ;; *************** function ___flmul *****************
  5789 ;; Defined at:
  5790 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5791 ;; Parameters:    Size  Location     Type
  5792 ;;  b               4    8[BANK0 ] unsigned int 
  5793 ;;  a               4   12[BANK0 ] unsigned int 
  5794 ;; Auto vars:     Size  Location     Type
  5795 ;;  prod            4   28[BANK0 ] struct .
  5796 ;;  grs             4   22[BANK0 ] unsigned long 
  5797 ;;  temp            2   32[BANK0 ] struct .
  5798 ;;  bexp            1   27[BANK0 ] unsigned char 
  5799 ;;  aexp            1   26[BANK0 ] unsigned char 
  5800 ;;  sign            1   21[BANK0 ] unsigned char 
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  4    8[BANK0 ] unsigned char 
  5803 ;; Registers used:
  5804 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5810 ;;      Params:         0       8       0       0       0
  5811 ;;      Locals:         0      13       0       0       0
  5812 ;;      Temps:          0       5       0       0       0
  5813 ;;      Totals:         0      26       0       0       0
  5814 ;;Total ram usage:       26 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    2
  5817 ;; This function calls:
  5818 ;;		__Umul8_16
  5819 ;; This function is called by:
  5820 ;;		_main
  5821 ;;		_fround
  5822 ;;		_scale
  5823 ;;		_sprintf
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           
  5828                           ;psect for function ___flmul
  5829  093C                     ___flmul:	
  5830  093C                     l2617:	
  5831                           ;incstack = 0
  5832                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5833                           
  5834  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5835  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5836  093E  082B               	movf	___flmul@b+3,w
  5837  093F  3980               	andlw	128
  5838  0940  00B0               	movwf	??___flmul
  5839  0941  0830               	movf	??___flmul,w
  5840  0942  00B5               	movwf	___flmul@sign
  5841  0943                     l2619:	
  5842  0943  082B               	movf	___flmul@b+3,w
  5843  0944  00B0               	movwf	??___flmul
  5844  0945  0730               	addwf	??___flmul,w
  5845  0946  00B1               	movwf	??___flmul+1
  5846  0947  0831               	movf	??___flmul+1,w
  5847  0948  00BB               	movwf	___flmul@bexp
  5848  0949                     l2621:	
  5849  0949  1FAA               	btfss	___flmul@b+2,7
  5850  094A  294C               	goto	u3631
  5851  094B  294D               	goto	u3630
  5852  094C                     u3631:	
  5853  094C  294E               	goto	l2625
  5854  094D                     u3630:	
  5855  094D                     l2623:	
  5856  094D  143B               	bsf	___flmul@bexp,0
  5857  094E                     l2625:	
  5858  094E  083B               	movf	___flmul@bexp,w
  5859  094F  1903               	btfsc	3,2
  5860  0950  2952               	goto	u3641
  5861  0951  2953               	goto	u3640
  5862  0952                     u3641:	
  5863  0952  2962               	goto	l2633
  5864  0953                     u3640:	
  5865  0953                     l2627:	
  5866  0953  0A3B               	incf	___flmul@bexp,w
  5867  0954  1D03               	btfss	3,2
  5868  0955  2957               	goto	u3651
  5869  0956  2958               	goto	u3650
  5870  0957                     u3651:	
  5871  0957  2960               	goto	l2631
  5872  0958                     u3650:	
  5873  0958                     l2629:	
  5874  0958  3000               	movlw	0
  5875  0959  00AB               	movwf	___flmul@b+3
  5876  095A  3000               	movlw	0
  5877  095B  00AA               	movwf	___flmul@b+2
  5878  095C  3000               	movlw	0
  5879  095D  00A9               	movwf	___flmul@b+1
  5880  095E  3000               	movlw	0
  5881  095F  00A8               	movwf	___flmul@b
  5882  0960                     l2631:	
  5883  0960  17AA               	bsf	___flmul@b+2,7
  5884  0961  296A               	goto	l2635
  5885  0962                     l2633:	
  5886  0962  3000               	movlw	0
  5887  0963  00AB               	movwf	___flmul@b+3
  5888  0964  3000               	movlw	0
  5889  0965  00AA               	movwf	___flmul@b+2
  5890  0966  3000               	movlw	0
  5891  0967  00A9               	movwf	___flmul@b+1
  5892  0968  3000               	movlw	0
  5893  0969  00A8               	movwf	___flmul@b
  5894  096A                     l2635:	
  5895  096A  082F               	movf	___flmul@a+3,w
  5896  096B  3980               	andlw	128
  5897  096C  00B0               	movwf	??___flmul
  5898  096D  0830               	movf	??___flmul,w
  5899  096E  06B5               	xorwf	___flmul@sign,f
  5900  096F                     l2637:	
  5901  096F  082F               	movf	___flmul@a+3,w
  5902  0970  00B0               	movwf	??___flmul
  5903  0971  0730               	addwf	??___flmul,w
  5904  0972  00B1               	movwf	??___flmul+1
  5905  0973  0831               	movf	??___flmul+1,w
  5906  0974  00BA               	movwf	___flmul@aexp
  5907  0975                     l2639:	
  5908  0975  1FAE               	btfss	___flmul@a+2,7
  5909  0976  2978               	goto	u3661
  5910  0977  2979               	goto	u3660
  5911  0978                     u3661:	
  5912  0978  297A               	goto	l2643
  5913  0979                     u3660:	
  5914  0979                     l2641:	
  5915  0979  143A               	bsf	___flmul@aexp,0
  5916  097A                     l2643:	
  5917  097A  083A               	movf	___flmul@aexp,w
  5918  097B  1903               	btfsc	3,2
  5919  097C  297E               	goto	u3671
  5920  097D  297F               	goto	u3670
  5921  097E                     u3671:	
  5922  097E  298E               	goto	l2651
  5923  097F                     u3670:	
  5924  097F                     l2645:	
  5925  097F  0A3A               	incf	___flmul@aexp,w
  5926  0980  1D03               	btfss	3,2
  5927  0981  2983               	goto	u3681
  5928  0982  2984               	goto	u3680
  5929  0983                     u3681:	
  5930  0983  298C               	goto	l2649
  5931  0984                     u3680:	
  5932  0984                     l2647:	
  5933  0984  3000               	movlw	0
  5934  0985  00AF               	movwf	___flmul@a+3
  5935  0986  3000               	movlw	0
  5936  0987  00AE               	movwf	___flmul@a+2
  5937  0988  3000               	movlw	0
  5938  0989  00AD               	movwf	___flmul@a+1
  5939  098A  3000               	movlw	0
  5940  098B  00AC               	movwf	___flmul@a
  5941  098C                     l2649:	
  5942  098C  17AE               	bsf	___flmul@a+2,7
  5943  098D  2996               	goto	l2653
  5944  098E                     l2651:	
  5945  098E  3000               	movlw	0
  5946  098F  00AF               	movwf	___flmul@a+3
  5947  0990  3000               	movlw	0
  5948  0991  00AE               	movwf	___flmul@a+2
  5949  0992  3000               	movlw	0
  5950  0993  00AD               	movwf	___flmul@a+1
  5951  0994  3000               	movlw	0
  5952  0995  00AC               	movwf	___flmul@a
  5953  0996                     l2653:	
  5954  0996  083A               	movf	___flmul@aexp,w
  5955  0997  1903               	btfsc	3,2
  5956  0998  299A               	goto	u3691
  5957  0999  299B               	goto	u3690
  5958  099A                     u3691:	
  5959  099A  29A0               	goto	l2657
  5960  099B                     u3690:	
  5961  099B                     l2655:	
  5962  099B  083B               	movf	___flmul@bexp,w
  5963  099C  1D03               	btfss	3,2
  5964  099D  299F               	goto	u3701
  5965  099E  29A0               	goto	u3700
  5966  099F                     u3701:	
  5967  099F  29A9               	goto	l2661
  5968  09A0                     u3700:	
  5969  09A0                     l2657:	
  5970  09A0  3000               	movlw	0
  5971  09A1  00AB               	movwf	?___flmul+3
  5972  09A2  3000               	movlw	0
  5973  09A3  00AA               	movwf	?___flmul+2
  5974  09A4  3000               	movlw	0
  5975  09A5  00A9               	movwf	?___flmul+1
  5976  09A6  3000               	movlw	0
  5977  09A7  00A8               	movwf	?___flmul
  5978  09A8  2C9C               	goto	l791
  5979  09A9                     l2661:	
  5980  09A9  0828               	movf	___flmul@b,w
  5981  09AA  00B0               	movwf	??___flmul
  5982  09AB  0830               	movf	??___flmul,w
  5983  09AC  00F3               	movwf	__Umul8_16@multiplicand
  5984  09AD  082E               	movf	___flmul@a+2,w
  5985  09AE  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  5986  09B3  0874               	movf	?__Umul8_16+1,w
  5987  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  5988  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  5989  09B6  00C1               	movwf	___flmul@temp+1
  5990  09B7  0873               	movf	?__Umul8_16,w
  5991  09B8  00C0               	movwf	___flmul@temp
  5992  09B9                     l2663:	
  5993  09B9  0840               	movf	___flmul@temp,w
  5994  09BA  00B0               	movwf	??___flmul
  5995  09BB  01B1               	clrf	??___flmul+1
  5996  09BC  01B2               	clrf	??___flmul+2
  5997  09BD  01B3               	clrf	??___flmul+3
  5998  09BE  0833               	movf	??___flmul+3,w
  5999  09BF  00B9               	movwf	___flmul@grs+3
  6000  09C0  0832               	movf	??___flmul+2,w
  6001  09C1  00B8               	movwf	___flmul@grs+2
  6002  09C2  0831               	movf	??___flmul+1,w
  6003  09C3  00B7               	movwf	___flmul@grs+1
  6004  09C4  0830               	movf	??___flmul,w
  6005  09C5  00B6               	movwf	___flmul@grs
  6006  09C6                     l2665:	
  6007  09C6  0841               	movf	___flmul@temp+1,w
  6008  09C7  00B0               	movwf	??___flmul
  6009  09C8  01B1               	clrf	??___flmul+1
  6010  09C9  01B2               	clrf	??___flmul+2
  6011  09CA  01B3               	clrf	??___flmul+3
  6012  09CB  0833               	movf	??___flmul+3,w
  6013  09CC  00BF               	movwf	___flmul@prod+3
  6014  09CD  0832               	movf	??___flmul+2,w
  6015  09CE  00BE               	movwf	___flmul@prod+2
  6016  09CF  0831               	movf	??___flmul+1,w
  6017  09D0  00BD               	movwf	___flmul@prod+1
  6018  09D1  0830               	movf	??___flmul,w
  6019  09D2  00BC               	movwf	___flmul@prod
  6020  09D3  0829               	movf	___flmul@b+1,w
  6021  09D4  00B0               	movwf	??___flmul
  6022  09D5  0830               	movf	??___flmul,w
  6023  09D6  00F3               	movwf	__Umul8_16@multiplicand
  6024  09D7  082D               	movf	___flmul@a+1,w
  6025  09D8  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6026  09DD  0874               	movf	?__Umul8_16+1,w
  6027  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  6028  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  6029  09E0  00C1               	movwf	___flmul@temp+1
  6030  09E1  0873               	movf	?__Umul8_16,w
  6031  09E2  00C0               	movwf	___flmul@temp
  6032  09E3                     l2667:	
  6033  09E3  0840               	movf	___flmul@temp,w
  6034  09E4  00B0               	movwf	??___flmul
  6035  09E5  01B1               	clrf	??___flmul+1
  6036  09E6  01B2               	clrf	??___flmul+2
  6037  09E7  01B3               	clrf	??___flmul+3
  6038  09E8  0830               	movf	??___flmul,w
  6039  09E9  07B6               	addwf	___flmul@grs,f
  6040  09EA  0831               	movf	??___flmul+1,w
  6041  09EB  1103               	clrz
  6042  09EC  1803               	skipnc
  6043  09ED  3E01               	addlw	1
  6044  09EE  1903               	skipnz
  6045  09EF  29F1               	goto	u3711
  6046  09F0  07B7               	addwf	___flmul@grs+1,f
  6047  09F1                     u3711:	
  6048  09F1  0832               	movf	??___flmul+2,w
  6049  09F2  1103               	clrz
  6050  09F3  1803               	skipnc
  6051  09F4  3E01               	addlw	1
  6052  09F5  1903               	skipnz
  6053  09F6  29F8               	goto	u3712
  6054  09F7  07B8               	addwf	___flmul@grs+2,f
  6055  09F8                     u3712:	
  6056  09F8  0833               	movf	??___flmul+3,w
  6057  09F9  1103               	clrz
  6058  09FA  1803               	skipnc
  6059  09FB  3E01               	addlw	1
  6060  09FC  1903               	skipnz
  6061  09FD  29FF               	goto	u3713
  6062  09FE  07B9               	addwf	___flmul@grs+3,f
  6063  09FF                     u3713:	
  6064  09FF                     l2669:	
  6065  09FF  0841               	movf	___flmul@temp+1,w
  6066  0A00  00B0               	movwf	??___flmul
  6067  0A01  01B1               	clrf	??___flmul+1
  6068  0A02  01B2               	clrf	??___flmul+2
  6069  0A03  01B3               	clrf	??___flmul+3
  6070  0A04  0830               	movf	??___flmul,w
  6071  0A05  07BC               	addwf	___flmul@prod,f
  6072  0A06  0831               	movf	??___flmul+1,w
  6073  0A07  1103               	clrz
  6074  0A08  1803               	skipnc
  6075  0A09  3E01               	addlw	1
  6076  0A0A  1903               	skipnz
  6077  0A0B  2A0D               	goto	u3721
  6078  0A0C  07BD               	addwf	___flmul@prod+1,f
  6079  0A0D                     u3721:	
  6080  0A0D  0832               	movf	??___flmul+2,w
  6081  0A0E  1103               	clrz
  6082  0A0F  1803               	skipnc
  6083  0A10  3E01               	addlw	1
  6084  0A11  1903               	skipnz
  6085  0A12  2A14               	goto	u3722
  6086  0A13  07BE               	addwf	___flmul@prod+2,f
  6087  0A14                     u3722:	
  6088  0A14  0833               	movf	??___flmul+3,w
  6089  0A15  1103               	clrz
  6090  0A16  1803               	skipnc
  6091  0A17  3E01               	addlw	1
  6092  0A18  1903               	skipnz
  6093  0A19  2A1B               	goto	u3723
  6094  0A1A  07BF               	addwf	___flmul@prod+3,f
  6095  0A1B                     u3723:	
  6096  0A1B  082A               	movf	___flmul@b+2,w
  6097  0A1C  00B0               	movwf	??___flmul
  6098  0A1D  0830               	movf	??___flmul,w
  6099  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  6100  0A1F  082C               	movf	___flmul@a,w
  6101  0A20  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6102  0A25  0874               	movf	?__Umul8_16+1,w
  6103  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  6104  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  6105  0A28  00C1               	movwf	___flmul@temp+1
  6106  0A29  0873               	movf	?__Umul8_16,w
  6107  0A2A  00C0               	movwf	___flmul@temp
  6108  0A2B                     l2671:	
  6109  0A2B  0840               	movf	___flmul@temp,w
  6110  0A2C  00B0               	movwf	??___flmul
  6111  0A2D  01B1               	clrf	??___flmul+1
  6112  0A2E  01B2               	clrf	??___flmul+2
  6113  0A2F  01B3               	clrf	??___flmul+3
  6114  0A30  0830               	movf	??___flmul,w
  6115  0A31  07B6               	addwf	___flmul@grs,f
  6116  0A32  0831               	movf	??___flmul+1,w
  6117  0A33  1103               	clrz
  6118  0A34  1803               	skipnc
  6119  0A35  3E01               	addlw	1
  6120  0A36  1903               	skipnz
  6121  0A37  2A39               	goto	u3731
  6122  0A38  07B7               	addwf	___flmul@grs+1,f
  6123  0A39                     u3731:	
  6124  0A39  0832               	movf	??___flmul+2,w
  6125  0A3A  1103               	clrz
  6126  0A3B  1803               	skipnc
  6127  0A3C  3E01               	addlw	1
  6128  0A3D  1903               	skipnz
  6129  0A3E  2A40               	goto	u3732
  6130  0A3F  07B8               	addwf	___flmul@grs+2,f
  6131  0A40                     u3732:	
  6132  0A40  0833               	movf	??___flmul+3,w
  6133  0A41  1103               	clrz
  6134  0A42  1803               	skipnc
  6135  0A43  3E01               	addlw	1
  6136  0A44  1903               	skipnz
  6137  0A45  2A47               	goto	u3733
  6138  0A46  07B9               	addwf	___flmul@grs+3,f
  6139  0A47                     u3733:	
  6140  0A47                     l2673:	
  6141  0A47  0841               	movf	___flmul@temp+1,w
  6142  0A48  00B0               	movwf	??___flmul
  6143  0A49  01B1               	clrf	??___flmul+1
  6144  0A4A  01B2               	clrf	??___flmul+2
  6145  0A4B  01B3               	clrf	??___flmul+3
  6146  0A4C  0830               	movf	??___flmul,w
  6147  0A4D  07BC               	addwf	___flmul@prod,f
  6148  0A4E  0831               	movf	??___flmul+1,w
  6149  0A4F  1103               	clrz
  6150  0A50  1803               	skipnc
  6151  0A51  3E01               	addlw	1
  6152  0A52  1903               	skipnz
  6153  0A53  2A55               	goto	u3741
  6154  0A54  07BD               	addwf	___flmul@prod+1,f
  6155  0A55                     u3741:	
  6156  0A55  0832               	movf	??___flmul+2,w
  6157  0A56  1103               	clrz
  6158  0A57  1803               	skipnc
  6159  0A58  3E01               	addlw	1
  6160  0A59  1903               	skipnz
  6161  0A5A  2A5C               	goto	u3742
  6162  0A5B  07BE               	addwf	___flmul@prod+2,f
  6163  0A5C                     u3742:	
  6164  0A5C  0833               	movf	??___flmul+3,w
  6165  0A5D  1103               	clrz
  6166  0A5E  1803               	skipnc
  6167  0A5F  3E01               	addlw	1
  6168  0A60  1903               	skipnz
  6169  0A61  2A63               	goto	u3743
  6170  0A62  07BF               	addwf	___flmul@prod+3,f
  6171  0A63                     u3743:	
  6172  0A63                     l2675:	
  6173  0A63  3008               	movlw	8
  6174  0A64  00B0               	movwf	??___flmul
  6175  0A65                     u3755:	
  6176  0A65  1003               	clrc
  6177  0A66  0DB6               	rlf	___flmul@grs,f
  6178  0A67  0DB7               	rlf	___flmul@grs+1,f
  6179  0A68  0DB8               	rlf	___flmul@grs+2,f
  6180  0A69  0DB9               	rlf	___flmul@grs+3,f
  6181  0A6A  0BB0               	decfsz	??___flmul,f
  6182  0A6B  2A65               	goto	u3755
  6183  0A6C                     l2677:	
  6184  0A6C  0829               	movf	___flmul@b+1,w
  6185  0A6D  00B0               	movwf	??___flmul
  6186  0A6E  0830               	movf	??___flmul,w
  6187  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  6188  0A70  082C               	movf	___flmul@a,w
  6189  0A71  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6190  0A76  0874               	movf	?__Umul8_16+1,w
  6191  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  6192  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  6193  0A79  00C1               	movwf	___flmul@temp+1
  6194  0A7A  0873               	movf	?__Umul8_16,w
  6195  0A7B  00C0               	movwf	___flmul@temp
  6196  0A7C                     l2679:	
  6197  0A7C  0840               	movf	___flmul@temp,w
  6198  0A7D  00B0               	movwf	??___flmul
  6199  0A7E  0841               	movf	___flmul@temp+1,w
  6200  0A7F  00B1               	movwf	??___flmul+1
  6201  0A80  01B2               	clrf	??___flmul+2
  6202  0A81  01B3               	clrf	??___flmul+3
  6203  0A82  0830               	movf	??___flmul,w
  6204  0A83  07B6               	addwf	___flmul@grs,f
  6205  0A84  0831               	movf	??___flmul+1,w
  6206  0A85  1103               	clrz
  6207  0A86  1803               	skipnc
  6208  0A87  3E01               	addlw	1
  6209  0A88  1903               	skipnz
  6210  0A89  2A8B               	goto	u3761
  6211  0A8A  07B7               	addwf	___flmul@grs+1,f
  6212  0A8B                     u3761:	
  6213  0A8B  0832               	movf	??___flmul+2,w
  6214  0A8C  1103               	clrz
  6215  0A8D  1803               	skipnc
  6216  0A8E  3E01               	addlw	1
  6217  0A8F  1903               	skipnz
  6218  0A90  2A92               	goto	u3762
  6219  0A91  07B8               	addwf	___flmul@grs+2,f
  6220  0A92                     u3762:	
  6221  0A92  0833               	movf	??___flmul+3,w
  6222  0A93  1103               	clrz
  6223  0A94  1803               	skipnc
  6224  0A95  3E01               	addlw	1
  6225  0A96  1903               	skipnz
  6226  0A97  2A99               	goto	u3763
  6227  0A98  07B9               	addwf	___flmul@grs+3,f
  6228  0A99                     u3763:	
  6229  0A99                     l2681:	
  6230  0A99  0828               	movf	___flmul@b,w
  6231  0A9A  00B0               	movwf	??___flmul
  6232  0A9B  0830               	movf	??___flmul,w
  6233  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  6234  0A9D  082D               	movf	___flmul@a+1,w
  6235  0A9E  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6236  0AA3  0874               	movf	?__Umul8_16+1,w
  6237  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6238  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6239  0AA6  00C1               	movwf	___flmul@temp+1
  6240  0AA7  0873               	movf	?__Umul8_16,w
  6241  0AA8  00C0               	movwf	___flmul@temp
  6242  0AA9                     l2683:	
  6243  0AA9  0840               	movf	___flmul@temp,w
  6244  0AAA  00B0               	movwf	??___flmul
  6245  0AAB  0841               	movf	___flmul@temp+1,w
  6246  0AAC  00B1               	movwf	??___flmul+1
  6247  0AAD  01B2               	clrf	??___flmul+2
  6248  0AAE  01B3               	clrf	??___flmul+3
  6249  0AAF  0830               	movf	??___flmul,w
  6250  0AB0  07B6               	addwf	___flmul@grs,f
  6251  0AB1  0831               	movf	??___flmul+1,w
  6252  0AB2  1103               	clrz
  6253  0AB3  1803               	skipnc
  6254  0AB4  3E01               	addlw	1
  6255  0AB5  1903               	skipnz
  6256  0AB6  2AB8               	goto	u3771
  6257  0AB7  07B7               	addwf	___flmul@grs+1,f
  6258  0AB8                     u3771:	
  6259  0AB8  0832               	movf	??___flmul+2,w
  6260  0AB9  1103               	clrz
  6261  0ABA  1803               	skipnc
  6262  0ABB  3E01               	addlw	1
  6263  0ABC  1903               	skipnz
  6264  0ABD  2ABF               	goto	u3772
  6265  0ABE  07B8               	addwf	___flmul@grs+2,f
  6266  0ABF                     u3772:	
  6267  0ABF  0833               	movf	??___flmul+3,w
  6268  0AC0  1103               	clrz
  6269  0AC1  1803               	skipnc
  6270  0AC2  3E01               	addlw	1
  6271  0AC3  1903               	skipnz
  6272  0AC4  2AC6               	goto	u3773
  6273  0AC5  07B9               	addwf	___flmul@grs+3,f
  6274  0AC6                     u3773:	
  6275  0AC6                     l2685:	
  6276  0AC6  3008               	movlw	8
  6277  0AC7  00B0               	movwf	??___flmul
  6278  0AC8                     u3785:	
  6279  0AC8  1003               	clrc
  6280  0AC9  0DB6               	rlf	___flmul@grs,f
  6281  0ACA  0DB7               	rlf	___flmul@grs+1,f
  6282  0ACB  0DB8               	rlf	___flmul@grs+2,f
  6283  0ACC  0DB9               	rlf	___flmul@grs+3,f
  6284  0ACD  0BB0               	decfsz	??___flmul,f
  6285  0ACE  2AC8               	goto	u3785
  6286  0ACF  0828               	movf	___flmul@b,w
  6287  0AD0  00B0               	movwf	??___flmul
  6288  0AD1  0830               	movf	??___flmul,w
  6289  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  6290  0AD3  082C               	movf	___flmul@a,w
  6291  0AD4  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6292  0AD9  0874               	movf	?__Umul8_16+1,w
  6293  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6294  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6295  0ADC  00C1               	movwf	___flmul@temp+1
  6296  0ADD  0873               	movf	?__Umul8_16,w
  6297  0ADE  00C0               	movwf	___flmul@temp
  6298  0ADF                     l2687:	
  6299  0ADF  0840               	movf	___flmul@temp,w
  6300  0AE0  00B0               	movwf	??___flmul
  6301  0AE1  0841               	movf	___flmul@temp+1,w
  6302  0AE2  00B1               	movwf	??___flmul+1
  6303  0AE3  01B2               	clrf	??___flmul+2
  6304  0AE4  01B3               	clrf	??___flmul+3
  6305  0AE5  0830               	movf	??___flmul,w
  6306  0AE6  07B6               	addwf	___flmul@grs,f
  6307  0AE7  0831               	movf	??___flmul+1,w
  6308  0AE8  1103               	clrz
  6309  0AE9  1803               	skipnc
  6310  0AEA  3E01               	addlw	1
  6311  0AEB  1903               	skipnz
  6312  0AEC  2AEE               	goto	u3791
  6313  0AED  07B7               	addwf	___flmul@grs+1,f
  6314  0AEE                     u3791:	
  6315  0AEE  0832               	movf	??___flmul+2,w
  6316  0AEF  1103               	clrz
  6317  0AF0  1803               	skipnc
  6318  0AF1  3E01               	addlw	1
  6319  0AF2  1903               	skipnz
  6320  0AF3  2AF5               	goto	u3792
  6321  0AF4  07B8               	addwf	___flmul@grs+2,f
  6322  0AF5                     u3792:	
  6323  0AF5  0833               	movf	??___flmul+3,w
  6324  0AF6  1103               	clrz
  6325  0AF7  1803               	skipnc
  6326  0AF8  3E01               	addlw	1
  6327  0AF9  1903               	skipnz
  6328  0AFA  2AFC               	goto	u3793
  6329  0AFB  07B9               	addwf	___flmul@grs+3,f
  6330  0AFC                     u3793:	
  6331  0AFC                     l2689:	
  6332  0AFC  0829               	movf	___flmul@b+1,w
  6333  0AFD  00B0               	movwf	??___flmul
  6334  0AFE  0830               	movf	??___flmul,w
  6335  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  6336  0B00  082E               	movf	___flmul@a+2,w
  6337  0B01  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6338  0B06  0874               	movf	?__Umul8_16+1,w
  6339  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6340  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6341  0B09  00C1               	movwf	___flmul@temp+1
  6342  0B0A  0873               	movf	?__Umul8_16,w
  6343  0B0B  00C0               	movwf	___flmul@temp
  6344  0B0C  0840               	movf	___flmul@temp,w
  6345  0B0D  00B0               	movwf	??___flmul
  6346  0B0E  0841               	movf	___flmul@temp+1,w
  6347  0B0F  00B1               	movwf	??___flmul+1
  6348  0B10  01B2               	clrf	??___flmul+2
  6349  0B11  01B3               	clrf	??___flmul+3
  6350  0B12  0830               	movf	??___flmul,w
  6351  0B13  07BC               	addwf	___flmul@prod,f
  6352  0B14  0831               	movf	??___flmul+1,w
  6353  0B15  1103               	clrz
  6354  0B16  1803               	skipnc
  6355  0B17  3E01               	addlw	1
  6356  0B18  1903               	skipnz
  6357  0B19  2B1B               	goto	u3801
  6358  0B1A  07BD               	addwf	___flmul@prod+1,f
  6359  0B1B                     u3801:	
  6360  0B1B  0832               	movf	??___flmul+2,w
  6361  0B1C  1103               	clrz
  6362  0B1D  1803               	skipnc
  6363  0B1E  3E01               	addlw	1
  6364  0B1F  1903               	skipnz
  6365  0B20  2B22               	goto	u3802
  6366  0B21  07BE               	addwf	___flmul@prod+2,f
  6367  0B22                     u3802:	
  6368  0B22  0833               	movf	??___flmul+3,w
  6369  0B23  1103               	clrz
  6370  0B24  1803               	skipnc
  6371  0B25  3E01               	addlw	1
  6372  0B26  1903               	skipnz
  6373  0B27  2B29               	goto	u3803
  6374  0B28  07BF               	addwf	___flmul@prod+3,f
  6375  0B29                     u3803:	
  6376  0B29                     l2691:	
  6377  0B29  082A               	movf	___flmul@b+2,w
  6378  0B2A  00B0               	movwf	??___flmul
  6379  0B2B  0830               	movf	??___flmul,w
  6380  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  6381  0B2D  082D               	movf	___flmul@a+1,w
  6382  0B2E  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6383  0B33  0874               	movf	?__Umul8_16+1,w
  6384  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6385  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6386  0B36  00C1               	movwf	___flmul@temp+1
  6387  0B37  0873               	movf	?__Umul8_16,w
  6388  0B38  00C0               	movwf	___flmul@temp
  6389  0B39                     l2693:	
  6390  0B39  0840               	movf	___flmul@temp,w
  6391  0B3A  00B0               	movwf	??___flmul
  6392  0B3B  0841               	movf	___flmul@temp+1,w
  6393  0B3C  00B1               	movwf	??___flmul+1
  6394  0B3D  01B2               	clrf	??___flmul+2
  6395  0B3E  01B3               	clrf	??___flmul+3
  6396  0B3F  0830               	movf	??___flmul,w
  6397  0B40  07BC               	addwf	___flmul@prod,f
  6398  0B41  0831               	movf	??___flmul+1,w
  6399  0B42  1103               	clrz
  6400  0B43  1803               	skipnc
  6401  0B44  3E01               	addlw	1
  6402  0B45  1903               	skipnz
  6403  0B46  2B48               	goto	u3811
  6404  0B47  07BD               	addwf	___flmul@prod+1,f
  6405  0B48                     u3811:	
  6406  0B48  0832               	movf	??___flmul+2,w
  6407  0B49  1103               	clrz
  6408  0B4A  1803               	skipnc
  6409  0B4B  3E01               	addlw	1
  6410  0B4C  1903               	skipnz
  6411  0B4D  2B4F               	goto	u3812
  6412  0B4E  07BE               	addwf	___flmul@prod+2,f
  6413  0B4F                     u3812:	
  6414  0B4F  0833               	movf	??___flmul+3,w
  6415  0B50  1103               	clrz
  6416  0B51  1803               	skipnc
  6417  0B52  3E01               	addlw	1
  6418  0B53  1903               	skipnz
  6419  0B54  2B56               	goto	u3813
  6420  0B55  07BF               	addwf	___flmul@prod+3,f
  6421  0B56                     u3813:	
  6422  0B56  082A               	movf	___flmul@b+2,w
  6423  0B57  00B0               	movwf	??___flmul
  6424  0B58  0830               	movf	??___flmul,w
  6425  0B59  00F3               	movwf	__Umul8_16@multiplicand
  6426  0B5A  082E               	movf	___flmul@a+2,w
  6427  0B5B  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6428  0B60  0874               	movf	?__Umul8_16+1,w
  6429  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6430  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6431  0B63  00C1               	movwf	___flmul@temp+1
  6432  0B64  0873               	movf	?__Umul8_16,w
  6433  0B65  00C0               	movwf	___flmul@temp
  6434  0B66                     l2695:	
  6435  0B66  0840               	movf	___flmul@temp,w
  6436  0B67  00B0               	movwf	??___flmul
  6437  0B68  0841               	movf	___flmul@temp+1,w
  6438  0B69  00B1               	movwf	??___flmul+1
  6439  0B6A  01B2               	clrf	??___flmul+2
  6440  0B6B  01B3               	clrf	??___flmul+3
  6441  0B6C  3008               	movlw	8
  6442  0B6D                     u3825:	
  6443  0B6D  1003               	clrc
  6444  0B6E  0DB0               	rlf	??___flmul,f
  6445  0B6F  0DB1               	rlf	??___flmul+1,f
  6446  0B70  0DB2               	rlf	??___flmul+2,f
  6447  0B71  0DB3               	rlf	??___flmul+3,f
  6448  0B72                     u3820:	
  6449  0B72  3EFF               	addlw	-1
  6450  0B73  1D03               	skipz
  6451  0B74  2B6D               	goto	u3825
  6452  0B75  0830               	movf	??___flmul,w
  6453  0B76  07BC               	addwf	___flmul@prod,f
  6454  0B77  0831               	movf	??___flmul+1,w
  6455  0B78  1103               	clrz
  6456  0B79  1803               	skipnc
  6457  0B7A  3E01               	addlw	1
  6458  0B7B  1903               	skipnz
  6459  0B7C  2B7E               	goto	u3831
  6460  0B7D  07BD               	addwf	___flmul@prod+1,f
  6461  0B7E                     u3831:	
  6462  0B7E  0832               	movf	??___flmul+2,w
  6463  0B7F  1103               	clrz
  6464  0B80  1803               	skipnc
  6465  0B81  3E01               	addlw	1
  6466  0B82  1903               	skipnz
  6467  0B83  2B85               	goto	u3832
  6468  0B84  07BE               	addwf	___flmul@prod+2,f
  6469  0B85                     u3832:	
  6470  0B85  0833               	movf	??___flmul+3,w
  6471  0B86  1103               	clrz
  6472  0B87  1803               	skipnc
  6473  0B88  3E01               	addlw	1
  6474  0B89  1903               	skipnz
  6475  0B8A  2B8C               	goto	u3833
  6476  0B8B  07BF               	addwf	___flmul@prod+3,f
  6477  0B8C                     u3833:	
  6478  0B8C                     l2697:	
  6479  0B8C  0836               	movf	___flmul@grs,w
  6480  0B8D  00B0               	movwf	??___flmul
  6481  0B8E  0837               	movf	___flmul@grs+1,w
  6482  0B8F  00B1               	movwf	??___flmul+1
  6483  0B90  0838               	movf	___flmul@grs+2,w
  6484  0B91  00B2               	movwf	??___flmul+2
  6485  0B92  0839               	movf	___flmul@grs+3,w
  6486  0B93  00B3               	movwf	??___flmul+3
  6487  0B94  3018               	movlw	24
  6488  0B95                     u3845:	
  6489  0B95  1003               	clrc
  6490  0B96  0CB3               	rrf	??___flmul+3,f
  6491  0B97  0CB2               	rrf	??___flmul+2,f
  6492  0B98  0CB1               	rrf	??___flmul+1,f
  6493  0B99  0CB0               	rrf	??___flmul,f
  6494  0B9A                     u3840:	
  6495  0B9A  3EFF               	addlw	-1
  6496  0B9B  1D03               	skipz
  6497  0B9C  2B95               	goto	u3845
  6498  0B9D  0830               	movf	??___flmul,w
  6499  0B9E  07BC               	addwf	___flmul@prod,f
  6500  0B9F  0831               	movf	??___flmul+1,w
  6501  0BA0  1103               	clrz
  6502  0BA1  1803               	skipnc
  6503  0BA2  3E01               	addlw	1
  6504  0BA3  1903               	skipnz
  6505  0BA4  2BA6               	goto	u3851
  6506  0BA5  07BD               	addwf	___flmul@prod+1,f
  6507  0BA6                     u3851:	
  6508  0BA6  0832               	movf	??___flmul+2,w
  6509  0BA7  1103               	clrz
  6510  0BA8  1803               	skipnc
  6511  0BA9  3E01               	addlw	1
  6512  0BAA  1903               	skipnz
  6513  0BAB  2BAD               	goto	u3852
  6514  0BAC  07BE               	addwf	___flmul@prod+2,f
  6515  0BAD                     u3852:	
  6516  0BAD  0833               	movf	??___flmul+3,w
  6517  0BAE  1103               	clrz
  6518  0BAF  1803               	skipnc
  6519  0BB0  3E01               	addlw	1
  6520  0BB1  1903               	skipnz
  6521  0BB2  2BB4               	goto	u3853
  6522  0BB3  07BF               	addwf	___flmul@prod+3,f
  6523  0BB4                     u3853:	
  6524  0BB4                     l2699:	
  6525  0BB4  3008               	movlw	8
  6526  0BB5  00B0               	movwf	??___flmul
  6527  0BB6                     u3865:	
  6528  0BB6  1003               	clrc
  6529  0BB7  0DB6               	rlf	___flmul@grs,f
  6530  0BB8  0DB7               	rlf	___flmul@grs+1,f
  6531  0BB9  0DB8               	rlf	___flmul@grs+2,f
  6532  0BBA  0DB9               	rlf	___flmul@grs+3,f
  6533  0BBB  0BB0               	decfsz	??___flmul,f
  6534  0BBC  2BB6               	goto	u3865
  6535  0BBD                     l2701:	
  6536  0BBD  083B               	movf	___flmul@bexp,w
  6537  0BBE  073A               	addwf	___flmul@aexp,w
  6538  0BBF  00B0               	movwf	??___flmul
  6539  0BC0  01B1               	clrf	??___flmul+1
  6540  0BC1  0DB1               	rlf	??___flmul+1,f
  6541  0BC2  0830               	movf	??___flmul,w
  6542  0BC3  3E82               	addlw	130
  6543  0BC4  00C0               	movwf	___flmul@temp
  6544  0BC5  0831               	movf	??___flmul+1,w
  6545  0BC6  1803               	skipnc
  6546  0BC7  3E01               	addlw	1
  6547  0BC8  3EFF               	addlw	255
  6548  0BC9  00C1               	movwf	___flmul@temp+1
  6549  0BCA  2BE8               	goto	l2713
  6550  0BCB                     l2703:	
  6551  0BCB  3001               	movlw	1
  6552  0BCC  00B0               	movwf	??___flmul
  6553  0BCD                     u3875:	
  6554  0BCD  1003               	clrc
  6555  0BCE  0DBC               	rlf	___flmul@prod,f
  6556  0BCF  0DBD               	rlf	___flmul@prod+1,f
  6557  0BD0  0DBE               	rlf	___flmul@prod+2,f
  6558  0BD1  0DBF               	rlf	___flmul@prod+3,f
  6559  0BD2  0BB0               	decfsz	??___flmul,f
  6560  0BD3  2BCD               	goto	u3875
  6561  0BD4                     l2705:	
  6562  0BD4  1FB9               	btfss	___flmul@grs+3,7
  6563  0BD5  2BD7               	goto	u3881
  6564  0BD6  2BD8               	goto	u3880
  6565  0BD7                     u3881:	
  6566  0BD7  2BD9               	goto	l2709
  6567  0BD8                     u3880:	
  6568  0BD8                     l2707:	
  6569  0BD8  143C               	bsf	___flmul@prod,0
  6570  0BD9                     l2709:	
  6571  0BD9  3001               	movlw	1
  6572  0BDA  00B0               	movwf	??___flmul
  6573  0BDB                     u3895:	
  6574  0BDB  1003               	clrc
  6575  0BDC  0DB6               	rlf	___flmul@grs,f
  6576  0BDD  0DB7               	rlf	___flmul@grs+1,f
  6577  0BDE  0DB8               	rlf	___flmul@grs+2,f
  6578  0BDF  0DB9               	rlf	___flmul@grs+3,f
  6579  0BE0  0BB0               	decfsz	??___flmul,f
  6580  0BE1  2BDB               	goto	u3895
  6581  0BE2                     l2711:	
  6582  0BE2  30FF               	movlw	255
  6583  0BE3  07C0               	addwf	___flmul@temp,f
  6584  0BE4  1803               	skipnc
  6585  0BE5  0AC1               	incf	___flmul@temp+1,f
  6586  0BE6  30FF               	movlw	255
  6587  0BE7  07C1               	addwf	___flmul@temp+1,f
  6588  0BE8                     l2713:	
  6589  0BE8  1FBE               	btfss	___flmul@prod+2,7
  6590  0BE9  2BEB               	goto	u3901
  6591  0BEA  2BEC               	goto	u3900
  6592  0BEB                     u3901:	
  6593  0BEB  2BCB               	goto	l2703
  6594  0BEC                     u3900:	
  6595  0BEC                     l2715:	
  6596  0BEC  01BA               	clrf	___flmul@aexp
  6597  0BED                     l2717:	
  6598  0BED  1FB9               	btfss	___flmul@grs+3,7
  6599  0BEE  2BF0               	goto	u3911
  6600  0BEF  2BF1               	goto	u3910
  6601  0BF0                     u3911:	
  6602  0BF0  2C0D               	goto	l2725
  6603  0BF1                     u3910:	
  6604  0BF1                     l2719:	
  6605  0BF1  30FF               	movlw	255
  6606  0BF2  0536               	andwf	___flmul@grs,w
  6607  0BF3  00B0               	movwf	??___flmul
  6608  0BF4  30FF               	movlw	255
  6609  0BF5  0537               	andwf	___flmul@grs+1,w
  6610  0BF6  00B1               	movwf	??___flmul+1
  6611  0BF7  30FF               	movlw	255
  6612  0BF8  0538               	andwf	___flmul@grs+2,w
  6613  0BF9  00B2               	movwf	??___flmul+2
  6614  0BFA  307F               	movlw	127
  6615  0BFB  0539               	andwf	___flmul@grs+3,w
  6616  0BFC  00B3               	movwf	??___flmul+3
  6617  0BFD  0833               	movf	??___flmul+3,w
  6618  0BFE  0432               	iorwf	??___flmul+2,w
  6619  0BFF  0431               	iorwf	??___flmul+1,w
  6620  0C00  0430               	iorwf	??___flmul,w
  6621  0C01  1903               	skipnz
  6622  0C02  2C04               	goto	u3921
  6623  0C03  2C05               	goto	u3920
  6624  0C04                     u3921:	
  6625  0C04  2C08               	goto	l797
  6626  0C05                     u3920:	
  6627  0C05                     l2721:	
  6628  0C05  01BA               	clrf	___flmul@aexp
  6629  0C06  0ABA               	incf	___flmul@aexp,f
  6630  0C07  2C0D               	goto	l2725
  6631  0C08                     l797:	
  6632  0C08  1C3C               	btfss	___flmul@prod,0
  6633  0C09  2C0B               	goto	u3931
  6634  0C0A  2C0C               	goto	u3930
  6635  0C0B                     u3931:	
  6636  0C0B  2C0D               	goto	l2725
  6637  0C0C                     u3930:	
  6638  0C0C  2C05               	goto	l2721
  6639  0C0D                     l2725:	
  6640  0C0D  083A               	movf	___flmul@aexp,w
  6641  0C0E  1903               	btfsc	3,2
  6642  0C0F  2C11               	goto	u3941
  6643  0C10  2C12               	goto	u3940
  6644  0C11                     u3941:	
  6645  0C11  2C43               	goto	l2735
  6646  0C12                     u3940:	
  6647  0C12                     l2727:	
  6648  0C12  3001               	movlw	1
  6649  0C13  07BC               	addwf	___flmul@prod,f
  6650  0C14  3000               	movlw	0
  6651  0C15  1803               	skipnc
  6652  0C16  3001               	movlw	1
  6653  0C17  07BD               	addwf	___flmul@prod+1,f
  6654  0C18  3000               	movlw	0
  6655  0C19  1803               	skipnc
  6656  0C1A  3001               	movlw	1
  6657  0C1B  07BE               	addwf	___flmul@prod+2,f
  6658  0C1C  3000               	movlw	0
  6659  0C1D  1803               	skipnc
  6660  0C1E  3001               	movlw	1
  6661  0C1F  07BF               	addwf	___flmul@prod+3,f
  6662  0C20                     l2729:	
  6663  0C20  1C3F               	btfss	___flmul@prod+3,0
  6664  0C21  2C23               	goto	u3951
  6665  0C22  2C24               	goto	u3950
  6666  0C23                     u3951:	
  6667  0C23  2C43               	goto	l2735
  6668  0C24                     u3950:	
  6669  0C24                     l2731:	
  6670  0C24  083C               	movf	___flmul@prod,w
  6671  0C25  00B0               	movwf	??___flmul
  6672  0C26  083D               	movf	___flmul@prod+1,w
  6673  0C27  00B1               	movwf	??___flmul+1
  6674  0C28  083E               	movf	___flmul@prod+2,w
  6675  0C29  00B2               	movwf	??___flmul+2
  6676  0C2A  083F               	movf	___flmul@prod+3,w
  6677  0C2B  00B3               	movwf	??___flmul+3
  6678  0C2C  3001               	movlw	1
  6679  0C2D  00B4               	movwf	??___flmul+4
  6680  0C2E                     u3965:	
  6681  0C2E  0D33               	rlf	??___flmul+3,w
  6682  0C2F  0CB3               	rrf	??___flmul+3,f
  6683  0C30  0CB2               	rrf	??___flmul+2,f
  6684  0C31  0CB1               	rrf	??___flmul+1,f
  6685  0C32  0CB0               	rrf	??___flmul,f
  6686  0C33                     u3960:	
  6687  0C33  0BB4               	decfsz	??___flmul+4,f
  6688  0C34  2C2E               	goto	u3965
  6689  0C35  0833               	movf	??___flmul+3,w
  6690  0C36  00BF               	movwf	___flmul@prod+3
  6691  0C37  0832               	movf	??___flmul+2,w
  6692  0C38  00BE               	movwf	___flmul@prod+2
  6693  0C39  0831               	movf	??___flmul+1,w
  6694  0C3A  00BD               	movwf	___flmul@prod+1
  6695  0C3B  0830               	movf	??___flmul,w
  6696  0C3C  00BC               	movwf	___flmul@prod
  6697  0C3D                     l2733:	
  6698  0C3D  3001               	movlw	1
  6699  0C3E  07C0               	addwf	___flmul@temp,f
  6700  0C3F  1803               	skipnc
  6701  0C40  0AC1               	incf	___flmul@temp+1,f
  6702  0C41  3000               	movlw	0
  6703  0C42  07C1               	addwf	___flmul@temp+1,f
  6704  0C43                     l2735:	
  6705  0C43  0841               	movf	___flmul@temp+1,w
  6706  0C44  3A80               	xorlw	128
  6707  0C45  00FF               	movwf	btemp+1
  6708  0C46  3080               	movlw	128
  6709  0C47  027F               	subwf	btemp+1,w
  6710  0C48  1D03               	skipz
  6711  0C49  2C4C               	goto	u3975
  6712  0C4A  30FF               	movlw	255
  6713  0C4B  0240               	subwf	___flmul@temp,w
  6714  0C4C                     u3975:	
  6715  0C4C  1C03               	skipc
  6716  0C4D  2C4F               	goto	u3971
  6717  0C4E  2C50               	goto	u3970
  6718  0C4F                     u3971:	
  6719  0C4F  2C5B               	goto	l2739
  6720  0C50                     u3970:	
  6721  0C50                     l2737:	
  6722  0C50  307F               	movlw	127
  6723  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6724  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6725  0C53  00BF               	movwf	___flmul@prod+3
  6726  0C54  3080               	movlw	128
  6727  0C55  00BE               	movwf	___flmul@prod+2
  6728  0C56  3000               	movlw	0
  6729  0C57  00BD               	movwf	___flmul@prod+1
  6730  0C58  3000               	movlw	0
  6731  0C59  00BC               	movwf	___flmul@prod
  6732  0C5A  2C90               	goto	l803
  6733  0C5B                     l2739:	
  6734  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6735  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6736  0C5D  0841               	movf	___flmul@temp+1,w
  6737  0C5E  3A80               	xorlw	128
  6738  0C5F  00FF               	movwf	btemp+1
  6739  0C60  3080               	movlw	128
  6740  0C61  027F               	subwf	btemp+1,w
  6741  0C62  1D03               	skipz
  6742  0C63  2C66               	goto	u3985
  6743  0C64  3001               	movlw	1
  6744  0C65  0240               	subwf	___flmul@temp,w
  6745  0C66                     u3985:	
  6746  0C66  1803               	skipnc
  6747  0C67  2C69               	goto	u3981
  6748  0C68  2C6A               	goto	u3980
  6749  0C69                     u3981:	
  6750  0C69  2C76               	goto	l2745
  6751  0C6A                     u3980:	
  6752  0C6A                     l2741:	
  6753  0C6A  3000               	movlw	0
  6754  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6755  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6756  0C6D  00BF               	movwf	___flmul@prod+3
  6757  0C6E  3000               	movlw	0
  6758  0C6F  00BE               	movwf	___flmul@prod+2
  6759  0C70  3000               	movlw	0
  6760  0C71  00BD               	movwf	___flmul@prod+1
  6761  0C72  3000               	movlw	0
  6762  0C73  00BC               	movwf	___flmul@prod
  6763  0C74                     l2743:	
  6764  0C74  01B5               	clrf	___flmul@sign
  6765  0C75  2C90               	goto	l803
  6766  0C76                     l2745:	
  6767  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6768  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6769  0C78  0840               	movf	___flmul@temp,w
  6770  0C79  00B0               	movwf	??___flmul
  6771  0C7A  0830               	movf	??___flmul,w
  6772  0C7B  00BB               	movwf	___flmul@bexp
  6773  0C7C  30FF               	movlw	255
  6774  0C7D  05BC               	andwf	___flmul@prod,f
  6775  0C7E  30FF               	movlw	255
  6776  0C7F  05BD               	andwf	___flmul@prod+1,f
  6777  0C80  307F               	movlw	127
  6778  0C81  05BE               	andwf	___flmul@prod+2,f
  6779  0C82  3000               	movlw	0
  6780  0C83  05BF               	andwf	___flmul@prod+3,f
  6781  0C84                     l2747:	
  6782  0C84  1C3B               	btfss	___flmul@bexp,0
  6783  0C85  2C87               	goto	u3991
  6784  0C86  2C88               	goto	u3990
  6785  0C87                     u3991:	
  6786  0C87  2C89               	goto	l2751
  6787  0C88                     u3990:	
  6788  0C88                     l2749:	
  6789  0C88  17BE               	bsf	___flmul@prod+2,7
  6790  0C89                     l2751:	
  6791  0C89  083B               	movf	___flmul@bexp,w
  6792  0C8A  00B0               	movwf	??___flmul
  6793  0C8B  1003               	clrc
  6794  0C8C  0C30               	rrf	??___flmul,w
  6795  0C8D  00B1               	movwf	??___flmul+1
  6796  0C8E  0831               	movf	??___flmul+1,w
  6797  0C8F  00BF               	movwf	___flmul@prod+3
  6798  0C90                     l803:	
  6799  0C90  0835               	movf	___flmul@sign,w
  6800  0C91  00B0               	movwf	??___flmul
  6801  0C92  0830               	movf	??___flmul,w
  6802  0C93  04BF               	iorwf	___flmul@prod+3,f
  6803  0C94                     l2753:	
  6804  0C94  083F               	movf	___flmul@prod+3,w
  6805  0C95  00AB               	movwf	?___flmul+3
  6806  0C96  083E               	movf	___flmul@prod+2,w
  6807  0C97  00AA               	movwf	?___flmul+2
  6808  0C98  083D               	movf	___flmul@prod+1,w
  6809  0C99  00A9               	movwf	?___flmul+1
  6810  0C9A  083C               	movf	___flmul@prod,w
  6811  0C9B  00A8               	movwf	?___flmul
  6812  0C9C                     l791:	
  6813  0C9C  0008               	return
  6814  0C9D                     __end_of___flmul:	
  6815                           
  6816                           	psect	text11
  6817  1C3D                     __ptext11:	
  6818 ;; *************** function __Umul8_16 *****************
  6819 ;; Defined at:
  6820 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6821 ;; Parameters:    Size  Location     Type
  6822 ;;  multiplier      1    wreg     unsigned char 
  6823 ;;  multiplicand    1    3[COMMON] unsigned char 
  6824 ;; Auto vars:     Size  Location     Type
  6825 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6826 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6827 ;;  product         2    0[BANK0 ] unsigned int 
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  2    3[COMMON] unsigned int 
  6830 ;; Registers used:
  6831 ;;		wreg, status,2, status,0
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6837 ;;      Params:         2       0       0       0       0
  6838 ;;      Locals:         0       5       0       0       0
  6839 ;;      Temps:          2       0       0       0       0
  6840 ;;      Totals:         4       5       0       0       0
  6841 ;;Total ram usage:        9 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:    1
  6844 ;; This function calls:
  6845 ;;		Nothing
  6846 ;; This function is called by:
  6847 ;;		___flmul
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           
  6852                           ;psect for function __Umul8_16
  6853  1C3D                     __Umul8_16:	
  6854                           
  6855                           ;incstack = 0
  6856                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6857                           ;__Umul8_16@multiplier stored from wreg
  6858  1C3D  1283               	bcf	3,5	;RP0=0, select bank0
  6859  1C3E  1303               	bcf	3,6	;RP1=0, select bank0
  6860  1C3F  00A4               	movwf	__Umul8_16@multiplier
  6861  1C40                     l2279:	
  6862  1C40  01A0               	clrf	__Umul8_16@product
  6863  1C41  01A1               	clrf	__Umul8_16@product+1
  6864  1C42                     l2281:	
  6865  1C42  0873               	movf	__Umul8_16@multiplicand,w
  6866  1C43  00F5               	movwf	??__Umul8_16
  6867  1C44  01F6               	clrf	??__Umul8_16+1
  6868  1C45  0875               	movf	??__Umul8_16,w
  6869  1C46  00A2               	movwf	__Umul8_16@word_mpld
  6870  1C47  0876               	movf	??__Umul8_16+1,w
  6871  1C48  00A3               	movwf	__Umul8_16@word_mpld+1
  6872  1C49                     l2283:	
  6873  1C49  1C24               	btfss	__Umul8_16@multiplier,0
  6874  1C4A  2C4C               	goto	u2821
  6875  1C4B  2C4D               	goto	u2820
  6876  1C4C                     u2821:	
  6877  1C4C  2C53               	goto	l857
  6878  1C4D                     u2820:	
  6879  1C4D                     l2285:	
  6880  1C4D  0822               	movf	__Umul8_16@word_mpld,w
  6881  1C4E  07A0               	addwf	__Umul8_16@product,f
  6882  1C4F  1803               	skipnc
  6883  1C50  0AA1               	incf	__Umul8_16@product+1,f
  6884  1C51  0823               	movf	__Umul8_16@word_mpld+1,w
  6885  1C52  07A1               	addwf	__Umul8_16@product+1,f
  6886  1C53                     l857:	
  6887  1C53  3001               	movlw	1
  6888  1C54                     u2835:	
  6889  1C54  1003               	clrc
  6890  1C55  0DA2               	rlf	__Umul8_16@word_mpld,f
  6891  1C56  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6892  1C57  3EFF               	addlw	-1
  6893  1C58  1D03               	skipz
  6894  1C59  2C54               	goto	u2835
  6895  1C5A  1003               	clrc
  6896  1C5B  0CA4               	rrf	__Umul8_16@multiplier,f
  6897  1C5C                     l2287:	
  6898  1C5C  0824               	movf	__Umul8_16@multiplier,w
  6899  1C5D  1D03               	btfss	3,2
  6900  1C5E  2C60               	goto	u2841
  6901  1C5F  2C61               	goto	u2840
  6902  1C60                     u2841:	
  6903  1C60  2C49               	goto	l2283
  6904  1C61                     u2840:	
  6905  1C61                     l2289:	
  6906  1C61  0821               	movf	__Umul8_16@product+1,w
  6907  1C62  00F4               	movwf	?__Umul8_16+1
  6908  1C63  0820               	movf	__Umul8_16@product,w
  6909  1C64  00F3               	movwf	?__Umul8_16
  6910  1C65                     l859:	
  6911  1C65  0008               	return
  6912  1C66                     __end_of__Umul8_16:	
  6913                           
  6914                           	psect	text12
  6915  112C                     __ptext12:	
  6916 ;; *************** function __tdiv_to_l_ *****************
  6917 ;; Defined at:
  6918 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6919 ;; Parameters:    Size  Location     Type
  6920 ;;  f1              4    3[COMMON] float 
  6921 ;;  f2              4    7[COMMON] float 
  6922 ;; Auto vars:     Size  Location     Type
  6923 ;;  quot            4    4[BANK0 ] unsigned long 
  6924 ;;  exp1            1    9[BANK0 ] unsigned char 
  6925 ;;  cntr            1    8[BANK0 ] unsigned char 
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  4    3[COMMON] unsigned long 
  6928 ;; Registers used:
  6929 ;;		wreg, status,2, status,0
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6935 ;;      Params:         8       0       0       0       0
  6936 ;;      Locals:         0       6       0       0       0
  6937 ;;      Temps:          0       4       0       0       0
  6938 ;;      Totals:         8      10       0       0       0
  6939 ;;Total ram usage:       18 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:    1
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		_sprintf
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           
  6950                           ;psect for function __tdiv_to_l_
  6951  112C                     __tdiv_to_l_:	
  6952  112C                     l2845:	
  6953                           ;incstack = 0
  6954                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6955                           
  6956  112C  0873               	movf	__tdiv_to_l_@f1,w
  6957  112D  1283               	bcf	3,5	;RP0=0, select bank0
  6958  112E  1303               	bcf	3,6	;RP1=0, select bank0
  6959  112F  00A0               	movwf	??__tdiv_to_l_
  6960  1130  0874               	movf	__tdiv_to_l_@f1+1,w
  6961  1131  00A1               	movwf	??__tdiv_to_l_+1
  6962  1132  0875               	movf	__tdiv_to_l_@f1+2,w
  6963  1133  00A2               	movwf	??__tdiv_to_l_+2
  6964  1134  1003               	clrc
  6965  1135  0D21               	rlf	??__tdiv_to_l_+1,w
  6966  1136  0D22               	rlf	??__tdiv_to_l_+2,w
  6967  1137  00A3               	movwf	??__tdiv_to_l_+3
  6968  1138  0823               	movf	??__tdiv_to_l_+3,w
  6969  1139  00A9               	movwf	__tdiv_to_l_@exp1
  6970  113A  0829               	movf	__tdiv_to_l_@exp1,w
  6971  113B  1D03               	btfss	3,2
  6972  113C  293E               	goto	u4271
  6973  113D  293F               	goto	u4270
  6974  113E                     u4271:	
  6975  113E  2948               	goto	l2851
  6976  113F                     u4270:	
  6977  113F                     l2847:	
  6978  113F  3000               	movlw	0
  6979  1140  00F6               	movwf	?__tdiv_to_l_+3
  6980  1141  3000               	movlw	0
  6981  1142  00F5               	movwf	?__tdiv_to_l_+2
  6982  1143  3000               	movlw	0
  6983  1144  00F4               	movwf	?__tdiv_to_l_+1
  6984  1145  3000               	movlw	0
  6985  1146  00F3               	movwf	?__tdiv_to_l_
  6986  1147  29E8               	goto	l585
  6987  1148                     l2851:	
  6988  1148  0877               	movf	__tdiv_to_l_@f2,w
  6989  1149  00A0               	movwf	??__tdiv_to_l_
  6990  114A  0878               	movf	__tdiv_to_l_@f2+1,w
  6991  114B  00A1               	movwf	??__tdiv_to_l_+1
  6992  114C  0879               	movf	__tdiv_to_l_@f2+2,w
  6993  114D  00A2               	movwf	??__tdiv_to_l_+2
  6994  114E  1003               	clrc
  6995  114F  0D21               	rlf	??__tdiv_to_l_+1,w
  6996  1150  0D22               	rlf	??__tdiv_to_l_+2,w
  6997  1151  00A3               	movwf	??__tdiv_to_l_+3
  6998  1152  0823               	movf	??__tdiv_to_l_+3,w
  6999  1153  00A8               	movwf	__tdiv_to_l_@cntr
  7000  1154  0828               	movf	__tdiv_to_l_@cntr,w
  7001  1155  1D03               	btfss	3,2
  7002  1156  2958               	goto	u4281
  7003  1157  2959               	goto	u4280
  7004  1158                     u4281:	
  7005  1158  295A               	goto	l586
  7006  1159                     u4280:	
  7007  1159  293F               	goto	l2847
  7008  115A                     l586:	
  7009  115A  17F4               	bsf	__tdiv_to_l_@f1+1,7
  7010  115B                     l2857:	
  7011  115B  30FF               	movlw	255
  7012  115C  05F3               	andwf	__tdiv_to_l_@f1,f
  7013  115D  30FF               	movlw	255
  7014  115E  05F4               	andwf	__tdiv_to_l_@f1+1,f
  7015  115F  3000               	movlw	0
  7016  1160  05F5               	andwf	__tdiv_to_l_@f1+2,f
  7017  1161                     l2859:	
  7018  1161  17F8               	bsf	__tdiv_to_l_@f2+1,7
  7019  1162  30FF               	movlw	255
  7020  1163  05F7               	andwf	__tdiv_to_l_@f2,f
  7021  1164  30FF               	movlw	255
  7022  1165  05F8               	andwf	__tdiv_to_l_@f2+1,f
  7023  1166  3000               	movlw	0
  7024  1167  05F9               	andwf	__tdiv_to_l_@f2+2,f
  7025  1168  3000               	movlw	0
  7026  1169  00A7               	movwf	__tdiv_to_l_@quot+3
  7027  116A  3000               	movlw	0
  7028  116B  00A6               	movwf	__tdiv_to_l_@quot+2
  7029  116C  3000               	movlw	0
  7030  116D  00A5               	movwf	__tdiv_to_l_@quot+1
  7031  116E  3000               	movlw	0
  7032  116F  00A4               	movwf	__tdiv_to_l_@quot
  7033  1170                     l2861:	
  7034  1170  307F               	movlw	127
  7035  1171  02A9               	subwf	__tdiv_to_l_@exp1,f
  7036  1172                     l2863:	
  7037  1172  3098               	movlw	152
  7038  1173  0728               	addwf	__tdiv_to_l_@cntr,w
  7039  1174  00A0               	movwf	??__tdiv_to_l_
  7040  1175  0820               	movf	??__tdiv_to_l_,w
  7041  1176  02A9               	subwf	__tdiv_to_l_@exp1,f
  7042  1177  3018               	movlw	24
  7043  1178  00A0               	movwf	??__tdiv_to_l_
  7044  1179  0820               	movf	??__tdiv_to_l_,w
  7045  117A  00A8               	movwf	__tdiv_to_l_@cntr
  7046  117B                     l2865:	
  7047  117B  3001               	movlw	1
  7048  117C  00A0               	movwf	??__tdiv_to_l_
  7049  117D                     u4295:	
  7050  117D  1003               	clrc
  7051  117E  0DA4               	rlf	__tdiv_to_l_@quot,f
  7052  117F  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7053  1180  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7054  1181  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7055  1182  0BA0               	decfsz	??__tdiv_to_l_,f
  7056  1183  297D               	goto	u4295
  7057  1184                     l2867:	
  7058  1184  0879               	movf	__tdiv_to_l_@f2+2,w
  7059  1185  0275               	subwf	__tdiv_to_l_@f1+2,w
  7060  1186  1D03               	skipz
  7061  1187  298E               	goto	u4305
  7062  1188  0878               	movf	__tdiv_to_l_@f2+1,w
  7063  1189  0274               	subwf	__tdiv_to_l_@f1+1,w
  7064  118A  1D03               	skipz
  7065  118B  298E               	goto	u4305
  7066  118C  0877               	movf	__tdiv_to_l_@f2,w
  7067  118D  0273               	subwf	__tdiv_to_l_@f1,w
  7068  118E                     u4305:	
  7069  118E  1C03               	skipc
  7070  118F  2991               	goto	u4301
  7071  1190  2992               	goto	u4300
  7072  1191                     u4301:	
  7073  1191  299D               	goto	l2873
  7074  1192                     u4300:	
  7075  1192                     l2869:	
  7076  1192  0877               	movf	__tdiv_to_l_@f2,w
  7077  1193  02F3               	subwf	__tdiv_to_l_@f1,f
  7078  1194  0878               	movf	__tdiv_to_l_@f2+1,w
  7079  1195  1C03               	skipc
  7080  1196  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  7081  1197  02F4               	subwf	__tdiv_to_l_@f1+1,f
  7082  1198  0879               	movf	__tdiv_to_l_@f2+2,w
  7083  1199  1C03               	skipc
  7084  119A  0A79               	incf	__tdiv_to_l_@f2+2,w
  7085  119B  02F5               	subwf	__tdiv_to_l_@f1+2,f
  7086  119C                     l2871:	
  7087  119C  1424               	bsf	__tdiv_to_l_@quot,0
  7088  119D                     l2873:	
  7089  119D  3001               	movlw	1
  7090  119E                     u4315:	
  7091  119E  1003               	clrc
  7092  119F  0DF3               	rlf	__tdiv_to_l_@f1,f
  7093  11A0  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  7094  11A1  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  7095  11A2  3EFF               	addlw	-1
  7096  11A3  1D03               	skipz
  7097  11A4  299E               	goto	u4315
  7098  11A5                     l2875:	
  7099  11A5  3001               	movlw	1
  7100  11A6  02A8               	subwf	__tdiv_to_l_@cntr,f
  7101  11A7  1D03               	btfss	3,2
  7102  11A8  29AA               	goto	u4321
  7103  11A9  29AB               	goto	u4320
  7104  11AA                     u4321:	
  7105  11AA  297B               	goto	l2865
  7106  11AB                     u4320:	
  7107  11AB                     l589:	
  7108  11AB  1FA9               	btfss	__tdiv_to_l_@exp1,7
  7109  11AC  29AE               	goto	u4331
  7110  11AD  29AF               	goto	u4330
  7111  11AE                     u4331:	
  7112  11AE  29C9               	goto	l2885
  7113  11AF                     u4330:	
  7114  11AF                     l2877:	
  7115  11AF  0829               	movf	__tdiv_to_l_@exp1,w
  7116  11B0  3A80               	xorlw	128
  7117  11B1  3E97               	addlw	151
  7118  11B2  1803               	skipnc
  7119  11B3  29B5               	goto	u4341
  7120  11B4  29B6               	goto	u4340
  7121  11B5                     u4341:	
  7122  11B5  29B7               	goto	l2883
  7123  11B6                     u4340:	
  7124  11B6  293F               	goto	l2847
  7125  11B7                     l2883:	
  7126  11B7  3001               	movlw	1
  7127  11B8                     u4355:	
  7128  11B8  1003               	clrc
  7129  11B9  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  7130  11BA  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  7131  11BB  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  7132  11BC  0CA4               	rrf	__tdiv_to_l_@quot,f
  7133  11BD  3EFF               	addlw	-1
  7134  11BE  1D03               	skipz
  7135  11BF  29B8               	goto	u4355
  7136  11C0  3001               	movlw	1
  7137  11C1  00A0               	movwf	??__tdiv_to_l_
  7138  11C2  0820               	movf	??__tdiv_to_l_,w
  7139  11C3  07A9               	addwf	__tdiv_to_l_@exp1,f
  7140  11C4  1D03               	btfss	3,2
  7141  11C5  29C7               	goto	u4361
  7142  11C6  29C8               	goto	u4360
  7143  11C7                     u4361:	
  7144  11C7  29B7               	goto	l2883
  7145  11C8                     u4360:	
  7146  11C8  29E0               	goto	l2893
  7147  11C9                     l2885:	
  7148  11C9  3018               	movlw	24
  7149  11CA  0229               	subwf	__tdiv_to_l_@exp1,w
  7150  11CB  1C03               	skipc
  7151  11CC  29CE               	goto	u4371
  7152  11CD  29CF               	goto	u4370
  7153  11CE                     u4371:	
  7154  11CE  29DB               	goto	l596
  7155  11CF                     u4370:	
  7156  11CF  293F               	goto	l2847
  7157  11D0                     l2891:	
  7158  11D0  3001               	movlw	1
  7159  11D1  00A0               	movwf	??__tdiv_to_l_
  7160  11D2                     u4385:	
  7161  11D2  1003               	clrc
  7162  11D3  0DA4               	rlf	__tdiv_to_l_@quot,f
  7163  11D4  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7164  11D5  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7165  11D6  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7166  11D7  0BA0               	decfsz	??__tdiv_to_l_,f
  7167  11D8  29D2               	goto	u4385
  7168  11D9  3001               	movlw	1
  7169  11DA  02A9               	subwf	__tdiv_to_l_@exp1,f
  7170  11DB                     l596:	
  7171  11DB  0829               	movf	__tdiv_to_l_@exp1,w
  7172  11DC  1D03               	btfss	3,2
  7173  11DD  29DF               	goto	u4391
  7174  11DE  29E0               	goto	u4390
  7175  11DF                     u4391:	
  7176  11DF  29D0               	goto	l2891
  7177  11E0                     u4390:	
  7178  11E0                     l2893:	
  7179  11E0  0827               	movf	__tdiv_to_l_@quot+3,w
  7180  11E1  00F6               	movwf	?__tdiv_to_l_+3
  7181  11E2  0826               	movf	__tdiv_to_l_@quot+2,w
  7182  11E3  00F5               	movwf	?__tdiv_to_l_+2
  7183  11E4  0825               	movf	__tdiv_to_l_@quot+1,w
  7184  11E5  00F4               	movwf	?__tdiv_to_l_+1
  7185  11E6  0824               	movf	__tdiv_to_l_@quot,w
  7186  11E7  00F3               	movwf	?__tdiv_to_l_
  7187  11E8                     l585:	
  7188  11E8  0008               	return
  7189  11E9                     __end_of__tdiv_to_l_:	
  7190                           
  7191                           	psect	text13
  7192  11E9                     __ptext13:	
  7193 ;; *************** function __div_to_l_ *****************
  7194 ;; Defined at:
  7195 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  f1              4    3[COMMON] unsigned long 
  7198 ;;  f2              4    7[COMMON] unsigned long 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  quot            4    1[BANK0 ] unsigned long 
  7201 ;;  exp1            1    6[BANK0 ] unsigned char 
  7202 ;;  cntr            1    5[BANK0 ] unsigned char 
  7203 ;; Return value:  Size  Location     Type
  7204 ;;                  4    3[COMMON] unsigned long 
  7205 ;; Registers used:
  7206 ;;		wreg, status,2, status,0
  7207 ;; Tracked objects:
  7208 ;;		On entry : 0/0
  7209 ;;		On exit  : 0/0
  7210 ;;		Unchanged: 0/0
  7211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7212 ;;      Params:         8       0       0       0       0
  7213 ;;      Locals:         0       6       0       0       0
  7214 ;;      Temps:          0       1       0       0       0
  7215 ;;      Totals:         8       7       0       0       0
  7216 ;;Total ram usage:       15 bytes
  7217 ;; Hardware stack levels used:    1
  7218 ;; Hardware stack levels required when called:    1
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		_sprintf
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           
  7227                           ;psect for function __div_to_l_
  7228  11E9                     __div_to_l_:	
  7229  11E9                     l2897:	
  7230                           ;incstack = 0
  7231                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7232                           
  7233  11E9  1003               	clrc
  7234  11EA  0D75               	rlf	__div_to_l_@f1+2,w
  7235  11EB  0D76               	rlf	__div_to_l_@f1+3,w
  7236  11EC  1283               	bcf	3,5	;RP0=0, select bank0
  7237  11ED  1303               	bcf	3,6	;RP1=0, select bank0
  7238  11EE  00A0               	movwf	??__div_to_l_
  7239  11EF  0820               	movf	??__div_to_l_,w
  7240  11F0  00A6               	movwf	__div_to_l_@exp1
  7241  11F1  0826               	movf	__div_to_l_@exp1,w
  7242  11F2  1D03               	btfss	3,2
  7243  11F3  29F5               	goto	u4401
  7244  11F4  29F6               	goto	u4400
  7245  11F5                     u4401:	
  7246  11F5  29FF               	goto	l2903
  7247  11F6                     u4400:	
  7248  11F6                     l2899:	
  7249  11F6  3000               	movlw	0
  7250  11F7  00F6               	movwf	?__div_to_l_+3
  7251  11F8  3000               	movlw	0
  7252  11F9  00F5               	movwf	?__div_to_l_+2
  7253  11FA  3000               	movlw	0
  7254  11FB  00F4               	movwf	?__div_to_l_+1
  7255  11FC  3000               	movlw	0
  7256  11FD  00F3               	movwf	?__div_to_l_
  7257  11FE  2AA6               	goto	l538
  7258  11FF                     l2903:	
  7259  11FF  1003               	clrc
  7260  1200  0D79               	rlf	__div_to_l_@f2+2,w
  7261  1201  0D7A               	rlf	__div_to_l_@f2+3,w
  7262  1202  00A0               	movwf	??__div_to_l_
  7263  1203  0820               	movf	??__div_to_l_,w
  7264  1204  00A5               	movwf	__div_to_l_@cntr
  7265  1205  0825               	movf	__div_to_l_@cntr,w
  7266  1206  1D03               	btfss	3,2
  7267  1207  2A09               	goto	u4411
  7268  1208  2A0A               	goto	u4410
  7269  1209                     u4411:	
  7270  1209  2A0B               	goto	l539
  7271  120A                     u4410:	
  7272  120A  29F6               	goto	l2899
  7273  120B                     l539:	
  7274  120B  17F5               	bsf	__div_to_l_@f1+2,7
  7275  120C                     l2909:	
  7276  120C  30FF               	movlw	255
  7277  120D  05F3               	andwf	__div_to_l_@f1,f
  7278  120E  30FF               	movlw	255
  7279  120F  05F4               	andwf	__div_to_l_@f1+1,f
  7280  1210  30FF               	movlw	255
  7281  1211  05F5               	andwf	__div_to_l_@f1+2,f
  7282  1212  3000               	movlw	0
  7283  1213  05F6               	andwf	__div_to_l_@f1+3,f
  7284  1214                     l2911:	
  7285  1214  17F9               	bsf	__div_to_l_@f2+2,7
  7286  1215  30FF               	movlw	255
  7287  1216  05F7               	andwf	__div_to_l_@f2,f
  7288  1217  30FF               	movlw	255
  7289  1218  05F8               	andwf	__div_to_l_@f2+1,f
  7290  1219  30FF               	movlw	255
  7291  121A  05F9               	andwf	__div_to_l_@f2+2,f
  7292  121B  3000               	movlw	0
  7293  121C  05FA               	andwf	__div_to_l_@f2+3,f
  7294  121D  3000               	movlw	0
  7295  121E  00A4               	movwf	__div_to_l_@quot+3
  7296  121F  3000               	movlw	0
  7297  1220  00A3               	movwf	__div_to_l_@quot+2
  7298  1221  3000               	movlw	0
  7299  1222  00A2               	movwf	__div_to_l_@quot+1
  7300  1223  3000               	movlw	0
  7301  1224  00A1               	movwf	__div_to_l_@quot
  7302  1225                     l2913:	
  7303  1225  307F               	movlw	127
  7304  1226  02A6               	subwf	__div_to_l_@exp1,f
  7305  1227                     l2915:	
  7306  1227  30A0               	movlw	160
  7307  1228  0725               	addwf	__div_to_l_@cntr,w
  7308  1229  00A0               	movwf	??__div_to_l_
  7309  122A  0820               	movf	??__div_to_l_,w
  7310  122B  02A6               	subwf	__div_to_l_@exp1,f
  7311  122C  3020               	movlw	32
  7312  122D  00A0               	movwf	??__div_to_l_
  7313  122E  0820               	movf	??__div_to_l_,w
  7314  122F  00A5               	movwf	__div_to_l_@cntr
  7315  1230                     l2917:	
  7316  1230  3001               	movlw	1
  7317  1231  00A0               	movwf	??__div_to_l_
  7318  1232                     u4425:	
  7319  1232  1003               	clrc
  7320  1233  0DA1               	rlf	__div_to_l_@quot,f
  7321  1234  0DA2               	rlf	__div_to_l_@quot+1,f
  7322  1235  0DA3               	rlf	__div_to_l_@quot+2,f
  7323  1236  0DA4               	rlf	__div_to_l_@quot+3,f
  7324  1237  0BA0               	decfsz	??__div_to_l_,f
  7325  1238  2A32               	goto	u4425
  7326  1239                     l2919:	
  7327  1239  087A               	movf	__div_to_l_@f2+3,w
  7328  123A  0276               	subwf	__div_to_l_@f1+3,w
  7329  123B  1D03               	skipz
  7330  123C  2A47               	goto	u4435
  7331  123D  0879               	movf	__div_to_l_@f2+2,w
  7332  123E  0275               	subwf	__div_to_l_@f1+2,w
  7333  123F  1D03               	skipz
  7334  1240  2A47               	goto	u4435
  7335  1241  0878               	movf	__div_to_l_@f2+1,w
  7336  1242  0274               	subwf	__div_to_l_@f1+1,w
  7337  1243  1D03               	skipz
  7338  1244  2A47               	goto	u4435
  7339  1245  0877               	movf	__div_to_l_@f2,w
  7340  1246  0273               	subwf	__div_to_l_@f1,w
  7341  1247                     u4435:	
  7342  1247  1C03               	skipc
  7343  1248  2A4A               	goto	u4431
  7344  1249  2A4B               	goto	u4430
  7345  124A                     u4431:	
  7346  124A  2A5A               	goto	l2925
  7347  124B                     u4430:	
  7348  124B                     l2921:	
  7349  124B  0877               	movf	__div_to_l_@f2,w
  7350  124C  02F3               	subwf	__div_to_l_@f1,f
  7351  124D  0878               	movf	__div_to_l_@f2+1,w
  7352  124E  1C03               	skipc
  7353  124F  0F78               	incfsz	__div_to_l_@f2+1,w
  7354  1250  02F4               	subwf	__div_to_l_@f1+1,f
  7355  1251  0879               	movf	__div_to_l_@f2+2,w
  7356  1252  1C03               	skipc
  7357  1253  0F79               	incfsz	__div_to_l_@f2+2,w
  7358  1254  02F5               	subwf	__div_to_l_@f1+2,f
  7359  1255  087A               	movf	__div_to_l_@f2+3,w
  7360  1256  1C03               	skipc
  7361  1257  0F7A               	incfsz	__div_to_l_@f2+3,w
  7362  1258  02F6               	subwf	__div_to_l_@f1+3,f
  7363  1259                     l2923:	
  7364  1259  1421               	bsf	__div_to_l_@quot,0
  7365  125A                     l2925:	
  7366  125A  3001               	movlw	1
  7367  125B  00A0               	movwf	??__div_to_l_
  7368  125C                     u4445:	
  7369  125C  1003               	clrc
  7370  125D  0DF3               	rlf	__div_to_l_@f1,f
  7371  125E  0DF4               	rlf	__div_to_l_@f1+1,f
  7372  125F  0DF5               	rlf	__div_to_l_@f1+2,f
  7373  1260  0DF6               	rlf	__div_to_l_@f1+3,f
  7374  1261  0BA0               	decfsz	??__div_to_l_,f
  7375  1262  2A5C               	goto	u4445
  7376  1263                     l2927:	
  7377  1263  3001               	movlw	1
  7378  1264  02A5               	subwf	__div_to_l_@cntr,f
  7379  1265  1D03               	btfss	3,2
  7380  1266  2A68               	goto	u4451
  7381  1267  2A69               	goto	u4450
  7382  1268                     u4451:	
  7383  1268  2A30               	goto	l2917
  7384  1269                     u4450:	
  7385  1269                     l542:	
  7386  1269  1FA6               	btfss	__div_to_l_@exp1,7
  7387  126A  2A6C               	goto	u4461
  7388  126B  2A6D               	goto	u4460
  7389  126C                     u4461:	
  7390  126C  2A87               	goto	l2937
  7391  126D                     u4460:	
  7392  126D                     l2929:	
  7393  126D  0826               	movf	__div_to_l_@exp1,w
  7394  126E  3A80               	xorlw	128
  7395  126F  3E9F               	addlw	159
  7396  1270  1803               	skipnc
  7397  1271  2A73               	goto	u4471
  7398  1272  2A74               	goto	u4470
  7399  1273                     u4471:	
  7400  1273  2A75               	goto	l2935
  7401  1274                     u4470:	
  7402  1274  29F6               	goto	l2899
  7403  1275                     l2935:	
  7404  1275  3001               	movlw	1
  7405  1276                     u4485:	
  7406  1276  1003               	clrc
  7407  1277  0CA4               	rrf	__div_to_l_@quot+3,f
  7408  1278  0CA3               	rrf	__div_to_l_@quot+2,f
  7409  1279  0CA2               	rrf	__div_to_l_@quot+1,f
  7410  127A  0CA1               	rrf	__div_to_l_@quot,f
  7411  127B  3EFF               	addlw	-1
  7412  127C  1D03               	skipz
  7413  127D  2A76               	goto	u4485
  7414  127E  3001               	movlw	1
  7415  127F  00A0               	movwf	??__div_to_l_
  7416  1280  0820               	movf	??__div_to_l_,w
  7417  1281  07A6               	addwf	__div_to_l_@exp1,f
  7418  1282  1D03               	btfss	3,2
  7419  1283  2A85               	goto	u4491
  7420  1284  2A86               	goto	u4490
  7421  1285                     u4491:	
  7422  1285  2A75               	goto	l2935
  7423  1286                     u4490:	
  7424  1286  2A9E               	goto	l2945
  7425  1287                     l2937:	
  7426  1287  3020               	movlw	32
  7427  1288  0226               	subwf	__div_to_l_@exp1,w
  7428  1289  1C03               	skipc
  7429  128A  2A8C               	goto	u4501
  7430  128B  2A8D               	goto	u4500
  7431  128C                     u4501:	
  7432  128C  2A99               	goto	l549
  7433  128D                     u4500:	
  7434  128D  29F6               	goto	l2899
  7435  128E                     l2943:	
  7436  128E  3001               	movlw	1
  7437  128F  00A0               	movwf	??__div_to_l_
  7438  1290                     u4515:	
  7439  1290  1003               	clrc
  7440  1291  0DA1               	rlf	__div_to_l_@quot,f
  7441  1292  0DA2               	rlf	__div_to_l_@quot+1,f
  7442  1293  0DA3               	rlf	__div_to_l_@quot+2,f
  7443  1294  0DA4               	rlf	__div_to_l_@quot+3,f
  7444  1295  0BA0               	decfsz	??__div_to_l_,f
  7445  1296  2A90               	goto	u4515
  7446  1297  3001               	movlw	1
  7447  1298  02A6               	subwf	__div_to_l_@exp1,f
  7448  1299                     l549:	
  7449  1299  0826               	movf	__div_to_l_@exp1,w
  7450  129A  1D03               	btfss	3,2
  7451  129B  2A9D               	goto	u4521
  7452  129C  2A9E               	goto	u4520
  7453  129D                     u4521:	
  7454  129D  2A8E               	goto	l2943
  7455  129E                     u4520:	
  7456  129E                     l2945:	
  7457  129E  0824               	movf	__div_to_l_@quot+3,w
  7458  129F  00F6               	movwf	?__div_to_l_+3
  7459  12A0  0823               	movf	__div_to_l_@quot+2,w
  7460  12A1  00F5               	movwf	?__div_to_l_+2
  7461  12A2  0822               	movf	__div_to_l_@quot+1,w
  7462  12A3  00F4               	movwf	?__div_to_l_+1
  7463  12A4  0821               	movf	__div_to_l_@quot,w
  7464  12A5  00F3               	movwf	?__div_to_l_
  7465  12A6                     l538:	
  7466  12A6  0008               	return
  7467  12A7                     __end_of__div_to_l_:	
  7468                           
  7469                           	psect	text14
  7470  1070                     __ptext14:	
  7471 ;; *************** function ___xxtofl *****************
  7472 ;; Defined at:
  7473 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;  sign            1    wreg     unsigned char 
  7476 ;;  val             4    3[COMMON] long 
  7477 ;; Auto vars:     Size  Location     Type
  7478 ;;  sign            1    0[BANK0 ] unsigned char 
  7479 ;;  arg             4    2[BANK0 ] unsigned long 
  7480 ;;  exp             1    1[BANK0 ] unsigned char 
  7481 ;; Return value:  Size  Location     Type
  7482 ;;                  4    3[COMMON] unsigned char 
  7483 ;; Registers used:
  7484 ;;		wreg, status,2, status,0
  7485 ;; Tracked objects:
  7486 ;;		On entry : 0/0
  7487 ;;		On exit  : 0/0
  7488 ;;		Unchanged: 0/0
  7489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7490 ;;      Params:         4       0       0       0       0
  7491 ;;      Locals:         0       6       0       0       0
  7492 ;;      Temps:          4       0       0       0       0
  7493 ;;      Totals:         8       6       0       0       0
  7494 ;;Total ram usage:       14 bytes
  7495 ;; Hardware stack levels used:    1
  7496 ;; Hardware stack levels required when called:    1
  7497 ;; This function calls:
  7498 ;;		Nothing
  7499 ;; This function is called by:
  7500 ;;		_main
  7501 ;;		_sprintf
  7502 ;; This function uses a non-reentrant model
  7503 ;;
  7504                           
  7505                           
  7506                           ;psect for function ___xxtofl
  7507  1070                     ___xxtofl:	
  7508                           
  7509                           ;incstack = 0
  7510                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7511                           ;___xxtofl@sign stored from wreg
  7512  1070  1283               	bcf	3,5	;RP0=0, select bank0
  7513  1071  1303               	bcf	3,6	;RP1=0, select bank0
  7514  1072  00A0               	movwf	___xxtofl@sign
  7515  1073                     l3089:	
  7516  1073  0820               	movf	___xxtofl@sign,w
  7517  1074  1903               	btfsc	3,2
  7518  1075  2877               	goto	u4911
  7519  1076  2878               	goto	u4910
  7520  1077                     u4911:	
  7521  1077  288C               	goto	l3095
  7522  1078                     u4910:	
  7523  1078                     l3091:	
  7524  1078  1FF6               	btfss	___xxtofl@val+3,7
  7525  1079  287B               	goto	u4921
  7526  107A  287C               	goto	u4920
  7527  107B                     u4921:	
  7528  107B  288C               	goto	l3095
  7529  107C                     u4920:	
  7530  107C                     l3093:	
  7531  107C  0973               	comf	___xxtofl@val,w
  7532  107D  00A2               	movwf	___xxtofl@arg
  7533  107E  0974               	comf	___xxtofl@val+1,w
  7534  107F  00A3               	movwf	___xxtofl@arg+1
  7535  1080  0975               	comf	___xxtofl@val+2,w
  7536  1081  00A4               	movwf	___xxtofl@arg+2
  7537  1082  0976               	comf	___xxtofl@val+3,w
  7538  1083  00A5               	movwf	___xxtofl@arg+3
  7539  1084  0AA2               	incf	___xxtofl@arg,f
  7540  1085  1903               	skipnz
  7541  1086  0AA3               	incf	___xxtofl@arg+1,f
  7542  1087  1903               	skipnz
  7543  1088  0AA4               	incf	___xxtofl@arg+2,f
  7544  1089  1903               	skipnz
  7545  108A  0AA5               	incf	___xxtofl@arg+3,f
  7546  108B  2894               	goto	l829
  7547  108C                     l3095:	
  7548  108C  0876               	movf	___xxtofl@val+3,w
  7549  108D  00A5               	movwf	___xxtofl@arg+3
  7550  108E  0875               	movf	___xxtofl@val+2,w
  7551  108F  00A4               	movwf	___xxtofl@arg+2
  7552  1090  0874               	movf	___xxtofl@val+1,w
  7553  1091  00A3               	movwf	___xxtofl@arg+1
  7554  1092  0873               	movf	___xxtofl@val,w
  7555  1093  00A2               	movwf	___xxtofl@arg
  7556  1094                     l829:	
  7557  1094  0876               	movf	___xxtofl@val+3,w
  7558  1095  0475               	iorwf	___xxtofl@val+2,w
  7559  1096  0474               	iorwf	___xxtofl@val+1,w
  7560  1097  0473               	iorwf	___xxtofl@val,w
  7561  1098  1D03               	skipz
  7562  1099  289B               	goto	u4931
  7563  109A  289C               	goto	u4930
  7564  109B                     u4931:	
  7565  109B  28A5               	goto	l3101
  7566  109C                     u4930:	
  7567  109C                     l3097:	
  7568  109C  3000               	movlw	0
  7569  109D  00F6               	movwf	?___xxtofl+3
  7570  109E  3000               	movlw	0
  7571  109F  00F5               	movwf	?___xxtofl+2
  7572  10A0  3000               	movlw	0
  7573  10A1  00F4               	movwf	?___xxtofl+1
  7574  10A2  3000               	movlw	0
  7575  10A3  00F3               	movwf	?___xxtofl
  7576  10A4  292B               	goto	l831
  7577  10A5                     l3101:	
  7578  10A5  3096               	movlw	150
  7579  10A6  00F7               	movwf	??___xxtofl
  7580  10A7  0877               	movf	??___xxtofl,w
  7581  10A8  00A1               	movwf	___xxtofl@exp
  7582  10A9  28B7               	goto	l3105
  7583  10AA                     l3103:	
  7584  10AA  3001               	movlw	1
  7585  10AB  00F7               	movwf	??___xxtofl
  7586  10AC  0877               	movf	??___xxtofl,w
  7587  10AD  07A1               	addwf	___xxtofl@exp,f
  7588  10AE  3001               	movlw	1
  7589  10AF                     u4945:	
  7590  10AF  1003               	clrc
  7591  10B0  0CA5               	rrf	___xxtofl@arg+3,f
  7592  10B1  0CA4               	rrf	___xxtofl@arg+2,f
  7593  10B2  0CA3               	rrf	___xxtofl@arg+1,f
  7594  10B3  0CA2               	rrf	___xxtofl@arg,f
  7595  10B4  3EFF               	addlw	-1
  7596  10B5  1D03               	skipz
  7597  10B6  28AF               	goto	u4945
  7598  10B7                     l3105:	
  7599  10B7  30FE               	movlw	254
  7600  10B8  0525               	andwf	___xxtofl@arg+3,w
  7601  10B9  1D03               	btfss	3,2
  7602  10BA  28BC               	goto	u4951
  7603  10BB  28BD               	goto	u4950
  7604  10BC                     u4951:	
  7605  10BC  28AA               	goto	l3103
  7606  10BD                     u4950:	
  7607  10BD  28D9               	goto	l835
  7608  10BE                     l3107:	
  7609  10BE  3001               	movlw	1
  7610  10BF  00F7               	movwf	??___xxtofl
  7611  10C0  0877               	movf	??___xxtofl,w
  7612  10C1  07A1               	addwf	___xxtofl@exp,f
  7613  10C2                     l3109:	
  7614  10C2  3001               	movlw	1
  7615  10C3  07A2               	addwf	___xxtofl@arg,f
  7616  10C4  3000               	movlw	0
  7617  10C5  1803               	skipnc
  7618  10C6  3001               	movlw	1
  7619  10C7  07A3               	addwf	___xxtofl@arg+1,f
  7620  10C8  3000               	movlw	0
  7621  10C9  1803               	skipnc
  7622  10CA  3001               	movlw	1
  7623  10CB  07A4               	addwf	___xxtofl@arg+2,f
  7624  10CC  3000               	movlw	0
  7625  10CD  1803               	skipnc
  7626  10CE  3001               	movlw	1
  7627  10CF  07A5               	addwf	___xxtofl@arg+3,f
  7628  10D0                     l3111:	
  7629  10D0  3001               	movlw	1
  7630  10D1                     u4965:	
  7631  10D1  1003               	clrc
  7632  10D2  0CA5               	rrf	___xxtofl@arg+3,f
  7633  10D3  0CA4               	rrf	___xxtofl@arg+2,f
  7634  10D4  0CA3               	rrf	___xxtofl@arg+1,f
  7635  10D5  0CA2               	rrf	___xxtofl@arg,f
  7636  10D6  3EFF               	addlw	-1
  7637  10D7  1D03               	skipz
  7638  10D8  28D1               	goto	u4965
  7639  10D9                     l835:	
  7640  10D9  30FF               	movlw	255
  7641  10DA  0525               	andwf	___xxtofl@arg+3,w
  7642  10DB  1D03               	btfss	3,2
  7643  10DC  28DE               	goto	u4971
  7644  10DD  28DF               	goto	u4970
  7645  10DE                     u4971:	
  7646  10DE  28BE               	goto	l3107
  7647  10DF                     u4970:	
  7648  10DF  28EB               	goto	l3115
  7649  10E0                     l3113:	
  7650  10E0  3001               	movlw	1
  7651  10E1  02A1               	subwf	___xxtofl@exp,f
  7652  10E2  3001               	movlw	1
  7653  10E3  00F7               	movwf	??___xxtofl
  7654  10E4                     u4985:	
  7655  10E4  1003               	clrc
  7656  10E5  0DA2               	rlf	___xxtofl@arg,f
  7657  10E6  0DA3               	rlf	___xxtofl@arg+1,f
  7658  10E7  0DA4               	rlf	___xxtofl@arg+2,f
  7659  10E8  0DA5               	rlf	___xxtofl@arg+3,f
  7660  10E9  0BF7               	decfsz	??___xxtofl,f
  7661  10EA  28E4               	goto	u4985
  7662  10EB                     l3115:	
  7663  10EB  1BA4               	btfsc	___xxtofl@arg+2,7
  7664  10EC  28EE               	goto	u4991
  7665  10ED  28EF               	goto	u4990
  7666  10EE                     u4991:	
  7667  10EE  28F5               	goto	l842
  7668  10EF                     u4990:	
  7669  10EF                     l3117:	
  7670  10EF  3002               	movlw	2
  7671  10F0  0221               	subwf	___xxtofl@exp,w
  7672  10F1  1803               	skipnc
  7673  10F2  28F4               	goto	u5001
  7674  10F3  28F5               	goto	u5000
  7675  10F4                     u5001:	
  7676  10F4  28E0               	goto	l3113
  7677  10F5                     u5000:	
  7678  10F5                     l842:	
  7679  10F5  1821               	btfsc	___xxtofl@exp,0
  7680  10F6  28F8               	goto	u5011
  7681  10F7  28F9               	goto	u5010
  7682  10F8                     u5011:	
  7683  10F8  2901               	goto	l843
  7684  10F9                     u5010:	
  7685  10F9                     l3119:	
  7686  10F9  30FF               	movlw	255
  7687  10FA  05A2               	andwf	___xxtofl@arg,f
  7688  10FB  30FF               	movlw	255
  7689  10FC  05A3               	andwf	___xxtofl@arg+1,f
  7690  10FD  307F               	movlw	127
  7691  10FE  05A4               	andwf	___xxtofl@arg+2,f
  7692  10FF  30FF               	movlw	255
  7693  1100  05A5               	andwf	___xxtofl@arg+3,f
  7694  1101                     l843:	
  7695  1101  1003               	clrc
  7696  1102  0CA1               	rrf	___xxtofl@exp,f
  7697  1103                     l3121:	
  7698  1103  0821               	movf	___xxtofl@exp,w
  7699  1104  00F7               	movwf	??___xxtofl
  7700  1105  01F8               	clrf	??___xxtofl+1
  7701  1106  01F9               	clrf	??___xxtofl+2
  7702  1107  01FA               	clrf	??___xxtofl+3
  7703  1108  3018               	movlw	24
  7704  1109                     u5025:	
  7705  1109  1003               	clrc
  7706  110A  0DF7               	rlf	??___xxtofl,f
  7707  110B  0DF8               	rlf	??___xxtofl+1,f
  7708  110C  0DF9               	rlf	??___xxtofl+2,f
  7709  110D  0DFA               	rlf	??___xxtofl+3,f
  7710  110E                     u5020:	
  7711  110E  3EFF               	addlw	-1
  7712  110F  1D03               	skipz
  7713  1110  2909               	goto	u5025
  7714  1111  0877               	movf	??___xxtofl,w
  7715  1112  04A2               	iorwf	___xxtofl@arg,f
  7716  1113  0878               	movf	??___xxtofl+1,w
  7717  1114  04A3               	iorwf	___xxtofl@arg+1,f
  7718  1115  0879               	movf	??___xxtofl+2,w
  7719  1116  04A4               	iorwf	___xxtofl@arg+2,f
  7720  1117  087A               	movf	??___xxtofl+3,w
  7721  1118  04A5               	iorwf	___xxtofl@arg+3,f
  7722  1119                     l3123:	
  7723  1119  0820               	movf	___xxtofl@sign,w
  7724  111A  1903               	btfsc	3,2
  7725  111B  291D               	goto	u5031
  7726  111C  291E               	goto	u5030
  7727  111D                     u5031:	
  7728  111D  2923               	goto	l3129
  7729  111E                     u5030:	
  7730  111E                     l3125:	
  7731  111E  1FF6               	btfss	___xxtofl@val+3,7
  7732  111F  2921               	goto	u5041
  7733  1120  2922               	goto	u5040
  7734  1121                     u5041:	
  7735  1121  2923               	goto	l3129
  7736  1122                     u5040:	
  7737  1122                     l3127:	
  7738  1122  17A5               	bsf	___xxtofl@arg+3,7
  7739  1123                     l3129:	
  7740  1123  0825               	movf	___xxtofl@arg+3,w
  7741  1124  00F6               	movwf	?___xxtofl+3
  7742  1125  0824               	movf	___xxtofl@arg+2,w
  7743  1126  00F5               	movwf	?___xxtofl+2
  7744  1127  0823               	movf	___xxtofl@arg+1,w
  7745  1128  00F4               	movwf	?___xxtofl+1
  7746  1129  0822               	movf	___xxtofl@arg,w
  7747  112A  00F3               	movwf	?___xxtofl
  7748  112B                     l831:	
  7749  112B  0008               	return
  7750  112C                     __end_of___xxtofl:	
  7751                           
  7752                           	psect	text15
  7753  1BF1                     __ptext15:	
  7754 ;; *************** function ___wmul *****************
  7755 ;; Defined at:
  7756 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7757 ;; Parameters:    Size  Location     Type
  7758 ;;  multiplier      2    3[COMMON] unsigned int 
  7759 ;;  multiplicand    2    5[COMMON] unsigned int 
  7760 ;; Auto vars:     Size  Location     Type
  7761 ;;  product         2    7[COMMON] unsigned int 
  7762 ;; Return value:  Size  Location     Type
  7763 ;;                  2    3[COMMON] unsigned int 
  7764 ;; Registers used:
  7765 ;;		wreg, status,2, status,0
  7766 ;; Tracked objects:
  7767 ;;		On entry : 0/0
  7768 ;;		On exit  : 0/0
  7769 ;;		Unchanged: 0/0
  7770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7771 ;;      Params:         4       0       0       0       0
  7772 ;;      Locals:         2       0       0       0       0
  7773 ;;      Temps:          0       0       0       0       0
  7774 ;;      Totals:         6       0       0       0       0
  7775 ;;Total ram usage:        6 bytes
  7776 ;; Hardware stack levels used:    1
  7777 ;; Hardware stack levels required when called:    1
  7778 ;; This function calls:
  7779 ;;		Nothing
  7780 ;; This function is called by:
  7781 ;;		_sprintf
  7782 ;; This function uses a non-reentrant model
  7783 ;;
  7784                           
  7785                           
  7786                           ;psect for function ___wmul
  7787  1BF1                     ___wmul:	
  7788  1BF1                     l2949:	
  7789                           ;incstack = 0
  7790                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7791                           
  7792  1BF1  01F7               	clrf	___wmul@product
  7793  1BF2  01F8               	clrf	___wmul@product+1
  7794  1BF3                     l2951:	
  7795  1BF3  1C73               	btfss	___wmul@multiplier,0
  7796  1BF4  2BF6               	goto	u4531
  7797  1BF5  2BF7               	goto	u4530
  7798  1BF6                     u4531:	
  7799  1BF6  2BFD               	goto	l368
  7800  1BF7                     u4530:	
  7801  1BF7                     l2953:	
  7802  1BF7  0875               	movf	___wmul@multiplicand,w
  7803  1BF8  07F7               	addwf	___wmul@product,f
  7804  1BF9  1803               	skipnc
  7805  1BFA  0AF8               	incf	___wmul@product+1,f
  7806  1BFB  0876               	movf	___wmul@multiplicand+1,w
  7807  1BFC  07F8               	addwf	___wmul@product+1,f
  7808  1BFD                     l368:	
  7809  1BFD  3001               	movlw	1
  7810  1BFE                     u4545:	
  7811  1BFE  1003               	clrc
  7812  1BFF  0DF5               	rlf	___wmul@multiplicand,f
  7813  1C00  0DF6               	rlf	___wmul@multiplicand+1,f
  7814  1C01  3EFF               	addlw	-1
  7815  1C02  1D03               	skipz
  7816  1C03  2BFE               	goto	u4545
  7817  1C04                     l2955:	
  7818  1C04  3001               	movlw	1
  7819  1C05                     u4555:	
  7820  1C05  1003               	clrc
  7821  1C06  0CF4               	rrf	___wmul@multiplier+1,f
  7822  1C07  0CF3               	rrf	___wmul@multiplier,f
  7823  1C08  3EFF               	addlw	-1
  7824  1C09  1D03               	skipz
  7825  1C0A  2C05               	goto	u4555
  7826  1C0B                     l2957:	
  7827  1C0B  0873               	movf	___wmul@multiplier,w
  7828  1C0C  0474               	iorwf	___wmul@multiplier+1,w
  7829  1C0D  1D03               	btfss	3,2
  7830  1C0E  2C10               	goto	u4561
  7831  1C0F  2C11               	goto	u4560
  7832  1C10                     u4561:	
  7833  1C10  2BF3               	goto	l2951
  7834  1C11                     u4560:	
  7835  1C11                     l2959:	
  7836  1C11  0878               	movf	___wmul@product+1,w
  7837  1C12  00F4               	movwf	?___wmul+1
  7838  1C13  0877               	movf	___wmul@product,w
  7839  1C14  00F3               	movwf	?___wmul
  7840  1C15                     l370:	
  7841  1C15  0008               	return
  7842  1C16                     __end_of___wmul:	
  7843                           
  7844                           	psect	text16
  7845  07A9                     __ptext16:	
  7846 ;; *************** function ___llmod *****************
  7847 ;; Defined at:
  7848 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;  divisor         4    3[COMMON] unsigned long 
  7851 ;;  dividend        4    7[COMMON] unsigned long 
  7852 ;; Auto vars:     Size  Location     Type
  7853 ;;  counter         1    1[BANK0 ] unsigned char 
  7854 ;; Return value:  Size  Location     Type
  7855 ;;                  4    3[COMMON] unsigned long 
  7856 ;; Registers used:
  7857 ;;		wreg, status,2, status,0
  7858 ;; Tracked objects:
  7859 ;;		On entry : 0/0
  7860 ;;		On exit  : 0/0
  7861 ;;		Unchanged: 0/0
  7862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7863 ;;      Params:         8       0       0       0       0
  7864 ;;      Locals:         0       1       0       0       0
  7865 ;;      Temps:          0       1       0       0       0
  7866 ;;      Totals:         8       2       0       0       0
  7867 ;;Total ram usage:       10 bytes
  7868 ;; Hardware stack levels used:    1
  7869 ;; Hardware stack levels required when called:    1
  7870 ;; This function calls:
  7871 ;;		Nothing
  7872 ;; This function is called by:
  7873 ;;		_sprintf
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           
  7878                           ;psect for function ___llmod
  7879  07A9                     ___llmod:	
  7880  07A9                     l3063:	
  7881                           ;incstack = 0
  7882                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7883                           
  7884  07A9  0876               	movf	___llmod@divisor+3,w
  7885  07AA  0475               	iorwf	___llmod@divisor+2,w
  7886  07AB  0474               	iorwf	___llmod@divisor+1,w
  7887  07AC  0473               	iorwf	___llmod@divisor,w
  7888  07AD  1903               	skipnz
  7889  07AE  2FB0               	goto	u4851
  7890  07AF  2FB1               	goto	u4850
  7891  07B0                     u4851:	
  7892  07B0  2FF6               	goto	l3079
  7893  07B1                     u4850:	
  7894  07B1                     l3065:	
  7895  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  7896  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  7897  07B3  01A1               	clrf	___llmod@counter
  7898  07B4  0AA1               	incf	___llmod@counter,f
  7899  07B5  2FC3               	goto	l3069
  7900  07B6                     l3067:	
  7901  07B6  3001               	movlw	1
  7902  07B7  00A0               	movwf	??___llmod
  7903  07B8                     u4865:	
  7904  07B8  1003               	clrc
  7905  07B9  0DF3               	rlf	___llmod@divisor,f
  7906  07BA  0DF4               	rlf	___llmod@divisor+1,f
  7907  07BB  0DF5               	rlf	___llmod@divisor+2,f
  7908  07BC  0DF6               	rlf	___llmod@divisor+3,f
  7909  07BD  0BA0               	decfsz	??___llmod,f
  7910  07BE  2FB8               	goto	u4865
  7911  07BF  3001               	movlw	1
  7912  07C0  00A0               	movwf	??___llmod
  7913  07C1  0820               	movf	??___llmod,w
  7914  07C2  07A1               	addwf	___llmod@counter,f
  7915  07C3                     l3069:	
  7916  07C3  1FF6               	btfss	___llmod@divisor+3,7
  7917  07C4  2FC6               	goto	u4871
  7918  07C5  2FC7               	goto	u4870
  7919  07C6                     u4871:	
  7920  07C6  2FB6               	goto	l3067
  7921  07C7                     u4870:	
  7922  07C7                     l3071:	
  7923  07C7  0876               	movf	___llmod@divisor+3,w
  7924  07C8  027A               	subwf	___llmod@dividend+3,w
  7925  07C9  1D03               	skipz
  7926  07CA  2FD5               	goto	u4885
  7927  07CB  0875               	movf	___llmod@divisor+2,w
  7928  07CC  0279               	subwf	___llmod@dividend+2,w
  7929  07CD  1D03               	skipz
  7930  07CE  2FD5               	goto	u4885
  7931  07CF  0874               	movf	___llmod@divisor+1,w
  7932  07D0  0278               	subwf	___llmod@dividend+1,w
  7933  07D1  1D03               	skipz
  7934  07D2  2FD5               	goto	u4885
  7935  07D3  0873               	movf	___llmod@divisor,w
  7936  07D4  0277               	subwf	___llmod@dividend,w
  7937  07D5                     u4885:	
  7938  07D5  1C03               	skipc
  7939  07D6  2FD8               	goto	u4881
  7940  07D7  2FD9               	goto	u4880
  7941  07D8                     u4881:	
  7942  07D8  2FE7               	goto	l3075
  7943  07D9                     u4880:	
  7944  07D9                     l3073:	
  7945  07D9  0873               	movf	___llmod@divisor,w
  7946  07DA  02F7               	subwf	___llmod@dividend,f
  7947  07DB  0874               	movf	___llmod@divisor+1,w
  7948  07DC  1C03               	skipc
  7949  07DD  0F74               	incfsz	___llmod@divisor+1,w
  7950  07DE  02F8               	subwf	___llmod@dividend+1,f
  7951  07DF  0875               	movf	___llmod@divisor+2,w
  7952  07E0  1C03               	skipc
  7953  07E1  0F75               	incfsz	___llmod@divisor+2,w
  7954  07E2  02F9               	subwf	___llmod@dividend+2,f
  7955  07E3  0876               	movf	___llmod@divisor+3,w
  7956  07E4  1C03               	skipc
  7957  07E5  0F76               	incfsz	___llmod@divisor+3,w
  7958  07E6  02FA               	subwf	___llmod@dividend+3,f
  7959  07E7                     l3075:	
  7960  07E7  3001               	movlw	1
  7961  07E8                     u4895:	
  7962  07E8  1003               	clrc
  7963  07E9  0CF6               	rrf	___llmod@divisor+3,f
  7964  07EA  0CF5               	rrf	___llmod@divisor+2,f
  7965  07EB  0CF4               	rrf	___llmod@divisor+1,f
  7966  07EC  0CF3               	rrf	___llmod@divisor,f
  7967  07ED  3EFF               	addlw	-1
  7968  07EE  1D03               	skipz
  7969  07EF  2FE8               	goto	u4895
  7970  07F0                     l3077:	
  7971  07F0  3001               	movlw	1
  7972  07F1  02A1               	subwf	___llmod@counter,f
  7973  07F2  1D03               	btfss	3,2
  7974  07F3  2FF5               	goto	u4901
  7975  07F4  2FF6               	goto	u4900
  7976  07F5                     u4901:	
  7977  07F5  2FC7               	goto	l3071
  7978  07F6                     u4900:	
  7979  07F6                     l3079:	
  7980  07F6  087A               	movf	___llmod@dividend+3,w
  7981  07F7  00F6               	movwf	?___llmod+3
  7982  07F8  0879               	movf	___llmod@dividend+2,w
  7983  07F9  00F5               	movwf	?___llmod+2
  7984  07FA  0878               	movf	___llmod@dividend+1,w
  7985  07FB  00F4               	movwf	?___llmod+1
  7986  07FC  0877               	movf	___llmod@dividend,w
  7987  07FD  00F3               	movwf	?___llmod
  7988  07FE                     l624:	
  7989  07FE  0008               	return
  7990  07FF                     __end_of___llmod:	
  7991                           
  7992                           	psect	text17
  7993  1E78                     __ptext17:	
  7994 ;; *************** function ___lldiv *****************
  7995 ;; Defined at:
  7996 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  7997 ;; Parameters:    Size  Location     Type
  7998 ;;  divisor         4    3[COMMON] unsigned long 
  7999 ;;  dividend        4    7[COMMON] unsigned long 
  8000 ;; Auto vars:     Size  Location     Type
  8001 ;;  quotient        4    1[BANK0 ] unsigned long 
  8002 ;;  counter         1    5[BANK0 ] unsigned char 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  4    3[COMMON] unsigned long 
  8005 ;; Registers used:
  8006 ;;		wreg, status,2, status,0
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8012 ;;      Params:         8       0       0       0       0
  8013 ;;      Locals:         0       5       0       0       0
  8014 ;;      Temps:          0       1       0       0       0
  8015 ;;      Totals:         8       6       0       0       0
  8016 ;;Total ram usage:       14 bytes
  8017 ;; Hardware stack levels used:    1
  8018 ;; Hardware stack levels required when called:    1
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_sprintf
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           
  8027                           ;psect for function ___lldiv
  8028  1E78                     ___lldiv:	
  8029  1E78                     l2963:	
  8030                           ;incstack = 0
  8031                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8032                           
  8033  1E78  3000               	movlw	0
  8034  1E79  1283               	bcf	3,5	;RP0=0, select bank0
  8035  1E7A  1303               	bcf	3,6	;RP1=0, select bank0
  8036  1E7B  00A4               	movwf	___lldiv@quotient+3
  8037  1E7C  3000               	movlw	0
  8038  1E7D  00A3               	movwf	___lldiv@quotient+2
  8039  1E7E  3000               	movlw	0
  8040  1E7F  00A2               	movwf	___lldiv@quotient+1
  8041  1E80  3000               	movlw	0
  8042  1E81  00A1               	movwf	___lldiv@quotient
  8043  1E82  0876               	movf	___lldiv@divisor+3,w
  8044  1E83  0475               	iorwf	___lldiv@divisor+2,w
  8045  1E84  0474               	iorwf	___lldiv@divisor+1,w
  8046  1E85  0473               	iorwf	___lldiv@divisor,w
  8047  1E86  1903               	skipnz
  8048  1E87  2E89               	goto	u4571
  8049  1E88  2E8A               	goto	u4570
  8050  1E89                     u4571:	
  8051  1E89  2ED7               	goto	l2983
  8052  1E8A                     u4570:	
  8053  1E8A                     l2965:	
  8054  1E8A  01A5               	clrf	___lldiv@counter
  8055  1E8B  0AA5               	incf	___lldiv@counter,f
  8056  1E8C  2E9A               	goto	l2969
  8057  1E8D                     l2967:	
  8058  1E8D  3001               	movlw	1
  8059  1E8E  00A0               	movwf	??___lldiv
  8060  1E8F                     u4585:	
  8061  1E8F  1003               	clrc
  8062  1E90  0DF3               	rlf	___lldiv@divisor,f
  8063  1E91  0DF4               	rlf	___lldiv@divisor+1,f
  8064  1E92  0DF5               	rlf	___lldiv@divisor+2,f
  8065  1E93  0DF6               	rlf	___lldiv@divisor+3,f
  8066  1E94  0BA0               	decfsz	??___lldiv,f
  8067  1E95  2E8F               	goto	u4585
  8068  1E96  3001               	movlw	1
  8069  1E97  00A0               	movwf	??___lldiv
  8070  1E98  0820               	movf	??___lldiv,w
  8071  1E99  07A5               	addwf	___lldiv@counter,f
  8072  1E9A                     l2969:	
  8073  1E9A  1FF6               	btfss	___lldiv@divisor+3,7
  8074  1E9B  2E9D               	goto	u4591
  8075  1E9C  2E9E               	goto	u4590
  8076  1E9D                     u4591:	
  8077  1E9D  2E8D               	goto	l2967
  8078  1E9E                     u4590:	
  8079  1E9E                     l2971:	
  8080  1E9E  3001               	movlw	1
  8081  1E9F  00A0               	movwf	??___lldiv
  8082  1EA0                     u4605:	
  8083  1EA0  1003               	clrc
  8084  1EA1  0DA1               	rlf	___lldiv@quotient,f
  8085  1EA2  0DA2               	rlf	___lldiv@quotient+1,f
  8086  1EA3  0DA3               	rlf	___lldiv@quotient+2,f
  8087  1EA4  0DA4               	rlf	___lldiv@quotient+3,f
  8088  1EA5  0BA0               	decfsz	??___lldiv,f
  8089  1EA6  2EA0               	goto	u4605
  8090  1EA7                     l2973:	
  8091  1EA7  0876               	movf	___lldiv@divisor+3,w
  8092  1EA8  027A               	subwf	___lldiv@dividend+3,w
  8093  1EA9  1D03               	skipz
  8094  1EAA  2EB5               	goto	u4615
  8095  1EAB  0875               	movf	___lldiv@divisor+2,w
  8096  1EAC  0279               	subwf	___lldiv@dividend+2,w
  8097  1EAD  1D03               	skipz
  8098  1EAE  2EB5               	goto	u4615
  8099  1EAF  0874               	movf	___lldiv@divisor+1,w
  8100  1EB0  0278               	subwf	___lldiv@dividend+1,w
  8101  1EB1  1D03               	skipz
  8102  1EB2  2EB5               	goto	u4615
  8103  1EB3  0873               	movf	___lldiv@divisor,w
  8104  1EB4  0277               	subwf	___lldiv@dividend,w
  8105  1EB5                     u4615:	
  8106  1EB5  1C03               	skipc
  8107  1EB6  2EB8               	goto	u4611
  8108  1EB7  2EB9               	goto	u4610
  8109  1EB8                     u4611:	
  8110  1EB8  2EC8               	goto	l2979
  8111  1EB9                     u4610:	
  8112  1EB9                     l2975:	
  8113  1EB9  0873               	movf	___lldiv@divisor,w
  8114  1EBA  02F7               	subwf	___lldiv@dividend,f
  8115  1EBB  0874               	movf	___lldiv@divisor+1,w
  8116  1EBC  1C03               	skipc
  8117  1EBD  0F74               	incfsz	___lldiv@divisor+1,w
  8118  1EBE  02F8               	subwf	___lldiv@dividend+1,f
  8119  1EBF  0875               	movf	___lldiv@divisor+2,w
  8120  1EC0  1C03               	skipc
  8121  1EC1  0F75               	incfsz	___lldiv@divisor+2,w
  8122  1EC2  02F9               	subwf	___lldiv@dividend+2,f
  8123  1EC3  0876               	movf	___lldiv@divisor+3,w
  8124  1EC4  1C03               	skipc
  8125  1EC5  0F76               	incfsz	___lldiv@divisor+3,w
  8126  1EC6  02FA               	subwf	___lldiv@dividend+3,f
  8127  1EC7                     l2977:	
  8128  1EC7  1421               	bsf	___lldiv@quotient,0
  8129  1EC8                     l2979:	
  8130  1EC8  3001               	movlw	1
  8131  1EC9                     u4625:	
  8132  1EC9  1003               	clrc
  8133  1ECA  0CF6               	rrf	___lldiv@divisor+3,f
  8134  1ECB  0CF5               	rrf	___lldiv@divisor+2,f
  8135  1ECC  0CF4               	rrf	___lldiv@divisor+1,f
  8136  1ECD  0CF3               	rrf	___lldiv@divisor,f
  8137  1ECE  3EFF               	addlw	-1
  8138  1ECF  1D03               	skipz
  8139  1ED0  2EC9               	goto	u4625
  8140  1ED1                     l2981:	
  8141  1ED1  3001               	movlw	1
  8142  1ED2  02A5               	subwf	___lldiv@counter,f
  8143  1ED3  1D03               	btfss	3,2
  8144  1ED4  2ED6               	goto	u4631
  8145  1ED5  2ED7               	goto	u4630
  8146  1ED6                     u4631:	
  8147  1ED6  2E9E               	goto	l2971
  8148  1ED7                     u4630:	
  8149  1ED7                     l2983:	
  8150  1ED7  0824               	movf	___lldiv@quotient+3,w
  8151  1ED8  00F6               	movwf	?___lldiv+3
  8152  1ED9  0823               	movf	___lldiv@quotient+2,w
  8153  1EDA  00F5               	movwf	?___lldiv+2
  8154  1EDB  0822               	movf	___lldiv@quotient+1,w
  8155  1EDC  00F4               	movwf	?___lldiv+1
  8156  1EDD  0821               	movf	___lldiv@quotient,w
  8157  1EDE  00F3               	movwf	?___lldiv
  8158  1EDF                     l404:	
  8159  1EDF  0008               	return
  8160  1EE0                     __end_of___lldiv:	
  8161                           
  8162                           	psect	text18
  8163  1EE0                     __ptext18:	
  8164 ;; *************** function ___fltol *****************
  8165 ;; Defined at:
  8166 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  8167 ;; Parameters:    Size  Location     Type
  8168 ;;  f1              4   53[BANK0 ] unsigned long 
  8169 ;; Auto vars:     Size  Location     Type
  8170 ;;  exp1            1   63[BANK0 ] unsigned char 
  8171 ;;  sign1           1   62[BANK0 ] unsigned char 
  8172 ;; Return value:  Size  Location     Type
  8173 ;;                  4   53[BANK0 ] long 
  8174 ;; Registers used:
  8175 ;;		wreg, status,2, status,0
  8176 ;; Tracked objects:
  8177 ;;		On entry : 0/0
  8178 ;;		On exit  : 0/0
  8179 ;;		Unchanged: 0/0
  8180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8181 ;;      Params:         0       4       0       0       0
  8182 ;;      Locals:         0       2       0       0       0
  8183 ;;      Temps:          0       5       0       0       0
  8184 ;;      Totals:         0      11       0       0       0
  8185 ;;Total ram usage:       11 bytes
  8186 ;; Hardware stack levels used:    1
  8187 ;; Hardware stack levels required when called:    1
  8188 ;; This function calls:
  8189 ;;		Nothing
  8190 ;; This function is called by:
  8191 ;;		_sprintf
  8192 ;; This function uses a non-reentrant model
  8193 ;;
  8194                           
  8195                           
  8196                           ;psect for function ___fltol
  8197  1EE0                     ___fltol:	
  8198  1EE0                     l3027:	
  8199                           ;incstack = 0
  8200                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8201                           
  8202  1EE0  1003               	clrc
  8203  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  8204  1EE2  1303               	bcf	3,6	;RP1=0, select bank0
  8205  1EE3  0D57               	rlf	___fltol@f1+2,w
  8206  1EE4  0D58               	rlf	___fltol@f1+3,w
  8207  1EE5  00D9               	movwf	??___fltol
  8208  1EE6  0859               	movf	??___fltol,w
  8209  1EE7  00DF               	movwf	___fltol@exp1
  8210  1EE8  085F               	movf	___fltol@exp1,w
  8211  1EE9  1D03               	btfss	3,2
  8212  1EEA  2EEC               	goto	u4751
  8213  1EEB  2EED               	goto	u4750
  8214  1EEC                     u4751:	
  8215  1EEC  2EF6               	goto	l3033
  8216  1EED                     u4750:	
  8217  1EED                     l3029:	
  8218  1EED  3000               	movlw	0
  8219  1EEE  00D8               	movwf	?___fltol+3
  8220  1EEF  3000               	movlw	0
  8221  1EF0  00D7               	movwf	?___fltol+2
  8222  1EF1  3000               	movlw	0
  8223  1EF2  00D6               	movwf	?___fltol+1
  8224  1EF3  3000               	movlw	0
  8225  1EF4  00D5               	movwf	?___fltol
  8226  1EF5  2F5B               	goto	l571
  8227  1EF6                     l3033:	
  8228  1EF6  0855               	movf	___fltol@f1,w
  8229  1EF7  00D9               	movwf	??___fltol
  8230  1EF8  0856               	movf	___fltol@f1+1,w
  8231  1EF9  00DA               	movwf	??___fltol+1
  8232  1EFA  0857               	movf	___fltol@f1+2,w
  8233  1EFB  00DB               	movwf	??___fltol+2
  8234  1EFC  0858               	movf	___fltol@f1+3,w
  8235  1EFD  00DC               	movwf	??___fltol+3
  8236  1EFE  301F               	movlw	31
  8237  1EFF                     u4765:	
  8238  1EFF  1003               	clrc
  8239  1F00  0CDC               	rrf	??___fltol+3,f
  8240  1F01  0CDB               	rrf	??___fltol+2,f
  8241  1F02  0CDA               	rrf	??___fltol+1,f
  8242  1F03  0CD9               	rrf	??___fltol,f
  8243  1F04                     u4760:	
  8244  1F04  3EFF               	addlw	-1
  8245  1F05  1D03               	skipz
  8246  1F06  2EFF               	goto	u4765
  8247  1F07  0859               	movf	??___fltol,w
  8248  1F08  00DD               	movwf	??___fltol+4
  8249  1F09  085D               	movf	??___fltol+4,w
  8250  1F0A  00DE               	movwf	___fltol@sign1
  8251  1F0B                     l3035:	
  8252  1F0B  17D7               	bsf	___fltol@f1+2,7
  8253  1F0C                     l3037:	
  8254  1F0C  30FF               	movlw	255
  8255  1F0D  05D5               	andwf	___fltol@f1,f
  8256  1F0E  30FF               	movlw	255
  8257  1F0F  05D6               	andwf	___fltol@f1+1,f
  8258  1F10  30FF               	movlw	255
  8259  1F11  05D7               	andwf	___fltol@f1+2,f
  8260  1F12  3000               	movlw	0
  8261  1F13  05D8               	andwf	___fltol@f1+3,f
  8262  1F14                     l3039:	
  8263  1F14  3096               	movlw	150
  8264  1F15  02DF               	subwf	___fltol@exp1,f
  8265  1F16                     l3041:	
  8266  1F16  1FDF               	btfss	___fltol@exp1,7
  8267  1F17  2F19               	goto	u4771
  8268  1F18  2F1A               	goto	u4770
  8269  1F19                     u4771:	
  8270  1F19  2F34               	goto	l3051
  8271  1F1A                     u4770:	
  8272  1F1A                     l3043:	
  8273  1F1A  085F               	movf	___fltol@exp1,w
  8274  1F1B  3A80               	xorlw	128
  8275  1F1C  3E97               	addlw	151
  8276  1F1D  1803               	skipnc
  8277  1F1E  2F20               	goto	u4781
  8278  1F1F  2F21               	goto	u4780
  8279  1F20                     u4781:	
  8280  1F20  2F22               	goto	l3049
  8281  1F21                     u4780:	
  8282  1F21  2EED               	goto	l3029
  8283  1F22                     l3049:	
  8284  1F22  3001               	movlw	1
  8285  1F23                     u4795:	
  8286  1F23  1003               	clrc
  8287  1F24  0CD8               	rrf	___fltol@f1+3,f
  8288  1F25  0CD7               	rrf	___fltol@f1+2,f
  8289  1F26  0CD6               	rrf	___fltol@f1+1,f
  8290  1F27  0CD5               	rrf	___fltol@f1,f
  8291  1F28  3EFF               	addlw	-1
  8292  1F29  1D03               	skipz
  8293  1F2A  2F23               	goto	u4795
  8294  1F2B  3001               	movlw	1
  8295  1F2C  00D9               	movwf	??___fltol
  8296  1F2D  0859               	movf	??___fltol,w
  8297  1F2E  07DF               	addwf	___fltol@exp1,f
  8298  1F2F  1D03               	btfss	3,2
  8299  1F30  2F32               	goto	u4801
  8300  1F31  2F33               	goto	u4800
  8301  1F32                     u4801:	
  8302  1F32  2F22               	goto	l3049
  8303  1F33                     u4800:	
  8304  1F33  2F4B               	goto	l3059
  8305  1F34                     l3051:	
  8306  1F34  3020               	movlw	32
  8307  1F35  025F               	subwf	___fltol@exp1,w
  8308  1F36  1C03               	skipc
  8309  1F37  2F39               	goto	u4811
  8310  1F38  2F3A               	goto	u4810
  8311  1F39                     u4811:	
  8312  1F39  2F46               	goto	l578
  8313  1F3A                     u4810:	
  8314  1F3A  2EED               	goto	l3029
  8315  1F3B                     l3057:	
  8316  1F3B  3001               	movlw	1
  8317  1F3C  00D9               	movwf	??___fltol
  8318  1F3D                     u4825:	
  8319  1F3D  1003               	clrc
  8320  1F3E  0DD5               	rlf	___fltol@f1,f
  8321  1F3F  0DD6               	rlf	___fltol@f1+1,f
  8322  1F40  0DD7               	rlf	___fltol@f1+2,f
  8323  1F41  0DD8               	rlf	___fltol@f1+3,f
  8324  1F42  0BD9               	decfsz	??___fltol,f
  8325  1F43  2F3D               	goto	u4825
  8326  1F44  3001               	movlw	1
  8327  1F45  02DF               	subwf	___fltol@exp1,f
  8328  1F46                     l578:	
  8329  1F46  085F               	movf	___fltol@exp1,w
  8330  1F47  1D03               	btfss	3,2
  8331  1F48  2F4A               	goto	u4831
  8332  1F49  2F4B               	goto	u4830
  8333  1F4A                     u4831:	
  8334  1F4A  2F3B               	goto	l3057
  8335  1F4B                     u4830:	
  8336  1F4B                     l3059:	
  8337  1F4B  085E               	movf	___fltol@sign1,w
  8338  1F4C  1903               	btfsc	3,2
  8339  1F4D  2F4F               	goto	u4841
  8340  1F4E  2F50               	goto	u4840
  8341  1F4F                     u4841:	
  8342  1F4F  2F5B               	goto	l581
  8343  1F50                     u4840:	
  8344  1F50                     l3061:	
  8345  1F50  09D5               	comf	___fltol@f1,f
  8346  1F51  09D6               	comf	___fltol@f1+1,f
  8347  1F52  09D7               	comf	___fltol@f1+2,f
  8348  1F53  09D8               	comf	___fltol@f1+3,f
  8349  1F54  0AD5               	incf	___fltol@f1,f
  8350  1F55  1903               	skipnz
  8351  1F56  0AD6               	incf	___fltol@f1+1,f
  8352  1F57  1903               	skipnz
  8353  1F58  0AD7               	incf	___fltol@f1+2,f
  8354  1F59  1903               	skipnz
  8355  1F5A  0AD8               	incf	___fltol@f1+3,f
  8356  1F5B                     l581:	
  8357  1F5B                     l571:	
  8358  1F5B  0008               	return
  8359  1F5C                     __end_of___fltol:	
  8360                           
  8361                           	psect	text19
  8362  1D7C                     __ptext19:	
  8363 ;; *************** function ___flsub *****************
  8364 ;; Defined at:
  8365 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8366 ;; Parameters:    Size  Location     Type
  8367 ;;  a               4    0[BANK1 ] long 
  8368 ;;  b               4    4[BANK1 ] long 
  8369 ;; Auto vars:     Size  Location     Type
  8370 ;;		None
  8371 ;; Return value:  Size  Location     Type
  8372 ;;                  4    0[BANK1 ] long 
  8373 ;; Registers used:
  8374 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8375 ;; Tracked objects:
  8376 ;;		On entry : 0/0
  8377 ;;		On exit  : 0/0
  8378 ;;		Unchanged: 0/0
  8379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8380 ;;      Params:         0       0       8       0       0
  8381 ;;      Locals:         0       0       0       0       0
  8382 ;;      Temps:          0       0       0       0       0
  8383 ;;      Totals:         0       0       8       0       0
  8384 ;;Total ram usage:        8 bytes
  8385 ;; Hardware stack levels used:    1
  8386 ;; Hardware stack levels required when called:    2
  8387 ;; This function calls:
  8388 ;;		___fladd
  8389 ;; This function is called by:
  8390 ;;		_sprintf
  8391 ;; This function uses a non-reentrant model
  8392 ;;
  8393                           
  8394                           
  8395                           ;psect for function ___flsub
  8396  1D7C                     ___flsub:	
  8397  1D7C                     l3083:	
  8398                           ;incstack = 0
  8399                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8400                           
  8401  1D7C  3080               	movlw	128
  8402  1D7D  1683               	bsf	3,5	;RP0=1, select bank1
  8403  1D7E  1303               	bcf	3,6	;RP1=0, select bank1
  8404  1D7F  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8405  1D80                     l3085:	
  8406  1D80  0827               	movf	(___flsub@b+3)^(0+128),w
  8407  1D81  1283               	bcf	3,5	;RP0=0, select bank0
  8408  1D82  1303               	bcf	3,6	;RP1=0, select bank0
  8409  1D83  00D9               	movwf	___fladd@b+3
  8410  1D84  1683               	bsf	3,5	;RP0=1, select bank1
  8411  1D85  1303               	bcf	3,6	;RP1=0, select bank1
  8412  1D86  0826               	movf	(___flsub@b+2)^(0+128),w
  8413  1D87  1283               	bcf	3,5	;RP0=0, select bank0
  8414  1D88  1303               	bcf	3,6	;RP1=0, select bank0
  8415  1D89  00D8               	movwf	___fladd@b+2
  8416  1D8A  1683               	bsf	3,5	;RP0=1, select bank1
  8417  1D8B  1303               	bcf	3,6	;RP1=0, select bank1
  8418  1D8C  0825               	movf	(___flsub@b+1)^(0+128),w
  8419  1D8D  1283               	bcf	3,5	;RP0=0, select bank0
  8420  1D8E  1303               	bcf	3,6	;RP1=0, select bank0
  8421  1D8F  00D7               	movwf	___fladd@b+1
  8422  1D90  1683               	bsf	3,5	;RP0=1, select bank1
  8423  1D91  1303               	bcf	3,6	;RP1=0, select bank1
  8424  1D92  0824               	movf	___flsub@b^(0+128),w
  8425  1D93  1283               	bcf	3,5	;RP0=0, select bank0
  8426  1D94  1303               	bcf	3,6	;RP1=0, select bank0
  8427  1D95  00D6               	movwf	___fladd@b
  8428  1D96  1683               	bsf	3,5	;RP0=1, select bank1
  8429  1D97  1303               	bcf	3,6	;RP1=0, select bank1
  8430  1D98  0823               	movf	(___flsub@a+3)^(0+128),w
  8431  1D99  1283               	bcf	3,5	;RP0=0, select bank0
  8432  1D9A  1303               	bcf	3,6	;RP1=0, select bank0
  8433  1D9B  00DD               	movwf	___fladd@a+3
  8434  1D9C  1683               	bsf	3,5	;RP0=1, select bank1
  8435  1D9D  1303               	bcf	3,6	;RP1=0, select bank1
  8436  1D9E  0822               	movf	(___flsub@a+2)^(0+128),w
  8437  1D9F  1283               	bcf	3,5	;RP0=0, select bank0
  8438  1DA0  1303               	bcf	3,6	;RP1=0, select bank0
  8439  1DA1  00DC               	movwf	___fladd@a+2
  8440  1DA2  1683               	bsf	3,5	;RP0=1, select bank1
  8441  1DA3  1303               	bcf	3,6	;RP1=0, select bank1
  8442  1DA4  0821               	movf	(___flsub@a+1)^(0+128),w
  8443  1DA5  1283               	bcf	3,5	;RP0=0, select bank0
  8444  1DA6  1303               	bcf	3,6	;RP1=0, select bank0
  8445  1DA7  00DB               	movwf	___fladd@a+1
  8446  1DA8  1683               	bsf	3,5	;RP0=1, select bank1
  8447  1DA9  1303               	bcf	3,6	;RP1=0, select bank1
  8448  1DAA  0820               	movf	___flsub@a^(0+128),w
  8449  1DAB  1283               	bcf	3,5	;RP0=0, select bank0
  8450  1DAC  1303               	bcf	3,6	;RP1=0, select bank0
  8451  1DAD  00DA               	movwf	___fladd@a
  8452  1DAE  160A  118A  2578  160A  158A  	fcall	___fladd
  8453  1DB3  1283               	bcf	3,5	;RP0=0, select bank0
  8454  1DB4  1303               	bcf	3,6	;RP1=0, select bank0
  8455  1DB5  0859               	movf	?___fladd+3,w
  8456  1DB6  1683               	bsf	3,5	;RP0=1, select bank1
  8457  1DB7  1303               	bcf	3,6	;RP1=0, select bank1
  8458  1DB8  00A3               	movwf	(?___flsub+3)^(0+128)
  8459  1DB9  1283               	bcf	3,5	;RP0=0, select bank0
  8460  1DBA  1303               	bcf	3,6	;RP1=0, select bank0
  8461  1DBB  0858               	movf	?___fladd+2,w
  8462  1DBC  1683               	bsf	3,5	;RP0=1, select bank1
  8463  1DBD  1303               	bcf	3,6	;RP1=0, select bank1
  8464  1DBE  00A2               	movwf	(?___flsub+2)^(0+128)
  8465  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  8466  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  8467  1DC1  0857               	movf	?___fladd+1,w
  8468  1DC2  1683               	bsf	3,5	;RP0=1, select bank1
  8469  1DC3  1303               	bcf	3,6	;RP1=0, select bank1
  8470  1DC4  00A1               	movwf	(?___flsub+1)^(0+128)
  8471  1DC5  1283               	bcf	3,5	;RP0=0, select bank0
  8472  1DC6  1303               	bcf	3,6	;RP1=0, select bank0
  8473  1DC7  0856               	movf	?___fladd,w
  8474  1DC8  1683               	bsf	3,5	;RP0=1, select bank1
  8475  1DC9  1303               	bcf	3,6	;RP1=0, select bank1
  8476  1DCA  00A0               	movwf	?___flsub^(0+128)
  8477  1DCB                     l741:	
  8478  1DCB  0008               	return
  8479  1DCC                     __end_of___flsub:	
  8480                           
  8481                           	psect	text20
  8482  1578                     __ptext20:	
  8483 ;; *************** function ___fladd *****************
  8484 ;; Defined at:
  8485 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8486 ;; Parameters:    Size  Location     Type
  8487 ;;  b               4   54[BANK0 ] long 
  8488 ;;  a               4   58[BANK0 ] long 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  grs             1   73[BANK0 ] unsigned char 
  8491 ;;  bexp            1   72[BANK0 ] unsigned char 
  8492 ;;  aexp            1   71[BANK0 ] unsigned char 
  8493 ;;  signs           1   70[BANK0 ] unsigned char 
  8494 ;; Return value:  Size  Location     Type
  8495 ;;                  4   54[BANK0 ] unsigned char 
  8496 ;; Registers used:
  8497 ;;		wreg, status,2, status,0, btemp+1
  8498 ;; Tracked objects:
  8499 ;;		On entry : 0/0
  8500 ;;		On exit  : 0/0
  8501 ;;		Unchanged: 0/0
  8502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8503 ;;      Params:         0       8       0       0       0
  8504 ;;      Locals:         0       4       0       0       0
  8505 ;;      Temps:          0       8       0       0       0
  8506 ;;      Totals:         0      20       0       0       0
  8507 ;;Total ram usage:       20 bytes
  8508 ;; Hardware stack levels used:    1
  8509 ;; Hardware stack levels required when called:    1
  8510 ;; This function calls:
  8511 ;;		Nothing
  8512 ;; This function is called by:
  8513 ;;		_sprintf
  8514 ;;		___flsub
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           
  8519                           ;psect for function ___fladd
  8520  1578                     ___fladd:	
  8521  1578                     l2423:	
  8522                           ;incstack = 0
  8523                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8524                           
  8525  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8526  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8527  157A  0859               	movf	___fladd@b+3,w
  8528  157B  3980               	andlw	128
  8529  157C  00DE               	movwf	??___fladd
  8530  157D  085E               	movf	??___fladd,w
  8531  157E  00E6               	movwf	___fladd@signs
  8532  157F                     l2425:	
  8533  157F  0859               	movf	___fladd@b+3,w
  8534  1580  00DE               	movwf	??___fladd
  8535  1581  075E               	addwf	??___fladd,w
  8536  1582  00DF               	movwf	??___fladd+1
  8537  1583  085F               	movf	??___fladd+1,w
  8538  1584  00E8               	movwf	___fladd@bexp
  8539  1585                     l2427:	
  8540  1585  1FD8               	btfss	___fladd@b+2,7
  8541  1586  2D88               	goto	u3171
  8542  1587  2D89               	goto	u3170
  8543  1588                     u3171:	
  8544  1588  2D8A               	goto	l2431
  8545  1589                     u3170:	
  8546  1589                     l2429:	
  8547  1589  1468               	bsf	___fladd@bexp,0
  8548  158A                     l2431:	
  8549  158A  0868               	movf	___fladd@bexp,w
  8550  158B  1903               	btfsc	3,2
  8551  158C  2D8E               	goto	u3181
  8552  158D  2D8F               	goto	u3180
  8553  158E                     u3181:	
  8554  158E  2D9F               	goto	l2441
  8555  158F                     u3180:	
  8556  158F                     l2433:	
  8557  158F  0A68               	incf	___fladd@bexp,w
  8558  1590  1D03               	btfss	3,2
  8559  1591  2D93               	goto	u3191
  8560  1592  2D94               	goto	u3190
  8561  1593                     u3191:	
  8562  1593  2D9C               	goto	l2437
  8563  1594                     u3190:	
  8564  1594                     l2435:	
  8565  1594  3000               	movlw	0
  8566  1595  00D9               	movwf	___fladd@b+3
  8567  1596  3000               	movlw	0
  8568  1597  00D8               	movwf	___fladd@b+2
  8569  1598  3000               	movlw	0
  8570  1599  00D7               	movwf	___fladd@b+1
  8571  159A  3000               	movlw	0
  8572  159B  00D6               	movwf	___fladd@b
  8573  159C                     l2437:	
  8574  159C  17D8               	bsf	___fladd@b+2,7
  8575  159D                     l2439:	
  8576  159D  01D9               	clrf	___fladd@b+3
  8577  159E  2DA7               	goto	l2443
  8578  159F                     l2441:	
  8579  159F  3000               	movlw	0
  8580  15A0  00D9               	movwf	___fladd@b+3
  8581  15A1  3000               	movlw	0
  8582  15A2  00D8               	movwf	___fladd@b+2
  8583  15A3  3000               	movlw	0
  8584  15A4  00D7               	movwf	___fladd@b+1
  8585  15A5  3000               	movlw	0
  8586  15A6  00D6               	movwf	___fladd@b
  8587  15A7                     l2443:	
  8588  15A7  085D               	movf	___fladd@a+3,w
  8589  15A8  3980               	andlw	128
  8590  15A9  00DE               	movwf	??___fladd
  8591  15AA  085E               	movf	??___fladd,w
  8592  15AB  00E7               	movwf	___fladd@aexp
  8593  15AC                     l2445:	
  8594  15AC  0867               	movf	___fladd@aexp,w
  8595  15AD  0666               	xorwf	___fladd@signs,w
  8596  15AE  1903               	skipnz
  8597  15AF  2DB1               	goto	u3201
  8598  15B0  2DB2               	goto	u3200
  8599  15B1                     u3201:	
  8600  15B1  2DB3               	goto	l2449
  8601  15B2                     u3200:	
  8602  15B2                     l2447:	
  8603  15B2  1766               	bsf	___fladd@signs,6
  8604  15B3                     l2449:	
  8605  15B3  085D               	movf	___fladd@a+3,w
  8606  15B4  00DE               	movwf	??___fladd
  8607  15B5  075E               	addwf	??___fladd,w
  8608  15B6  00DF               	movwf	??___fladd+1
  8609  15B7  085F               	movf	??___fladd+1,w
  8610  15B8  00E7               	movwf	___fladd@aexp
  8611  15B9                     l2451:	
  8612  15B9  1FDC               	btfss	___fladd@a+2,7
  8613  15BA  2DBC               	goto	u3211
  8614  15BB  2DBD               	goto	u3210
  8615  15BC                     u3211:	
  8616  15BC  2DBE               	goto	l2455
  8617  15BD                     u3210:	
  8618  15BD                     l2453:	
  8619  15BD  1467               	bsf	___fladd@aexp,0
  8620  15BE                     l2455:	
  8621  15BE  0867               	movf	___fladd@aexp,w
  8622  15BF  1903               	btfsc	3,2
  8623  15C0  2DC2               	goto	u3221
  8624  15C1  2DC3               	goto	u3220
  8625  15C2                     u3221:	
  8626  15C2  2DD3               	goto	l2465
  8627  15C3                     u3220:	
  8628  15C3                     l2457:	
  8629  15C3  0A67               	incf	___fladd@aexp,w
  8630  15C4  1D03               	btfss	3,2
  8631  15C5  2DC7               	goto	u3231
  8632  15C6  2DC8               	goto	u3230
  8633  15C7                     u3231:	
  8634  15C7  2DD0               	goto	l2461
  8635  15C8                     u3230:	
  8636  15C8                     l2459:	
  8637  15C8  3000               	movlw	0
  8638  15C9  00DD               	movwf	___fladd@a+3
  8639  15CA  3000               	movlw	0
  8640  15CB  00DC               	movwf	___fladd@a+2
  8641  15CC  3000               	movlw	0
  8642  15CD  00DB               	movwf	___fladd@a+1
  8643  15CE  3000               	movlw	0
  8644  15CF  00DA               	movwf	___fladd@a
  8645  15D0                     l2461:	
  8646  15D0  17DC               	bsf	___fladd@a+2,7
  8647  15D1                     l2463:	
  8648  15D1  01DD               	clrf	___fladd@a+3
  8649  15D2  2DDB               	goto	l695
  8650  15D3                     l2465:	
  8651  15D3  3000               	movlw	0
  8652  15D4  00DD               	movwf	___fladd@a+3
  8653  15D5  3000               	movlw	0
  8654  15D6  00DC               	movwf	___fladd@a+2
  8655  15D7  3000               	movlw	0
  8656  15D8  00DB               	movwf	___fladd@a+1
  8657  15D9  3000               	movlw	0
  8658  15DA  00DA               	movwf	___fladd@a
  8659  15DB                     l695:	
  8660  15DB  0868               	movf	___fladd@bexp,w
  8661  15DC  0267               	subwf	___fladd@aexp,w
  8662  15DD  1803               	skipnc
  8663  15DE  2DE0               	goto	u3241
  8664  15DF  2DE1               	goto	u3240
  8665  15E0                     u3241:	
  8666  15E0  2E25               	goto	l2501
  8667  15E1                     u3240:	
  8668  15E1                     l2467:	
  8669  15E1  1F66               	btfss	___fladd@signs,6
  8670  15E2  2DE4               	goto	u3251
  8671  15E3  2DE5               	goto	u3250
  8672  15E4                     u3251:	
  8673  15E4  2DE9               	goto	l2471
  8674  15E5                     u3250:	
  8675  15E5                     l2469:	
  8676  15E5  3080               	movlw	128
  8677  15E6  00DE               	movwf	??___fladd
  8678  15E7  085E               	movf	??___fladd,w
  8679  15E8  06E6               	xorwf	___fladd@signs,f
  8680  15E9                     l2471:	
  8681  15E9  0868               	movf	___fladd@bexp,w
  8682  15EA  00DE               	movwf	??___fladd
  8683  15EB  085E               	movf	??___fladd,w
  8684  15EC  00E9               	movwf	___fladd@grs
  8685  15ED                     l2473:	
  8686  15ED  0867               	movf	___fladd@aexp,w
  8687  15EE  00DE               	movwf	??___fladd
  8688  15EF  085E               	movf	??___fladd,w
  8689  15F0  00E8               	movwf	___fladd@bexp
  8690  15F1                     l2475:	
  8691  15F1  0869               	movf	___fladd@grs,w
  8692  15F2  00DE               	movwf	??___fladd
  8693  15F3  085E               	movf	??___fladd,w
  8694  15F4  00E7               	movwf	___fladd@aexp
  8695  15F5                     l2477:	
  8696  15F5  0856               	movf	___fladd@b,w
  8697  15F6  00DE               	movwf	??___fladd
  8698  15F7  085E               	movf	??___fladd,w
  8699  15F8  00E9               	movwf	___fladd@grs
  8700  15F9                     l2479:	
  8701  15F9  085A               	movf	___fladd@a,w
  8702  15FA  00DE               	movwf	??___fladd
  8703  15FB  085E               	movf	??___fladd,w
  8704  15FC  00D6               	movwf	___fladd@b
  8705  15FD                     l2481:	
  8706  15FD  0869               	movf	___fladd@grs,w
  8707  15FE  00DE               	movwf	??___fladd
  8708  15FF  085E               	movf	??___fladd,w
  8709  1600  00DA               	movwf	___fladd@a
  8710  1601                     l2483:	
  8711  1601  0857               	movf	___fladd@b+1,w
  8712  1602  00DE               	movwf	??___fladd
  8713  1603  085E               	movf	??___fladd,w
  8714  1604  00E9               	movwf	___fladd@grs
  8715  1605                     l2485:	
  8716  1605  085B               	movf	___fladd@a+1,w
  8717  1606  00DE               	movwf	??___fladd
  8718  1607  085E               	movf	??___fladd,w
  8719  1608  00D7               	movwf	___fladd@b+1
  8720  1609                     l2487:	
  8721  1609  0869               	movf	___fladd@grs,w
  8722  160A  00DE               	movwf	??___fladd
  8723  160B  085E               	movf	??___fladd,w
  8724  160C  00DB               	movwf	___fladd@a+1
  8725  160D                     l2489:	
  8726  160D  0858               	movf	___fladd@b+2,w
  8727  160E  00DE               	movwf	??___fladd
  8728  160F  085E               	movf	??___fladd,w
  8729  1610  00E9               	movwf	___fladd@grs
  8730  1611                     l2491:	
  8731  1611  085C               	movf	___fladd@a+2,w
  8732  1612  00DE               	movwf	??___fladd
  8733  1613  085E               	movf	??___fladd,w
  8734  1614  00D8               	movwf	___fladd@b+2
  8735  1615                     l2493:	
  8736  1615  0869               	movf	___fladd@grs,w
  8737  1616  00DE               	movwf	??___fladd
  8738  1617  085E               	movf	??___fladd,w
  8739  1618  00DC               	movwf	___fladd@a+2
  8740  1619                     l2495:	
  8741  1619  0859               	movf	___fladd@b+3,w
  8742  161A  00DE               	movwf	??___fladd
  8743  161B  085E               	movf	??___fladd,w
  8744  161C  00E9               	movwf	___fladd@grs
  8745  161D                     l2497:	
  8746  161D  085D               	movf	___fladd@a+3,w
  8747  161E  00DE               	movwf	??___fladd
  8748  161F  085E               	movf	??___fladd,w
  8749  1620  00D9               	movwf	___fladd@b+3
  8750  1621                     l2499:	
  8751  1621  0869               	movf	___fladd@grs,w
  8752  1622  00DE               	movwf	??___fladd
  8753  1623  085E               	movf	??___fladd,w
  8754  1624  00DD               	movwf	___fladd@a+3
  8755  1625                     l2501:	
  8756  1625  01E9               	clrf	___fladd@grs
  8757  1626                     l2503:	
  8758  1626  0867               	movf	___fladd@aexp,w
  8759  1627  00DE               	movwf	??___fladd
  8760  1628  01DF               	clrf	??___fladd+1
  8761  1629  085F               	movf	??___fladd+1,w
  8762  162A  00E1               	movwf	??___fladd+3
  8763  162B  0868               	movf	___fladd@bexp,w
  8764  162C  025E               	subwf	??___fladd,w
  8765  162D  00E0               	movwf	??___fladd+2
  8766  162E  1C03               	skipc
  8767  162F  03E1               	decf	??___fladd+3,f
  8768  1630  0861               	movf	??___fladd+3,w
  8769  1631  3A80               	xorlw	128
  8770  1632  00FF               	movwf	btemp+1
  8771  1633  3080               	movlw	128
  8772  1634  027F               	subwf	btemp+1,w
  8773  1635  1D03               	skipz
  8774  1636  2E39               	goto	u3265
  8775  1637  301A               	movlw	26
  8776  1638  0260               	subwf	??___fladd+2,w
  8777  1639                     u3265:	
  8778  1639  1C03               	skipc
  8779  163A  2E3C               	goto	u3261
  8780  163B  2E3D               	goto	u3260
  8781  163C                     u3261:	
  8782  163C  2E7A               	goto	l2519
  8783  163D                     u3260:	
  8784  163D                     l2505:	
  8785  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8786  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8787  163F  0859               	movf	___fladd@b+3,w
  8788  1640  0458               	iorwf	___fladd@b+2,w
  8789  1641  0457               	iorwf	___fladd@b+1,w
  8790  1642  0456               	iorwf	___fladd@b,w
  8791  1643  1D03               	skipz
  8792  1644  2E46               	goto	u3271
  8793  1645  2E48               	goto	u3270
  8794  1646                     u3271:	
  8795  1646  3001               	movlw	1
  8796  1647  2E49               	goto	u3280
  8797  1648                     u3270:	
  8798  1648  3000               	movlw	0
  8799  1649                     u3280:	
  8800  1649  00DE               	movwf	??___fladd
  8801  164A  085E               	movf	??___fladd,w
  8802  164B  00E9               	movwf	___fladd@grs
  8803  164C  3000               	movlw	0
  8804  164D  00D9               	movwf	___fladd@b+3
  8805  164E  3000               	movlw	0
  8806  164F  00D8               	movwf	___fladd@b+2
  8807  1650  3000               	movlw	0
  8808  1651  00D7               	movwf	___fladd@b+1
  8809  1652  3000               	movlw	0
  8810  1653  00D6               	movwf	___fladd@b
  8811  1654  0867               	movf	___fladd@aexp,w
  8812  1655  00DE               	movwf	??___fladd
  8813  1656  085E               	movf	??___fladd,w
  8814  1657  00E8               	movwf	___fladd@bexp
  8815  1658  2E82               	goto	l699
  8816  1659                     l701:	
  8817  1659  1C69               	btfss	___fladd@grs,0
  8818  165A  2E5C               	goto	u3291
  8819  165B  2E5D               	goto	u3290
  8820  165C                     u3291:	
  8821  165C  2E66               	goto	l2509
  8822  165D                     u3290:	
  8823  165D                     l2507:	
  8824  165D  0869               	movf	___fladd@grs,w
  8825  165E  00DE               	movwf	??___fladd
  8826  165F  1003               	clrc
  8827  1660  0C5E               	rrf	??___fladd,w
  8828  1661  3801               	iorlw	1
  8829  1662  00DF               	movwf	??___fladd+1
  8830  1663  085F               	movf	??___fladd+1,w
  8831  1664  00E9               	movwf	___fladd@grs
  8832  1665  2E68               	goto	l2511
  8833  1666                     l2509:	
  8834  1666  1003               	clrc
  8835  1667  0CE9               	rrf	___fladd@grs,f
  8836  1668                     l2511:	
  8837  1668  1C56               	btfss	___fladd@b,0
  8838  1669  2E6B               	goto	u3301
  8839  166A  2E6C               	goto	u3300
  8840  166B                     u3301:	
  8841  166B  2E6D               	goto	l2515
  8842  166C                     u3300:	
  8843  166C                     l2513:	
  8844  166C  17E9               	bsf	___fladd@grs,7
  8845  166D                     l2515:	
  8846  166D  3001               	movlw	1
  8847  166E  00DE               	movwf	??___fladd
  8848  166F                     u3315:	
  8849  166F  0D59               	rlf	___fladd@b+3,w
  8850  1670  0CD9               	rrf	___fladd@b+3,f
  8851  1671  0CD8               	rrf	___fladd@b+2,f
  8852  1672  0CD7               	rrf	___fladd@b+1,f
  8853  1673  0CD6               	rrf	___fladd@b,f
  8854  1674  0BDE               	decfsz	??___fladd& (0+127),f
  8855  1675  2E6F               	goto	u3315
  8856  1676                     l2517:	
  8857  1676  3001               	movlw	1
  8858  1677  00DE               	movwf	??___fladd
  8859  1678  085E               	movf	??___fladd,w
  8860  1679  07E8               	addwf	___fladd@bexp,f
  8861  167A                     l2519:	
  8862  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8863  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8864  167C  0867               	movf	___fladd@aexp,w
  8865  167D  0268               	subwf	___fladd@bexp,w
  8866  167E  1C03               	skipc
  8867  167F  2E81               	goto	u3321
  8868  1680  2E82               	goto	u3320
  8869  1681                     u3321:	
  8870  1681  2E59               	goto	l701
  8871  1682                     u3320:	
  8872  1682                     l699:	
  8873  1682  1B66               	btfsc	___fladd@signs,6
  8874  1683  2E85               	goto	u3331
  8875  1684  2E86               	goto	u3330
  8876  1685                     u3331:	
  8877  1685  2ED1               	goto	l2545
  8878  1686                     u3330:	
  8879  1686                     l2521:	
  8880  1686  0868               	movf	___fladd@bexp,w
  8881  1687  1D03               	btfss	3,2
  8882  1688  2E8A               	goto	u3341
  8883  1689  2E8B               	goto	u3340
  8884  168A                     u3341:	
  8885  168A  2E94               	goto	l2527
  8886  168B                     u3340:	
  8887  168B                     l2523:	
  8888  168B  3000               	movlw	0
  8889  168C  00D9               	movwf	?___fladd+3
  8890  168D  3000               	movlw	0
  8891  168E  00D8               	movwf	?___fladd+2
  8892  168F  3000               	movlw	0
  8893  1690  00D7               	movwf	?___fladd+1
  8894  1691  3000               	movlw	0
  8895  1692  00D6               	movwf	?___fladd
  8896  1693  2FFF               	goto	l708
  8897  1694                     l2527:	
  8898  1694  085A               	movf	___fladd@a,w
  8899  1695  07D6               	addwf	___fladd@b,f
  8900  1696  085B               	movf	___fladd@a+1,w
  8901  1697  1103               	clrz
  8902  1698  1803               	skipnc
  8903  1699  3E01               	addlw	1
  8904  169A  1903               	skipnz
  8905  169B  2E9D               	goto	u3351
  8906  169C  07D7               	addwf	___fladd@b+1,f
  8907  169D                     u3351:	
  8908  169D  085C               	movf	___fladd@a+2,w
  8909  169E  1103               	clrz
  8910  169F  1803               	skipnc
  8911  16A0  3E01               	addlw	1
  8912  16A1  1903               	skipnz
  8913  16A2  2EA4               	goto	u3352
  8914  16A3  07D8               	addwf	___fladd@b+2,f
  8915  16A4                     u3352:	
  8916  16A4  085D               	movf	___fladd@a+3,w
  8917  16A5  1103               	clrz
  8918  16A6  1803               	skipnc
  8919  16A7  3E01               	addlw	1
  8920  16A8  1903               	skipnz
  8921  16A9  2EAB               	goto	u3353
  8922  16AA  07D9               	addwf	___fladd@b+3,f
  8923  16AB                     u3353:	
  8924  16AB                     l2529:	
  8925  16AB  1C59               	btfss	___fladd@b+3,0
  8926  16AC  2EAE               	goto	u3361
  8927  16AD  2EAF               	goto	u3360
  8928  16AE                     u3361:	
  8929  16AE  2F85               	goto	l2579
  8930  16AF                     u3360:	
  8931  16AF                     l2531:	
  8932  16AF  1C69               	btfss	___fladd@grs,0
  8933  16B0  2EB2               	goto	u3371
  8934  16B1  2EB3               	goto	u3370
  8935  16B2                     u3371:	
  8936  16B2  2EBC               	goto	l2535
  8937  16B3                     u3370:	
  8938  16B3                     l2533:	
  8939  16B3  0869               	movf	___fladd@grs,w
  8940  16B4  00DE               	movwf	??___fladd
  8941  16B5  1003               	clrc
  8942  16B6  0C5E               	rrf	??___fladd,w
  8943  16B7  3801               	iorlw	1
  8944  16B8  00DF               	movwf	??___fladd+1
  8945  16B9  085F               	movf	??___fladd+1,w
  8946  16BA  00E9               	movwf	___fladd@grs
  8947  16BB  2EBE               	goto	l2537
  8948  16BC                     l2535:	
  8949  16BC  1003               	clrc
  8950  16BD  0CE9               	rrf	___fladd@grs,f
  8951  16BE                     l2537:	
  8952  16BE  1C56               	btfss	___fladd@b,0
  8953  16BF  2EC1               	goto	u3381
  8954  16C0  2EC2               	goto	u3380
  8955  16C1                     u3381:	
  8956  16C1  2EC3               	goto	l2541
  8957  16C2                     u3380:	
  8958  16C2                     l2539:	
  8959  16C2  17E9               	bsf	___fladd@grs,7
  8960  16C3                     l2541:	
  8961  16C3  3001               	movlw	1
  8962  16C4  00DE               	movwf	??___fladd
  8963  16C5                     u3395:	
  8964  16C5  0D59               	rlf	___fladd@b+3,w
  8965  16C6  0CD9               	rrf	___fladd@b+3,f
  8966  16C7  0CD8               	rrf	___fladd@b+2,f
  8967  16C8  0CD7               	rrf	___fladd@b+1,f
  8968  16C9  0CD6               	rrf	___fladd@b,f
  8969  16CA  0BDE               	decfsz	??___fladd& (0+127),f
  8970  16CB  2EC5               	goto	u3395
  8971  16CC                     l2543:	
  8972  16CC  3001               	movlw	1
  8973  16CD  00DE               	movwf	??___fladd
  8974  16CE  085E               	movf	??___fladd,w
  8975  16CF  07E8               	addwf	___fladd@bexp,f
  8976  16D0  2F85               	goto	l2579
  8977  16D1                     l2545:	
  8978  16D1  0859               	movf	___fladd@b+3,w
  8979  16D2  3A80               	xorlw	128
  8980  16D3  00FF               	movwf	btemp+1
  8981  16D4  085D               	movf	___fladd@a+3,w
  8982  16D5  3A80               	xorlw	128
  8983  16D6  027F               	subwf	btemp+1,w
  8984  16D7  1D03               	skipz
  8985  16D8  2EE3               	goto	u3403
  8986  16D9  085C               	movf	___fladd@a+2,w
  8987  16DA  0258               	subwf	___fladd@b+2,w
  8988  16DB  1D03               	skipz
  8989  16DC  2EE3               	goto	u3403
  8990  16DD  085B               	movf	___fladd@a+1,w
  8991  16DE  0257               	subwf	___fladd@b+1,w
  8992  16DF  1D03               	skipz
  8993  16E0  2EE3               	goto	u3403
  8994  16E1  085A               	movf	___fladd@a,w
  8995  16E2  0256               	subwf	___fladd@b,w
  8996  16E3                     u3403:	
  8997  16E3  1803               	skipnc
  8998  16E4  2EE6               	goto	u3401
  8999  16E5  2EE7               	goto	u3400
  9000  16E6                     u3401:	
  9001  16E6  2F3F               	goto	l2555
  9002  16E7                     u3400:	
  9003  16E7                     l2547:	
  9004  16E7  30FF               	movlw	255
  9005  16E8  00DE               	movwf	??___fladd
  9006  16E9  30FF               	movlw	255
  9007  16EA  00DF               	movwf	??___fladd+1
  9008  16EB  30FF               	movlw	255
  9009  16EC  00E0               	movwf	??___fladd+2
  9010  16ED  30FF               	movlw	255
  9011  16EE  00E1               	movwf	??___fladd+3
  9012  16EF  085A               	movf	___fladd@a,w
  9013  16F0  00E2               	movwf	??___fladd+4
  9014  16F1  085B               	movf	___fladd@a+1,w
  9015  16F2  00E3               	movwf	??___fladd+5
  9016  16F3  085C               	movf	___fladd@a+2,w
  9017  16F4  00E4               	movwf	??___fladd+6
  9018  16F5  085D               	movf	___fladd@a+3,w
  9019  16F6  00E5               	movwf	??___fladd+7
  9020  16F7  0856               	movf	___fladd@b,w
  9021  16F8  02E2               	subwf	??___fladd+4,f
  9022  16F9  0857               	movf	___fladd@b+1,w
  9023  16FA  1C03               	skipc
  9024  16FB  0F57               	incfsz	___fladd@b+1,w
  9025  16FC  2EFE               	goto	u3411
  9026  16FD  2EFF               	goto	u3412
  9027  16FE                     u3411:	
  9028  16FE  02E3               	subwf	??___fladd+5,f
  9029  16FF                     u3412:	
  9030  16FF  0858               	movf	___fladd@b+2,w
  9031  1700  1C03               	skipc
  9032  1701  0F58               	incfsz	___fladd@b+2,w
  9033  1702  2F04               	goto	u3413
  9034  1703  2F05               	goto	u3414
  9035  1704                     u3413:	
  9036  1704  02E4               	subwf	??___fladd+6,f
  9037  1705                     u3414:	
  9038  1705  0859               	movf	___fladd@b+3,w
  9039  1706  1C03               	skipc
  9040  1707  0F59               	incfsz	___fladd@b+3,w
  9041  1708  2F0A               	goto	u3415
  9042  1709  2F0B               	goto	u3416
  9043  170A                     u3415:	
  9044  170A  02E5               	subwf	??___fladd+7,f
  9045  170B                     u3416:	
  9046  170B  0862               	movf	??___fladd+4,w
  9047  170C  07DE               	addwf	??___fladd,f
  9048  170D  0863               	movf	??___fladd+5,w
  9049  170E  1803               	skipnc
  9050  170F  0F63               	incfsz	??___fladd+5,w
  9051  1710  2F12               	goto	u3420
  9052  1711  2F13               	goto	u3421
  9053  1712                     u3420:	
  9054  1712  07DF               	addwf	??___fladd+1,f
  9055  1713                     u3421:	
  9056  1713  0864               	movf	??___fladd+6,w
  9057  1714  1803               	skipnc
  9058  1715  0F64               	incfsz	??___fladd+6,w
  9059  1716  2F18               	goto	u3422
  9060  1717  2F19               	goto	u3423
  9061  1718                     u3422:	
  9062  1718  07E0               	addwf	??___fladd+2,f
  9063  1719                     u3423:	
  9064  1719  0865               	movf	??___fladd+7,w
  9065  171A  1803               	skipnc
  9066  171B  0A65               	incf	??___fladd+7,w
  9067  171C  07E1               	addwf	??___fladd+3,f
  9068  171D  0861               	movf	??___fladd+3,w
  9069  171E  00D9               	movwf	___fladd@b+3
  9070  171F  0860               	movf	??___fladd+2,w
  9071  1720  00D8               	movwf	___fladd@b+2
  9072  1721  085F               	movf	??___fladd+1,w
  9073  1722  00D7               	movwf	___fladd@b+1
  9074  1723  085E               	movf	??___fladd,w
  9075  1724  00D6               	movwf	___fladd@b
  9076  1725                     l2549:	
  9077  1725  3080               	movlw	128
  9078  1726  00DE               	movwf	??___fladd
  9079  1727  085E               	movf	??___fladd,w
  9080  1728  06E6               	xorwf	___fladd@signs,f
  9081  1729  09E9               	comf	___fladd@grs,f
  9082  172A  0AE9               	incf	___fladd@grs,f
  9083  172B                     l2551:	
  9084  172B  0869               	movf	___fladd@grs,w
  9085  172C  1D03               	btfss	3,2
  9086  172D  2F2F               	goto	u3431
  9087  172E  2F30               	goto	u3430
  9088  172F                     u3431:	
  9089  172F  2F4D               	goto	l716
  9090  1730                     u3430:	
  9091  1730                     l2553:	
  9092  1730  3001               	movlw	1
  9093  1731  07D6               	addwf	___fladd@b,f
  9094  1732  3000               	movlw	0
  9095  1733  1803               	skipnc
  9096  1734  3001               	movlw	1
  9097  1735  07D7               	addwf	___fladd@b+1,f
  9098  1736  3000               	movlw	0
  9099  1737  1803               	skipnc
  9100  1738  3001               	movlw	1
  9101  1739  07D8               	addwf	___fladd@b+2,f
  9102  173A  3000               	movlw	0
  9103  173B  1803               	skipnc
  9104  173C  3001               	movlw	1
  9105  173D  07D9               	addwf	___fladd@b+3,f
  9106  173E  2F4D               	goto	l716
  9107  173F                     l2555:	
  9108  173F  085A               	movf	___fladd@a,w
  9109  1740  02D6               	subwf	___fladd@b,f
  9110  1741  085B               	movf	___fladd@a+1,w
  9111  1742  1C03               	skipc
  9112  1743  0F5B               	incfsz	___fladd@a+1,w
  9113  1744  02D7               	subwf	___fladd@b+1,f
  9114  1745  085C               	movf	___fladd@a+2,w
  9115  1746  1C03               	skipc
  9116  1747  0F5C               	incfsz	___fladd@a+2,w
  9117  1748  02D8               	subwf	___fladd@b+2,f
  9118  1749  085D               	movf	___fladd@a+3,w
  9119  174A  1C03               	skipc
  9120  174B  0F5D               	incfsz	___fladd@a+3,w
  9121  174C  02D9               	subwf	___fladd@b+3,f
  9122  174D                     l716:	
  9123  174D  0859               	movf	___fladd@b+3,w
  9124  174E  0458               	iorwf	___fladd@b+2,w
  9125  174F  0457               	iorwf	___fladd@b+1,w
  9126  1750  0456               	iorwf	___fladd@b,w
  9127  1751  1D03               	skipz
  9128  1752  2F54               	goto	u3441
  9129  1753  2F55               	goto	u3440
  9130  1754                     u3441:	
  9131  1754  2F81               	goto	l2577
  9132  1755                     u3440:	
  9133  1755                     l2557:	
  9134  1755  0869               	movf	___fladd@grs,w
  9135  1756  1D03               	btfss	3,2
  9136  1757  2F59               	goto	u3451
  9137  1758  2F5A               	goto	u3450
  9138  1759                     u3451:	
  9139  1759  2F81               	goto	l2577
  9140  175A                     u3450:	
  9141  175A                     l2559:	
  9142  175A  3000               	movlw	0
  9143  175B  00D9               	movwf	?___fladd+3
  9144  175C  3000               	movlw	0
  9145  175D  00D8               	movwf	?___fladd+2
  9146  175E  3000               	movlw	0
  9147  175F  00D7               	movwf	?___fladd+1
  9148  1760  3000               	movlw	0
  9149  1761  00D6               	movwf	?___fladd
  9150  1762  2FFF               	goto	l708
  9151  1763                     l2563:	
  9152  1763  3001               	movlw	1
  9153  1764  00DE               	movwf	??___fladd
  9154  1765                     u3465:	
  9155  1765  1003               	clrc
  9156  1766  0DD6               	rlf	___fladd@b,f
  9157  1767  0DD7               	rlf	___fladd@b+1,f
  9158  1768  0DD8               	rlf	___fladd@b+2,f
  9159  1769  0DD9               	rlf	___fladd@b+3,f
  9160  176A  0BDE               	decfsz	??___fladd,f
  9161  176B  2F65               	goto	u3465
  9162  176C                     l2565:	
  9163  176C  1FE9               	btfss	___fladd@grs,7
  9164  176D  2F6F               	goto	u3471
  9165  176E  2F70               	goto	u3470
  9166  176F                     u3471:	
  9167  176F  2F71               	goto	l720
  9168  1770                     u3470:	
  9169  1770                     l2567:	
  9170  1770  1456               	bsf	___fladd@b,0
  9171  1771                     l720:	
  9172  1771  1C69               	btfss	___fladd@grs,0
  9173  1772  2F74               	goto	u3481
  9174  1773  2F75               	goto	u3480
  9175  1774                     u3481:	
  9176  1774  2F78               	goto	l2571
  9177  1775                     u3480:	
  9178  1775                     l2569:	
  9179  1775  1403               	setc
  9180  1776  0DE9               	rlf	___fladd@grs,f
  9181  1777  2F7A               	goto	l2573
  9182  1778                     l2571:	
  9183  1778  1003               	clrc
  9184  1779  0DE9               	rlf	___fladd@grs,f
  9185  177A                     l2573:	
  9186  177A  0868               	movf	___fladd@bexp,w
  9187  177B  1903               	btfsc	3,2
  9188  177C  2F7E               	goto	u3491
  9189  177D  2F7F               	goto	u3490
  9190  177E                     u3491:	
  9191  177E  2F81               	goto	l2577
  9192  177F                     u3490:	
  9193  177F                     l2575:	
  9194  177F  3001               	movlw	1
  9195  1780  02E8               	subwf	___fladd@bexp,f
  9196  1781                     l2577:	
  9197  1781  1FD8               	btfss	___fladd@b+2,7
  9198  1782  2F84               	goto	u3501
  9199  1783  2F85               	goto	u3500
  9200  1784                     u3501:	
  9201  1784  2F63               	goto	l2563
  9202  1785                     u3500:	
  9203  1785                     l2579:	
  9204  1785  01E7               	clrf	___fladd@aexp
  9205  1786                     l2581:	
  9206  1786  1FE9               	btfss	___fladd@grs,7
  9207  1787  2F89               	goto	u3511
  9208  1788  2F8A               	goto	u3510
  9209  1789                     u3511:	
  9210  1789  2F98               	goto	l2589
  9211  178A                     u3510:	
  9212  178A                     l2583:	
  9213  178A  0869               	movf	___fladd@grs,w
  9214  178B  397F               	andlw	127
  9215  178C  1903               	btfsc	3,2
  9216  178D  2F8F               	goto	u3521
  9217  178E  2F90               	goto	u3520
  9218  178F                     u3521:	
  9219  178F  2F93               	goto	l726
  9220  1790                     u3520:	
  9221  1790                     l2585:	
  9222  1790  01E7               	clrf	___fladd@aexp
  9223  1791  0AE7               	incf	___fladd@aexp,f
  9224  1792  2F98               	goto	l2589
  9225  1793                     l726:	
  9226  1793  1C56               	btfss	___fladd@b,0
  9227  1794  2F96               	goto	u3531
  9228  1795  2F97               	goto	u3530
  9229  1796                     u3531:	
  9230  1796  2F98               	goto	l2589
  9231  1797                     u3530:	
  9232  1797  2F90               	goto	l2585
  9233  1798                     l2589:	
  9234  1798  0867               	movf	___fladd@aexp,w
  9235  1799  1903               	btfsc	3,2
  9236  179A  2F9C               	goto	u3541
  9237  179B  2F9D               	goto	u3540
  9238  179C                     u3541:	
  9239  179C  2FD1               	goto	l729
  9240  179D                     u3540:	
  9241  179D                     l2591:	
  9242  179D  3001               	movlw	1
  9243  179E  07D6               	addwf	___fladd@b,f
  9244  179F  3000               	movlw	0
  9245  17A0  1803               	skipnc
  9246  17A1  3001               	movlw	1
  9247  17A2  07D7               	addwf	___fladd@b+1,f
  9248  17A3  3000               	movlw	0
  9249  17A4  1803               	skipnc
  9250  17A5  3001               	movlw	1
  9251  17A6  07D8               	addwf	___fladd@b+2,f
  9252  17A7  3000               	movlw	0
  9253  17A8  1803               	skipnc
  9254  17A9  3001               	movlw	1
  9255  17AA  07D9               	addwf	___fladd@b+3,f
  9256  17AB                     l2593:	
  9257  17AB  1C59               	btfss	___fladd@b+3,0
  9258  17AC  2FAE               	goto	u3551
  9259  17AD  2FAF               	goto	u3550
  9260  17AE                     u3551:	
  9261  17AE  2FD1               	goto	l729
  9262  17AF                     u3550:	
  9263  17AF                     l2595:	
  9264  17AF  0856               	movf	___fladd@b,w
  9265  17B0  00DE               	movwf	??___fladd
  9266  17B1  0857               	movf	___fladd@b+1,w
  9267  17B2  00DF               	movwf	??___fladd+1
  9268  17B3  0858               	movf	___fladd@b+2,w
  9269  17B4  00E0               	movwf	??___fladd+2
  9270  17B5  0859               	movf	___fladd@b+3,w
  9271  17B6  00E1               	movwf	??___fladd+3
  9272  17B7  3001               	movlw	1
  9273  17B8  00E2               	movwf	??___fladd+4
  9274  17B9                     u3565:	
  9275  17B9  0D61               	rlf	??___fladd+3,w
  9276  17BA  0CE1               	rrf	??___fladd+3,f
  9277  17BB  0CE0               	rrf	??___fladd+2,f
  9278  17BC  0CDF               	rrf	??___fladd+1,f
  9279  17BD  0CDE               	rrf	??___fladd,f
  9280  17BE                     u3560:	
  9281  17BE  0BE2               	decfsz	??___fladd+4,f
  9282  17BF  2FB9               	goto	u3565
  9283  17C0  0861               	movf	??___fladd+3,w
  9284  17C1  00D9               	movwf	___fladd@b+3
  9285  17C2  0860               	movf	??___fladd+2,w
  9286  17C3  00D8               	movwf	___fladd@b+2
  9287  17C4  085F               	movf	??___fladd+1,w
  9288  17C5  00D7               	movwf	___fladd@b+1
  9289  17C6  085E               	movf	??___fladd,w
  9290  17C7  00D6               	movwf	___fladd@b
  9291  17C8  0A68               	incf	___fladd@bexp,w
  9292  17C9  1903               	btfsc	3,2
  9293  17CA  2FCC               	goto	u3571
  9294  17CB  2FCD               	goto	u3570
  9295  17CC                     u3571:	
  9296  17CC  2FD1               	goto	l729
  9297  17CD                     u3570:	
  9298  17CD                     l2597:	
  9299  17CD  3001               	movlw	1
  9300  17CE  00DE               	movwf	??___fladd
  9301  17CF  085E               	movf	??___fladd,w
  9302  17D0  07E8               	addwf	___fladd@bexp,f
  9303  17D1                     l729:	
  9304  17D1  0A68               	incf	___fladd@bexp,w
  9305  17D2  1903               	btfsc	3,2
  9306  17D3  2FD5               	goto	u3581
  9307  17D4  2FD6               	goto	u3580
  9308  17D5                     u3581:	
  9309  17D5  2FDB               	goto	l2601
  9310  17D6                     u3580:	
  9311  17D6                     l2599:	
  9312  17D6  0868               	movf	___fladd@bexp,w
  9313  17D7  1D03               	btfss	3,2
  9314  17D8  2FDA               	goto	u3591
  9315  17D9  2FDB               	goto	u3590
  9316  17DA                     u3591:	
  9317  17DA  2FE9               	goto	l2607
  9318  17DB                     u3590:	
  9319  17DB                     l2601:	
  9320  17DB  3000               	movlw	0
  9321  17DC  00D9               	movwf	___fladd@b+3
  9322  17DD  3000               	movlw	0
  9323  17DE  00D8               	movwf	___fladd@b+2
  9324  17DF  3000               	movlw	0
  9325  17E0  00D7               	movwf	___fladd@b+1
  9326  17E1  3000               	movlw	0
  9327  17E2  00D6               	movwf	___fladd@b
  9328  17E3                     l2603:	
  9329  17E3  0868               	movf	___fladd@bexp,w
  9330  17E4  1D03               	btfss	3,2
  9331  17E5  2FE7               	goto	u3601
  9332  17E6  2FE8               	goto	u3600
  9333  17E7                     u3601:	
  9334  17E7  2FE9               	goto	l2607
  9335  17E8                     u3600:	
  9336  17E8                     l2605:	
  9337  17E8  01E6               	clrf	___fladd@signs
  9338  17E9                     l2607:	
  9339  17E9  1C68               	btfss	___fladd@bexp,0
  9340  17EA  2FEC               	goto	u3611
  9341  17EB  2FED               	goto	u3610
  9342  17EC                     u3611:	
  9343  17EC  2FEF               	goto	l2611
  9344  17ED                     u3610:	
  9345  17ED                     l2609:	
  9346  17ED  17D8               	bsf	___fladd@b+2,7
  9347  17EE  2FF3               	goto	l737
  9348  17EF                     l2611:	
  9349  17EF  307F               	movlw	127
  9350  17F0  00DE               	movwf	??___fladd
  9351  17F1  085E               	movf	??___fladd,w
  9352  17F2  05D8               	andwf	___fladd@b+2,f
  9353  17F3                     l737:	
  9354  17F3  0868               	movf	___fladd@bexp,w
  9355  17F4  00DE               	movwf	??___fladd
  9356  17F5  1003               	clrc
  9357  17F6  0C5E               	rrf	??___fladd,w
  9358  17F7  00DF               	movwf	??___fladd+1
  9359  17F8  085F               	movf	??___fladd+1,w
  9360  17F9  00D9               	movwf	___fladd@b+3
  9361  17FA                     l2613:	
  9362  17FA  1FE6               	btfss	___fladd@signs,7
  9363  17FB  2FFD               	goto	u3621
  9364  17FC  2FFE               	goto	u3620
  9365  17FD                     u3621:	
  9366  17FD  2FFF               	goto	l738
  9367  17FE                     u3620:	
  9368  17FE                     l2615:	
  9369  17FE  17D9               	bsf	___fladd@b+3,7
  9370  17FF                     l738:	
  9371  17FF                     l708:	
  9372  17FF  0008               	return
  9373  1800                     __end_of___fladd:	
  9374                           
  9375                           	psect	text21
  9376  1B6B                     __ptext21:	
  9377 ;; *************** function ___flneg *****************
  9378 ;; Defined at:
  9379 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  9380 ;; Parameters:    Size  Location     Type
  9381 ;;  f1              4    3[COMMON] unsigned char 
  9382 ;; Auto vars:     Size  Location     Type
  9383 ;;		None
  9384 ;; Return value:  Size  Location     Type
  9385 ;;                  4    3[COMMON] unsigned char 
  9386 ;; Registers used:
  9387 ;;		wreg
  9388 ;; Tracked objects:
  9389 ;;		On entry : 0/0
  9390 ;;		On exit  : 0/0
  9391 ;;		Unchanged: 0/0
  9392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9393 ;;      Params:         4       0       0       0       0
  9394 ;;      Locals:         0       0       0       0       0
  9395 ;;      Temps:          0       0       0       0       0
  9396 ;;      Totals:         4       0       0       0       0
  9397 ;;Total ram usage:        4 bytes
  9398 ;; Hardware stack levels used:    1
  9399 ;; Hardware stack levels required when called:    1
  9400 ;; This function calls:
  9401 ;;		Nothing
  9402 ;; This function is called by:
  9403 ;;		_sprintf
  9404 ;; This function uses a non-reentrant model
  9405 ;;
  9406                           
  9407                           
  9408                           ;psect for function ___flneg
  9409  1B6B                     ___flneg:	
  9410  1B6B                     l3019:	
  9411                           ;incstack = 0
  9412                           ; Regs used in ___flneg: [wreg]
  9413                           
  9414  1B6B  0876               	movf	___flneg@f1+3,w
  9415  1B6C  0475               	iorwf	___flneg@f1+2,w
  9416  1B6D  0474               	iorwf	___flneg@f1+1,w
  9417  1B6E  0473               	iorwf	___flneg@f1,w
  9418  1B6F  1903               	skipnz
  9419  1B70  2B72               	goto	u4741
  9420  1B71  2B73               	goto	u4740
  9421  1B72                     u4741:	
  9422  1B72  2B75               	goto	l3023
  9423  1B73                     u4740:	
  9424  1B73                     l3021:	
  9425  1B73  3080               	movlw	128
  9426  1B74  06F6               	xorwf	___flneg@f1+3,f
  9427  1B75                     l3023:	
  9428  1B75                     l567:	
  9429  1B75  0008               	return
  9430  1B76                     __end_of___flneg:	
  9431                           
  9432                           	psect	text22
  9433  1F5C                     __ptext22:	
  9434 ;; *************** function ___flge *****************
  9435 ;; Defined at:
  9436 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  9437 ;; Parameters:    Size  Location     Type
  9438 ;;  ff1             4    3[COMMON] unsigned char 
  9439 ;;  ff2             4    7[COMMON] unsigned char 
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;		None
  9442 ;; Return value:  Size  Location     Type
  9443 ;;		None               void
  9444 ;; Registers used:
  9445 ;;		wreg, status,2, status,0
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9451 ;;      Params:         8       0       0       0       0
  9452 ;;      Locals:         0       0       0       0       0
  9453 ;;      Temps:          0       4       0       0       0
  9454 ;;      Totals:         8       4       0       0       0
  9455 ;;Total ram usage:       12 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; Hardware stack levels required when called:    1
  9458 ;; This function calls:
  9459 ;;		Nothing
  9460 ;; This function is called by:
  9461 ;;		_sprintf
  9462 ;; This function uses a non-reentrant model
  9463 ;;
  9464                           
  9465                           
  9466                           ;psect for function ___flge
  9467  1F5C                     ___flge:	
  9468  1F5C                     l2999:	
  9469                           ;incstack = 0
  9470                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9471                           
  9472  1F5C  3000               	movlw	0
  9473  1F5D  0573               	andwf	___flge@ff1,w
  9474  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  9475  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  9476  1F60  00A0               	movwf	??___flge
  9477  1F61  3000               	movlw	0
  9478  1F62  0574               	andwf	___flge@ff1+1,w
  9479  1F63  00A1               	movwf	??___flge+1
  9480  1F64  3080               	movlw	128
  9481  1F65  0575               	andwf	___flge@ff1+2,w
  9482  1F66  00A2               	movwf	??___flge+2
  9483  1F67  307F               	movlw	127
  9484  1F68  0576               	andwf	___flge@ff1+3,w
  9485  1F69  00A3               	movwf	??___flge+3
  9486  1F6A  0823               	movf	??___flge+3,w
  9487  1F6B  0422               	iorwf	??___flge+2,w
  9488  1F6C  0421               	iorwf	??___flge+1,w
  9489  1F6D  0420               	iorwf	??___flge,w
  9490  1F6E  1D03               	skipz
  9491  1F6F  2F71               	goto	u4671
  9492  1F70  2F72               	goto	u4670
  9493  1F71                     u4671:	
  9494  1F71  2F7A               	goto	l559
  9495  1F72                     u4670:	
  9496  1F72                     l3001:	
  9497  1F72  3000               	movlw	0
  9498  1F73  00F6               	movwf	___flge@ff1+3
  9499  1F74  3000               	movlw	0
  9500  1F75  00F5               	movwf	___flge@ff1+2
  9501  1F76  3000               	movlw	0
  9502  1F77  00F4               	movwf	___flge@ff1+1
  9503  1F78  3000               	movlw	0
  9504  1F79  00F3               	movwf	___flge@ff1
  9505  1F7A                     l559:	
  9506  1F7A  3000               	movlw	0
  9507  1F7B  0577               	andwf	___flge@ff2,w
  9508  1F7C  00A0               	movwf	??___flge
  9509  1F7D  3000               	movlw	0
  9510  1F7E  0578               	andwf	___flge@ff2+1,w
  9511  1F7F  00A1               	movwf	??___flge+1
  9512  1F80  3080               	movlw	128
  9513  1F81  0579               	andwf	___flge@ff2+2,w
  9514  1F82  00A2               	movwf	??___flge+2
  9515  1F83  307F               	movlw	127
  9516  1F84  057A               	andwf	___flge@ff2+3,w
  9517  1F85  00A3               	movwf	??___flge+3
  9518  1F86  0823               	movf	??___flge+3,w
  9519  1F87  0422               	iorwf	??___flge+2,w
  9520  1F88  0421               	iorwf	??___flge+1,w
  9521  1F89  0420               	iorwf	??___flge,w
  9522  1F8A  1D03               	skipz
  9523  1F8B  2F8D               	goto	u4681
  9524  1F8C  2F8E               	goto	u4680
  9525  1F8D                     u4681:	
  9526  1F8D  2F96               	goto	l3005
  9527  1F8E                     u4680:	
  9528  1F8E                     l3003:	
  9529  1F8E  3000               	movlw	0
  9530  1F8F  00FA               	movwf	___flge@ff2+3
  9531  1F90  3000               	movlw	0
  9532  1F91  00F9               	movwf	___flge@ff2+2
  9533  1F92  3000               	movlw	0
  9534  1F93  00F8               	movwf	___flge@ff2+1
  9535  1F94  3000               	movlw	0
  9536  1F95  00F7               	movwf	___flge@ff2
  9537  1F96                     l3005:	
  9538  1F96  1FF6               	btfss	___flge@ff1+3,7
  9539  1F97  2F99               	goto	u4691
  9540  1F98  2F9A               	goto	u4690
  9541  1F99                     u4691:	
  9542  1F99  2FBE               	goto	l3009
  9543  1F9A                     u4690:	
  9544  1F9A                     l3007:	
  9545  1F9A  3000               	movlw	0
  9546  1F9B  00A0               	movwf	??___flge
  9547  1F9C  3000               	movlw	0
  9548  1F9D  00A1               	movwf	??___flge+1
  9549  1F9E  3000               	movlw	0
  9550  1F9F  00A2               	movwf	??___flge+2
  9551  1FA0  3080               	movlw	128
  9552  1FA1  00A3               	movwf	??___flge+3
  9553  1FA2  0873               	movf	___flge@ff1,w
  9554  1FA3  02A0               	subwf	??___flge,f
  9555  1FA4  0874               	movf	___flge@ff1+1,w
  9556  1FA5  1C03               	skipc
  9557  1FA6  0F74               	incfsz	___flge@ff1+1,w
  9558  1FA7  2FA9               	goto	u4701
  9559  1FA8  2FAA               	goto	u4702
  9560  1FA9                     u4701:	
  9561  1FA9  02A1               	subwf	??___flge+1,f
  9562  1FAA                     u4702:	
  9563  1FAA  0875               	movf	___flge@ff1+2,w
  9564  1FAB  1C03               	skipc
  9565  1FAC  0F75               	incfsz	___flge@ff1+2,w
  9566  1FAD  2FAF               	goto	u4703
  9567  1FAE  2FB0               	goto	u4704
  9568  1FAF                     u4703:	
  9569  1FAF  02A2               	subwf	??___flge+2,f
  9570  1FB0                     u4704:	
  9571  1FB0  0876               	movf	___flge@ff1+3,w
  9572  1FB1  1C03               	skipc
  9573  1FB2  0F76               	incfsz	___flge@ff1+3,w
  9574  1FB3  2FB5               	goto	u4705
  9575  1FB4  2FB6               	goto	u4706
  9576  1FB5                     u4705:	
  9577  1FB5  02A3               	subwf	??___flge+3,f
  9578  1FB6                     u4706:	
  9579  1FB6  0823               	movf	??___flge+3,w
  9580  1FB7  00F6               	movwf	___flge@ff1+3
  9581  1FB8  0822               	movf	??___flge+2,w
  9582  1FB9  00F5               	movwf	___flge@ff1+2
  9583  1FBA  0821               	movf	??___flge+1,w
  9584  1FBB  00F4               	movwf	___flge@ff1+1
  9585  1FBC  0820               	movf	??___flge,w
  9586  1FBD  00F3               	movwf	___flge@ff1
  9587  1FBE                     l3009:	
  9588  1FBE  1FFA               	btfss	___flge@ff2+3,7
  9589  1FBF  2FC1               	goto	u4711
  9590  1FC0  2FC2               	goto	u4710
  9591  1FC1                     u4711:	
  9592  1FC1  2FE6               	goto	l562
  9593  1FC2                     u4710:	
  9594  1FC2                     l3011:	
  9595  1FC2  3000               	movlw	0
  9596  1FC3  00A0               	movwf	??___flge
  9597  1FC4  3000               	movlw	0
  9598  1FC5  00A1               	movwf	??___flge+1
  9599  1FC6  3000               	movlw	0
  9600  1FC7  00A2               	movwf	??___flge+2
  9601  1FC8  3080               	movlw	128
  9602  1FC9  00A3               	movwf	??___flge+3
  9603  1FCA  0877               	movf	___flge@ff2,w
  9604  1FCB  02A0               	subwf	??___flge,f
  9605  1FCC  0878               	movf	___flge@ff2+1,w
  9606  1FCD  1C03               	skipc
  9607  1FCE  0F78               	incfsz	___flge@ff2+1,w
  9608  1FCF  2FD1               	goto	u4721
  9609  1FD0  2FD2               	goto	u4722
  9610  1FD1                     u4721:	
  9611  1FD1  02A1               	subwf	??___flge+1,f
  9612  1FD2                     u4722:	
  9613  1FD2  0879               	movf	___flge@ff2+2,w
  9614  1FD3  1C03               	skipc
  9615  1FD4  0F79               	incfsz	___flge@ff2+2,w
  9616  1FD5  2FD7               	goto	u4723
  9617  1FD6  2FD8               	goto	u4724
  9618  1FD7                     u4723:	
  9619  1FD7  02A2               	subwf	??___flge+2,f
  9620  1FD8                     u4724:	
  9621  1FD8  087A               	movf	___flge@ff2+3,w
  9622  1FD9  1C03               	skipc
  9623  1FDA  0F7A               	incfsz	___flge@ff2+3,w
  9624  1FDB  2FDD               	goto	u4725
  9625  1FDC  2FDE               	goto	u4726
  9626  1FDD                     u4725:	
  9627  1FDD  02A3               	subwf	??___flge+3,f
  9628  1FDE                     u4726:	
  9629  1FDE  0823               	movf	??___flge+3,w
  9630  1FDF  00FA               	movwf	___flge@ff2+3
  9631  1FE0  0822               	movf	??___flge+2,w
  9632  1FE1  00F9               	movwf	___flge@ff2+2
  9633  1FE2  0821               	movf	??___flge+1,w
  9634  1FE3  00F8               	movwf	___flge@ff2+1
  9635  1FE4  0820               	movf	??___flge,w
  9636  1FE5  00F7               	movwf	___flge@ff2
  9637  1FE6                     l562:	
  9638  1FE6  3080               	movlw	128
  9639  1FE7  06F6               	xorwf	___flge@ff1+3,f
  9640  1FE8  3080               	movlw	128
  9641  1FE9  06FA               	xorwf	___flge@ff2+3,f
  9642  1FEA  087A               	movf	___flge@ff2+3,w
  9643  1FEB  0276               	subwf	___flge@ff1+3,w
  9644  1FEC  1D03               	skipz
  9645  1FED  2FF8               	goto	u4735
  9646  1FEE  0879               	movf	___flge@ff2+2,w
  9647  1FEF  0275               	subwf	___flge@ff1+2,w
  9648  1FF0  1D03               	skipz
  9649  1FF1  2FF8               	goto	u4735
  9650  1FF2  0878               	movf	___flge@ff2+1,w
  9651  1FF3  0274               	subwf	___flge@ff1+1,w
  9652  1FF4  1D03               	skipz
  9653  1FF5  2FF8               	goto	u4735
  9654  1FF6  0877               	movf	___flge@ff2,w
  9655  1FF7  0273               	subwf	___flge@ff1,w
  9656  1FF8                     u4735:	
  9657  1FF8  1803               	skipnc
  9658  1FF9  2FFB               	goto	u4731
  9659  1FFA  2FFC               	goto	u4730
  9660  1FFB                     u4731:	
  9661  1FFB  2FFE               	goto	l3015
  9662  1FFC                     u4730:	
  9663  1FFC                     l3013:	
  9664  1FFC  1003               	clrc
  9665  1FFD  2FFF               	goto	l563
  9666  1FFE                     l3015:	
  9667  1FFE  1403               	setc
  9668  1FFF                     l563:	
  9669  1FFF  0008               	return
  9670  2000                     __end_of___flge:	
  9671                           
  9672                           	psect	text23
  9673  1D2C                     __ptext23:	
  9674 ;; *************** function ___fleq *****************
  9675 ;; Defined at:
  9676 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  9677 ;; Parameters:    Size  Location     Type
  9678 ;;  ff1             4    3[COMMON] unsigned char 
  9679 ;;  ff2             4    7[COMMON] unsigned char 
  9680 ;; Auto vars:     Size  Location     Type
  9681 ;;		None
  9682 ;; Return value:  Size  Location     Type
  9683 ;;		None               void
  9684 ;; Registers used:
  9685 ;;		wreg, status,2, status,0
  9686 ;; Tracked objects:
  9687 ;;		On entry : 0/0
  9688 ;;		On exit  : 0/0
  9689 ;;		Unchanged: 0/0
  9690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9691 ;;      Params:         8       0       0       0       0
  9692 ;;      Locals:         0       0       0       0       0
  9693 ;;      Temps:          0       4       0       0       0
  9694 ;;      Totals:         8       4       0       0       0
  9695 ;;Total ram usage:       12 bytes
  9696 ;; Hardware stack levels used:    1
  9697 ;; Hardware stack levels required when called:    1
  9698 ;; This function calls:
  9699 ;;		Nothing
  9700 ;; This function is called by:
  9701 ;;		_sprintf
  9702 ;; This function uses a non-reentrant model
  9703 ;;
  9704                           
  9705                           
  9706                           ;psect for function ___fleq
  9707  1D2C                     ___fleq:	
  9708  1D2C                     l2987:	
  9709                           ;incstack = 0
  9710                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9711                           
  9712  1D2C  3000               	movlw	0
  9713  1D2D  0573               	andwf	___fleq@ff1,w
  9714  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
  9715  1D2F  1303               	bcf	3,6	;RP1=0, select bank0
  9716  1D30  00A0               	movwf	??___fleq
  9717  1D31  3000               	movlw	0
  9718  1D32  0574               	andwf	___fleq@ff1+1,w
  9719  1D33  00A1               	movwf	??___fleq+1
  9720  1D34  3080               	movlw	128
  9721  1D35  0575               	andwf	___fleq@ff1+2,w
  9722  1D36  00A2               	movwf	??___fleq+2
  9723  1D37  307F               	movlw	127
  9724  1D38  0576               	andwf	___fleq@ff1+3,w
  9725  1D39  00A3               	movwf	??___fleq+3
  9726  1D3A  0823               	movf	??___fleq+3,w
  9727  1D3B  0422               	iorwf	??___fleq+2,w
  9728  1D3C  0421               	iorwf	??___fleq+1,w
  9729  1D3D  0420               	iorwf	??___fleq,w
  9730  1D3E  1D03               	skipz
  9731  1D3F  2D41               	goto	u4641
  9732  1D40  2D42               	goto	u4640
  9733  1D41                     u4641:	
  9734  1D41  2D4A               	goto	l554
  9735  1D42                     u4640:	
  9736  1D42                     l2989:	
  9737  1D42  3000               	movlw	0
  9738  1D43  00F6               	movwf	___fleq@ff1+3
  9739  1D44  3000               	movlw	0
  9740  1D45  00F5               	movwf	___fleq@ff1+2
  9741  1D46  3000               	movlw	0
  9742  1D47  00F4               	movwf	___fleq@ff1+1
  9743  1D48  3000               	movlw	0
  9744  1D49  00F3               	movwf	___fleq@ff1
  9745  1D4A                     l554:	
  9746  1D4A  3000               	movlw	0
  9747  1D4B  0577               	andwf	___fleq@ff2,w
  9748  1D4C  00A0               	movwf	??___fleq
  9749  1D4D  3000               	movlw	0
  9750  1D4E  0578               	andwf	___fleq@ff2+1,w
  9751  1D4F  00A1               	movwf	??___fleq+1
  9752  1D50  3080               	movlw	128
  9753  1D51  0579               	andwf	___fleq@ff2+2,w
  9754  1D52  00A2               	movwf	??___fleq+2
  9755  1D53  307F               	movlw	127
  9756  1D54  057A               	andwf	___fleq@ff2+3,w
  9757  1D55  00A3               	movwf	??___fleq+3
  9758  1D56  0823               	movf	??___fleq+3,w
  9759  1D57  0422               	iorwf	??___fleq+2,w
  9760  1D58  0421               	iorwf	??___fleq+1,w
  9761  1D59  0420               	iorwf	??___fleq,w
  9762  1D5A  1D03               	skipz
  9763  1D5B  2D5D               	goto	u4651
  9764  1D5C  2D5E               	goto	u4650
  9765  1D5D                     u4651:	
  9766  1D5D  2D66               	goto	l555
  9767  1D5E                     u4650:	
  9768  1D5E                     l2991:	
  9769  1D5E  3000               	movlw	0
  9770  1D5F  00FA               	movwf	___fleq@ff2+3
  9771  1D60  3000               	movlw	0
  9772  1D61  00F9               	movwf	___fleq@ff2+2
  9773  1D62  3000               	movlw	0
  9774  1D63  00F8               	movwf	___fleq@ff2+1
  9775  1D64  3000               	movlw	0
  9776  1D65  00F7               	movwf	___fleq@ff2
  9777  1D66                     l555:	
  9778  1D66  087A               	movf	___fleq@ff2+3,w
  9779  1D67  0676               	xorwf	___fleq@ff1+3,w
  9780  1D68  1D03               	skipz
  9781  1D69  2D74               	goto	u4665
  9782  1D6A  0879               	movf	___fleq@ff2+2,w
  9783  1D6B  0675               	xorwf	___fleq@ff1+2,w
  9784  1D6C  1D03               	skipz
  9785  1D6D  2D74               	goto	u4665
  9786  1D6E  0878               	movf	___fleq@ff2+1,w
  9787  1D6F  0674               	xorwf	___fleq@ff1+1,w
  9788  1D70  1D03               	skipz
  9789  1D71  2D74               	goto	u4665
  9790  1D72  0877               	movf	___fleq@ff2,w
  9791  1D73  0673               	xorwf	___fleq@ff1,w
  9792  1D74                     u4665:	
  9793  1D74  1903               	skipnz
  9794  1D75  2D77               	goto	u4661
  9795  1D76  2D78               	goto	u4660
  9796  1D77                     u4661:	
  9797  1D77  2D7A               	goto	l2995
  9798  1D78                     u4660:	
  9799  1D78                     l2993:	
  9800  1D78  1003               	clrc
  9801  1D79  2D7B               	goto	l556
  9802  1D7A                     l2995:	
  9803  1D7A  1403               	setc
  9804  1D7B                     l556:	
  9805  1D7B  0008               	return
  9806  1D7C                     __end_of___fleq:	
  9807                           
  9808                           	psect	text24
  9809  1BB5                     __ptext24:	
  9810 ;; *************** function _Port_init *****************
  9811 ;; Defined at:
  9812 ;;		line 74 in file "main_lab3.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9826 ;;      Params:         0       0       0       0       0
  9827 ;;      Locals:         0       0       0       0       0
  9828 ;;      Temps:          0       0       0       0       0
  9829 ;;      Totals:         0       0       0       0       0
  9830 ;;Total ram usage:        0 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; Hardware stack levels required when called:    1
  9833 ;; This function calls:
  9834 ;;		Nothing
  9835 ;; This function is called by:
  9836 ;;		_main
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           
  9841                           ;psect for function _Port_init
  9842  1BB5                     _Port_init:	
  9843  1BB5                     l3181:	
  9844                           ;incstack = 0
  9845                           ; Regs used in _Port_init: [wreg+status,2]
  9846                           
  9847                           
  9848                           ;main_lab3.c: 75:     TRISA = 0x03;
  9849  1BB5  3003               	movlw	3
  9850  1BB6  1683               	bsf	3,5	;RP0=1, select bank1
  9851  1BB7  1303               	bcf	3,6	;RP1=0, select bank1
  9852  1BB8  0085               	movwf	5	;volatile
  9853  1BB9                     l3183:	
  9854                           
  9855                           ;main_lab3.c: 76:     ANSEL = 0;
  9856  1BB9  1683               	bsf	3,5	;RP0=1, select bank3
  9857  1BBA  1703               	bsf	3,6	;RP1=1, select bank3
  9858  1BBB  0188               	clrf	8	;volatile
  9859  1BBC                     l3185:	
  9860                           
  9861                           ;main_lab3.c: 77:     ANSEL = 0x03;
  9862  1BBC  3003               	movlw	3
  9863  1BBD  0088               	movwf	8	;volatile
  9864                           
  9865                           ;main_lab3.c: 78:     ANSELH = 0;
  9866  1BBE  0189               	clrf	9	;volatile
  9867                           
  9868                           ;main_lab3.c: 79:     TRISB = 0;
  9869  1BBF  1683               	bsf	3,5	;RP0=1, select bank1
  9870  1BC0  1303               	bcf	3,6	;RP1=0, select bank1
  9871  1BC1  0186               	clrf	6	;volatile
  9872                           
  9873                           ;main_lab3.c: 80:     PORTB = 0;
  9874  1BC2  1283               	bcf	3,5	;RP0=0, select bank0
  9875  1BC3  1303               	bcf	3,6	;RP1=0, select bank0
  9876  1BC4  0186               	clrf	6	;volatile
  9877                           
  9878                           ;main_lab3.c: 81:     TRISD = 0;
  9879  1BC5  1683               	bsf	3,5	;RP0=1, select bank1
  9880  1BC6  1303               	bcf	3,6	;RP1=0, select bank1
  9881  1BC7  0188               	clrf	8	;volatile
  9882                           
  9883                           ;main_lab3.c: 82:     PORTD = 0;
  9884  1BC8  1283               	bcf	3,5	;RP0=0, select bank0
  9885  1BC9  1303               	bcf	3,6	;RP1=0, select bank0
  9886  1BCA  0188               	clrf	8	;volatile
  9887                           
  9888                           ;main_lab3.c: 83:     PORTA = 0;
  9889  1BCB  0185               	clrf	5	;volatile
  9890  1BCC                     l106:	
  9891  1BCC  0008               	return
  9892  1BCD                     __end_of_Port_init:	
  9893                           
  9894                           	psect	text25
  9895  1CA0                     __ptext25:	
  9896 ;; *************** function _LCD_WRITE_STRING *****************
  9897 ;; Defined at:
  9898 ;;		line 66 in file "LCD_8bits_main.c"
  9899 ;; Parameters:    Size  Location     Type
  9900 ;;  a               2    6[COMMON] PTR unsigned char 
  9901 ;;		 -> STR_3(15), string2(5), string1(5), 
  9902 ;; Auto vars:     Size  Location     Type
  9903 ;;  i               2    0[BANK0 ] int 
  9904 ;; Return value:  Size  Location     Type
  9905 ;;                  1    wreg      void 
  9906 ;; Registers used:
  9907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9908 ;; Tracked objects:
  9909 ;;		On entry : 0/0
  9910 ;;		On exit  : 0/0
  9911 ;;		Unchanged: 0/0
  9912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9913 ;;      Params:         2       0       0       0       0
  9914 ;;      Locals:         0       2       0       0       0
  9915 ;;      Temps:          3       0       0       0       0
  9916 ;;      Totals:         5       2       0       0       0
  9917 ;;Total ram usage:        7 bytes
  9918 ;; Hardware stack levels used:    1
  9919 ;; Hardware stack levels required when called:    2
  9920 ;; This function calls:
  9921 ;;		_LCD_WRITE_CHAR
  9922 ;; This function is called by:
  9923 ;;		_main
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           
  9928                           ;psect for function _LCD_WRITE_STRING
  9929  1CA0                     _LCD_WRITE_STRING:	
  9930  1CA0                     l3173:	
  9931                           ;incstack = 0
  9932                           ; Regs used in _LCD_WRITE_STRING: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9933                           
  9934                           
  9935                           ;LCD_8bits_main.c: 67:     int i;;LCD_8bits_main.c: 68:     for(i=0; a[i]!='\0'; i++)
  9936  1CA0  1283               	bcf	3,5	;RP0=0, select bank0
  9937  1CA1  1303               	bcf	3,6	;RP1=0, select bank0
  9938  1CA2  01A0               	clrf	LCD_WRITE_STRING@i
  9939  1CA3  01A1               	clrf	LCD_WRITE_STRING@i+1
  9940  1CA4  2CC9               	goto	l3179
  9941  1CA5                     l3175:	
  9942                           
  9943                           ;LCD_8bits_main.c: 69:         LCD_WRITE_CHAR(a[i]);
  9944  1CA5  0820               	movf	LCD_WRITE_STRING@i,w
  9945  1CA6  0776               	addwf	LCD_WRITE_STRING@a,w
  9946  1CA7  00F9               	movwf	??_LCD_WRITE_STRING+1
  9947  1CA8  0877               	movf	LCD_WRITE_STRING@a+1,w
  9948  1CA9  00F8               	movwf	??_LCD_WRITE_STRING
  9949  1CAA  1803               	skipnc
  9950  1CAB  0AF8               	incf	??_LCD_WRITE_STRING,f
  9951  1CAC  1FA0               	btfss	LCD_WRITE_STRING@i,7
  9952  1CAD  2CAF               	goto	u5070
  9953  1CAE  03F8               	decf	??_LCD_WRITE_STRING,f
  9954  1CAF                     u5070:	
  9955  1CAF  0878               	movf	??_LCD_WRITE_STRING,w
  9956  1CB0  00FA               	movwf	??_LCD_WRITE_STRING+2
  9957  1CB1  087A               	movf	??_LCD_WRITE_STRING+2,w
  9958  1CB2  1283               	bcf	3,5	;RP0=0, select bank0
  9959  1CB3  1303               	bcf	3,6	;RP1=0, select bank0
  9960  1CB4  00FF               	movwf	btemp+1
  9961  1CB5  0879               	movf	??_LCD_WRITE_STRING+1,w
  9962  1CB6  0084               	movwf	4
  9963  1CB7  160A  158A  2000  160A  158A  	fcall	stringtab
  9964  1CBC  160A  158A  239E  160A  158A  	fcall	_LCD_WRITE_CHAR
  9965  1CC1                     l3177:	
  9966  1CC1  3001               	movlw	1
  9967  1CC2  1283               	bcf	3,5	;RP0=0, select bank0
  9968  1CC3  1303               	bcf	3,6	;RP1=0, select bank0
  9969  1CC4  07A0               	addwf	LCD_WRITE_STRING@i,f
  9970  1CC5  1803               	skipnc
  9971  1CC6  0AA1               	incf	LCD_WRITE_STRING@i+1,f
  9972  1CC7  3000               	movlw	0
  9973  1CC8  07A1               	addwf	LCD_WRITE_STRING@i+1,f
  9974  1CC9                     l3179:	
  9975  1CC9  0820               	movf	LCD_WRITE_STRING@i,w
  9976  1CCA  0776               	addwf	LCD_WRITE_STRING@a,w
  9977  1CCB  00F9               	movwf	??_LCD_WRITE_STRING+1
  9978  1CCC  0877               	movf	LCD_WRITE_STRING@a+1,w
  9979  1CCD  00F8               	movwf	??_LCD_WRITE_STRING
  9980  1CCE  1803               	skipnc
  9981  1CCF  0AF8               	incf	??_LCD_WRITE_STRING,f
  9982  1CD0  1FA0               	btfss	LCD_WRITE_STRING@i,7
  9983  1CD1  2CD3               	goto	u5080
  9984  1CD2  03F8               	decf	??_LCD_WRITE_STRING,f
  9985  1CD3                     u5080:	
  9986  1CD3  0878               	movf	??_LCD_WRITE_STRING,w
  9987  1CD4  00FA               	movwf	??_LCD_WRITE_STRING+2
  9988  1CD5  087A               	movf	??_LCD_WRITE_STRING+2,w
  9989  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
  9990  1CD7  1303               	bcf	3,6	;RP1=0, select bank0
  9991  1CD8  00FF               	movwf	btemp+1
  9992  1CD9  0879               	movf	??_LCD_WRITE_STRING+1,w
  9993  1CDA  0084               	movwf	4
  9994  1CDB  160A  158A  2000  160A  158A  	fcall	stringtab
  9995  1CE0  3A00               	xorlw	0
  9996  1CE1  1D03               	skipz
  9997  1CE2  2CE4               	goto	u5091
  9998  1CE3  2CE5               	goto	u5090
  9999  1CE4                     u5091:	
 10000  1CE4  2CA5               	goto	l3175
 10001  1CE5                     u5090:	
 10002  1CE5                     l30:	
 10003  1CE5  0008               	return
 10004  1CE6                     __end_of_LCD_WRITE_STRING:	
 10005                           
 10006                           	psect	text26
 10007  1B9E                     __ptext26:	
 10008 ;; *************** function _LCD_WRITE_CHAR *****************
 10009 ;; Defined at:
 10010 ;;		line 57 in file "LCD_8bits_main.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;  a               1    wreg     unsigned char 
 10013 ;; Auto vars:     Size  Location     Type
 10014 ;;  a               1    5[COMMON] unsigned char 
 10015 ;; Return value:  Size  Location     Type
 10016 ;;                  1    wreg      void 
 10017 ;; Registers used:
 10018 ;;		wreg
 10019 ;; Tracked objects:
 10020 ;;		On entry : 0/0
 10021 ;;		On exit  : 0/0
 10022 ;;		Unchanged: 0/0
 10023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10024 ;;      Params:         0       0       0       0       0
 10025 ;;      Locals:         1       0       0       0       0
 10026 ;;      Temps:          2       0       0       0       0
 10027 ;;      Totals:         3       0       0       0       0
 10028 ;;Total ram usage:        3 bytes
 10029 ;; Hardware stack levels used:    1
 10030 ;; Hardware stack levels required when called:    1
 10031 ;; This function calls:
 10032 ;;		Nothing
 10033 ;; This function is called by:
 10034 ;;		_LCD_WRITE_STRING
 10035 ;; This function uses a non-reentrant model
 10036 ;;
 10037                           
 10038                           
 10039                           ;psect for function _LCD_WRITE_CHAR
 10040  1B9E                     _LCD_WRITE_CHAR:	
 10041                           
 10042                           ;incstack = 0
 10043                           ; Regs used in _LCD_WRITE_CHAR: [wreg]
 10044                           ;LCD_WRITE_CHAR@a stored from wreg
 10045  1B9E  00F5               	movwf	LCD_WRITE_CHAR@a
 10046  1B9F                     l2767:	
 10047                           
 10048                           ;LCD_8bits_main.c: 58:     PORTDbits.RD5 = 1;
 10049  1B9F  1283               	bcf	3,5	;RP0=0, select bank0
 10050  1BA0  1303               	bcf	3,6	;RP1=0, select bank0
 10051  1BA1  1688               	bsf	8,5	;volatile
 10052  1BA2                     l2769:	
 10053                           
 10054                           ;LCD_8bits_main.c: 59:     PORTB = a;
 10055  1BA2  0875               	movf	LCD_WRITE_CHAR@a,w
 10056  1BA3  0086               	movwf	6	;volatile
 10057  1BA4                     l2771:	
 10058                           
 10059                           ;LCD_8bits_main.c: 60:     PORTDbits.RD7 = 1;
 10060  1BA4  1788               	bsf	8,7	;volatile
 10061                           
 10062                           ;LCD_8bits_main.c: 61:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 10063  1BA5  300D               	movlw	13
 10064  1BA6  00F3               	movwf	??_LCD_WRITE_CHAR
 10065  1BA7                     u5617:	
 10066  1BA7  0BF3               	decfsz	??_LCD_WRITE_CHAR,f
 10067  1BA8  2BA7               	goto	u5617
 10068  1BA9                     l2773:	
 10069                           
 10070                           ;LCD_8bits_main.c: 62:     PORTDbits.RD7 = 0;
 10071  1BA9  1283               	bcf	3,5	;RP0=0, select bank0
 10072  1BAA  1303               	bcf	3,6	;RP1=0, select bank0
 10073  1BAB  1388               	bcf	8,7	;volatile
 10074                           
 10075                           ;LCD_8bits_main.c: 63:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10076  1BAC  3007               	movlw	7
 10077  1BAD  00F4               	movwf	??_LCD_WRITE_CHAR+1
 10078  1BAE  307D               	movlw	125
 10079  1BAF  00F3               	movwf	??_LCD_WRITE_CHAR
 10080  1BB0                     u5627:	
 10081  1BB0  0BF3               	decfsz	??_LCD_WRITE_CHAR,f
 10082  1BB1  2BB0               	goto	u5627
 10083  1BB2  0BF4               	decfsz	??_LCD_WRITE_CHAR+1,f
 10084  1BB3  2BB0               	goto	u5627
 10085  1BB4                     l24:	
 10086  1BB4  0008               	return
 10087  1BB5                     __end_of_LCD_WRITE_CHAR:	
 10088                           
 10089                           	psect	text27
 10090  1BCD                     __ptext27:	
 10091 ;; *************** function _LCD_SET_CURSOR *****************
 10092 ;; Defined at:
 10093 ;;		line 25 in file "LCD_8bits_main.c"
 10094 ;; Parameters:    Size  Location     Type
 10095 ;;  a               1    wreg     unsigned char 
 10096 ;;  b               1    6[COMMON] unsigned char 
 10097 ;; Auto vars:     Size  Location     Type
 10098 ;;  a               1    8[COMMON] unsigned char 
 10099 ;;  temporal        1    9[COMMON] unsigned char 
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  1    wreg      void 
 10102 ;; Registers used:
 10103 ;;		wreg, status,2, status,0, pclath, cstack
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10109 ;;      Params:         1       0       0       0       0
 10110 ;;      Locals:         2       0       0       0       0
 10111 ;;      Temps:          1       0       0       0       0
 10112 ;;      Totals:         4       0       0       0       0
 10113 ;;Total ram usage:        4 bytes
 10114 ;; Hardware stack levels used:    1
 10115 ;; Hardware stack levels required when called:    2
 10116 ;; This function calls:
 10117 ;;		_LCD_CMD
 10118 ;; This function is called by:
 10119 ;;		_main
 10120 ;; This function uses a non-reentrant model
 10121 ;;
 10122                           
 10123                           
 10124                           ;psect for function _LCD_SET_CURSOR
 10125  1BCD                     _LCD_SET_CURSOR:	
 10126                           
 10127                           ;incstack = 0
 10128                           ; Regs used in _LCD_SET_CURSOR: [wreg+status,2+status,0+pclath+cstack]
 10129                           ;LCD_SET_CURSOR@a stored from wreg
 10130  1BCD  00F8               	movwf	LCD_SET_CURSOR@a
 10131  1BCE                     l3133:	
 10132                           
 10133                           ;LCD_8bits_main.c: 26:     uint8_t temporal;;LCD_8bits_main.c: 27:     if (a == 1) {
 10134  1BCE  0378               	decf	LCD_SET_CURSOR@a,w
 10135  1BCF  1D03               	btfss	3,2
 10136  1BD0  2BD2               	goto	u5051
 10137  1BD1  2BD3               	goto	u5050
 10138  1BD2                     u5051:	
 10139  1BD2  2BDF               	goto	l3139
 10140  1BD3                     u5050:	
 10141  1BD3                     l3135:	
 10142                           
 10143                           ;LCD_8bits_main.c: 28:         temporal = 0x80 + b - 1;
 10144  1BD3  0876               	movf	LCD_SET_CURSOR@b,w
 10145  1BD4  3E7F               	addlw	127
 10146  1BD5  00F7               	movwf	??_LCD_SET_CURSOR
 10147  1BD6  0877               	movf	??_LCD_SET_CURSOR,w
 10148  1BD7  00F9               	movwf	LCD_SET_CURSOR@temporal
 10149  1BD8                     l3137:	
 10150                           
 10151                           ;LCD_8bits_main.c: 29:         LCD_CMD(temporal);
 10152  1BD8  0879               	movf	LCD_SET_CURSOR@temporal,w
 10153  1BD9  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10154                           
 10155                           ;LCD_8bits_main.c: 30:     }
 10156  1BDE  2BF0               	goto	l18
 10157  1BDF                     l3139:	
 10158  1BDF  3002               	movlw	2
 10159  1BE0  0678               	xorwf	LCD_SET_CURSOR@a,w
 10160  1BE1  1D03               	btfss	3,2
 10161  1BE2  2BE4               	goto	u5061
 10162  1BE3  2BE5               	goto	u5060
 10163  1BE4                     u5061:	
 10164  1BE4  2BF0               	goto	l18
 10165  1BE5                     u5060:	
 10166  1BE5                     l3141:	
 10167                           
 10168                           ;LCD_8bits_main.c: 32:         temporal = 0xC0 + b - 1;
 10169  1BE5  0876               	movf	LCD_SET_CURSOR@b,w
 10170  1BE6  3EBF               	addlw	191
 10171  1BE7  00F7               	movwf	??_LCD_SET_CURSOR
 10172  1BE8  0877               	movf	??_LCD_SET_CURSOR,w
 10173  1BE9  00F9               	movwf	LCD_SET_CURSOR@temporal
 10174  1BEA                     l3143:	
 10175                           
 10176                           ;LCD_8bits_main.c: 33:         LCD_CMD(temporal);
 10177  1BEA  0879               	movf	LCD_SET_CURSOR@temporal,w
 10178  1BEB  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10179  1BF0                     l18:	
 10180  1BF0  0008               	return
 10181  1BF1                     __end_of_LCD_SET_CURSOR:	
 10182                           
 10183                           	psect	text28
 10184  1DCC                     __ptext28:	
 10185 ;; *************** function _LCD_INIT *****************
 10186 ;; Defined at:
 10187 ;;		line 37 in file "LCD_8bits_main.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;		None
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;		None
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  1    wreg      void 
 10194 ;; Registers used:
 10195 ;;		wreg, status,2, status,0, pclath, cstack
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10201 ;;      Params:         0       0       0       0       0
 10202 ;;      Locals:         0       0       0       0       0
 10203 ;;      Temps:          2       0       0       0       0
 10204 ;;      Totals:         2       0       0       0       0
 10205 ;;Total ram usage:        2 bytes
 10206 ;; Hardware stack levels used:    1
 10207 ;; Hardware stack levels required when called:    2
 10208 ;; This function calls:
 10209 ;;		_LCD_CMD
 10210 ;; This function is called by:
 10211 ;;		_main
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           
 10216                           ;psect for function _LCD_INIT
 10217  1DCC                     _LCD_INIT:	
 10218  1DCC                     l3145:	
 10219                           ;incstack = 0
 10220                           ; Regs used in _LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
 10221                           
 10222                           
 10223                           ;LCD_8bits_main.c: 38:     PORTB = 0;
 10224  1DCC  1283               	bcf	3,5	;RP0=0, select bank0
 10225  1DCD  1303               	bcf	3,6	;RP1=0, select bank0
 10226  1DCE  0186               	clrf	6	;volatile
 10227  1DCF                     l3147:	
 10228                           
 10229                           ;LCD_8bits_main.c: 39:     _delay((unsigned long)((15)*(4000000/4000.0)));
 10230  1DCF  3014               	movlw	20
 10231  1DD0  00F7               	movwf	??_LCD_INIT+1
 10232  1DD1  3079               	movlw	121
 10233  1DD2  00F6               	movwf	??_LCD_INIT
 10234  1DD3                     u5637:	
 10235  1DD3  0BF6               	decfsz	??_LCD_INIT,f
 10236  1DD4  2DD3               	goto	u5637
 10237  1DD5  0BF7               	decfsz	??_LCD_INIT+1,f
 10238  1DD6  2DD3               	goto	u5637
 10239  1DD7  2DD8               	nop2
 10240  1DD8                     l3149:	
 10241                           
 10242                           ;LCD_8bits_main.c: 40:     LCD_CMD(0x30);
 10243  1DD8  3030               	movlw	48
 10244  1DD9  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10245  1DDE                     l3151:	
 10246                           
 10247                           ;LCD_8bits_main.c: 41:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10248  1DDE  3007               	movlw	7
 10249  1DDF  00F7               	movwf	??_LCD_INIT+1
 10250  1DE0  307D               	movlw	125
 10251  1DE1  00F6               	movwf	??_LCD_INIT
 10252  1DE2                     u5647:	
 10253  1DE2  0BF6               	decfsz	??_LCD_INIT,f
 10254  1DE3  2DE2               	goto	u5647
 10255  1DE4  0BF7               	decfsz	??_LCD_INIT+1,f
 10256  1DE5  2DE2               	goto	u5647
 10257  1DE6                     l3153:	
 10258                           
 10259                           ;LCD_8bits_main.c: 42:     LCD_CMD(0x30);
 10260  1DE6  3030               	movlw	48
 10261  1DE7  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10262  1DEC                     l3155:	
 10263                           
 10264                           ;LCD_8bits_main.c: 43:     _delay((unsigned long)((160)*(4000000/4000000.0)));
 10265  1DEC  3035               	movlw	53
 10266  1DED  00F6               	movwf	??_LCD_INIT
 10267  1DEE                     u5657:	
 10268  1DEE  0BF6               	decfsz	??_LCD_INIT,f
 10269  1DEF  2DEE               	goto	u5657
 10270  1DF0                     l3157:	
 10271                           
 10272                           ;LCD_8bits_main.c: 44:     LCD_CMD(0x30);
 10273  1DF0  3030               	movlw	48
 10274  1DF1  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10275  1DF6                     l3159:	
 10276                           
 10277                           ;LCD_8bits_main.c: 45:     _delay((unsigned long)((160)*(4000000/4000000.0)));
 10278  1DF6  3035               	movlw	53
 10279  1DF7  00F6               	movwf	??_LCD_INIT
 10280  1DF8                     u5667:	
 10281  1DF8  0BF6               	decfsz	??_LCD_INIT,f
 10282  1DF9  2DF8               	goto	u5667
 10283  1DFA                     l3161:	
 10284                           
 10285                           ;LCD_8bits_main.c: 48:     LCD_CMD(0x02);
 10286  1DFA  3002               	movlw	2
 10287  1DFB  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10288  1E00                     l3163:	
 10289                           
 10290                           ;LCD_8bits_main.c: 49:     LCD_CMD(0x38);
 10291  1E00  3038               	movlw	56
 10292  1E01  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10293  1E06                     l3165:	
 10294                           
 10295                           ;LCD_8bits_main.c: 50:     LCD_CMD(0x08);
 10296  1E06  3008               	movlw	8
 10297  1E07  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10298  1E0C                     l3167:	
 10299                           
 10300                           ;LCD_8bits_main.c: 51:     LCD_CMD(0x01);
 10301  1E0C  3001               	movlw	1
 10302  1E0D  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10303  1E12                     l3169:	
 10304                           
 10305                           ;LCD_8bits_main.c: 52:     LCD_CMD(0x06);
 10306  1E12  3006               	movlw	6
 10307  1E13  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10308  1E18                     l3171:	
 10309                           
 10310                           ;LCD_8bits_main.c: 53:     LCD_CMD(0x0C);
 10311  1E18  300C               	movlw	12
 10312  1E19  160A  158A  2388  160A  158A  	fcall	_LCD_CMD
 10313  1E1E                     l21:	
 10314  1E1E  0008               	return
 10315  1E1F                     __end_of_LCD_INIT:	
 10316                           
 10317                           	psect	text29
 10318  1B88                     __ptext29:	
 10319 ;; *************** function _LCD_CMD *****************
 10320 ;; Defined at:
 10321 ;;		line 12 in file "LCD_8bits_main.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;  a               1    wreg     unsigned char 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  a               1    5[COMMON] unsigned char 
 10326 ;; Return value:  Size  Location     Type
 10327 ;;                  1    wreg      void 
 10328 ;; Registers used:
 10329 ;;		wreg
 10330 ;; Tracked objects:
 10331 ;;		On entry : 0/0
 10332 ;;		On exit  : 0/0
 10333 ;;		Unchanged: 0/0
 10334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10335 ;;      Params:         0       0       0       0       0
 10336 ;;      Locals:         1       0       0       0       0
 10337 ;;      Temps:          2       0       0       0       0
 10338 ;;      Totals:         3       0       0       0       0
 10339 ;;Total ram usage:        3 bytes
 10340 ;; Hardware stack levels used:    1
 10341 ;; Hardware stack levels required when called:    1
 10342 ;; This function calls:
 10343 ;;		Nothing
 10344 ;; This function is called by:
 10345 ;;		_LCD_SET_CURSOR
 10346 ;;		_LCD_INIT
 10347 ;;		_LCD_CLR
 10348 ;;		_LCD_SHIFT_RIGHT
 10349 ;;		_LCD_SHIFT_LEFT
 10350 ;; This function uses a non-reentrant model
 10351 ;;
 10352                           
 10353                           
 10354                           ;psect for function _LCD_CMD
 10355  1B88                     _LCD_CMD:	
 10356                           
 10357                           ;incstack = 0
 10358                           ; Regs used in _LCD_CMD: [wreg]
 10359                           ;LCD_CMD@a stored from wreg
 10360  1B88  00F5               	movwf	LCD_CMD@a
 10361  1B89                     l2757:	
 10362                           
 10363                           ;LCD_8bits_main.c: 13:     PORTDbits.RD5 = 0;
 10364  1B89  1283               	bcf	3,5	;RP0=0, select bank0
 10365  1B8A  1303               	bcf	3,6	;RP1=0, select bank0
 10366  1B8B  1288               	bcf	8,5	;volatile
 10367  1B8C                     l2759:	
 10368                           
 10369                           ;LCD_8bits_main.c: 14:     PORTB = a;
 10370  1B8C  0875               	movf	LCD_CMD@a,w
 10371  1B8D  0086               	movwf	6	;volatile
 10372  1B8E                     l2761:	
 10373                           
 10374                           ;LCD_8bits_main.c: 15:     PORTDbits.RD7 = 1;
 10375  1B8E  1788               	bsf	8,7	;volatile
 10376  1B8F                     l2763:	
 10377                           
 10378                           ;LCD_8bits_main.c: 16:     _delay((unsigned long)((5)*(4000000/4000000.0)));
 10379  1B8F  2B90               	nop2	;2 cycle nop
 10380  1B90  2B91               	nop2	;2 cycle nop
 10381  1B91  0000               	nop
 10382  1B92                     l2765:	
 10383                           
 10384                           ;LCD_8bits_main.c: 17:     PORTDbits.RD7 = 0;
 10385  1B92  1283               	bcf	3,5	;RP0=0, select bank0
 10386  1B93  1303               	bcf	3,6	;RP1=0, select bank0
 10387  1B94  1388               	bcf	8,7	;volatile
 10388                           
 10389                           ;LCD_8bits_main.c: 18:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10390  1B95  3007               	movlw	7
 10391  1B96  00F4               	movwf	??_LCD_CMD+1
 10392  1B97  307D               	movlw	125
 10393  1B98  00F3               	movwf	??_LCD_CMD
 10394  1B99                     u5677:	
 10395  1B99  0BF3               	decfsz	??_LCD_CMD,f
 10396  1B9A  2B99               	goto	u5677
 10397  1B9B  0BF4               	decfsz	??_LCD_CMD+1,f
 10398  1B9C  2B99               	goto	u5677
 10399  1B9D                     l9:	
 10400  1B9D  0008               	return
 10401  1B9E                     __end_of_LCD_CMD:	
 10402                           
 10403                           	psect	text30
 10404  12A7                     __ptext30:	
 10405 ;; *************** function _ADC_init *****************
 10406 ;; Defined at:
 10407 ;;		line 28 in file "../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c"
 10408 ;; Parameters:    Size  Location     Type
 10409 ;;  Fosc            1    wreg     unsigned char 
 10410 ;;  channel         1    3[COMMON] unsigned char 
 10411 ;;  int_on          1    4[COMMON] unsigned char 
 10412 ;;  left_or_righ    1    5[COMMON] unsigned char 
 10413 ;; Auto vars:     Size  Location     Type
 10414 ;;  Fosc            1    8[COMMON] unsigned char 
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  1    wreg      void 
 10417 ;; Registers used:
 10418 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10424 ;;      Params:         3       0       0       0       0
 10425 ;;      Locals:         1       0       0       0       0
 10426 ;;      Temps:          2       0       0       0       0
 10427 ;;      Totals:         6       0       0       0       0
 10428 ;;Total ram usage:        6 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:    1
 10431 ;; This function calls:
 10432 ;;		Nothing
 10433 ;; This function is called by:
 10434 ;;		_main
 10435 ;; This function uses a non-reentrant model
 10436 ;;
 10437                           
 10438                           
 10439                           ;psect for function _ADC_init
 10440  12A7                     _ADC_init:	
 10441                           
 10442                           ;incstack = 0
 10443                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
 10444                           ;ADC_init@Fosc stored from wreg
 10445  12A7  00F8               	movwf	ADC_init@Fosc
 10446  12A8                     l3187:	
 10447                           
 10448                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 29:     switch (Fosc) {
 10449  12A8  2AC2               	goto	l3191
 10450  12A9                     l128:	
 10451                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 30:         case 0:
 10452                           
 10453                           
 10454                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 31:             ADCON0bits
      +                          .ADCS1 = 0;
 10455  12A9  1283               	bcf	3,5	;RP0=0, select bank0
 10456  12AA  1303               	bcf	3,6	;RP1=0, select bank0
 10457  12AB  139F               	bcf	31,7	;volatile
 10458                           
 10459                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 32:             ADCON0bits
      +                          .ADCS0 = 0;
 10460  12AC  131F               	bcf	31,6	;volatile
 10461                           
 10462                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 33:             break;
 10463  12AD  2B1E               	goto	l3195
 10464  12AE                     l130:	
 10465                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 34:         case 1:
 10466                           
 10467                           
 10468                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 35:             ADCON0bits
      +                          .ADCS1 = 0;
 10469  12AE  1283               	bcf	3,5	;RP0=0, select bank0
 10470  12AF  1303               	bcf	3,6	;RP1=0, select bank0
 10471  12B0  139F               	bcf	31,7	;volatile
 10472                           
 10473                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 36:             ADCON0bits
      +                          .ADCS0 = 1;
 10474  12B1  171F               	bsf	31,6	;volatile
 10475                           
 10476                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 37:             break;
 10477  12B2  2B1E               	goto	l3195
 10478  12B3                     l131:	
 10479                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 38:         case 2:
 10480                           
 10481                           
 10482                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 39:             ADCON0bits
      +                          .ADCS1 = 1;
 10483  12B3  1283               	bcf	3,5	;RP0=0, select bank0
 10484  12B4  1303               	bcf	3,6	;RP1=0, select bank0
 10485  12B5  179F               	bsf	31,7	;volatile
 10486                           
 10487                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 40:             ADCON0bits
      +                          .ADCS0 = 0;
 10488  12B6  131F               	bcf	31,6	;volatile
 10489                           
 10490                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 41:             break;
 10491  12B7  2B1E               	goto	l3195
 10492  12B8                     l132:	
 10493                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 42:         case 3:
 10494                           
 10495                           
 10496                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 43:             ADCON0bits
      +                          .ADCS1 = 1;
 10497  12B8  1283               	bcf	3,5	;RP0=0, select bank0
 10498  12B9  1303               	bcf	3,6	;RP1=0, select bank0
 10499  12BA  179F               	bsf	31,7	;volatile
 10500                           
 10501                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 44:             ADCON0bits
      +                          .ADCS0 = 1;
 10502  12BB  171F               	bsf	31,6	;volatile
 10503                           
 10504                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 45:             break;
 10505  12BC  2B1E               	goto	l3195
 10506  12BD                     l133:	
 10507                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 46:         default:
 10508                           
 10509                           
 10510                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 47:             ADCON0bits
      +                          .ADCS1 = 0;
 10511  12BD  1283               	bcf	3,5	;RP0=0, select bank0
 10512  12BE  1303               	bcf	3,6	;RP1=0, select bank0
 10513  12BF  139F               	bcf	31,7	;volatile
 10514                           
 10515                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 48:             ADCON0bits
      +                          .ADCS0 = 1;
 10516  12C0  171F               	bsf	31,6	;volatile
 10517                           
 10518                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 49:             break;
 10519  12C1  2B1E               	goto	l3195
 10520  12C2                     l3191:	
 10521  12C2  0878               	movf	ADC_init@Fosc,w
 10522  12C3  00F6               	movwf	??_ADC_init
 10523  12C4  01F7               	clrf	??_ADC_init+1
 10524                           
 10525                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10526                           ; Switch size 1, requested type "simple"
 10527                           ; Number of cases is 1, Range of values is 0 to 0
 10528                           ; switch strategies available:
 10529                           ; Name         Instructions Cycles
 10530                           ; simple_byte            4     3 (average)
 10531                           ; direct_byte           11     8 (fixed)
 10532                           ; jumptable            260     6 (fixed)
 10533                           ;	Chosen strategy is simple_byte
 10534  12C5  0877               	movf	??_ADC_init+1,w
 10535  12C6  3A00               	xorlw	0	; case 0
 10536  12C7  1903               	skipnz
 10537  12C8  2ACA               	goto	l3601
 10538  12C9  2ABD               	goto	l133
 10539  12CA                     l3601:	
 10540                           
 10541                           ; Switch size 1, requested type "simple"
 10542                           ; Number of cases is 4, Range of values is 0 to 3
 10543                           ; switch strategies available:
 10544                           ; Name         Instructions Cycles
 10545                           ; simple_byte           13     7 (average)
 10546                           ; direct_byte           20     8 (fixed)
 10547                           ; jumptable            260     6 (fixed)
 10548                           ;	Chosen strategy is simple_byte
 10549  12CA  0876               	movf	??_ADC_init,w
 10550  12CB  3A00               	xorlw	0	; case 0
 10551  12CC  1903               	skipnz
 10552  12CD  2AA9               	goto	l128
 10553  12CE  3A01               	xorlw	1	; case 1
 10554  12CF  1903               	skipnz
 10555  12D0  2AAE               	goto	l130
 10556  12D1  3A03               	xorlw	3	; case 2
 10557  12D2  1903               	skipnz
 10558  12D3  2AB3               	goto	l131
 10559  12D4  3A01               	xorlw	1	; case 3
 10560  12D5  1903               	skipnz
 10561  12D6  2AB8               	goto	l132
 10562  12D7  2ABD               	goto	l133
 10563  12D8                     l135:	
 10564                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 53:         case 0:
 10565                           
 10566                           
 10567                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 54:             ADCON0bits
      +                          .CHS0 = 0;
 10568  12D8  111F               	bcf	31,2	;volatile
 10569                           
 10570                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 55:             ADCON0bits
      +                          .CHS1 = 0;
 10571  12D9  119F               	bcf	31,3	;volatile
 10572                           
 10573                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 56:             ADCON0bits
      +                          .CHS2 = 0;
 10574  12DA  121F               	bcf	31,4	;volatile
 10575                           
 10576                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 57:             ADCON0bits
      +                          .CHS3 = 0;
 10577  12DB  129F               	bcf	31,5	;volatile
 10578                           
 10579                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 58:             break;
 10580  12DC  2B52               	goto	l136
 10581  12DD                     l137:	
 10582                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 59:         case 1:
 10583                           
 10584                           
 10585                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 60:             ADCON0bits
      +                          .CHS0 = 1;
 10586  12DD  151F               	bsf	31,2	;volatile
 10587                           
 10588                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 61:             ADCON0bits
      +                          .CHS1 = 0;
 10589  12DE  119F               	bcf	31,3	;volatile
 10590                           
 10591                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 62:             ADCON0bits
      +                          .CHS2 = 0;
 10592  12DF  121F               	bcf	31,4	;volatile
 10593                           
 10594                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 63:             ADCON0bits
      +                          .CHS3 = 0;
 10595  12E0  129F               	bcf	31,5	;volatile
 10596                           
 10597                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 64:             break;
 10598  12E1  2B52               	goto	l136
 10599  12E2                     l138:	
 10600                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 65:         case 2:
 10601                           
 10602                           
 10603                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 66:             ADCON0bits
      +                          .CHS0 = 0;
 10604  12E2  111F               	bcf	31,2	;volatile
 10605                           
 10606                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 67:             ADCON0bits
      +                          .CHS1 = 1;
 10607  12E3  159F               	bsf	31,3	;volatile
 10608                           
 10609                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 68:             ADCON0bits
      +                          .CHS2 = 0;
 10610  12E4  121F               	bcf	31,4	;volatile
 10611                           
 10612                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 69:             ADCON0bits
      +                          .CHS3 = 0;
 10613  12E5  129F               	bcf	31,5	;volatile
 10614                           
 10615                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 70:             break;
 10616  12E6  2B52               	goto	l136
 10617  12E7                     l139:	
 10618                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 71:         case 3:
 10619                           
 10620                           
 10621                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 72:             ADCON0bits
      +                          .CHS0 = 1;
 10622  12E7  151F               	bsf	31,2	;volatile
 10623                           
 10624                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 73:             ADCON0bits
      +                          .CHS1 = 1;
 10625  12E8  159F               	bsf	31,3	;volatile
 10626                           
 10627                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 74:             ADCON0bits
      +                          .CHS2 = 0;
 10628  12E9  121F               	bcf	31,4	;volatile
 10629                           
 10630                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 75:             ADCON0bits
      +                          .CHS3 = 0;
 10631  12EA  129F               	bcf	31,5	;volatile
 10632                           
 10633                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 76:             break;
 10634  12EB  2B52               	goto	l136
 10635  12EC                     l140:	
 10636                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 77:         case 4:
 10637                           
 10638                           
 10639                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 78:             ADCON0bits
      +                          .CHS0 = 0;
 10640  12EC  111F               	bcf	31,2	;volatile
 10641                           
 10642                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 79:             ADCON0bits
      +                          .CHS1 = 0;
 10643  12ED  119F               	bcf	31,3	;volatile
 10644                           
 10645                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 80:             ADCON0bits
      +                          .CHS2 = 1;
 10646  12EE  161F               	bsf	31,4	;volatile
 10647                           
 10648                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 81:             ADCON0bits
      +                          .CHS3 = 0;
 10649  12EF  129F               	bcf	31,5	;volatile
 10650                           
 10651                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 82:             break;
 10652  12F0  2B52               	goto	l136
 10653  12F1                     l141:	
 10654                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 83:         case 5:
 10655                           
 10656                           
 10657                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 84:             ADCON0bits
      +                          .CHS0 = 1;
 10658  12F1  151F               	bsf	31,2	;volatile
 10659                           
 10660                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 85:             ADCON0bits
      +                          .CHS1 = 0;
 10661  12F2  119F               	bcf	31,3	;volatile
 10662                           
 10663                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 86:             ADCON0bits
      +                          .CHS2 = 1;
 10664  12F3  161F               	bsf	31,4	;volatile
 10665                           
 10666                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 87:             ADCON0bits
      +                          .CHS3 = 0;
 10667  12F4  129F               	bcf	31,5	;volatile
 10668                           
 10669                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 88:             break;
 10670  12F5  2B52               	goto	l136
 10671  12F6                     l142:	
 10672                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 89:         case 6:
 10673                           
 10674                           
 10675                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 90:             ADCON0bits
      +                          .CHS0 = 0;
 10676  12F6  111F               	bcf	31,2	;volatile
 10677                           
 10678                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 91:             ADCON0bits
      +                          .CHS1 = 1;
 10679  12F7  159F               	bsf	31,3	;volatile
 10680                           
 10681                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 92:             ADCON0bits
      +                          .CHS2 = 1;
 10682  12F8  161F               	bsf	31,4	;volatile
 10683                           
 10684                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 93:             ADCON0bits
      +                          .CHS3 = 0;
 10685  12F9  129F               	bcf	31,5	;volatile
 10686                           
 10687                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 94:             break;
 10688  12FA  2B52               	goto	l136
 10689  12FB                     l143:	
 10690                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 95:         case 7:
 10691                           
 10692                           
 10693                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 96:             ADCON0bits
      +                          .CHS0 = 1;
 10694  12FB  151F               	bsf	31,2	;volatile
 10695                           
 10696                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 97:             ADCON0bits
      +                          .CHS1 = 1;
 10697  12FC  159F               	bsf	31,3	;volatile
 10698                           
 10699                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 98:             ADCON0bits
      +                          .CHS2 = 1;
 10700  12FD  161F               	bsf	31,4	;volatile
 10701                           
 10702                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 99:             ADCON0bits
      +                          .CHS3 = 0;
 10703  12FE  129F               	bcf	31,5	;volatile
 10704                           
 10705                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 100:             break;
 10706  12FF  2B52               	goto	l136
 10707  1300                     l144:	
 10708                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 101:         case 8:
 10709                           
 10710                           
 10711                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 102:             ADCON0bit
      +                          s.CHS0 = 0;
 10712  1300  111F               	bcf	31,2	;volatile
 10713                           
 10714                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 103:             ADCON0bit
      +                          s.CHS1 = 0;
 10715  1301  119F               	bcf	31,3	;volatile
 10716                           
 10717                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 104:             ADCON0bit
      +                          s.CHS2 = 0;
 10718  1302  121F               	bcf	31,4	;volatile
 10719                           
 10720                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 105:             ADCON0bit
      +                          s.CHS3 = 1;
 10721  1303  169F               	bsf	31,5	;volatile
 10722                           
 10723                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 106:             break;
 10724  1304  2B52               	goto	l136
 10725  1305                     l145:	
 10726                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 107:         case 9:
 10727                           
 10728                           
 10729                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 108:             ADCON0bit
      +                          s.CHS0 = 1;
 10730  1305  151F               	bsf	31,2	;volatile
 10731                           
 10732                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 109:             ADCON0bit
      +                          s.CHS1 = 0;
 10733  1306  119F               	bcf	31,3	;volatile
 10734                           
 10735                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 110:             ADCON0bit
      +                          s.CHS2 = 0;
 10736  1307  121F               	bcf	31,4	;volatile
 10737                           
 10738                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 111:             ADCON0bit
      +                          s.CHS3 = 1;
 10739  1308  169F               	bsf	31,5	;volatile
 10740                           
 10741                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 112:             break;
 10742  1309  2B52               	goto	l136
 10743  130A                     l146:	
 10744                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 113:         case 10:
 10745                           
 10746                           
 10747                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 114:             ADCON0bit
      +                          s.CHS0 = 0;
 10748  130A  111F               	bcf	31,2	;volatile
 10749                           
 10750                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 115:             ADCON0bit
      +                          s.CHS1 = 1;
 10751  130B  159F               	bsf	31,3	;volatile
 10752                           
 10753                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 116:             ADCON0bit
      +                          s.CHS2 = 0;
 10754  130C  121F               	bcf	31,4	;volatile
 10755                           
 10756                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 117:             ADCON0bit
      +                          s.CHS3 = 1;
 10757  130D  169F               	bsf	31,5	;volatile
 10758                           
 10759                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 118:             break;
 10760  130E  2B52               	goto	l136
 10761  130F                     l147:	
 10762                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 119:         case 11:
 10763                           
 10764                           
 10765                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 120:             ADCON0bit
      +                          s.CHS0 = 1;
 10766  130F  151F               	bsf	31,2	;volatile
 10767                           
 10768                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 121:             ADCON0bit
      +                          s.CHS1 = 1;
 10769  1310  159F               	bsf	31,3	;volatile
 10770                           
 10771                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 122:             ADCON0bit
      +                          s.CHS2 = 0;
 10772  1311  121F               	bcf	31,4	;volatile
 10773                           
 10774                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 123:             ADCON0bit
      +                          s.CHS3 = 1;
 10775  1312  169F               	bsf	31,5	;volatile
 10776                           
 10777                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 124:             break;
 10778  1313  2B52               	goto	l136
 10779  1314                     l148:	
 10780                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 125:         case 12:
 10781                           
 10782                           
 10783                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 126:             ADCON0bit
      +                          s.CHS0 = 0;
 10784  1314  111F               	bcf	31,2	;volatile
 10785                           
 10786                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 127:             ADCON0bit
      +                          s.CHS1 = 0;
 10787  1315  119F               	bcf	31,3	;volatile
 10788                           
 10789                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 128:             ADCON0bit
      +                          s.CHS2 = 1;
 10790  1316  161F               	bsf	31,4	;volatile
 10791                           
 10792                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 129:             ADCON0bit
      +                          s.CHS3 = 1;
 10793  1317  169F               	bsf	31,5	;volatile
 10794                           
 10795                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 130:             break;
 10796  1318  2B52               	goto	l136
 10797  1319                     l149:	
 10798                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 131:         case 13:
 10799                           
 10800                           
 10801                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 132:             ADCON0bit
      +                          s.CHS0 = 1;
 10802  1319  151F               	bsf	31,2	;volatile
 10803                           
 10804                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 133:             ADCON0bit
      +                          s.CHS1 = 0;
 10805  131A  119F               	bcf	31,3	;volatile
 10806                           
 10807                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 134:             ADCON0bit
      +                          s.CHS2 = 1;
 10808  131B  161F               	bsf	31,4	;volatile
 10809                           
 10810                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 135:             ADCON0bit
      +                          s.CHS3 = 1;
 10811  131C  169F               	bsf	31,5	;volatile
 10812                           
 10813                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 136:             break;
 10814  131D  2B52               	goto	l136
 10815  131E                     l3195:	
 10816  131E  0873               	movf	ADC_init@channel,w
 10817  131F  00F6               	movwf	??_ADC_init
 10818  1320  01F7               	clrf	??_ADC_init+1
 10819                           
 10820                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10821                           ; Switch size 1, requested type "simple"
 10822                           ; Number of cases is 1, Range of values is 0 to 0
 10823                           ; switch strategies available:
 10824                           ; Name         Instructions Cycles
 10825                           ; simple_byte            4     3 (average)
 10826                           ; direct_byte           11     8 (fixed)
 10827                           ; jumptable            260     6 (fixed)
 10828                           ;	Chosen strategy is simple_byte
 10829  1321  0877               	movf	??_ADC_init+1,w
 10830  1322  3A00               	xorlw	0	; case 0
 10831  1323  1903               	skipnz
 10832  1324  2B26               	goto	l3603
 10833  1325  2B52               	goto	l136
 10834  1326                     l3603:	
 10835                           
 10836                           ; Switch size 1, requested type "simple"
 10837                           ; Number of cases is 14, Range of values is 0 to 13
 10838                           ; switch strategies available:
 10839                           ; Name         Instructions Cycles
 10840                           ; simple_byte           43    22 (average)
 10841                           ; direct_byte           50     8 (fixed)
 10842                           ; jumptable            260     6 (fixed)
 10843                           ;	Chosen strategy is simple_byte
 10844  1326  0876               	movf	??_ADC_init,w
 10845  1327  3A00               	xorlw	0	; case 0
 10846  1328  1903               	skipnz
 10847  1329  2AD8               	goto	l135
 10848  132A  3A01               	xorlw	1	; case 1
 10849  132B  1903               	skipnz
 10850  132C  2ADD               	goto	l137
 10851  132D  3A03               	xorlw	3	; case 2
 10852  132E  1903               	skipnz
 10853  132F  2AE2               	goto	l138
 10854  1330  3A01               	xorlw	1	; case 3
 10855  1331  1903               	skipnz
 10856  1332  2AE7               	goto	l139
 10857  1333  3A07               	xorlw	7	; case 4
 10858  1334  1903               	skipnz
 10859  1335  2AEC               	goto	l140
 10860  1336  3A01               	xorlw	1	; case 5
 10861  1337  1903               	skipnz
 10862  1338  2AF1               	goto	l141
 10863  1339  3A03               	xorlw	3	; case 6
 10864  133A  1903               	skipnz
 10865  133B  2AF6               	goto	l142
 10866  133C  3A01               	xorlw	1	; case 7
 10867  133D  1903               	skipnz
 10868  133E  2AFB               	goto	l143
 10869  133F  3A0F               	xorlw	15	; case 8
 10870  1340  1903               	skipnz
 10871  1341  2B00               	goto	l144
 10872  1342  3A01               	xorlw	1	; case 9
 10873  1343  1903               	skipnz
 10874  1344  2B05               	goto	l145
 10875  1345  3A03               	xorlw	3	; case 10
 10876  1346  1903               	skipnz
 10877  1347  2B0A               	goto	l146
 10878  1348  3A01               	xorlw	1	; case 11
 10879  1349  1903               	skipnz
 10880  134A  2B0F               	goto	l147
 10881  134B  3A07               	xorlw	7	; case 12
 10882  134C  1903               	skipnz
 10883  134D  2B14               	goto	l148
 10884  134E  3A01               	xorlw	1	; case 13
 10885  134F  1903               	skipnz
 10886  1350  2B19               	goto	l149
 10887  1351  2B52               	goto	l136
 10888  1352                     l136:	
 10889                           
 10890                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 140:     ADCON0bits.ADON =
      +                           1;
 10891  1352  141F               	bsf	31,0	;volatile
 10892  1353                     l3197:	
 10893                           
 10894                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 141:     if (int_on == 1){
 10895  1353  0374               	decf	ADC_init@int_on,w
 10896  1354  1D03               	btfss	3,2
 10897  1355  2B57               	goto	u5101
 10898  1356  2B58               	goto	u5100
 10899  1357                     u5101:	
 10900  1357  2B5E               	goto	l3201
 10901  1358                     u5100:	
 10902  1358                     l3199:	
 10903                           
 10904                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 142:         PIR1bits.ADIF
      +                           = 0;
 10905  1358  130C               	bcf	12,6	;volatile
 10906                           
 10907                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 143:         PIE1bits.ADIE
      +                           = 1;
 10908  1359  1683               	bsf	3,5	;RP0=1, select bank1
 10909  135A  1303               	bcf	3,6	;RP1=0, select bank1
 10910  135B  170C               	bsf	12,6	;volatile
 10911                           
 10912                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 144:         INTCONbits.PE
      +                          IE = 1;
 10913  135C  170B               	bsf	11,6	;volatile
 10914                           
 10915                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 145:         INTCONbits.GI
      +                          E = 1;
 10916  135D  178B               	bsf	11,7	;volatile
 10917  135E                     l3201:	
 10918                           
 10919                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 147:     ADCON1bits.ADFM =
      +                           left_or_right;
 10920  135E  0C75               	rrf	ADC_init@left_or_right,w
 10921  135F  1683               	bsf	3,5	;RP0=1, select bank1
 10922  1360  1303               	bcf	3,6	;RP1=0, select bank1
 10923  1361  1C03               	skipc
 10924  1362  139F               	bcf	31,7	;volatile
 10925  1363  1803               	skipnc
 10926  1364  179F               	bsf	31,7	;volatile
 10927  1365                     l3203:	
 10928                           
 10929                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 148:     ADCON1bits.VCFG0 
      +                          = 0;
 10930  1365  121F               	bcf	31,4	;volatile
 10931  1366                     l3205:	
 10932                           
 10933                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 149:     ADCON1bits.VCFG1 
      +                          = 0;
 10934  1366  129F               	bcf	31,5	;volatile
 10935  1367                     l3207:	
 10936                           
 10937                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 150:     ADCON0bits.GO_DON
      +                          E = 1;
 10938  1367  1283               	bcf	3,5	;RP0=0, select bank0
 10939  1368  1303               	bcf	3,6	;RP1=0, select bank0
 10940  1369  149F               	bsf	31,1	;volatile
 10941  136A                     l151:	
 10942  136A  0008               	return
 10943  136B                     __end_of_ADC_init:	
 10944                           
 10945                           	psect	text31
 10946  1C16                     __ptext31:	
 10947 ;; *************** function _isr *****************
 10948 ;; Defined at:
 10949 ;;		line 37 in file "main_lab3.c"
 10950 ;; Parameters:    Size  Location     Type
 10951 ;;		None
 10952 ;; Auto vars:     Size  Location     Type
 10953 ;;		None
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  1    wreg      void 
 10956 ;; Registers used:
 10957 ;;		wreg
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10963 ;;      Params:         0       0       0       0       0
 10964 ;;      Locals:         0       0       0       0       0
 10965 ;;      Temps:          3       0       0       0       0
 10966 ;;      Totals:         3       0       0       0       0
 10967 ;;Total ram usage:        3 bytes
 10968 ;; Hardware stack levels used:    1
 10969 ;; This function calls:
 10970 ;;		Nothing
 10971 ;; This function is called by:
 10972 ;;		Interrupt level 1
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           
 10977                           ;psect for function _isr
 10978  1C16                     _isr:	
 10979  1C16                     i1l3487:	
 10980                           
 10981                           ;main_lab3.c: 38:     if (PIR1bits.ADIF == 1){
 10982  1C16  1283               	bcf	3,5	;RP0=0, select bank0
 10983  1C17  1303               	bcf	3,6	;RP1=0, select bank0
 10984  1C18  1F0C               	btfss	12,6	;volatile
 10985  1C19  2C1B               	goto	u558_21
 10986  1C1A  2C1C               	goto	u558_20
 10987  1C1B                     u558_21:	
 10988  1C1B  2C36               	goto	i1l94
 10989  1C1C                     u558_20:	
 10990  1C1C                     i1l3489:	
 10991                           
 10992                           ;main_lab3.c: 39:         PIR1bits.ADIF = 0;
 10993  1C1C  130C               	bcf	12,6	;volatile
 10994                           
 10995                           ;main_lab3.c: 40:         start_another = 1;
 10996  1C1D  1683               	bsf	3,5	;RP0=1, select bank1
 10997  1C1E  1303               	bcf	3,6	;RP1=0, select bank1
 10998  1C1F  01D4               	clrf	_start_another^(0+128)
 10999  1C20  0AD4               	incf	_start_another^(0+128),f
 11000                           
 11001                           ;main_lab3.c: 41:         if (ADCON0bits.CHS0 == 0){
 11002  1C21  1283               	bcf	3,5	;RP0=0, select bank0
 11003  1C22  1303               	bcf	3,6	;RP1=0, select bank0
 11004  1C23  191F               	btfsc	31,2	;volatile
 11005  1C24  2C26               	goto	u559_21
 11006  1C25  2C27               	goto	u559_20
 11007  1C26                     u559_21:	
 11008  1C26  2C31               	goto	i1l3495
 11009  1C27                     u559_20:	
 11010  1C27                     i1l3491:	
 11011                           
 11012                           ;main_lab3.c: 42:             pot2 = ADRESH;
 11013  1C27  081E               	movf	30,w	;volatile
 11014  1C28  00F0               	movwf	??_isr
 11015  1C29  0870               	movf	??_isr,w
 11016  1C2A  1683               	bsf	3,5	;RP0=1, select bank1
 11017  1C2B  1303               	bcf	3,6	;RP1=0, select bank1
 11018  1C2C  00D5               	movwf	_pot2^(0+128)
 11019  1C2D                     i1l3493:	
 11020                           
 11021                           ;main_lab3.c: 43:             ADCON0bits.CHS0 = 1;
 11022  1C2D  1283               	bcf	3,5	;RP0=0, select bank0
 11023  1C2E  1303               	bcf	3,6	;RP1=0, select bank0
 11024  1C2F  151F               	bsf	31,2	;volatile
 11025                           
 11026                           ;main_lab3.c: 44:         }else{
 11027  1C30  2C36               	goto	i1l94
 11028  1C31                     i1l3495:	
 11029                           
 11030                           ;main_lab3.c: 45:             pot1 = ADRESH;
 11031  1C31  081E               	movf	30,w	;volatile
 11032  1C32  00F0               	movwf	??_isr
 11033  1C33  0870               	movf	??_isr,w
 11034  1C34  00EF               	movwf	_pot1
 11035  1C35                     i1l3497:	
 11036                           
 11037                           ;main_lab3.c: 46:             ADCON0bits.CHS0 = 0;
 11038  1C35  111F               	bcf	31,2	;volatile
 11039  1C36                     i1l94:	
 11040  1C36  0872               	movf	??_isr+2,w
 11041  1C37  008A               	movwf	10
 11042  1C38  0E71               	swapf	(??_isr+1)^(0+4294967168),w
 11043  1C39  0083               	movwf	3
 11044  1C3A  0EFE               	swapf	btemp,f
 11045  1C3B  0E7E               	swapf	btemp,w
 11046  1C3C  0009               	retfie
 11047  1C3D                     __end_of_isr:	
 11048  007E                     btemp	set	126	;btemp
 11049  007E                     wtemp0	set	126
 11050                           
 11051                           	psect	intentry
 11052  0004                     __pintentry:	
 11053                           ;incstack = 0
 11054                           ; Regs used in _isr: [wreg]
 11055                           
 11056  0004                     interrupt_function:	
 11057  007E                     saved_w	set	btemp
 11058  0004  00FE               	movwf	btemp
 11059  0005  0E03               	swapf	3,w
 11060  0006  00F1               	movwf	??_isr+1
 11061  0007  080A               	movf	10,w
 11062  0008  00F2               	movwf	??_isr+2
 11063  0009  160A  158A  2C16   	ljmp	_isr


Data Sizes:
    Strings     21
    Constant    144
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      80
    BANK1            80     44      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> string2(BANK1[5]), string1(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_WRITE_STRING@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), string2(BANK1[5]), string1(BANK1[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_WRITE_STRING
    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _LCD_WRITE_STRING->_LCD_WRITE_CHAR
    _LCD_SET_CURSOR->_LCD_CMD
    _LCD_INIT->_LCD_CMD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   38578
                                             40 BANK1      4     4      0
                           _ADC_init
                           _LCD_INIT
                     _LCD_SET_CURSOR
                   _LCD_WRITE_STRING
                          _Port_init
                            ___flmul
                           ___xxtofl
                            _sprintf
                   _start_conversion
 ---------------------------------------------------------------------------------
 (1) _start_conversion                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32269
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_WRITE_STRING                                     7     5      2     340
                                              6 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _LCD_WRITE_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_WRITE_CHAR                                       3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_SET_CURSOR                                       4     3      1     384
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             2     2      0      22
                                              6 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _LCD_INIT
     _LCD_CMD
   _LCD_SET_CURSOR
     _LCD_CMD
   _LCD_WRITE_STRING
     _LCD_WRITE_CHAR
   _Port_init
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _start_conversion

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      40       7       80.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 11 08:14:26 2020

          ?_LCD_WRITE_CHAR 0070                          l9 1B9D                          pc 0002  
              __CFG_CP$OFF 0000                         l21 1E1E                         l30 1CE5  
                       l24 1BB4                         l18 1BF0               ___awdiv@sign 0025  
                       fsr 0004        ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022  
        ?_LCD_WRITE_STRING 0076                        l130 12AE                        l106 1BCC  
                      l131 12B3                        l140 12EC                        l132 12B8  
                      l124 0806                        l141 12F1                        l133 12BD  
                      l142 12F6                        l151 136A                        l143 12FB  
                      l135 12D8                        l303 00FB                        l144 1300  
                      l136 1352                        l128 12A9                        l145 1305  
                      l137 12DD                        l146 130A                        l138 12E2  
                      l147 130F                        l139 12E7                        l148 1314  
                      l404 1EDF                        l149 1319                        l341 0578  
                      l334 0534                        l521 106F                        l281 0FFF  
                      l370 1C15                        l274 1577                        l364 07A8  
                      l701 1659                        l349 06DF                        l542 1269  
                      l534 1E77                        l720 1771                        l624 07FE  
                      l368 1BFD                        l554 1D4A                        l562 1FE6  
                      l538 12A6                        l555 1D66                        l563 1FFF  
                      l571 1F5B                        l539 120B                        l803 0C90  
                      l556 1D7B                        l716 174D                        l708 17FF  
                      l741 1DCB                        l581 1F5B                        l549 1299  
                      l726 1793                        l559 1F7A                        l567 1B75  
                      l831 112B                        l737 17F3                        l729 17D1  
                      l585 11E8                        l738 17FF                        l578 1F46  
                      l842 10F5                        l586 115A                        l674 1D2B  
                      l843 1101                        l835 10D9                        l596 11DB  
                      l684 1C9F                        l829 1094                        l589 11AB  
                      l695 15DB                        l791 0C9C                        l857 1C53  
                      l849 1B87                        l699 1682                        l859 1C65  
                      l797 0C08               __CFG_CPD$OFF 0000                        _isr 1C16  
                      fsr0 0004         ??_LCD_WRITE_STRING 0078                        indf 0000  
             ___awmod@sign 0079               ___flmul@aexp 003A               ___flmul@bexp 003B  
 __end_of_start_conversion 0807               ___flmul@sign 0035               ___flmul@temp 0040  
             ___flmul@prod 003C            __end_of_LCD_CMD 1B9E               __CFG_LVP$OFF 0000  
             ___fltol@exp1 005F                       l3001 1F72                       l3011 1FC2  
                     l3003 1F8E                       l3013 1FFC                       l3005 1F96  
                     l3021 1B73                       l3101 10A5                       l2301 1015  
                     l3015 1FFE                       l3007 1F9A                       l3023 1B75  
                     l3111 10D0                       l3103 10AA                       l2311 102A  
                     l2303 1019                       l3201 135E                       l3009 1FBE  
                     l3041 1F16                       l3033 1EF6                       l3121 1103  
                     l3113 10E0                       l3105 10B7                       l2401 1C66  
                     l2321 104D                       l2313 102D                       l2305 101E  
                     l3203 1365                       l3019 1B6B                       l3043 1F1A  
                     l3051 1F34                       l3035 1F0B                       l3027 1EE0  
                     l3123 1119                       l3115 10EB                       l3107 10BE  
                     l2411 1C7E                       l2403 1C6C                       l2331 1066  
                     l2323 1053                       l2315 1034                       l2307 1022  
                     l3205 1366                       l3141 1BE5                       l3133 1BCE  
                     l2501 1625                       l3061 1F50                       l3037 1F0C  
                     l3029 1EED                       l3125 111E                       l3117 10EF  
                     l3109 10C2                       l2413 1C88                       l2405 1C6F  
                     l2333 106B                       l2325 1054                       l2317 1038  
                     l2309 1024                       l2341 1E24                       l3301 024F  
                     l3221 0027                       l3207 1367                       l3151 1DDE  
                     l3143 1BEA                       l3135 1BD3                       l2511 1668  
                     l2503 1626                       l2431 158A                       l2423 1578  
                     l3039 1F14                       l3071 07C7                       l3063 07A9  
                     l3127 1122                       l3119 10F9                       l2415 1C8E  
                     l2407 1C76                       l2327 105B                       l2319 103C  
                     l2351 1E3A                       l2343 1E29                       l3311 02A3  
                     l3303 0268                       l3231 004F                       l3223 002D  
                     l3161 1DFA                       l3153 1DE6                       l3145 1DCC  
                     l3137 1BD8                       l2601 17DB                       l2521 1686  
                     l2513 166C                       l2505 163D                       l2433 158F  
                     l2441 159F                       l2425 157F                       l3057 1F3B  
                     l3049 1F22                       l3073 07D9                       l3065 07B1  
                     l3129 1123                       l2281 1C42                       l2417 1C95  
                     l2409 1C7A                       l2329 1061                       l2361 1E56  
                     l2353 1E3D                       l2345 1E2B                       l2337 1E1F  
                     l3401 0591                       l3321 034A                       l3313 02EA  
                     l3305 0271                       l3233 0053                       l3241 0095  
                     l3225 0034                       l3217 0803                       l3171 1E18  
                     l3163 1E00                       l3155 1DEC                       l3147 1DCF  
                     l3139 1BDF                       l2611 17EF                       l2603 17E3  
                     l2531 16AF                       l2523 168B                       l2515 166D  
                     l2507 165D                       l2451 15B9                       l2443 15A7  
                     l2435 1594                       l2427 1585                       l3083 1D7C  
                     l3059 1F4B                       l3075 07E7                       l3067 07B6  
                     l3091 1078                       l2283 1C49                       l2419 1C9B  
                     l2371 1E73                       l2363 1E5C                       l2355 1E44  
                     l2347 1E2F                       l2339 1E20                       l3411 0670  
                     l3403 05AF                       l3323 0365                       l3315 02F9  
                     l3307 028C                       l3251 00C6                       l3243 00A3  
                     l3235 0068                       l3227 0039                       l3219 0022  
                     l3165 1E06                       l3157 1DF0                       l3149 1DD8  
                     l3173 1CA0                       l3181 1BB5                       l2613 17FA  
                     l2605 17E8                       l2541 16C3                       l2533 16B3  
                     l2517 1676                       l2509 1666                       l2461 15D0  
                     l2453 15BD                       l2445 15AC                       l2437 159C  
                     l2429 1589                       l3085 1D80                       l3077 07F0  
                     l3069 07C3                       l3093 107C                       l2285 1C4D  
                     l2701 0BBD                       l2621 0949                       l2381 1CF3  
                     l2293 1007                       l2365 1E63                       l2357 1E48  
                     l2349 1E34                       l3421 06C4                       l3405 060A  
                     l3413 06AB                       l3341 0422                       l3333 03B3  
                     l3325 036E                       l3317 0314                       l3309 0294  
                     l3253 00DD                       l3245 00A6                       l3237 007F  
                     l3229 003D                       l3501 0811                       l3191 12C2  
                     l3167 1E0C                       l3159 1DF6                       l3175 1CA5  
                     l3183 1BB9                       l2615 17FE                       l2607 17E9  
                     l2551 172B                       l2543 16CC                       l2535 16BC  
                     l2527 1694                       l2519 167A                       l2471 15E9  
                     l2463 15D1                       l2455 15BE                       l2447 15B2  
                     l2439 159D                       l3079 07F6                       l3095 108C  
                     l2287 1C5C                       l2279 1C40                       l2711 0BE2  
                     l2703 0BCB                       l2631 0960                       l2623 094D  
                     l2391 1D19                       l2383 1CFA                       l2375 1CE6  
                     l2295 100A                       l2359 1E4C                       l2367 1E69  
                     l3431 06F1                       l3415 06B3                       l3407 0645  
                     l3351 045B                       l3327 0376                       l3319 033B  
                     l3335 03BC                       l3271 012F                       l3423 06CB  
                     l3263 00FD                       l3255 00E3                       l3247 00AC  
                     l3239 0085                       l3511 0871                       l3503 081C  
                     l3601 12CA                       l3169 1E12                       l3177 1CC1  
                     l3185 1BBC                       l2609 17ED                       l2553 1730  
                     l2537 16BE                       l2529 16AB                       l2545 16D1  
                     l2481 15FD                       l2473 15ED                       l2457 15C3  
                     l2465 15D3                       l2449 15B3                       l3097 109C  
                     l3089 1073                       l2289 1C61                       l2721 0C05  
                     l2705 0BD4                       l2713 0BE8                       l2641 0979  
                     l2633 0962                       l2625 094E                       l2617 093C  
                     l2393 1D1A                       l2385 1CFE                       l2377 1CEA  
                     l2297 100E                       l2369 1E6E                       l3441 0723  
                     l3433 0700                       l3425 06D1                       l3417 06BA  
                     l3409 0664                       l3361 0499                       l3353 0465  
                     l3337 03F1                       l3329 0394                       l3281 0177  
                     l3273 013D                       l3265 011B                       l3249 00B1  
                     l3257 00F5                       l3521 0912                       l3513 08B7  
                     l3505 0823                       l3603 1326                       l3195 131E  
                     l3187 12A8                       l3179 1CC9                       l2571 1778  
                     l2563 1763                       l2547 16E7                       l2555 173F  
                     l2539 16C2                       l2491 1611                       l2483 1601  
                     l2475 15F1                       l2467 15E1                       l2459 15C8  
                     l2731 0C24                       l2715 0BEC                       l2707 0BD8  
                     l2651 098E                       l2643 097A                       l2635 096A  
                     l2627 0953                       l2619 0943                       l2395 1D21  
                     l2387 1D02                       l2379 1CF0                       l2299 1013  
                     l2811 0E26                       l3451 074D                       l3443 0727  
                     l3435 0709                       l3427 06D9                       l3419 06BE  
                     l3371 04C2                       l3363 04A2                       l3355 0480  
                     l3347 0424                       l3339 0420                       l3291 01B8  
                     l3283 017B                       l3275 0141                       l3267 0127  
                     l3259 00F9                       l3523 091A                       l3515 08DB  
                     l3507 0828                       l3197 1353                       l2581 1786  
                     l2573 177A                       l2565 176C                       l2557 1755  
                     l2549 1725                       l2493 1615                       l2485 1605  
                     l2477 15F5                       l2469 15E5                       l2741 0C6A  
                     l2733 0C3D                       l2725 0C0D                       l2717 0BED  
                     l2709 0BD9                       l2661 09A9                       l2653 0996  
                     l2645 097F                       l2637 096F                       l2629 0958  
                     l2389 1D13                       l2397 1D27                       l2805 0D97  
                     l3461 076E                       l3453 0759                       l3445 0735  
                     l3437 0711                       l3429 06EA                       l3381 053C  
                     l3373 04C9                       l3357 0486                       l3293 01DB  
                     l3285 0194                       l3277 015A                       l3269 012B  
                     l3525 0923                       l3517 0901                       l3509 082B  
                     l3199 1358                       l2591 179D                       l2583 178A  
                     l2575 177F                       l2567 1770                       l2559 175A  
                     l2495 1619                       l2487 1609                       l2479 15F9  
                     l2911 1214                       l2903 11FF                       l2751 0C89  
                     l2743 0C74                       l2727 0C12                       l2735 0C43  
                     l2719 0BF1                       l2671 0A2B                       l2663 09B9  
                     l2655 099B                       l2647 0984                       l2639 0975  
                     l2823 0F44                       l2807 0D9E                       l2815 0E53  
                     l3463 077A                       l3455 075D                       l3447 073E  
                     l3439 071D                       l3391 056B                       l3383 0545  
                     l3375 04CE                       l3359 0492                       l3367 04A7  
                     l3295 01DF                       l3287 019F                       l3279 0173  
                     l3471 07A4                       l3527 092F                       l3519 0909  
                     l2761 1B8E                       l2593 17AB                       l2585 1790  
                     l2569 1775                       l2577 1781                       l2497 161D  
                     l2489 160D                       l2921 124B                       l2913 1225  
                     l2753 0C94                       l2745 0C76                       l2737 0C50  
                     l2729 0C20                       l2681 0A99                       l2673 0A47  
                     l2665 09C6                       l2657 09A0                       l2649 098C  
                     l2841 1B86                       l2833 1B77                       l2825 0F4B  
                     l2817 0E5A                       l3465 0786                       l3457 0763  
                     l3449 0742                       l3393 0572                       l3385 0549  
                     l3377 0509                       l3369 04B4                       l3297 01E5  
                     l3289 01A5                       l2763 1B8F                       l2771 1BA4  
                     l2595 17AF                       l2579 1785                       l2499 1621  
                     l2923 1259                       l2915 1227                       l2851 1148  
                     l2747 0C84                       l2739 0C5B                       l2691 0B29  
                     l2683 0AA9                       l2675 0A63                       l2667 09E3  
                     l2835 1B78                       l3459 076A                       l3395 0581  
                     l3387 054F                       l3379 0528                       l3299 0204  
                     l2765 1B92                       l2757 1B89                       l2773 1BA9  
                     l2597 17CD                       l2589 1798                       l2925 125A  
                     l2917 1230                       l2909 120C                       l2861 1170  
                     l2845 112C                       l2749 0C88                       l2693 0B39  
                     l2685 0AC6                       l2677 0A6C                       l2669 09FF  
                     l2837 1B7E                       l2829 0FD3                       l3397 0586  
                     l3389 055C                       l3469 078E                       l2759 1B8C  
                     l2767 1B9F                       l2599 17D6                       l2951 1BF3  
                     l2943 128E                       l2935 1275                       l2927 1263  
                     l2919 1239                       l2871 119C                       l2863 1172  
                     l2847 113F                       l2695 0B66                       l2687 0ADF  
                     l2679 0A7C                       l2783 1483                       l2775 136E  
                     l2839 1B84                       l3399 058D                       l2769 1BA2  
                     l2953 1BF7                       l2945 129E                       l2929 126D  
                     l2937 1287                       l2873 119D                       l2865 117B  
                     l2857 115B                       l2697 0B8C                       l2689 0AFC  
                     l2785 1489                       l2777 1374                       l2793 0CA0  
                     l2971 1E9E                       l2963 1E78                       l2955 1C04  
                     l2891 11D0                       l2883 11B7                       l2875 11A5  
                     l2867 1184                       l2859 1161                       l2699 0BB4  
                     l2795 0CA4                       l3499 0807                       l2981 1ED1  
                     l2973 1EA7                       l2965 1E8A                       l2957 1C0B  
                     l2949 1BF1                       l2893 11E0                       l2877 11AF  
                     l2885 11C9                       l2869 1192                       l2789 1534  
                     l2797 0CA6                       l2991 1D5E                       l2975 1EB9  
                     l2967 1E8D                       l2983 1ED7                       l2959 1C11  
                     l2799 0CAD                       l3599 0113                       l2993 1D78  
                     l2977 1EC7                       l2969 1E9A                       l2897 11E9  
                     l2995 1D7A                       l2987 1D2C                       l2979 1EC8  
                     l2899 11F6                       l2989 1D42                       l2999 1F5C  
                     ?_isr 0070                       STR_1 18AF                       STR_2 18AF  
                     STR_3 18A0                       u3000 1E56                       u3001 1E55  
                     u3100 1D27                       u3020 1E69                       u3101 1D26  
                     u3021 1E68                       u3005 1E52                       u3110 1C6C  
                     u3030 1E6E                       u3111 1C6B                       u3031 1E6D  
                     u3015 1E5D                       u3200 15B2                       u3040 1CF0  
                     u4000 1374                       u3201 15B1                       u3041 1CEF  
                     u4001 1373                       u3210 15BD                       u3130 1C7E  
                     u3211 15BC                       u3131 1C7D                       u3300 166C  
                     u3220 15C3                       u3060 1D02                       u3140 1C88  
                     u3301 166B                       u3221 15C2                       u3061 1D01  
                     u3141 1C87                       u3125 1C70                       u3230 15C8  
                     u3231 15C7                       u3055 1CF4                       u4015 1391  
                     u3400 16E7                       u3320 1682                       u3240 15E1  
                     u5000 10F5                       u3080 1D13                       u3160 1C9B  
                     u4040 1489                       u3401 16E6                       u3321 1681  
                     u3241 15E0                       u5001 10F4                       u3081 1D12  
                     u3161 1C9A                       u3145 1C84                       u4041 1488  
                     u4025 13ED                       u4105 0CCF                       u3330 1686  
                     u3250 15E5                       u3170 1589                       u5010 10F9  
                     u4210 0F4B                       u4130 0D9E                       u3411 16FE  
                     u3403 16E3                       u3331 1685                       u3315 166F  
                     u3251 15E4                       u3171 1588                       u5011 10F8  
                     u3075 1D03                       u3155 1C8F                       u4035 1442  
                     u4211 0F4A                       u4131 0D9D                       u4115 0D0B  
                     u5100 1358                       u3500 1785                       u3420 1712  
                     u3412 16FF                       u3340 168B                       u3260 163D  
                     u3180 158F                       u5020 110E                       u4300 1192  
                     u5101 1357                       u3501 1784                       u3421 1713  
                     u3413 1704                       u3341 168A                       u3261 163C  
                     u3181 158E                       u4301 1191                       u3085 1D0F  
                     u4205 0F03                       u4125 0D56                       u3510 178A  
                     u3430 1730                       u3422 1718                       u3414 1705  
                     u3270 1648                       u3190 1594                       u5030 111E  
                     u5110 002D                       u3511 1789                       u3431 172F  
                     u3423 1719                       u3415 170A                       u3351 169D  
                     u3271 1646                       u3191 1593                       u5031 111D  
                     u3095 1D1B                       u4055 14A6                       u5111 002C  
                     u3600 17E8                       u3520 1790                       u3440 1755  
                     u3416 170B                       u3360 16AF                       u3352 16A4  
                     u3280 1649                       u5040 1122                       u4400 11F6  
                     u4320 11AB                       u4080 0CA4                       u5200 01DF  
                     u5120 004F                       u3601 17E7                       u3521 178F  
                     u3441 1754                       u3361 16AE                       u3353 16AB  
                     u3265 1639                       u5041 1121                       u5025 1109  
                     u4401 11F5                       u4321 11AA                       u4305 118E  
                     u4065 14F3                       u4225 0F5E                       u4145 0DB1  
                     u4081 0CA3                       u5201 01DE                       u5121 004E  
                     u5050 1BD3                       u3610 17ED                       u3530 1797  
                     u3450 175A                       u3370 16B3                       u3290 165D  
                     u4410 120A                       u4330 11AF                       u4250 1B7E  
                     u4170 0E5A                       u4090 0CAD                       u5210 0268  
                     u5130 0095                       u5051 1BD2                       u3611 17EC  
                     u3531 1796                       u3451 1759                       u3371 16B2  
                     u3291 165C                       u4411 1209                       u4331 11AE  
                     u4315 119E                       u4075 153F                       u4251 1B7D  
                     u4235 0F9A                       u4171 0E59                       u4155 0DED  
                     u4091 0CAC                       u5211 0267                       u5131 0094  
                     u5060 1BE5                       u3620 17FE                       u3540 179D  
                     u3380 16C2                       u4500 128D                       u4340 11B6  
                     u2820 1C4D                       u3700 09A0                       u4260 1B84  
                     u5300 045A                       u5220 028C                       u5140 00A3  
                     u5061 1BE4                       u3621 17FD                       u3541 179C  
                     u3381 16C1                       u4501 128C                       u4341 11B5  
                     u2821 1C4C                       u3701 099F                       u4261 1B83  
                     u4245 0FD6                       u4165 0E29                       u5301 0459  
                     u5221 028B                       u5141 00A2                       u5070 1CAF  
                     u3550 17AF                       u3470 1770                       u4430 124B  
                     u4270 113F                       u3630 094D                       u2910 104D  
                     u5310 0465                       u5230 02A3                       u5150 00F4  
                     u3551 17AE                       u3471 176F                       u4431 124A  
                     u4271 113E                       u3711 09F1                       u3631 094C  
                     u2911 104C                       u5311 0464                       u5231 02A2  
                     u5151 00F3                       u5080 1CD3                       u3560 17BE  
                     u3480 1775                       u4520 129E                       u4360 11C8  
                     u4280 1159                       u2840 1C61                       u3712 09F8  
                     u3640 0953                       u5400 0586                       u5320 0480  
                     u5240 02F9                       u5160 0127                       u3481 1774  
                     u3465 1765                       u4521 129D                       u4425 1232  
                     u4361 11C7                       u4281 1158                       u2841 1C60  
                     u3801 0B1B                       u3721 0A0D                       u3713 09FF  
                     u3641 0952                       u2905 103D                       u4185 0E7C  
                     u5401 0585                       u5321 047F                       u5305 0456  
                     u5241 02F8                       u5161 0126                       u5090 1CE5  
                     u3570 17CD                       u3490 177F                       u4610 1EB9  
                     u4530 1BF7                       u4450 1269                       u4370 11CF  
                     u3802 0B22                       u3722 0A14                       u3650 0958  
                     u2930 1061                       u2850 100E                       u5330 0492  
                     u5250 0314                       u5170 012B                       u5091 1CE4  
                     u3571 17CC                       u3491 177E                       u3395 16C5  
                     u4611 1EB8                       u4531 1BF6                       u4515 1290  
                     u4451 1268                       u4435 1247                       u4371 11CE  
                     u4355 11B8                       u2835 1C54                       u3811 0B48  
                     u3803 0B29                       u3731 0A39                       u3723 0A1B  
                     u3651 0957                       u2931 1060                       u2915 1049  
                     u2851 100D                       u4195 0EB8                       u5331 0491  
                     u5251 0313                       u5235 029F                       u5171 012A  
                     u3580 17D6                       u4460 126D                       u3900 0BEC  
                     u3820 0B72                       u3812 0B4F                       u3732 0A40  
                     u3660 0979                       u2940 1066                       u2860 1019  
                     u5500 071D                       u5340 04B4                       u5260 033B  
                     u5180 015A                       u4701 1FA9                       u3581 17D5  
                     u3565 17B9                       u4605 1EA0                       u4461 126C  
                     u4445 125C                       u3901 0BEB                       u3813 0B56  
                     u3741 0A55                       u3733 0A47                       u3661 0978  
                     u2941 1065                       u2925 1055                       u2861 1018  
                     u5501 071C                       u5341 04B3                       u5261 033A  
                     u5245 02F5                       u5181 0159                       u4710 1FC2  
                     u4702 1FAA                       u3590 17DB                       u4630 1ED7  
                     u4470 1274                       u4390 11E0                       u3910 0BF1  
                     u3742 0A5C                       u3670 097F                       u2870 102A  
                     u2950 1E24                       u5510 0727                       u5430 06B2  
                     u5350 04C2                       u5270 034A                       u5190 0194  
                     u4711 1FC1                       u4703 1FAF                       u3591 17DA  
                     u4631 1ED6                       u4615 1EB5                       u4471 1273  
                     u4391 11DF                       u4295 117D                       u3911 0BF0  
                     u3831 0B7E                       u3743 0A63                       u3671 097E  
                     u2871 1029                       u2951 1E23                       u5511 0726  
                     u5431 06B1                       u5415 060D                       u5351 04C1  
                     u5271 0349                       u5191 0193                       u4640 1D42  
                     u4704 1FB0                       u4800 1F33                       u4560 1C11  
                     u3920 0C05                       u3840 0B9A                       u3832 0B85  
                     u3680 0984                       u2960 1E2F                       u5520 0735  
                     u5440 06CA                       u5280 0365                       u5600 0823  
                     u4641 1D41                       u4721 1FD1                       u4705 1FB5  
                     u4801 1F32                       u4625 1EC9                       u4561 1C10  
                     u4545 1BFE                       u4385 11D2                       u3921 0C04  
                     u3833 0B8C                       u3825 0B6D                       u3761 0A8B  
                     u3681 0983                       u2961 1E2E                       u5521 0734  
                     u5441 06C9                       u5425 0673                       u5345 04B0  
                     u5281 0364                       u5601 0822                       u4650 1D5E  
                     u4730 1FFC                       u4722 1FD2                       u4706 1FB6  
                     u4810 1F3A                       u4570 1E8A                       u4490 1286  
                     u3930 0C0C                       u3762 0A92                       u3690 099B  
                     u2890 103C                       u2970 1E3A                       u5530 074D  
                     u5450 06D1                       u5370 053B                       u4651 1D5D  
                     u4731 1FFB                       u4723 1FD7                       u4811 1F39  
                     u4571 1E89                       u4555 1C05                       u4491 1285  
                     u3931 0C0B                       u3851 0BA6                       u3771 0AB8  
                     u3763 0A99                       u3755 0A65                       u3691 099A  
                     u2891 103B                       u2971 1E39                       u5531 074C  
                     u5451 06D0                       u5371 053A                       u5275 0346  
                     u4660 1D78                       u4724 1FD8                       u4740 1B73  
                     u4900 07F6                       u3940 0C12                       u3852 0BAD  
                     u3772 0ABF                       u5540 0763                       u5460 06D9  
                     u5380 055C                       u4661 1D77                       u4725 1FDD  
                     u4741 1B72                       u4901 07F5                       u4485 1276  
                     u3941 0C11                       u3853 0BB4                       u3845 0B95  
                     u3773 0AC6                       u2885 102E                       u5541 0762  
                     u5525 0731                       u5461 06D8                       u5381 055B  
                     u5365 04D1                       u4726 1FDE                       u4670 1F72  
                     u4830 1F4B                       u4750 1EED                       u4590 1E9E  
                     u4910 1078                       u3950 0C24                       u2990 1E4C  
                     u5550 077A                       u5470 06EA                       u5390 056B  
                     u4735 1FF8                       u4671 1F71                       u4831 1F4A  
                     u4751 1EEC                       u4591 1E9D                       u4911 1077  
                     u3951 0C23                       u3791 0AEE                       u2991 1E4B  
                     u5551 0779                       u5535 0749                       u5471 06E9  
                     u5391 056A                       u5295 0427                       u4680 1F8E  
                     u4840 1F50                       u4760 1F04                       u4920 107C  
                     u3960 0C33                       u3880 0BD8                       u3792 0AF5  
                     u5560 0786                       u5480 0700                       u5617 1BA7  
                     u4665 1D74                       u4681 1F8D                       u4841 1F4F  
                     u4825 1F3D                       u4585 1E8F                       u4921 107B  
                     u3881 0BD7                       u3865 0BB6                       u3793 0AFC  
                     u3785 0AC8                       u2985 1E3E                       u5561 0785  
                     u5481 06FF                       u5385 0558                       u4690 1F9A  
                     u4770 1F1A                       u4850 07B1                       u4930 109C  
                     u3970 0C50                       u5570 07A4                       u5490 0711  
                     u5627 1BB0                       u4691 1F99                       u4771 1F19  
                     u4851 07B0                       u4931 109B                       u3971 0C4F  
                     u3875 0BCD                       u5571 07A3                       u5491 0710  
                     u5475 06E6                       u5395 0567                       u4780 1F21  
                     u3980 0C6A                       u5637 1DD3                       u4781 1F20  
                     u4765 1EFF                       u3981 0C69                       u3965 0C2E  
                     u5485 06FC                       i1l94 1C36                       u4870 07C7  
                     u4950 10BD                       u3990 0C88                       u5647 1DE2  
                     u4871 07C6                       u4951 10BC                       u3991 0C87  
                     u3975 0C4C                       u3895 0BDB                       u4880 07D9  
                     u5657 1DEE                       u4881 07D8                       u4865 07B8  
                     u4945 10AF                       u3985 0C66                       u4970 10DF  
                     u5667 1DF8                       u4795 1F23                       u4971 10DE  
                     u5677 1B99                       u4885 07D5                       u4965 10D1  
                     u4990 10EF                       u4895 07E8                       u4991 10EE  
                     u4985 10E4               __CFG_WRT$OFF 0000                       _main 0807  
                     _pot1 006F                       _pot2 00D5                       btemp 007E  
                     start 000C           __end_of_ADC_init 136B              __CFG_IESO$OFF 0000  
             _sprintf$1196 00AD           __end_of_LCD_INIT 1E1F                      ??_isr 0070  
            ___fltol@sign1 005E            __end_of___fladd 1800                      ?_main 0070  
          __end_of___awdiv 1070            __end_of___flneg 1B76              __CFG_WDTE$OFF 0000  
          __end_of___awmod 1E78            __end_of___flmul 0C9D            __end_of___flsub 1DCC  
          __end_of___fltol 1F5C                      _ANSEL 0188            __end_of___lldiv 1EE0  
          ___awdiv@divisor 0020            __end_of___llmod 07FF            __end_of___lwdiv 1D2C  
          __end_of___lwmod 1CA0            ___awdiv@counter 0024                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088              _start_another 00D4  
           __CFG_FCMEN$OFF 0000            __end_of_dpowers 18A0                      _scale 0C9D  
          __end_of_isdigit 1B88                      _volt1 00D0                      _volt2 00CC  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07A9             __CFG_MCLRE$OFF 0000  
          __initialization 000F               __end_of_main 093C             ADC_init@int_on 0074  
                   ??_main 00C8                  ??_LCD_CMD 0073       __size_of__tdiv_to_l_ 00BD  
         ___llmod@dividend 0077                     ?_scale 0042                     _ADRESH 001E  
         ___awdiv@dividend 0022                     _ANSELH 0189                     i1l3491 1C27  
                   i1l3493 1C2D                     i1l3495 1C31                     i1l3487 1C16  
                   i1l3497 1C35                     i1l3489 1C1C                     u558_20 1C1C  
                   u558_21 1C1B                     u559_20 1C27                     u559_21 1C26  
         __end_of___xxtofl 112C             __CFG_PWRTE$OFF 0000           ??_LCD_SET_CURSOR 0077  
         __end_of__powers_ 1844                     ___flge 1F5C                     ___fleq 1D2C  
                ??___fladd 005E                     ___wmul 1BF1                  ??___awdiv 007A  
                ??___flneg 0077                  ??___awmod 0077                  ??___flmul 0030  
                ??___flsub 007B                  ??___fltol 0059                  ??___lldiv 0020  
                ??___llmod 0020                  ??___lwdiv 0079                  ??___lwmod 0077  
                   _fround 136B           ___awdiv@quotient 0026            ___awmod@divisor 0073  
          ___awmod@counter 0078                  ??_isdigit 0073         __size_of__Umul8_16 0029  
                   saved_w 007E         __size_of_Port_init 0018                  ?_ADC_init 0073  
                ??_sprintf 00A8                 ___flge@ff1 0073                 ___flge@ff2 0077  
             ___xxtofl@arg 0022                  ?_LCD_INIT 0070               ___xxtofl@exp 0021  
             ___xxtofl@val 0073                 ___fleq@ff1 0073                 ___fleq@ff2 0077  
  __end_of__initialization 001B                 ___flneg@f1 0073           ??_LCD_WRITE_CHAR 0073  
               ___fltol@f1 0055             __pcstackCOMMON 0070              __end_of_scale 1000  
          ADC_init@channel 0073                 __div_to_l_ 11E9                 ??_ADC_init 0076  
        ?_start_conversion 0070            __div_to_l_@exp1 0026            __div_to_l_@cntr 0025  
                  ??_scale 0046            __div_to_l_@quot 0021               sprintf@width 00B8  
       ??_start_conversion 0073                 __pbssBANK0 006F                 __pbssBANK1 00CC  
               ??_LCD_INIT 0076  __size_of_LCD_WRITE_STRING 0046              __div_to_l_@f1 0073  
            __div_to_l_@f2 0077          __end_of__Umul8_16 1C66          __end_of_Port_init 1BCD  
               __pmaintext 0807                    ?___flge 0073                    ?___fleq 0073  
                  ?___wmul 0073                 __pintentry 0004                    ?_fround 0042  
                  _LCD_CMD 1B88                  ?___xxtofl 0073            LCD_SET_CURSOR@a 0078  
          LCD_SET_CURSOR@b 0076                 __stringtab 1800          LCD_WRITE_STRING@a 0076  
        LCD_WRITE_STRING@i 0020          __end_of__npowers_ 1878                 _scale$1195 0050  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 1578  
    ADC_init@left_or_right 0075                    ___awdiv 1007                    ___flneg 1B6B  
                  ___awmod 1E1F                    ___flmul 093C                    ___flsub 1D7C  
                  ___fltol 1EE0                    ___lldiv 1E78            __size_of___wmul 0025  
                  ___llmod 07A9                    ___lwdiv 1CE6                    ___lwmod 1C66  
          __size_of_fround 020D                    __ptext1 0803                    __ptext2 001F  
                  __ptext3 0C9D                    __ptext4 1E1F                    __ptext5 1007  
                  __ptext6 1B76                    __ptext7 136B                    __ptext8 1C66  
                  __ptext9 1CE6                ?__div_to_l_ 0073                    _dpowers 1878  
                  _isdigit 1B76               __size_of_isr 0027                 ??___xxtofl 0077  
         ___awmod@dividend 0075                    _sprintf 001F                    clrloop0 1B64  
                  _string1 00DB                    _string2 00D6       end_of_initialization 001B  
          ___lldiv@divisor 0073            ___lldiv@counter 0025                  _RCSTAbits 0018  
           __tdiv_to_l_@f1 0073             __tdiv_to_l_@f2 0077              ??__tdiv_to_l_ 0020  
                _PORTDbits 0008                ___fladd@grs 0069              ___xxtofl@sign 0020  
        __size_of_ADC_init 00C4           _LCD_WRITE_STRING 1CA0                ___flmul@grs 0036  
                _TXSTAbits 0098          __size_of_LCD_INIT 0053        __size_of__div_to_l_ 00BE  
             ADC_init@Fosc 0078             __end_of___flge 2000             __end_of___fleq 1D7C  
           __end_of___wmul 1C16                _BAUDCTLbits 0187             __end_of_fround 1578  
      start_initialization 000F        __end_of__tdiv_to_l_ 11E9                __end_of_isr 1C3D  
          LCD_WRITE_CHAR@a 0075            ___llmod@divisor 0073            ___llmod@counter 0021  
 __CFG_FOSC$INTRC_NOCLKOUT 0000  __size_of_start_conversion 0004                   ??___flge 0020  
                 ??___fleq 0020                   ??___wmul 0077                  __Umul8_16 1C3D  
                _Port_init 1BB5                   ??_fround 0046              sprintf@tmpval 00BA  
                ___fladd@a 005A                  ___fladd@b 0056                   LCD_CMD@a 0075  
                 ?_LCD_CMD 0070                 fround@prec 0055    __size_of_LCD_SET_CURSOR 0024  
                ___flmul@a 002C                  ___flmul@b 0028                  ___flsub@a 00A0  
                ___flsub@b 00A4                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BC                sprintf@flag 00B6  
              sprintf@eexp 00BE                sprintf@fval 00C0                sprintf@prec 00C5  
         ___lwdiv@dividend 0022                   ?___fladd 0056                   ?___awdiv 0020  
                 ?___flneg 0073                   ?___awmod 0073                   ?___flmul 0028  
                 ?___flsub 00A0                   ?___fltol 0055                   ?___lldiv 0073  
                 ?___llmod 0073                  __npowers_ 1844                 ?__Umul8_16 0073  
                 ?___lwdiv 0020                   ?___lwmod 0073    __size_of_LCD_WRITE_CHAR 0017  
               ?_Port_init 0070                  __pstrings 1800                __tdiv_to_l_ 112C  
             ??__div_to_l_ 0020                   ?_isdigit 0070                   _ADC_init 12A7  
         ___lwdiv@quotient 0024                   ?_sprintf 006A             __size_of_scale 0363  
   LCD_SET_CURSOR@temporal 0079                   _LCD_INIT 1DCC          interrupt_function 0004  
           ___wmul@product 0077                  clear_ram0 1B63                   _PIE1bits 008C  
                 _PIR1bits 000C         __end_of__div_to_l_ 12A7   __end_of_LCD_WRITE_STRING 1CE6  
               _ADCON0bits 001F                __stringbase 180F                 _ADCON1bits 009F  
        ___wmul@multiplier 0073           __size_of_LCD_CMD 0016           _start_conversion 0803  
              ??__Umul8_16 0075           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059                ??_Port_init 0073  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003A                _fround$1193 0051                _fround$1194 004D  
       __end_of__stringtab 1810                _isdigit$991 0073             _LCD_SET_CURSOR 1BCD  
               sprintf@val 00B2                   ___xxtofl 1070           __size_of_isdigit 0012  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0026                   __ptext10 093C  
                 __ptext11 1C3D                   __ptext20 1578                   __ptext12 112C  
                 __ptext21 1B6B                   __ptext13 11E9                   __ptext30 12A7  
                 __ptext22 1F5C                   __ptext14 1070                   __ptext31 1C16  
                 __ptext23 1D2C                   __ptext15 1BF1                   __ptext24 1BB5  
                 __ptext16 07A9                   __ptext25 1CA0                   __ptext17 1E78  
                 __ptext26 1B9E                   __ptext18 1EE0                   __ptext27 1BCD  
                 __ptext19 1D7C                   __ptext28 1DCC                   __ptext29 1B88  
        __CFG_BOR4V$BOR40V 0000                   __powers_ 1810           __size_of_sprintf 078A  
            __size_of_main 0135             _LCD_WRITE_CHAR 1B9E     __end_of_LCD_SET_CURSOR 1BF1  
               _INTCONbits 000B                   isdigit@c 0074                   scale@scl 0054  
                 intlevel1 0000                  sprintf@ap 00B1           __tdiv_to_l_@exp1 0029  
         __tdiv_to_l_@cntr 0028                  sprintf@sp 00C4           __tdiv_to_l_@quot 0024  
         ___lwmod@dividend 0075           ___lldiv@dividend 0077                  stringcode 180A  
   __end_of_LCD_WRITE_CHAR 1BB5            ?_LCD_SET_CURSOR 0076               ?__tdiv_to_l_ 0073  
   __Umul8_16@multiplicand 0073                   sprintf@c 00C7                   sprintf@f 006A  
         ___lldiv@quotient 0021            ___lwmod@divisor 0073            ___lwmod@counter 0078  
                 stringdir 180A                   stringtab 1800              ___fladd@signs 0066  
             ___fladd@aexp 0067               ___fladd@bexp 0068       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  



Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Feb 11 09:29:14 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F887 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  0105                     	;# 
   146  0107                     	;# 
   147  0108                     	;# 
   148  0109                     	;# 
   149  010C                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0185                     	;# 
   155  0187                     	;# 
   156  0188                     	;# 
   157  0189                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  001D                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  0087                     	;# 
   199  0088                     	;# 
   200  0089                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  008F                     	;# 
   205  0090                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0094                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  0105                     	;# 
   224  0107                     	;# 
   225  0108                     	;# 
   226  0109                     	;# 
   227  010C                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  0185                     	;# 
   233  0187                     	;# 
   234  0188                     	;# 
   235  0189                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  000E                     	;# 
   253  000E                     	;# 
   254  000F                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001D                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  0081                     	;# 
   274  0085                     	;# 
   275  0086                     	;# 
   276  0087                     	;# 
   277  0088                     	;# 
   278  0089                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  008F                     	;# 
   283  0090                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0094                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0097                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  0105                     	;# 
   302  0107                     	;# 
   303  0108                     	;# 
   304  0109                     	;# 
   305  010C                     	;# 
   306  010C                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  010F                     	;# 
   310  0185                     	;# 
   311  0187                     	;# 
   312  0188                     	;# 
   313  0189                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  0081                     	;# 
   352  0085                     	;# 
   353  0086                     	;# 
   354  0087                     	;# 
   355  0088                     	;# 
   356  0089                     	;# 
   357  008C                     	;# 
   358  008D                     	;# 
   359  008E                     	;# 
   360  008F                     	;# 
   361  0090                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009C                     	;# 
   376  009D                     	;# 
   377  009E                     	;# 
   378  009F                     	;# 
   379  0105                     	;# 
   380  0107                     	;# 
   381  0108                     	;# 
   382  0109                     	;# 
   383  010C                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  010F                     	;# 
   388  0185                     	;# 
   389  0187                     	;# 
   390  0188                     	;# 
   391  0189                     	;# 
   392  018C                     	;# 
   393  018D                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  000E                     	;# 
   409  000E                     	;# 
   410  000F                     	;# 
   411  0010                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0014                     	;# 
   416  0015                     	;# 
   417  0015                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001B                     	;# 
   425  001C                     	;# 
   426  001D                     	;# 
   427  001E                     	;# 
   428  001F                     	;# 
   429  0081                     	;# 
   430  0085                     	;# 
   431  0086                     	;# 
   432  0087                     	;# 
   433  0088                     	;# 
   434  0089                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  008E                     	;# 
   438  008F                     	;# 
   439  0090                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0094                     	;# 
   446  0095                     	;# 
   447  0096                     	;# 
   448  0097                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  0105                     	;# 
   458  0107                     	;# 
   459  0108                     	;# 
   460  0109                     	;# 
   461  010C                     	;# 
   462  010C                     	;# 
   463  010D                     	;# 
   464  010E                     	;# 
   465  010F                     	;# 
   466  0185                     	;# 
   467  0187                     	;# 
   468  0188                     	;# 
   469  0189                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472                           
   473                           	psect	strings
   474  1800                     __pstrings:	
   475  1800                     stringtab:	
   476  1800                     __stringtab:	
   477                           
   478                           ;	String table - string pointers are 1 byte each
   479  1800  1BFF               	btfsc	btemp+1,7
   480  1801  280A               	ljmp	stringcode
   481  1802  1383               	bcf	3,7
   482  1803  187F               	btfsc	btemp+1,0
   483  1804  1783               	bsf	3,7
   484  1805  0800               	movf	0,w
   485  1806  0A84               	incf	4,f
   486  1807  1903               	skipnz
   487  1808  0AFF               	incf	btemp+1,f
   488  1809  0008               	return
   489  180A                     stringcode:	
   490  180A                     stringdir:	
   491  180A  3018               	movlw	high stringdir
   492  180B  008A               	movwf	10
   493  180C  0804               	movf	4,w
   494  180D  0A84               	incf	4,f
   495  180E  0782               	addwf	2,f
   496  180F                     __stringbase:	
   497  180F  3400               	retlw	0
   498  1810                     __end_of__stringtab:	
   499  1810                     __powers_:	
   500  1810  3400               	retlw	0
   501  1811  3400               	retlw	0
   502  1812  3480               	retlw	128
   503  1813  343F               	retlw	63
   504  1814  3400               	retlw	0
   505  1815  3400               	retlw	0
   506  1816  3420               	retlw	32
   507  1817  3441               	retlw	65
   508  1818  3400               	retlw	0
   509  1819  3400               	retlw	0
   510  181A  34C8               	retlw	200
   511  181B  3442               	retlw	66
   512  181C  3400               	retlw	0
   513  181D  3400               	retlw	0
   514  181E  347A               	retlw	122
   515  181F  3444               	retlw	68
   516  1820  3400               	retlw	0
   517  1821  3440               	retlw	64
   518  1822  341C               	retlw	28
   519  1823  3446               	retlw	70
   520  1824  3400               	retlw	0
   521  1825  3450               	retlw	80
   522  1826  34C3               	retlw	195
   523  1827  3447               	retlw	71
   524  1828  3400               	retlw	0
   525  1829  3424               	retlw	36
   526  182A  3474               	retlw	116
   527  182B  3449               	retlw	73
   528  182C  3480               	retlw	128
   529  182D  3496               	retlw	150
   530  182E  3418               	retlw	24
   531  182F  344B               	retlw	75
   532  1830  3420               	retlw	32
   533  1831  34BC               	retlw	188
   534  1832  34BE               	retlw	190
   535  1833  344C               	retlw	76
   536  1834  3428               	retlw	40
   537  1835  346B               	retlw	107
   538  1836  346E               	retlw	110
   539  1837  344E               	retlw	78
   540  1838  34F9               	retlw	249
   541  1839  3402               	retlw	2
   542  183A  3415               	retlw	21
   543  183B  3450               	retlw	80
   544  183C  34EC               	retlw	236
   545  183D  3478               	retlw	120
   546  183E  34AD               	retlw	173
   547  183F  3460               	retlw	96
   548  1840  34CA               	retlw	202
   549  1841  34F2               	retlw	242
   550  1842  3449               	retlw	73
   551  1843  3471               	retlw	113
   552  1844                     __end_of__powers_:	
   553  1844                     __npowers_:	
   554  1844  3400               	retlw	0
   555  1845  3400               	retlw	0
   556  1846  3480               	retlw	128
   557  1847  343F               	retlw	63
   558  1848  34CD               	retlw	205
   559  1849  34CC               	retlw	204
   560  184A  34CC               	retlw	204
   561  184B  343D               	retlw	61
   562  184C  340A               	retlw	10
   563  184D  34D7               	retlw	215
   564  184E  3423               	retlw	35
   565  184F  343C               	retlw	60
   566  1850  346F               	retlw	111
   567  1851  3412               	retlw	18
   568  1852  3483               	retlw	131
   569  1853  343A               	retlw	58
   570  1854  3417               	retlw	23
   571  1855  34B7               	retlw	183
   572  1856  34D1               	retlw	209
   573  1857  3438               	retlw	56
   574  1858  34AC               	retlw	172
   575  1859  34C5               	retlw	197
   576  185A  3427               	retlw	39
   577  185B  3437               	retlw	55
   578  185C  34BD               	retlw	189
   579  185D  3437               	retlw	55
   580  185E  3486               	retlw	134
   581  185F  3435               	retlw	53
   582  1860  3495               	retlw	149
   583  1861  34BF               	retlw	191
   584  1862  34D6               	retlw	214
   585  1863  3433               	retlw	51
   586  1864  3477               	retlw	119
   587  1865  34CC               	retlw	204
   588  1866  342B               	retlw	43
   589  1867  3432               	retlw	50
   590  1868  345F               	retlw	95
   591  1869  3470               	retlw	112
   592  186A  3489               	retlw	137
   593  186B  3430               	retlw	48
   594  186C  34FF               	retlw	255
   595  186D  34E6               	retlw	230
   596  186E  34DB               	retlw	219
   597  186F  342E               	retlw	46
   598  1870  3408               	retlw	8
   599  1871  34E5               	retlw	229
   600  1872  343C               	retlw	60
   601  1873  341E               	retlw	30
   602  1874  3460               	retlw	96
   603  1875  3442               	retlw	66
   604  1876  34A2               	retlw	162
   605  1877  340D               	retlw	13
   606  1878                     __end_of__npowers_:	
   607  1878                     _dpowers:	
   608  1878  3401               	retlw	1
   609  1879  3400               	retlw	0
   610  187A  3400               	retlw	0
   611  187B  3400               	retlw	0
   612  187C  340A               	retlw	10
   613  187D  3400               	retlw	0
   614  187E  3400               	retlw	0
   615  187F  3400               	retlw	0
   616  1880  3464               	retlw	100
   617  1881  3400               	retlw	0
   618  1882  3400               	retlw	0
   619  1883  3400               	retlw	0
   620  1884  34E8               	retlw	232
   621  1885  3403               	retlw	3
   622  1886  3400               	retlw	0
   623  1887  3400               	retlw	0
   624  1888  3410               	retlw	16
   625  1889  3427               	retlw	39
   626  188A  3400               	retlw	0
   627  188B  3400               	retlw	0
   628  188C  34A0               	retlw	160
   629  188D  3486               	retlw	134
   630  188E  3401               	retlw	1
   631  188F  3400               	retlw	0
   632  1890  3440               	retlw	64
   633  1891  3442               	retlw	66
   634  1892  340F               	retlw	15
   635  1893  3400               	retlw	0
   636  1894  3480               	retlw	128
   637  1895  3496               	retlw	150
   638  1896  3498               	retlw	152
   639  1897  3400               	retlw	0
   640  1898  3400               	retlw	0
   641  1899  34E1               	retlw	225
   642  189A  34F5               	retlw	245
   643  189B  3405               	retlw	5
   644  189C  3400               	retlw	0
   645  189D  34CA               	retlw	202
   646  189E  349A               	retlw	154
   647  189F  343B               	retlw	59
   648  18A0                     __end_of_dpowers:	
   649  0018                     _RCSTAbits	set	24
   650  000B                     _INTCONbits	set	11
   651  0005                     _PORTA	set	5
   652  0008                     _PORTD	set	8
   653  001E                     _ADRESH	set	30
   654  001F                     _ADCON0bits	set	31
   655  000C                     _PIR1bits	set	12
   656  0006                     _PORTB	set	6
   657  0008                     _PORTDbits	set	8
   658  0098                     _TXSTAbits	set	152
   659  009F                     _ADCON1bits	set	159
   660  008C                     _PIE1bits	set	140
   661  0088                     _TRISD	set	136
   662  0086                     _TRISB	set	134
   663  0085                     _TRISA	set	133
   664  0187                     _BAUDCTLbits	set	391
   665  0189                     _ANSELH	set	393
   666  0188                     _ANSEL	set	392
   667  18A0                     STR_3:	
   668  18A0  3456               	retlw	86	;'V'
   669  18A1  3431               	retlw	49	;'1'
   670  18A2  3420               	retlw	32	;' '
   671  18A3  3420               	retlw	32	;' '
   672  18A4  3420               	retlw	32	;' '
   673  18A5  3456               	retlw	86	;'V'
   674  18A6  3432               	retlw	50	;'2'
   675  18A7  3420               	retlw	32	;' '
   676  18A8  3420               	retlw	32	;' '
   677  18A9  3443               	retlw	67	;'C'
   678  18AA  346F               	retlw	111	;'o'
   679  18AB  346E               	retlw	110	;'n'
   680  18AC  3474               	retlw	116	;'t'
   681  18AD  342E               	retlw	46	;'.'
   682  18AE  3400               	retlw	0
   683  18AF                     STR_1:	
   684  18AF  3425               	retlw	37	;'%'
   685  18B0  3431               	retlw	49	;'1'
   686  18B1  342E               	retlw	46	;'.'
   687  18B2  3432               	retlw	50	;'2'
   688  18B3  3466               	retlw	102	;'f'
   689  18B4  3400               	retlw	0
   690  18AF                     
   691                           ; #config settings
   692  0000                     
   693                           	psect	cinit
   694  000F                     start_initialization:	
   695  000F                     __initialization:	
   696                           
   697                           ; Clear objects allocated to BANK0
   698  000F  1283               	bcf	3,5	;RP0=0, select bank0
   699  0010  1303               	bcf	3,6	;RP1=0, select bank0
   700  0011  01EF               	clrf	__pbssBANK0& (0+127)
   701                           
   702                           ; Clear objects allocated to BANK1
   703  0012  1383               	bcf	3,7	;select IRP bank0
   704  0013  30CC               	movlw	low __pbssBANK1
   705  0014  0084               	movwf	4
   706  0015  30E0               	movlw	low (__pbssBANK1+20)
   707  0016  160A  158A  233A  120A  118A  	fcall	clear_ram0
   708  001B                     end_of_initialization:	
   709                           ;End of C runtime variable initialization code
   710                           
   711  001B                     __end_of__initialization:	
   712  001B  0183               	clrf	3
   713  001C  120A  158A  2800   	ljmp	_main	;jump to C main() function
   714                           
   715                           	psect	bssBANK0
   716  006F                     __pbssBANK0:	
   717  006F                     _pot1:	
   718  006F                     	ds	1
   719                           
   720                           	psect	bssBANK1
   721  00CC                     __pbssBANK1:	
   722  00CC                     _volt2:	
   723  00CC                     	ds	4
   724  00D0                     _volt1:	
   725  00D0                     	ds	4
   726  00D4                     _start_another:	
   727  00D4                     	ds	1
   728  00D5                     _pot2:	
   729  00D5                     	ds	1
   730  00D6                     _string2:	
   731  00D6                     	ds	5
   732  00DB                     _string1:	
   733  00DB                     	ds	5
   734                           
   735                           	psect	clrtext
   736  1B3A                     clear_ram0:	
   737                           ;	Called with FSR containing the base address, and
   738                           ;	W with the last address+1
   739                           
   740  1B3A  0064               	clrwdt	;clear the watchdog before getting into this loop
   741  1B3B                     clrloop0:	
   742  1B3B  0180               	clrf	0	;clear RAM location pointed to by FSR
   743  1B3C  0A84               	incf	4,f	;increment pointer
   744  1B3D  0604               	xorwf	4,w	;XOR with final address
   745  1B3E  1903               	btfsc	3,2	;have we reached the end yet?
   746  1B3F  3400               	retlw	0	;all done for this memory range, return
   747  1B40  0604               	xorwf	4,w	;XOR again to restore value
   748  1B41  2B3B               	goto	clrloop0	;do the next byte
   749                           
   750                           	psect	cstackBANK1
   751  00A0                     __pcstackBANK1:	
   752  00A0                     ?___flsub:	
   753  00A0                     ___flsub@a:	
   754                           ; 4 bytes @ 0x0
   755                           
   756                           
   757                           ; 4 bytes @ 0x0
   758  00A0                     	ds	4
   759  00A4                     ___flsub@b:	
   760                           
   761                           ; 4 bytes @ 0x4
   762  00A4                     	ds	4
   763  00A8                     ??_sprintf:	
   764                           
   765                           ; 1 bytes @ 0x8
   766  00A8                     	ds	5
   767  00AD                     _sprintf$1211:	
   768                           
   769                           ; 4 bytes @ 0xD
   770  00AD                     	ds	4
   771  00B1                     sprintf@ap:	
   772                           
   773                           ; 1 bytes @ 0x11
   774  00B1                     	ds	1
   775  00B2                     sprintf@val:	
   776                           
   777                           ; 4 bytes @ 0x12
   778  00B2                     	ds	4
   779  00B6                     sprintf@flag:	
   780                           
   781                           ; 2 bytes @ 0x16
   782  00B6                     	ds	2
   783  00B8                     sprintf@width:	
   784                           
   785                           ; 2 bytes @ 0x18
   786  00B8                     	ds	2
   787  00BA                     sprintf@tmpval:	
   788                           
   789                           ; 4 bytes @ 0x1A
   790  00BA                     	ds	4
   791  00BE                     sprintf@eexp:	
   792                           
   793                           ; 2 bytes @ 0x1E
   794  00BE                     	ds	2
   795  00C0                     sprintf@fval:	
   796                           
   797                           ; 4 bytes @ 0x20
   798  00C0                     	ds	4
   799  00C4                     sprintf@sp:	
   800                           
   801                           ; 1 bytes @ 0x24
   802  00C4                     	ds	1
   803  00C5                     sprintf@prec:	
   804                           
   805                           ; 2 bytes @ 0x25
   806  00C5                     	ds	2
   807  00C7                     sprintf@c:	
   808                           
   809                           ; 1 bytes @ 0x27
   810  00C7                     	ds	1
   811  00C8                     ??_main:	
   812                           
   813                           ; 1 bytes @ 0x28
   814  00C8                     	ds	4
   815                           
   816                           	psect	cstackCOMMON
   817  0070                     __pcstackCOMMON:	
   818  0070                     ?_isdigit:	
   819  0070                     ?_Port_init:	
   820                           ; 1 bit 
   821                           
   822  0070                     ?_start_conversion:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_LCD_CMD:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_LCD_INIT:	
   829                           ; 1 bytes @ 0x0
   830                           
   831  0070                     ?_LCD_WRITE_CHAR:	
   832                           ; 1 bytes @ 0x0
   833                           
   834  0070                     ?_isr:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0070                     ??_isr:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0070                     ?_main:	
   841                           ; 1 bytes @ 0x0
   842                           
   843                           
   844                           ; 1 bytes @ 0x0
   845  0070                     	ds	3
   846  0073                     ?___fleq:	
   847  0073                     ?___flge:	
   848                           ; 1 bit 
   849                           
   850  0073                     ??_Port_init:	
   851                           ; 1 bit 
   852                           
   853  0073                     ?_ADC_init:	
   854                           ; 1 bytes @ 0x3
   855                           
   856  0073                     ?_EUSART_Init:	
   857                           ; 1 bytes @ 0x3
   858                           
   859  0073                     ??_start_conversion:	
   860                           ; 1 bytes @ 0x3
   861                           
   862  0073                     ??_isdigit:	
   863                           ; 1 bytes @ 0x3
   864                           
   865  0073                     ??_LCD_CMD:	
   866                           ; 1 bytes @ 0x3
   867                           
   868  0073                     ??_LCD_WRITE_CHAR:	
   869                           ; 1 bytes @ 0x3
   870                           
   871  0073                     ?__Umul8_16:	
   872                           ; 1 bytes @ 0x3
   873                           
   874  0073                     ?___wmul:	
   875                           ; 2 bytes @ 0x3
   876                           
   877  0073                     ?___awmod:	
   878                           ; 2 bytes @ 0x3
   879                           
   880  0073                     ?___lwmod:	
   881                           ; 2 bytes @ 0x3
   882                           
   883  0073                     ?__tdiv_to_l_:	
   884                           ; 2 bytes @ 0x3
   885                           
   886  0073                     ?__div_to_l_:	
   887                           ; 4 bytes @ 0x3
   888                           
   889  0073                     ?___lldiv:	
   890                           ; 4 bytes @ 0x3
   891                           
   892  0073                     ?___flneg:	
   893                           ; 4 bytes @ 0x3
   894                           
   895  0073                     ?___llmod:	
   896                           ; 4 bytes @ 0x3
   897                           
   898  0073                     ?___xxtofl:	
   899                           ; 4 bytes @ 0x3
   900                           
   901  0073                     ADC_init@channel:	
   902                           ; 4 bytes @ 0x3
   903                           
   904  0073                     EUSART_Init@b:	
   905                           ; 1 bytes @ 0x3
   906                           
   907  0073                     _isdigit$1009:	
   908                           ; 1 bytes @ 0x3
   909                           
   910  0073                     __Umul8_16@multiplicand:	
   911                           ; 1 bytes @ 0x3
   912                           
   913  0073                     ___wmul@multiplier:	
   914                           ; 1 bytes @ 0x3
   915                           
   916  0073                     ___awmod@divisor:	
   917                           ; 2 bytes @ 0x3
   918                           
   919  0073                     ___lwmod@divisor:	
   920                           ; 2 bytes @ 0x3
   921                           
   922  0073                     ___lldiv@divisor:	
   923                           ; 2 bytes @ 0x3
   924                           
   925  0073                     __div_to_l_@f1:	
   926                           ; 4 bytes @ 0x3
   927                           
   928  0073                     ___fleq@ff1:	
   929                           ; 4 bytes @ 0x3
   930                           
   931  0073                     ___flge@ff1:	
   932                           ; 4 bytes @ 0x3
   933                           
   934  0073                     ___flneg@f1:	
   935                           ; 4 bytes @ 0x3
   936                           
   937  0073                     __tdiv_to_l_@f1:	
   938                           ; 4 bytes @ 0x3
   939                           
   940  0073                     ___llmod@divisor:	
   941                           ; 4 bytes @ 0x3
   942                           
   943  0073                     ___xxtofl@val:	
   944                           ; 4 bytes @ 0x3
   945                           
   946                           
   947                           ; 4 bytes @ 0x3
   948  0073                     	ds	1
   949  0074                     ??_EUSART_Init:	
   950  0074                     ADC_init@int_on:	
   951                           ; 1 bytes @ 0x4
   952                           
   953  0074                     EUSART_Init@a:	
   954                           ; 1 bytes @ 0x4
   955                           
   956  0074                     isdigit@c:	
   957                           ; 1 bytes @ 0x4
   958                           
   959                           
   960                           ; 1 bytes @ 0x4
   961  0074                     	ds	1
   962  0075                     ??__Umul8_16:	
   963  0075                     LCD_CMD@a:	
   964                           ; 1 bytes @ 0x5
   965                           
   966  0075                     LCD_WRITE_CHAR@a:	
   967                           ; 1 bytes @ 0x5
   968                           
   969  0075                     ADC_init@left_or_right:	
   970                           ; 1 bytes @ 0x5
   971                           
   972  0075                     ___wmul@multiplicand:	
   973                           ; 1 bytes @ 0x5
   974                           
   975  0075                     ___awmod@dividend:	
   976                           ; 2 bytes @ 0x5
   977                           
   978  0075                     ___lwmod@dividend:	
   979                           ; 2 bytes @ 0x5
   980                           
   981                           
   982                           ; 2 bytes @ 0x5
   983  0075                     	ds	1
   984  0076                     ??_ADC_init:	
   985  0076                     ?_LCD_SET_CURSOR:	
   986                           ; 1 bytes @ 0x6
   987                           
   988  0076                     ??_LCD_INIT:	
   989                           ; 1 bytes @ 0x6
   990                           
   991  0076                     ?_LCD_WRITE_STRING:	
   992                           ; 1 bytes @ 0x6
   993                           
   994  0076                     LCD_SET_CURSOR@b:	
   995                           ; 1 bytes @ 0x6
   996                           
   997  0076                     LCD_WRITE_STRING@a:	
   998                           ; 1 bytes @ 0x6
   999                           
  1000                           
  1001                           ; 2 bytes @ 0x6
  1002  0076                     	ds	1
  1003  0077                     ??_LCD_SET_CURSOR:	
  1004  0077                     ??___wmul:	
  1005                           ; 1 bytes @ 0x7
  1006                           
  1007  0077                     ??___awmod:	
  1008                           ; 1 bytes @ 0x7
  1009                           
  1010  0077                     ??___flneg:	
  1011                           ; 1 bytes @ 0x7
  1012                           
  1013  0077                     ??___lwmod:	
  1014                           ; 1 bytes @ 0x7
  1015                           
  1016  0077                     ??___xxtofl:	
  1017                           ; 1 bytes @ 0x7
  1018                           
  1019  0077                     ___wmul@product:	
  1020                           ; 1 bytes @ 0x7
  1021                           
  1022  0077                     ___lldiv@dividend:	
  1023                           ; 2 bytes @ 0x7
  1024                           
  1025  0077                     __div_to_l_@f2:	
  1026                           ; 4 bytes @ 0x7
  1027                           
  1028  0077                     ___fleq@ff2:	
  1029                           ; 4 bytes @ 0x7
  1030                           
  1031  0077                     ___flge@ff2:	
  1032                           ; 4 bytes @ 0x7
  1033                           
  1034  0077                     __tdiv_to_l_@f2:	
  1035                           ; 4 bytes @ 0x7
  1036                           
  1037  0077                     ___llmod@dividend:	
  1038                           ; 4 bytes @ 0x7
  1039                           
  1040                           
  1041                           ; 4 bytes @ 0x7
  1042  0077                     	ds	1
  1043  0078                     ??_LCD_WRITE_STRING:	
  1044  0078                     LCD_SET_CURSOR@a:	
  1045                           ; 1 bytes @ 0x8
  1046                           
  1047  0078                     ADC_init@Fosc:	
  1048                           ; 1 bytes @ 0x8
  1049                           
  1050  0078                     ___awmod@counter:	
  1051                           ; 1 bytes @ 0x8
  1052                           
  1053  0078                     ___lwmod@counter:	
  1054                           ; 1 bytes @ 0x8
  1055                           
  1056                           
  1057                           ; 1 bytes @ 0x8
  1058  0078                     	ds	1
  1059  0079                     ??___lwdiv:	
  1060  0079                     LCD_SET_CURSOR@temporal:	
  1061                           ; 1 bytes @ 0x9
  1062                           
  1063  0079                     ___awmod@sign:	
  1064                           ; 1 bytes @ 0x9
  1065                           
  1066                           
  1067                           ; 1 bytes @ 0x9
  1068  0079                     	ds	1
  1069  007A                     ??___awdiv:	
  1070                           
  1071                           ; 1 bytes @ 0xA
  1072  007A                     	ds	1
  1073  007B                     ??___flsub:	
  1074                           
  1075                           	psect	cstackBANK0
  1076  0020                     __pcstackBANK0:	
  1077                           ; 1 bytes @ 0xB
  1078                           
  1079  0020                     ??__tdiv_to_l_:	
  1080  0020                     ??__div_to_l_:	
  1081                           ; 1 bytes @ 0x0
  1082                           
  1083  0020                     ??___lldiv:	
  1084                           ; 1 bytes @ 0x0
  1085                           
  1086  0020                     ??___fleq:	
  1087                           ; 1 bytes @ 0x0
  1088                           
  1089  0020                     ??___flge:	
  1090                           ; 1 bytes @ 0x0
  1091                           
  1092  0020                     ??___llmod:	
  1093                           ; 1 bytes @ 0x0
  1094                           
  1095  0020                     ?___awdiv:	
  1096                           ; 1 bytes @ 0x0
  1097                           
  1098  0020                     ?___lwdiv:	
  1099                           ; 2 bytes @ 0x0
  1100                           
  1101  0020                     ___xxtofl@sign:	
  1102                           ; 2 bytes @ 0x0
  1103                           
  1104  0020                     LCD_WRITE_STRING@i:	
  1105                           ; 1 bytes @ 0x0
  1106                           
  1107  0020                     ___awdiv@divisor:	
  1108                           ; 2 bytes @ 0x0
  1109                           
  1110  0020                     ___lwdiv@divisor:	
  1111                           ; 2 bytes @ 0x0
  1112                           
  1113  0020                     __Umul8_16@product:	
  1114                           ; 2 bytes @ 0x0
  1115                           
  1116                           
  1117                           ; 2 bytes @ 0x0
  1118  0020                     	ds	1
  1119  0021                     ___llmod@counter:	
  1120  0021                     ___xxtofl@exp:	
  1121                           ; 1 bytes @ 0x1
  1122                           
  1123  0021                     ___lldiv@quotient:	
  1124                           ; 1 bytes @ 0x1
  1125                           
  1126  0021                     __div_to_l_@quot:	
  1127                           ; 4 bytes @ 0x1
  1128                           
  1129                           
  1130                           ; 4 bytes @ 0x1
  1131  0021                     	ds	1
  1132  0022                     ___awdiv@dividend:	
  1133  0022                     ___lwdiv@dividend:	
  1134                           ; 2 bytes @ 0x2
  1135                           
  1136  0022                     __Umul8_16@word_mpld:	
  1137                           ; 2 bytes @ 0x2
  1138                           
  1139  0022                     ___xxtofl@arg:	
  1140                           ; 2 bytes @ 0x2
  1141                           
  1142                           
  1143                           ; 4 bytes @ 0x2
  1144  0022                     	ds	2
  1145  0024                     ___awdiv@counter:	
  1146  0024                     __Umul8_16@multiplier:	
  1147                           ; 1 bytes @ 0x4
  1148                           
  1149  0024                     ___lwdiv@quotient:	
  1150                           ; 1 bytes @ 0x4
  1151                           
  1152  0024                     __tdiv_to_l_@quot:	
  1153                           ; 2 bytes @ 0x4
  1154                           
  1155                           
  1156                           ; 4 bytes @ 0x4
  1157  0024                     	ds	1
  1158  0025                     ___lldiv@counter:	
  1159  0025                     ___awdiv@sign:	
  1160                           ; 1 bytes @ 0x5
  1161                           
  1162  0025                     __div_to_l_@cntr:	
  1163                           ; 1 bytes @ 0x5
  1164                           
  1165                           
  1166                           ; 1 bytes @ 0x5
  1167  0025                     	ds	1
  1168  0026                     __div_to_l_@exp1:	
  1169  0026                     ___lwdiv@counter:	
  1170                           ; 1 bytes @ 0x6
  1171                           
  1172  0026                     ___awdiv@quotient:	
  1173                           ; 1 bytes @ 0x6
  1174                           
  1175                           
  1176                           ; 2 bytes @ 0x6
  1177  0026                     	ds	2
  1178  0028                     ?___flmul:	
  1179  0028                     __tdiv_to_l_@cntr:	
  1180                           ; 4 bytes @ 0x8
  1181                           
  1182  0028                     ___flmul@b:	
  1183                           ; 1 bytes @ 0x8
  1184                           
  1185                           
  1186                           ; 4 bytes @ 0x8
  1187  0028                     	ds	1
  1188  0029                     __tdiv_to_l_@exp1:	
  1189                           
  1190                           ; 1 bytes @ 0x9
  1191  0029                     	ds	3
  1192  002C                     ___flmul@a:	
  1193                           
  1194                           ; 4 bytes @ 0xC
  1195  002C                     	ds	4
  1196  0030                     ??___flmul:	
  1197                           
  1198                           ; 1 bytes @ 0x10
  1199  0030                     	ds	5
  1200  0035                     ___flmul@sign:	
  1201                           
  1202                           ; 1 bytes @ 0x15
  1203  0035                     	ds	1
  1204  0036                     ___flmul@grs:	
  1205                           
  1206                           ; 4 bytes @ 0x16
  1207  0036                     	ds	4
  1208  003A                     ___flmul@aexp:	
  1209                           
  1210                           ; 1 bytes @ 0x1A
  1211  003A                     	ds	1
  1212  003B                     ___flmul@bexp:	
  1213                           
  1214                           ; 1 bytes @ 0x1B
  1215  003B                     	ds	1
  1216  003C                     ___flmul@prod:	
  1217                           
  1218                           ; 4 bytes @ 0x1C
  1219  003C                     	ds	4
  1220  0040                     ___flmul@temp:	
  1221                           
  1222                           ; 2 bytes @ 0x20
  1223  0040                     	ds	2
  1224  0042                     ?_fround:	
  1225  0042                     ?_scale:	
  1226                           ; 4 bytes @ 0x22
  1227                           
  1228                           
  1229                           ; 4 bytes @ 0x22
  1230  0042                     	ds	4
  1231  0046                     ??_fround:	
  1232  0046                     ??_scale:	
  1233                           ; 1 bytes @ 0x26
  1234                           
  1235                           
  1236                           ; 1 bytes @ 0x26
  1237  0046                     	ds	7
  1238  004D                     _fround$1209:	
  1239                           
  1240                           ; 4 bytes @ 0x2D
  1241  004D                     	ds	3
  1242  0050                     _scale$1210:	
  1243                           
  1244                           ; 4 bytes @ 0x30
  1245  0050                     	ds	1
  1246  0051                     _fround$1208:	
  1247                           
  1248                           ; 4 bytes @ 0x31
  1249  0051                     	ds	3
  1250  0054                     scale@scl:	
  1251                           
  1252                           ; 1 bytes @ 0x34
  1253  0054                     	ds	1
  1254  0055                     ?___fltol:	
  1255  0055                     fround@prec:	
  1256                           ; 4 bytes @ 0x35
  1257                           
  1258  0055                     ___fltol@f1:	
  1259                           ; 1 bytes @ 0x35
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0x35
  1263  0055                     	ds	1
  1264  0056                     ?___fladd:	
  1265  0056                     ___fladd@b:	
  1266                           ; 4 bytes @ 0x36
  1267                           
  1268                           
  1269                           ; 4 bytes @ 0x36
  1270  0056                     	ds	3
  1271  0059                     ??___fltol:	
  1272                           
  1273                           ; 1 bytes @ 0x39
  1274  0059                     	ds	1
  1275  005A                     ___fladd@a:	
  1276                           
  1277                           ; 4 bytes @ 0x3A
  1278  005A                     	ds	4
  1279  005E                     ??___fladd:	
  1280  005E                     ___fltol@sign1:	
  1281                           ; 1 bytes @ 0x3E
  1282                           
  1283                           
  1284                           ; 1 bytes @ 0x3E
  1285  005E                     	ds	1
  1286  005F                     ___fltol@exp1:	
  1287                           
  1288                           ; 1 bytes @ 0x3F
  1289  005F                     	ds	7
  1290  0066                     ___fladd@signs:	
  1291                           
  1292                           ; 1 bytes @ 0x46
  1293  0066                     	ds	1
  1294  0067                     ___fladd@aexp:	
  1295                           
  1296                           ; 1 bytes @ 0x47
  1297  0067                     	ds	1
  1298  0068                     ___fladd@bexp:	
  1299                           
  1300                           ; 1 bytes @ 0x48
  1301  0068                     	ds	1
  1302  0069                     ___fladd@grs:	
  1303                           
  1304                           ; 1 bytes @ 0x49
  1305  0069                     	ds	1
  1306  006A                     ?_sprintf:	
  1307  006A                     sprintf@f:	
  1308                           ; 2 bytes @ 0x4A
  1309                           
  1310                           
  1311                           ; 1 bytes @ 0x4A
  1312  006A                     	ds	5
  1313                           
  1314                           	psect	maintext
  1315  0800                     __pmaintext:	
  1316 ;;
  1317 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1318 ;;
  1319 ;; *************** function _main *****************
  1320 ;; Defined at:
  1321 ;;		line 52 in file "main_lab3.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : B00/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0
  1337 ;;      Temps:          0       0       4       0       0
  1338 ;;      Totals:         0       0       4       0       0
  1339 ;;Total ram usage:        4 bytes
  1340 ;; Hardware stack levels required when called:    5
  1341 ;; This function calls:
  1342 ;;		_ADC_init
  1343 ;;		_EUSART_Init
  1344 ;;		_LCD_INIT
  1345 ;;		_LCD_SET_CURSOR
  1346 ;;		_LCD_WRITE_STRING
  1347 ;;		_Port_init
  1348 ;;		___flmul
  1349 ;;		___xxtofl
  1350 ;;		_sprintf
  1351 ;;		_start_conversion
  1352 ;; This function is called by:
  1353 ;;		Startup code after reset
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _main
  1359  0800                     _main:	
  1360  0800                     l3520:	
  1361                           ;incstack = 0
  1362                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1363                           
  1364                           
  1365                           ;main_lab3.c: 53:     Port_init();
  1366  0800  160A  158A  238C  120A  158A  	fcall	_Port_init
  1367                           
  1368                           ;main_lab3.c: 54:     LCD_INIT();
  1369  0805  160A  158A  25CC  120A  158A  	fcall	_LCD_INIT
  1370  080A                     l3522:	
  1371                           
  1372                           ;main_lab3.c: 55:     ADC_init(1,1,1,0);
  1373  080A  01F3               	clrf	ADC_init@channel
  1374  080B  0AF3               	incf	ADC_init@channel,f
  1375  080C  01F4               	clrf	ADC_init@int_on
  1376  080D  0AF4               	incf	ADC_init@int_on,f
  1377  080E  01F5               	clrf	ADC_init@left_or_right
  1378  080F  3001               	movlw	1
  1379  0810  160A  118A  22A7  120A  158A  	fcall	_ADC_init
  1380  0815                     l3524:	
  1381                           
  1382                           ;main_lab3.c: 56:     EUSART_Init(1, 0);
  1383  0815  01F3               	clrf	EUSART_Init@b
  1384  0816  3001               	movlw	1
  1385  0817  160A  158A  2414  120A  158A  	fcall	_EUSART_Init
  1386  081C                     l3526:	
  1387                           
  1388                           ;main_lab3.c: 58:         if (start_another == 1){
  1389  081C  1683               	bsf	3,5	;RP0=1, select bank1
  1390  081D  1303               	bcf	3,6	;RP1=0, select bank1
  1391  081E  0354               	decf	_start_another^(0+128),w
  1392  081F  1D03               	btfss	3,2
  1393  0820  2822               	goto	u5631
  1394  0821  2823               	goto	u5630
  1395  0822                     u5631:	
  1396  0822  282B               	goto	l3532
  1397  0823                     u5630:	
  1398  0823                     l3528:	
  1399                           
  1400                           ;main_lab3.c: 59:             start_conversion();
  1401  0823  160A  118A  2003  120A  158A  	fcall	_start_conversion
  1402  0828                     l3530:	
  1403                           
  1404                           ;main_lab3.c: 60:             start_another = 0;
  1405  0828  1683               	bsf	3,5	;RP0=1, select bank1
  1406  0829  1303               	bcf	3,6	;RP1=0, select bank1
  1407  082A  01D4               	clrf	_start_another^(0+128)
  1408  082B                     l3532:	
  1409                           
  1410                           ;main_lab3.c: 64:         volt1 = pot1*(5.0/255);
  1411  082B  303C               	movlw	60
  1412  082C  1283               	bcf	3,5	;RP0=0, select bank0
  1413  082D  1303               	bcf	3,6	;RP1=0, select bank0
  1414  082E  00AB               	movwf	___flmul@b+3
  1415  082F  30A0               	movlw	160
  1416  0830  00AA               	movwf	___flmul@b+2
  1417  0831  30A0               	movlw	160
  1418  0832  00A9               	movwf	___flmul@b+1
  1419  0833  30A1               	movlw	161
  1420  0834  00A8               	movwf	___flmul@b
  1421  0835  086F               	movf	_pot1,w
  1422  0836  1683               	bsf	3,5	;RP0=1, select bank1
  1423  0837  1303               	bcf	3,6	;RP1=0, select bank1
  1424  0838  00C8               	movwf	??_main^(0+128)
  1425  0839  01C9               	clrf	(??_main^(0+128)+1)
  1426  083A  01CA               	clrf	(??_main^(0+128)+2)
  1427  083B  01CB               	clrf	(??_main^(0+128)+3)
  1428  083C  084B               	movf	(??_main+3)^(0+128),w
  1429  083D  00F6               	movwf	___xxtofl@val+3
  1430  083E  084A               	movf	(??_main+2)^(0+128),w
  1431  083F  00F5               	movwf	___xxtofl@val+2
  1432  0840  0849               	movf	(??_main+1)^(0+128),w
  1433  0841  00F4               	movwf	___xxtofl@val+1
  1434  0842  0848               	movf	??_main^(0+128),w
  1435  0843  00F3               	movwf	___xxtofl@val
  1436  0844  3001               	movlw	1
  1437  0845  160A  118A  2070  120A  158A  	fcall	___xxtofl
  1438  084A  0876               	movf	?___xxtofl+3,w
  1439  084B  1283               	bcf	3,5	;RP0=0, select bank0
  1440  084C  1303               	bcf	3,6	;RP1=0, select bank0
  1441  084D  00AF               	movwf	___flmul@a+3
  1442  084E  0875               	movf	?___xxtofl+2,w
  1443  084F  00AE               	movwf	___flmul@a+2
  1444  0850  0874               	movf	?___xxtofl+1,w
  1445  0851  00AD               	movwf	___flmul@a+1
  1446  0852  0873               	movf	?___xxtofl,w
  1447  0853  00AC               	movwf	___flmul@a
  1448  0854  120A  158A  213C  120A  158A  	fcall	___flmul
  1449  0859  1283               	bcf	3,5	;RP0=0, select bank0
  1450  085A  1303               	bcf	3,6	;RP1=0, select bank0
  1451  085B  082B               	movf	?___flmul+3,w
  1452  085C  1683               	bsf	3,5	;RP0=1, select bank1
  1453  085D  1303               	bcf	3,6	;RP1=0, select bank1
  1454  085E  00D3               	movwf	(_volt1+3)^(0+128)
  1455  085F  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0860  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0861  082A               	movf	?___flmul+2,w
  1458  0862  1683               	bsf	3,5	;RP0=1, select bank1
  1459  0863  1303               	bcf	3,6	;RP1=0, select bank1
  1460  0864  00D2               	movwf	(_volt1+2)^(0+128)
  1461  0865  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0866  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0867  0829               	movf	?___flmul+1,w
  1464  0868  1683               	bsf	3,5	;RP0=1, select bank1
  1465  0869  1303               	bcf	3,6	;RP1=0, select bank1
  1466  086A  00D1               	movwf	(_volt1+1)^(0+128)
  1467  086B  1283               	bcf	3,5	;RP0=0, select bank0
  1468  086C  1303               	bcf	3,6	;RP1=0, select bank0
  1469  086D  0828               	movf	?___flmul,w
  1470  086E  1683               	bsf	3,5	;RP0=1, select bank1
  1471  086F  1303               	bcf	3,6	;RP1=0, select bank1
  1472  0870  00D0               	movwf	_volt1^(0+128)
  1473  0871                     l3534:	
  1474                           
  1475                           ;main_lab3.c: 65:         volt2 = pot2*(5.0/255);
  1476  0871  303C               	movlw	60
  1477  0872  1283               	bcf	3,5	;RP0=0, select bank0
  1478  0873  1303               	bcf	3,6	;RP1=0, select bank0
  1479  0874  00AB               	movwf	___flmul@b+3
  1480  0875  30A0               	movlw	160
  1481  0876  00AA               	movwf	___flmul@b+2
  1482  0877  30A0               	movlw	160
  1483  0878  00A9               	movwf	___flmul@b+1
  1484  0879  30A1               	movlw	161
  1485  087A  00A8               	movwf	___flmul@b
  1486  087B  1683               	bsf	3,5	;RP0=1, select bank1
  1487  087C  1303               	bcf	3,6	;RP1=0, select bank1
  1488  087D  0855               	movf	_pot2^(0+128),w
  1489  087E  00C8               	movwf	??_main^(0+128)
  1490  087F  01C9               	clrf	(??_main^(0+128)+1)
  1491  0880  01CA               	clrf	(??_main^(0+128)+2)
  1492  0881  01CB               	clrf	(??_main^(0+128)+3)
  1493  0882  084B               	movf	(??_main+3)^(0+128),w
  1494  0883  00F6               	movwf	___xxtofl@val+3
  1495  0884  084A               	movf	(??_main+2)^(0+128),w
  1496  0885  00F5               	movwf	___xxtofl@val+2
  1497  0886  0849               	movf	(??_main+1)^(0+128),w
  1498  0887  00F4               	movwf	___xxtofl@val+1
  1499  0888  0848               	movf	??_main^(0+128),w
  1500  0889  00F3               	movwf	___xxtofl@val
  1501  088A  3001               	movlw	1
  1502  088B  160A  118A  2070  120A  158A  	fcall	___xxtofl
  1503  0890  0876               	movf	?___xxtofl+3,w
  1504  0891  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0892  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0893  00AF               	movwf	___flmul@a+3
  1507  0894  0875               	movf	?___xxtofl+2,w
  1508  0895  00AE               	movwf	___flmul@a+2
  1509  0896  0874               	movf	?___xxtofl+1,w
  1510  0897  00AD               	movwf	___flmul@a+1
  1511  0898  0873               	movf	?___xxtofl,w
  1512  0899  00AC               	movwf	___flmul@a
  1513  089A  120A  158A  213C  120A  158A  	fcall	___flmul
  1514  089F  1283               	bcf	3,5	;RP0=0, select bank0
  1515  08A0  1303               	bcf	3,6	;RP1=0, select bank0
  1516  08A1  082B               	movf	?___flmul+3,w
  1517  08A2  1683               	bsf	3,5	;RP0=1, select bank1
  1518  08A3  1303               	bcf	3,6	;RP1=0, select bank1
  1519  08A4  00CF               	movwf	(_volt2+3)^(0+128)
  1520  08A5  1283               	bcf	3,5	;RP0=0, select bank0
  1521  08A6  1303               	bcf	3,6	;RP1=0, select bank0
  1522  08A7  082A               	movf	?___flmul+2,w
  1523  08A8  1683               	bsf	3,5	;RP0=1, select bank1
  1524  08A9  1303               	bcf	3,6	;RP1=0, select bank1
  1525  08AA  00CE               	movwf	(_volt2+2)^(0+128)
  1526  08AB  1283               	bcf	3,5	;RP0=0, select bank0
  1527  08AC  1303               	bcf	3,6	;RP1=0, select bank0
  1528  08AD  0829               	movf	?___flmul+1,w
  1529  08AE  1683               	bsf	3,5	;RP0=1, select bank1
  1530  08AF  1303               	bcf	3,6	;RP1=0, select bank1
  1531  08B0  00CD               	movwf	(_volt2+1)^(0+128)
  1532  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  1533  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  1534  08B3  0828               	movf	?___flmul,w
  1535  08B4  1683               	bsf	3,5	;RP0=1, select bank1
  1536  08B5  1303               	bcf	3,6	;RP1=0, select bank1
  1537  08B6  00CC               	movwf	_volt2^(0+128)
  1538  08B7                     l3536:	
  1539                           
  1540                           ;main_lab3.c: 66:         sprintf(string1,"%1.2f", volt1);
  1541  08B7  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1542  08B8  00C8               	movwf	??_main^(0+128)
  1543  08B9  0848               	movf	??_main^(0+128),w
  1544  08BA  1283               	bcf	3,5	;RP0=0, select bank0
  1545  08BB  1303               	bcf	3,6	;RP1=0, select bank0
  1546  08BC  00EA               	movwf	sprintf@f
  1547  08BD  1683               	bsf	3,5	;RP0=1, select bank1
  1548  08BE  1303               	bcf	3,6	;RP1=0, select bank1
  1549  08BF  0853               	movf	(_volt1+3)^(0+128),w
  1550  08C0  1283               	bcf	3,5	;RP0=0, select bank0
  1551  08C1  1303               	bcf	3,6	;RP1=0, select bank0
  1552  08C2  00EE               	movwf	?_sprintf+4
  1553  08C3  1683               	bsf	3,5	;RP0=1, select bank1
  1554  08C4  1303               	bcf	3,6	;RP1=0, select bank1
  1555  08C5  0852               	movf	(_volt1+2)^(0+128),w
  1556  08C6  1283               	bcf	3,5	;RP0=0, select bank0
  1557  08C7  1303               	bcf	3,6	;RP1=0, select bank0
  1558  08C8  00ED               	movwf	?_sprintf+3
  1559  08C9  1683               	bsf	3,5	;RP0=1, select bank1
  1560  08CA  1303               	bcf	3,6	;RP1=0, select bank1
  1561  08CB  0851               	movf	(_volt1+1)^(0+128),w
  1562  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  1563  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  1564  08CE  00EC               	movwf	?_sprintf+2
  1565  08CF  1683               	bsf	3,5	;RP0=1, select bank1
  1566  08D0  1303               	bcf	3,6	;RP1=0, select bank1
  1567  08D1  0850               	movf	_volt1^(0+128),w
  1568  08D2  1283               	bcf	3,5	;RP0=0, select bank0
  1569  08D3  1303               	bcf	3,6	;RP1=0, select bank0
  1570  08D4  00EB               	movwf	?_sprintf+1
  1571  08D5  30DB               	movlw	(low (_string1| 0))& (0+255)
  1572  08D6  120A  118A  201F  120A  158A  	fcall	_sprintf
  1573  08DB                     l3538:	
  1574                           
  1575                           ;main_lab3.c: 67:         sprintf(string2, "%1.2f", volt2);
  1576  08DB  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1577  08DC  1683               	bsf	3,5	;RP0=1, select bank1
  1578  08DD  1303               	bcf	3,6	;RP1=0, select bank1
  1579  08DE  00C8               	movwf	??_main^(0+128)
  1580  08DF  0848               	movf	??_main^(0+128),w
  1581  08E0  1283               	bcf	3,5	;RP0=0, select bank0
  1582  08E1  1303               	bcf	3,6	;RP1=0, select bank0
  1583  08E2  00EA               	movwf	sprintf@f
  1584  08E3  1683               	bsf	3,5	;RP0=1, select bank1
  1585  08E4  1303               	bcf	3,6	;RP1=0, select bank1
  1586  08E5  084F               	movf	(_volt2+3)^(0+128),w
  1587  08E6  1283               	bcf	3,5	;RP0=0, select bank0
  1588  08E7  1303               	bcf	3,6	;RP1=0, select bank0
  1589  08E8  00EE               	movwf	?_sprintf+4
  1590  08E9  1683               	bsf	3,5	;RP0=1, select bank1
  1591  08EA  1303               	bcf	3,6	;RP1=0, select bank1
  1592  08EB  084E               	movf	(_volt2+2)^(0+128),w
  1593  08EC  1283               	bcf	3,5	;RP0=0, select bank0
  1594  08ED  1303               	bcf	3,6	;RP1=0, select bank0
  1595  08EE  00ED               	movwf	?_sprintf+3
  1596  08EF  1683               	bsf	3,5	;RP0=1, select bank1
  1597  08F0  1303               	bcf	3,6	;RP1=0, select bank1
  1598  08F1  084D               	movf	(_volt2+1)^(0+128),w
  1599  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  1600  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  1601  08F4  00EC               	movwf	?_sprintf+2
  1602  08F5  1683               	bsf	3,5	;RP0=1, select bank1
  1603  08F6  1303               	bcf	3,6	;RP1=0, select bank1
  1604  08F7  084C               	movf	_volt2^(0+128),w
  1605  08F8  1283               	bcf	3,5	;RP0=0, select bank0
  1606  08F9  1303               	bcf	3,6	;RP1=0, select bank0
  1607  08FA  00EB               	movwf	?_sprintf+1
  1608  08FB  30D6               	movlw	(low (_string2| 0))& (0+255)
  1609  08FC  120A  118A  201F  120A  158A  	fcall	_sprintf
  1610  0901                     l3540:	
  1611                           
  1612                           ;main_lab3.c: 68:         LCD_SET_CURSOR(1,1);
  1613  0901  01F6               	clrf	LCD_SET_CURSOR@b
  1614  0902  0AF6               	incf	LCD_SET_CURSOR@b,f
  1615  0903  3001               	movlw	1
  1616  0904  160A  158A  23A4  120A  158A  	fcall	_LCD_SET_CURSOR
  1617  0909                     l3542:	
  1618                           
  1619                           ;main_lab3.c: 69:         LCD_WRITE_STRING("V1   V2  Cont.");
  1620  0909  3091               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1621  090A  00F6               	movwf	LCD_WRITE_STRING@a
  1622  090B  3080               	movlw	128
  1623  090C  00F7               	movwf	LCD_WRITE_STRING@a+1
  1624  090D  160A  158A  24A0  120A  158A  	fcall	_LCD_WRITE_STRING
  1625  0912                     l3544:	
  1626                           
  1627                           ;main_lab3.c: 70:         LCD_SET_CURSOR(2,1);
  1628  0912  01F6               	clrf	LCD_SET_CURSOR@b
  1629  0913  0AF6               	incf	LCD_SET_CURSOR@b,f
  1630  0914  3002               	movlw	2
  1631  0915  160A  158A  23A4  120A  158A  	fcall	_LCD_SET_CURSOR
  1632  091A                     l3546:	
  1633                           
  1634                           ;main_lab3.c: 71:         LCD_WRITE_STRING(string1);
  1635  091A  30DB               	movlw	(low (_string1| 0))& (0+255)
  1636  091B  00F6               	movwf	LCD_WRITE_STRING@a
  1637  091C  3000               	movlw	0
  1638  091D  00F7               	movwf	LCD_WRITE_STRING@a+1
  1639  091E  160A  158A  24A0  120A  158A  	fcall	_LCD_WRITE_STRING
  1640  0923                     l3548:	
  1641                           
  1642                           ;main_lab3.c: 72:         LCD_SET_CURSOR(2,6);
  1643  0923  3006               	movlw	6
  1644  0924  1683               	bsf	3,5	;RP0=1, select bank1
  1645  0925  1303               	bcf	3,6	;RP1=0, select bank1
  1646  0926  00C8               	movwf	??_main^(0+128)
  1647  0927  0848               	movf	??_main^(0+128),w
  1648  0928  00F6               	movwf	LCD_SET_CURSOR@b
  1649  0929  3002               	movlw	2
  1650  092A  160A  158A  23A4  120A  158A  	fcall	_LCD_SET_CURSOR
  1651  092F                     l3550:	
  1652                           
  1653                           ;main_lab3.c: 73:         LCD_WRITE_STRING(string2);
  1654  092F  30D6               	movlw	(low (_string2| 0))& (0+255)
  1655  0930  00F6               	movwf	LCD_WRITE_STRING@a
  1656  0931  3000               	movlw	0
  1657  0932  00F7               	movwf	LCD_WRITE_STRING@a+1
  1658  0933  160A  158A  24A0  120A  158A  	fcall	_LCD_WRITE_STRING
  1659  0938  281C               	goto	l3526
  1660  0939  120A  118A  280C   	ljmp	start
  1661  093C                     __end_of_main:	
  1662                           
  1663                           	psect	text1
  1664  1003                     __ptext1:	
  1665 ;; *************** function _start_conversion *****************
  1666 ;; Defined at:
  1667 ;;		line 24 in file "../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;		None
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;		None
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  1    wreg      void 
  1674 ;; Registers used:
  1675 ;;		None
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1681 ;;      Params:         0       0       0       0       0
  1682 ;;      Locals:         0       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0
  1684 ;;      Totals:         0       0       0       0       0
  1685 ;;Total ram usage:        0 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    1
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           
  1696                           ;psect for function _start_conversion
  1697  1003                     _start_conversion:	
  1698  1003                     l3238:	
  1699                           ;incstack = 0
  1700                           ; Regs used in _start_conversion: []
  1701                           
  1702                           
  1703                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 25:     ADCON0bits.GO_DONE
      +                           = 1;
  1704  1003  1283               	bcf	3,5	;RP0=0, select bank0
  1705  1004  1303               	bcf	3,6	;RP1=0, select bank0
  1706  1005  149F               	bsf	31,1	;volatile
  1707  1006                     l126:	
  1708  1006  0008               	return
  1709  1007                     __end_of_start_conversion:	
  1710                           
  1711                           	psect	text2
  1712  001F                     __ptext2:	
  1713 ;; *************** function _sprintf *****************
  1714 ;; Defined at:
  1715 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1716 ;; Parameters:    Size  Location     Type
  1717 ;;  sp              1    wreg     PTR unsigned char 
  1718 ;;		 -> string2(5), string1(5), 
  1719 ;;  f               1   74[BANK0 ] PTR const unsigned char 
  1720 ;;		 -> STR_2(6), STR_1(6), 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  sp              1   36[BANK1 ] PTR unsigned char 
  1723 ;;		 -> string2(5), string1(5), 
  1724 ;;  fval            4   32[BANK1 ] PTR unsigned char 
  1725 ;;  tmpval          4   26[BANK1 ] struct .
  1726 ;;  val             4   18[BANK1 ] unsigned long 
  1727 ;;  prec            2   37[BANK1 ] int 
  1728 ;;  eexp            2   30[BANK1 ] int 
  1729 ;;  width           2   24[BANK1 ] int 
  1730 ;;  flag            2   22[BANK1 ] unsigned short 
  1731 ;;  cp              2    0        PTR const unsigned char 
  1732 ;;  len             2    0        unsigned int 
  1733 ;;  c               1   39[BANK1 ] unsigned char 
  1734 ;;  ap              1   17[BANK1 ] PTR void [1]
  1735 ;;		 -> ?_sprintf(2), 
  1736 ;;  d               1    0        unsigned char 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  2   74[BANK0 ] int 
  1739 ;; Registers used:
  1740 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1746 ;;      Params:         0       5       0       0       0
  1747 ;;      Locals:         0       0      27       0       0
  1748 ;;      Temps:          0       0       5       0       0
  1749 ;;      Totals:         0       5      32       0       0
  1750 ;;Total ram usage:       37 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    4
  1753 ;; This function calls:
  1754 ;;		___awdiv
  1755 ;;		___fladd
  1756 ;;		___fleq
  1757 ;;		___flge
  1758 ;;		___flmul
  1759 ;;		___flneg
  1760 ;;		___flsub
  1761 ;;		___fltol
  1762 ;;		___lldiv
  1763 ;;		___llmod
  1764 ;;		___wmul
  1765 ;;		___xxtofl
  1766 ;;		__div_to_l_
  1767 ;;		__tdiv_to_l_
  1768 ;;		_fround
  1769 ;;		_isdigit
  1770 ;;		_scale
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           
  1777                           ;psect for function _sprintf
  1778  001F                     _sprintf:	
  1779                           
  1780                           ;incstack = 0
  1781                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1782                           ;sprintf@sp stored from wreg
  1783  001F  1683               	bsf	3,5	;RP0=1, select bank1
  1784  0020  1303               	bcf	3,6	;RP1=0, select bank1
  1785  0021  00C4               	movwf	sprintf@sp^(0+128)
  1786  0022                     l3240:	
  1787                           
  1788                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1789  0022  306B               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1790  0023  00A8               	movwf	??_sprintf^(0+128)
  1791  0024  0828               	movf	??_sprintf^(0+128),w
  1792  0025  00B1               	movwf	sprintf@ap^(0+128)
  1793                           
  1794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1795  0026  2F8E               	goto	l3490
  1796  0027                     l3242:	
  1797                           
  1798                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1799  0027  3025               	movlw	37
  1800  0028  0647               	xorwf	sprintf@c^(0+128),w
  1801  0029  1903               	btfsc	3,2
  1802  002A  282C               	goto	u5141
  1803  002B  282D               	goto	u5140
  1804  002C                     u5141:	
  1805  002C  2839               	goto	l3248
  1806  002D                     u5140:	
  1807  002D                     l3244:	
  1808                           
  1809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1810  002D  0847               	movf	sprintf@c^(0+128),w
  1811  002E  00A8               	movwf	??_sprintf^(0+128)
  1812  002F  0844               	movf	sprintf@sp^(0+128),w
  1813  0030  0084               	movwf	4
  1814  0031  0828               	movf	??_sprintf^(0+128),w
  1815  0032  1383               	bcf	3,7	;select IRP bank0
  1816  0033  0080               	movwf	0
  1817  0034                     l3246:	
  1818  0034  3001               	movlw	1
  1819  0035  00A8               	movwf	??_sprintf^(0+128)
  1820  0036  0828               	movf	??_sprintf^(0+128),w
  1821  0037  07C4               	addwf	sprintf@sp^(0+128),f
  1822                           
  1823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1824  0038  2F8E               	goto	l3490
  1825  0039                     l3248:	
  1826                           
  1827                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  1828  0039  01B8               	clrf	sprintf@width^(0+128)
  1829  003A  01B9               	clrf	(sprintf@width+1)^(0+128)
  1830                           
  1831                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1832  003B  01B6               	clrf	sprintf@flag^(0+128)
  1833  003C  01B7               	clrf	(sprintf@flag+1)^(0+128)
  1834  003D                     l3250:	
  1835                           
  1836                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  1837  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1838  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1839  003F  086A               	movf	sprintf@f,w
  1840  0040  0084               	movwf	4
  1841  0041  160A  158A  200A  120A  118A  	fcall	stringdir
  1842  0046  160A  158A  234D  120A  118A  	fcall	_isdigit
  1843  004B  1C03               	btfss	3,0
  1844  004C  284E               	goto	u5151
  1845  004D  284F               	goto	u5150
  1846  004E                     u5151:	
  1847  004E  2895               	goto	l3262
  1848  004F                     u5150:	
  1849  004F                     l3252:	
  1850                           
  1851                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  1852  004F  1683               	bsf	3,5	;RP0=1, select bank1
  1853  0050  1303               	bcf	3,6	;RP1=0, select bank1
  1854  0051  01B8               	clrf	sprintf@width^(0+128)
  1855  0052  01B9               	clrf	(sprintf@width+1)^(0+128)
  1856  0053                     l3254:	
  1857                           
  1858                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  1859  0053  300A               	movlw	10
  1860  0054  00F3               	movwf	___wmul@multiplier
  1861  0055  3000               	movlw	0
  1862  0056  00F4               	movwf	___wmul@multiplier+1
  1863  0057  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0058  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0059  0839               	movf	(sprintf@width+1)^(0+128),w
  1866  005A  00F6               	movwf	___wmul@multiplicand+1
  1867  005B  0838               	movf	sprintf@width^(0+128),w
  1868  005C  00F5               	movwf	___wmul@multiplicand
  1869  005D  160A  158A  23C8  120A  118A  	fcall	___wmul
  1870  0062  0874               	movf	?___wmul+1,w
  1871  0063  1683               	bsf	3,5	;RP0=1, select bank1
  1872  0064  1303               	bcf	3,6	;RP1=0, select bank1
  1873  0065  00B9               	movwf	(sprintf@width+1)^(0+128)
  1874  0066  0873               	movf	?___wmul,w
  1875  0067  00B8               	movwf	sprintf@width^(0+128)
  1876  0068                     l3256:	
  1877                           
  1878                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  1879  0068  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0069  1303               	bcf	3,6	;RP1=0, select bank0
  1881  006A  086A               	movf	sprintf@f,w
  1882  006B  0084               	movwf	4
  1883  006C  160A  158A  200A  120A  118A  	fcall	stringdir
  1884  0071  3ED0               	addlw	208
  1885  0072  1683               	bsf	3,5	;RP0=1, select bank1
  1886  0073  1303               	bcf	3,6	;RP1=0, select bank1
  1887  0074  00A8               	movwf	??_sprintf^(0+128)
  1888  0075  30FF               	movlw	255
  1889  0076  1803               	skipnc
  1890  0077  3000               	movlw	0
  1891  0078  00A9               	movwf	(??_sprintf^(0+128)+1)
  1892  0079  0828               	movf	??_sprintf^(0+128),w
  1893  007A  07B8               	addwf	sprintf@width^(0+128),f
  1894  007B  1803               	skipnc
  1895  007C  0AB9               	incf	(sprintf@width+1)^(0+128),f
  1896  007D  0829               	movf	(??_sprintf+1)^(0+128),w
  1897  007E  07B9               	addwf	(sprintf@width+1)^(0+128),f
  1898  007F                     l3258:	
  1899  007F  3001               	movlw	1
  1900  0080  00A8               	movwf	??_sprintf^(0+128)
  1901  0081  0828               	movf	??_sprintf^(0+128),w
  1902  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1903  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1904  0084  07EA               	addwf	sprintf@f,f
  1905  0085                     l3260:	
  1906                           
  1907                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  1908  0085  086A               	movf	sprintf@f,w
  1909  0086  0084               	movwf	4
  1910  0087  160A  158A  200A  120A  118A  	fcall	stringdir
  1911  008C  160A  158A  234D  120A  118A  	fcall	_isdigit
  1912  0091  1803               	btfsc	3,0
  1913  0092  2894               	goto	u5161
  1914  0093  2895               	goto	u5160
  1915  0094                     u5161:	
  1916  0094  2853               	goto	l3254
  1917  0095                     u5160:	
  1918  0095                     l3262:	
  1919                           
  1920                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1921  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1922  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1923  0097  086A               	movf	sprintf@f,w
  1924  0098  0084               	movwf	4
  1925  0099  160A  158A  200A  120A  118A  	fcall	stringdir
  1926  009E  3A2E               	xorlw	46
  1927  009F  1D03               	skipz
  1928  00A0  28A2               	goto	u5171
  1929  00A1  28A3               	goto	u5170
  1930  00A2                     u5171:	
  1931  00A2  28F5               	goto	l3278
  1932  00A3                     u5170:	
  1933  00A3                     l3264:	
  1934                           
  1935                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1936  00A3  1683               	bsf	3,5	;RP0=1, select bank1
  1937  00A4  1303               	bcf	3,6	;RP1=0, select bank1
  1938  00A5  1737               	bsf	(sprintf@flag^(0+128)+1),6
  1939  00A6                     l3266:	
  1940                           
  1941                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1942  00A6  3001               	movlw	1
  1943  00A7  00A8               	movwf	??_sprintf^(0+128)
  1944  00A8  0828               	movf	??_sprintf^(0+128),w
  1945  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1946  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1947  00AB  07EA               	addwf	sprintf@f,f
  1948  00AC                     l3268:	
  1949                           
  1950                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1951  00AC  1683               	bsf	3,5	;RP0=1, select bank1
  1952  00AD  1303               	bcf	3,6	;RP1=0, select bank1
  1953  00AE  01C5               	clrf	sprintf@prec^(0+128)
  1954  00AF  01C6               	clrf	(sprintf@prec+1)^(0+128)
  1955                           
  1956                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1957  00B0  28E3               	goto	l3276
  1958  00B1                     l3270:	
  1959                           
  1960                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1961  00B1  300A               	movlw	10
  1962  00B2  00F3               	movwf	___wmul@multiplier
  1963  00B3  3000               	movlw	0
  1964  00B4  00F4               	movwf	___wmul@multiplier+1
  1965  00B5  1683               	bsf	3,5	;RP0=1, select bank1
  1966  00B6  1303               	bcf	3,6	;RP1=0, select bank1
  1967  00B7  0846               	movf	(sprintf@prec+1)^(0+128),w
  1968  00B8  00F6               	movwf	___wmul@multiplicand+1
  1969  00B9  0845               	movf	sprintf@prec^(0+128),w
  1970  00BA  00F5               	movwf	___wmul@multiplicand
  1971  00BB  160A  158A  23C8  120A  118A  	fcall	___wmul
  1972  00C0  0874               	movf	?___wmul+1,w
  1973  00C1  1683               	bsf	3,5	;RP0=1, select bank1
  1974  00C2  1303               	bcf	3,6	;RP1=0, select bank1
  1975  00C3  00C6               	movwf	(sprintf@prec+1)^(0+128)
  1976  00C4  0873               	movf	?___wmul,w
  1977  00C5  00C5               	movwf	sprintf@prec^(0+128)
  1978  00C6                     l3272:	
  1979                           
  1980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1981  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1982  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1983  00C8  086A               	movf	sprintf@f,w
  1984  00C9  0084               	movwf	4
  1985  00CA  160A  158A  200A  120A  118A  	fcall	stringdir
  1986  00CF  3ED0               	addlw	208
  1987  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  1988  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  1989  00D2  00A8               	movwf	??_sprintf^(0+128)
  1990  00D3  30FF               	movlw	255
  1991  00D4  1803               	skipnc
  1992  00D5  3000               	movlw	0
  1993  00D6  00A9               	movwf	(??_sprintf^(0+128)+1)
  1994  00D7  0828               	movf	??_sprintf^(0+128),w
  1995  00D8  07C5               	addwf	sprintf@prec^(0+128),f
  1996  00D9  1803               	skipnc
  1997  00DA  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  1998  00DB  0829               	movf	(??_sprintf+1)^(0+128),w
  1999  00DC  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  2000  00DD                     l3274:	
  2001  00DD  3001               	movlw	1
  2002  00DE  00A8               	movwf	??_sprintf^(0+128)
  2003  00DF  0828               	movf	??_sprintf^(0+128),w
  2004  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2005  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2006  00E2  07EA               	addwf	sprintf@f,f
  2007  00E3                     l3276:	
  2008                           
  2009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  2010  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  2011  00E4  086A               	movf	sprintf@f,w
  2012  00E5  0084               	movwf	4
  2013  00E6  160A  158A  200A  120A  118A  	fcall	stringdir
  2014  00EB  160A  158A  234D  120A  118A  	fcall	_isdigit
  2015  00F0  1803               	btfsc	3,0
  2016  00F1  28F3               	goto	u5181
  2017  00F2  28F4               	goto	u5180
  2018  00F3                     u5181:	
  2019  00F3  28B1               	goto	l3270
  2020  00F4                     u5180:	
  2021  00F4  28FD               	goto	l3284
  2022  00F5                     l3278:	
  2023                           
  2024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  2025  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  2026  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  2027  00F7  01C5               	clrf	sprintf@prec^(0+128)
  2028  00F8  01C6               	clrf	(sprintf@prec+1)^(0+128)
  2029  00F9                     l3280:	
  2030                           
  2031                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  2032  00F9  1637               	bsf	(sprintf@flag^(0+128)+1),4
  2033  00FA  28FD               	goto	l3284
  2034  00FB                     l308:	
  2035                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  2036                           
  2037                           
  2038                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  2039  00FB  1537               	bsf	(sprintf@flag^(0+128)+1),2
  2040                           
  2041                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  2042  00FC  291B               	goto	l3286
  2043  00FD                     l3284:	
  2044  00FD  3001               	movlw	1
  2045  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  2046  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0100  07EA               	addwf	sprintf@f,f
  2048  0101  30FF               	movlw	-1
  2049  0102  076A               	addwf	sprintf@f,w
  2050  0103  0084               	movwf	4
  2051  0104  160A  158A  200A  120A  118A  	fcall	stringdir
  2052  0109  1683               	bsf	3,5	;RP0=1, select bank1
  2053  010A  1303               	bcf	3,6	;RP1=0, select bank1
  2054  010B  00C7               	movwf	sprintf@c^(0+128)
  2055  010C  00A8               	movwf	??_sprintf^(0+128)
  2056  010D  01A9               	clrf	(??_sprintf^(0+128)+1)
  2057                           
  2058                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2059                           ; Switch size 1, requested type "simple"
  2060                           ; Number of cases is 1, Range of values is 0 to 0
  2061                           ; switch strategies available:
  2062                           ; Name         Instructions Cycles
  2063                           ; simple_byte            4     3 (average)
  2064                           ; direct_byte           11     8 (fixed)
  2065                           ; jumptable            260     6 (fixed)
  2066                           ;	Chosen strategy is simple_byte
  2067  010E  0829               	movf	(??_sprintf+1)^(0+128),w
  2068  010F  3A00               	xorlw	0	; case 0
  2069  0110  1903               	skipnz
  2070  0111  2913               	goto	l3622
  2071  0112  2F8E               	goto	l3490
  2072  0113                     l3622:	
  2073                           
  2074                           ; Switch size 1, requested type "simple"
  2075                           ; Number of cases is 2, Range of values is 0 to 102
  2076                           ; switch strategies available:
  2077                           ; Name         Instructions Cycles
  2078                           ; simple_byte            7     4 (average)
  2079                           ; jumptable            260     6 (fixed)
  2080                           ;	Chosen strategy is simple_byte
  2081  0113  0828               	movf	??_sprintf^(0+128),w
  2082  0114  3A00               	xorlw	0	; case 0
  2083  0115  1903               	skipnz
  2084  0116  2FA4               	goto	l3492
  2085  0117  3A66               	xorlw	102	; case 102
  2086  0118  1903               	skipnz
  2087  0119  28FB               	goto	l308
  2088  011A  2F8E               	goto	l3490
  2089  011B                     l3286:	
  2090                           
  2091                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  2092  011B  3000               	movlw	0
  2093  011C  0536               	andwf	sprintf@flag^(0+128),w
  2094  011D  00A8               	movwf	??_sprintf^(0+128)
  2095  011E  3007               	movlw	7
  2096  011F  0537               	andwf	(sprintf@flag+1)^(0+128),w
  2097  0120  00A9               	movwf	(??_sprintf+1)^(0+128)
  2098  0121  0828               	movf	??_sprintf^(0+128),w
  2099  0122  0429               	iorwf	(??_sprintf^(0+128)+1),w
  2100  0123  1903               	btfsc	3,2
  2101  0124  2926               	goto	u5191
  2102  0125  2927               	goto	u5190
  2103  0126                     u5191:	
  2104  0126  2ECB               	goto	l3444
  2105  0127                     u5190:	
  2106  0127                     l3288:	
  2107                           
  2108                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  2109  0127  1E37               	btfss	(sprintf@flag+1)^(0+128),4
  2110  0128  292A               	goto	u5201
  2111  0129  292B               	goto	u5200
  2112  012A                     u5201:	
  2113  012A  292F               	goto	l3292
  2114  012B                     u5200:	
  2115  012B                     l3290:	
  2116                           
  2117                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  2118  012B  3006               	movlw	6
  2119  012C  00C5               	movwf	sprintf@prec^(0+128)
  2120  012D  3000               	movlw	0
  2121  012E  00C6               	movwf	(sprintf@prec^(0+128)+1)
  2122  012F                     l3292:	
  2123                           
  2124                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2125  012F  0831               	movf	sprintf@ap^(0+128),w
  2126  0130  0084               	movwf	4
  2127  0131  1383               	bcf	3,7	;select IRP bank0
  2128  0132  0800               	movf	0,w
  2129  0133  00C0               	movwf	sprintf@fval^(0+128)
  2130  0134  0A84               	incf	4,f
  2131  0135  0800               	movf	0,w
  2132  0136  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2133  0137  0A84               	incf	4,f
  2134  0138  0800               	movf	0,w
  2135  0139  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2136  013A  0A84               	incf	4,f
  2137  013B  0800               	movf	0,w
  2138  013C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2139  013D                     l3294:	
  2140  013D  3004               	movlw	4
  2141  013E  00A8               	movwf	??_sprintf^(0+128)
  2142  013F  0828               	movf	??_sprintf^(0+128),w
  2143  0140  07B1               	addwf	sprintf@ap^(0+128),f
  2144  0141                     l3296:	
  2145                           
  2146                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  2147  0141  0843               	movf	(sprintf@fval+3)^(0+128),w
  2148  0142  00F6               	movwf	___flge@ff1+3
  2149  0143  0842               	movf	(sprintf@fval+2)^(0+128),w
  2150  0144  00F5               	movwf	___flge@ff1+2
  2151  0145  0841               	movf	(sprintf@fval+1)^(0+128),w
  2152  0146  00F4               	movwf	___flge@ff1+1
  2153  0147  0840               	movf	sprintf@fval^(0+128),w
  2154  0148  00F3               	movwf	___flge@ff1
  2155  0149  3000               	movlw	0
  2156  014A  00FA               	movwf	___flge@ff2+3
  2157  014B  3000               	movlw	0
  2158  014C  00F9               	movwf	___flge@ff2+2
  2159  014D  3000               	movlw	0
  2160  014E  00F8               	movwf	___flge@ff2+1
  2161  014F  3000               	movlw	0
  2162  0150  00F7               	movwf	___flge@ff2
  2163  0151  160A  158A  275C  120A  118A  	fcall	___flge
  2164  0156  1803               	btfsc	3,0
  2165  0157  2959               	goto	u5211
  2166  0158  295A               	goto	u5210
  2167  0159                     u5211:	
  2168  0159  2977               	goto	l3302
  2169  015A                     u5210:	
  2170  015A                     l3298:	
  2171                           
  2172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  2173  015A  1683               	bsf	3,5	;RP0=1, select bank1
  2174  015B  1303               	bcf	3,6	;RP1=0, select bank1
  2175  015C  0843               	movf	(sprintf@fval+3)^(0+128),w
  2176  015D  00F6               	movwf	___flneg@f1+3
  2177  015E  0842               	movf	(sprintf@fval+2)^(0+128),w
  2178  015F  00F5               	movwf	___flneg@f1+2
  2179  0160  0841               	movf	(sprintf@fval+1)^(0+128),w
  2180  0161  00F4               	movwf	___flneg@f1+1
  2181  0162  0840               	movf	sprintf@fval^(0+128),w
  2182  0163  00F3               	movwf	___flneg@f1
  2183  0164  160A  158A  2342  120A  118A  	fcall	___flneg
  2184  0169  0876               	movf	?___flneg+3,w
  2185  016A  1683               	bsf	3,5	;RP0=1, select bank1
  2186  016B  1303               	bcf	3,6	;RP1=0, select bank1
  2187  016C  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2188  016D  0875               	movf	?___flneg+2,w
  2189  016E  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2190  016F  0874               	movf	?___flneg+1,w
  2191  0170  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2192  0171  0873               	movf	?___flneg,w
  2193  0172  00C0               	movwf	sprintf@fval^(0+128)
  2194  0173                     l3300:	
  2195                           
  2196                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2197  0173  3003               	movlw	3
  2198  0174  04B6               	iorwf	sprintf@flag^(0+128),f
  2199  0175  3000               	movlw	0
  2200  0176  04B7               	iorwf	(sprintf@flag+1)^(0+128),f
  2201  0177                     l3302:	
  2202                           
  2203                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2204  0177  1683               	bsf	3,5	;RP0=1, select bank1
  2205  0178  1303               	bcf	3,6	;RP1=0, select bank1
  2206  0179  01BE               	clrf	sprintf@eexp^(0+128)
  2207  017A  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  2208  017B                     l3304:	
  2209                           
  2210                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2211  017B  0843               	movf	(sprintf@fval+3)^(0+128),w
  2212  017C  00F6               	movwf	___fleq@ff1+3
  2213  017D  0842               	movf	(sprintf@fval+2)^(0+128),w
  2214  017E  00F5               	movwf	___fleq@ff1+2
  2215  017F  0841               	movf	(sprintf@fval+1)^(0+128),w
  2216  0180  00F4               	movwf	___fleq@ff1+1
  2217  0181  0840               	movf	sprintf@fval^(0+128),w
  2218  0182  00F3               	movwf	___fleq@ff1
  2219  0183  3000               	movlw	0
  2220  0184  00FA               	movwf	___fleq@ff2+3
  2221  0185  3000               	movlw	0
  2222  0186  00F9               	movwf	___fleq@ff2+2
  2223  0187  3000               	movlw	0
  2224  0188  00F8               	movwf	___fleq@ff2+1
  2225  0189  3000               	movlw	0
  2226  018A  00F7               	movwf	___fleq@ff2
  2227  018B  160A  158A  252C  120A  118A  	fcall	___fleq
  2228  0190  1803               	btfsc	3,0
  2229  0191  2993               	goto	u5221
  2230  0192  2994               	goto	u5220
  2231  0193                     u5221:	
  2232  0193  2A94               	goto	l3330
  2233  0194                     u5220:	
  2234  0194                     l3306:	
  2235                           
  2236                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2237  0194  1003               	clrc
  2238  0195  1683               	bsf	3,5	;RP0=1, select bank1
  2239  0196  1303               	bcf	3,6	;RP1=0, select bank1
  2240  0197  0D42               	rlf	(sprintf@fval+2)^(0+128),w
  2241  0198  0D43               	rlf	(sprintf@fval+3)^(0+128),w
  2242  0199  3E82               	addlw	130
  2243  019A  00BE               	movwf	sprintf@eexp^(0+128)
  2244  019B  30FF               	movlw	255
  2245  019C  1803               	skipnc
  2246  019D  3000               	movlw	0
  2247  019E  00BF               	movwf	(sprintf@eexp^(0+128)+1)
  2248  019F                     l3308:	
  2249                           
  2250                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2251  019F  30FF               	movlw	255
  2252  01A0  07BE               	addwf	sprintf@eexp^(0+128),f
  2253  01A1  1803               	skipnc
  2254  01A2  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2255  01A3  30FF               	movlw	255
  2256  01A4  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2257  01A5                     l3310:	
  2258                           
  2259                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2260  01A5  3003               	movlw	3
  2261  01A6  00F3               	movwf	___wmul@multiplier
  2262  01A7  3000               	movlw	0
  2263  01A8  00F4               	movwf	___wmul@multiplier+1
  2264  01A9  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2265  01AA  00F6               	movwf	___wmul@multiplicand+1
  2266  01AB  083E               	movf	sprintf@eexp^(0+128),w
  2267  01AC  00F5               	movwf	___wmul@multiplicand
  2268  01AD  160A  158A  23C8  120A  118A  	fcall	___wmul
  2269  01B2  0874               	movf	?___wmul+1,w
  2270  01B3  1683               	bsf	3,5	;RP0=1, select bank1
  2271  01B4  1303               	bcf	3,6	;RP1=0, select bank1
  2272  01B5  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  2273  01B6  0873               	movf	?___wmul,w
  2274  01B7  00BE               	movwf	sprintf@eexp^(0+128)
  2275  01B8                     l3312:	
  2276                           
  2277                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2278  01B8  300A               	movlw	10
  2279  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  2280  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  2281  01BB  00A0               	movwf	___awdiv@divisor
  2282  01BC  3000               	movlw	0
  2283  01BD  00A1               	movwf	___awdiv@divisor+1
  2284  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  2285  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  2286  01C0  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2287  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  2288  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  2289  01C3  00A3               	movwf	___awdiv@dividend+1
  2290  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  2291  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  2292  01C6  083E               	movf	sprintf@eexp^(0+128),w
  2293  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2294  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2295  01C9  00A2               	movwf	___awdiv@dividend
  2296  01CA  160A  118A  2007  120A  118A  	fcall	___awdiv
  2297  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2298  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2299  01D1  0821               	movf	?___awdiv+1,w
  2300  01D2  1683               	bsf	3,5	;RP0=1, select bank1
  2301  01D3  1303               	bcf	3,6	;RP1=0, select bank1
  2302  01D4  00BF               	movwf	(sprintf@eexp+1)^(0+128)
  2303  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2304  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2305  01D7  0820               	movf	?___awdiv,w
  2306  01D8  1683               	bsf	3,5	;RP0=1, select bank1
  2307  01D9  1303               	bcf	3,6	;RP1=0, select bank1
  2308  01DA  00BE               	movwf	sprintf@eexp^(0+128)
  2309  01DB                     l3314:	
  2310                           
  2311                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2312  01DB  1FBF               	btfss	(sprintf@eexp+1)^(0+128),7
  2313  01DC  29DE               	goto	u5231
  2314  01DD  29DF               	goto	u5230
  2315  01DE                     u5231:	
  2316  01DE  29E5               	goto	l3318
  2317  01DF                     u5230:	
  2318  01DF                     l3316:	
  2319                           
  2320                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2321  01DF  30FF               	movlw	255
  2322  01E0  07BE               	addwf	sprintf@eexp^(0+128),f
  2323  01E1  1803               	skipnc
  2324  01E2  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2325  01E3  30FF               	movlw	255
  2326  01E4  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2327  01E5                     l3318:	
  2328                           
  2329                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2330  01E5  033E               	decf	sprintf@eexp^(0+128),w
  2331  01E6  3AFF               	xorlw	255
  2332  01E7  120A  158A  249D  120A  118A  	fcall	_scale
  2333  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2334  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2335  01EE  0845               	movf	?_scale+3,w
  2336  01EF  1683               	bsf	3,5	;RP0=1, select bank1
  2337  01F0  1303               	bcf	3,6	;RP1=0, select bank1
  2338  01F1  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2339  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  2340  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  2341  01F4  0844               	movf	?_scale+2,w
  2342  01F5  1683               	bsf	3,5	;RP0=1, select bank1
  2343  01F6  1303               	bcf	3,6	;RP1=0, select bank1
  2344  01F7  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2345  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2346  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2347  01FA  0843               	movf	?_scale+1,w
  2348  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  2349  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  2350  01FD  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2351  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  2352  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  2353  0200  0842               	movf	?_scale,w
  2354  0201  1683               	bsf	3,5	;RP0=1, select bank1
  2355  0202  1303               	bcf	3,6	;RP1=0, select bank1
  2356  0203  00BA               	movwf	sprintf@tmpval^(0+128)
  2357  0204                     l3320:	
  2358                           
  2359                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2360  0204  0843               	movf	(sprintf@fval+3)^(0+128),w
  2361  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2362  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2363  0207  00AB               	movwf	___flmul@b+3
  2364  0208  1683               	bsf	3,5	;RP0=1, select bank1
  2365  0209  1303               	bcf	3,6	;RP1=0, select bank1
  2366  020A  0842               	movf	(sprintf@fval+2)^(0+128),w
  2367  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2368  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2369  020D  00AA               	movwf	___flmul@b+2
  2370  020E  1683               	bsf	3,5	;RP0=1, select bank1
  2371  020F  1303               	bcf	3,6	;RP1=0, select bank1
  2372  0210  0841               	movf	(sprintf@fval+1)^(0+128),w
  2373  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2374  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2375  0213  00A9               	movwf	___flmul@b+1
  2376  0214  1683               	bsf	3,5	;RP0=1, select bank1
  2377  0215  1303               	bcf	3,6	;RP1=0, select bank1
  2378  0216  0840               	movf	sprintf@fval^(0+128),w
  2379  0217  1283               	bcf	3,5	;RP0=0, select bank0
  2380  0218  1303               	bcf	3,6	;RP1=0, select bank0
  2381  0219  00A8               	movwf	___flmul@b
  2382  021A  1683               	bsf	3,5	;RP0=1, select bank1
  2383  021B  1303               	bcf	3,6	;RP1=0, select bank1
  2384  021C  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2385  021D  1283               	bcf	3,5	;RP0=0, select bank0
  2386  021E  1303               	bcf	3,6	;RP1=0, select bank0
  2387  021F  00AF               	movwf	___flmul@a+3
  2388  0220  1683               	bsf	3,5	;RP0=1, select bank1
  2389  0221  1303               	bcf	3,6	;RP1=0, select bank1
  2390  0222  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2391  0223  1283               	bcf	3,5	;RP0=0, select bank0
  2392  0224  1303               	bcf	3,6	;RP1=0, select bank0
  2393  0225  00AE               	movwf	___flmul@a+2
  2394  0226  1683               	bsf	3,5	;RP0=1, select bank1
  2395  0227  1303               	bcf	3,6	;RP1=0, select bank1
  2396  0228  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2397  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2398  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2399  022B  00AD               	movwf	___flmul@a+1
  2400  022C  1683               	bsf	3,5	;RP0=1, select bank1
  2401  022D  1303               	bcf	3,6	;RP1=0, select bank1
  2402  022E  083A               	movf	sprintf@tmpval^(0+128),w
  2403  022F  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0230  1303               	bcf	3,6	;RP1=0, select bank0
  2405  0231  00AC               	movwf	___flmul@a
  2406  0232  120A  158A  213C  120A  118A  	fcall	___flmul
  2407  0237  1283               	bcf	3,5	;RP0=0, select bank0
  2408  0238  1303               	bcf	3,6	;RP1=0, select bank0
  2409  0239  082B               	movf	?___flmul+3,w
  2410  023A  1683               	bsf	3,5	;RP0=1, select bank1
  2411  023B  1303               	bcf	3,6	;RP1=0, select bank1
  2412  023C  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2413  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2414  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2415  023F  082A               	movf	?___flmul+2,w
  2416  0240  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0241  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0242  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2419  0243  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0244  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0245  0829               	movf	?___flmul+1,w
  2422  0246  1683               	bsf	3,5	;RP0=1, select bank1
  2423  0247  1303               	bcf	3,6	;RP1=0, select bank1
  2424  0248  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2425  0249  1283               	bcf	3,5	;RP0=0, select bank0
  2426  024A  1303               	bcf	3,6	;RP1=0, select bank0
  2427  024B  0828               	movf	?___flmul,w
  2428  024C  1683               	bsf	3,5	;RP0=1, select bank1
  2429  024D  1303               	bcf	3,6	;RP1=0, select bank1
  2430  024E  00BA               	movwf	sprintf@tmpval^(0+128)
  2431  024F                     l3322:	
  2432                           
  2433                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2434  024F  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2435  0250  00F6               	movwf	___flge@ff1+3
  2436  0251  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2437  0252  00F5               	movwf	___flge@ff1+2
  2438  0253  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2439  0254  00F4               	movwf	___flge@ff1+1
  2440  0255  083A               	movf	sprintf@tmpval^(0+128),w
  2441  0256  00F3               	movwf	___flge@ff1
  2442  0257  303F               	movlw	63
  2443  0258  00FA               	movwf	___flge@ff2+3
  2444  0259  3080               	movlw	128
  2445  025A  00F9               	movwf	___flge@ff2+2
  2446  025B  3000               	movlw	0
  2447  025C  00F8               	movwf	___flge@ff2+1
  2448  025D  3000               	movlw	0
  2449  025E  00F7               	movwf	___flge@ff2
  2450  025F  160A  158A  275C  120A  118A  	fcall	___flge
  2451  0264  1803               	btfsc	3,0
  2452  0265  2A67               	goto	u5241
  2453  0266  2A68               	goto	u5240
  2454  0267                     u5241:	
  2455  0267  2A71               	goto	l3326
  2456  0268                     u5240:	
  2457  0268                     l3324:	
  2458                           
  2459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2460  0268  30FF               	movlw	255
  2461  0269  1683               	bsf	3,5	;RP0=1, select bank1
  2462  026A  1303               	bcf	3,6	;RP1=0, select bank1
  2463  026B  07BE               	addwf	sprintf@eexp^(0+128),f
  2464  026C  1803               	skipnc
  2465  026D  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2466  026E  30FF               	movlw	255
  2467  026F  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2468  0270  2A94               	goto	l3330
  2469  0271                     l3326:	
  2470  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2471  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2472  0273  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2473  0274  00F6               	movwf	___flge@ff1+3
  2474  0275  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2475  0276  00F5               	movwf	___flge@ff1+2
  2476  0277  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2477  0278  00F4               	movwf	___flge@ff1+1
  2478  0279  083A               	movf	sprintf@tmpval^(0+128),w
  2479  027A  00F3               	movwf	___flge@ff1
  2480  027B  3041               	movlw	65
  2481  027C  00FA               	movwf	___flge@ff2+3
  2482  027D  3020               	movlw	32
  2483  027E  00F9               	movwf	___flge@ff2+2
  2484  027F  3000               	movlw	0
  2485  0280  00F8               	movwf	___flge@ff2+1
  2486  0281  3000               	movlw	0
  2487  0282  00F7               	movwf	___flge@ff2
  2488  0283  160A  158A  275C  120A  118A  	fcall	___flge
  2489  0288  1C03               	btfss	3,0
  2490  0289  2A8B               	goto	u5251
  2491  028A  2A8C               	goto	u5250
  2492  028B                     u5251:	
  2493  028B  2A94               	goto	l3330
  2494  028C                     u5250:	
  2495  028C                     l3328:	
  2496                           
  2497                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2498  028C  3001               	movlw	1
  2499  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2500  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2501  028F  07BE               	addwf	sprintf@eexp^(0+128),f
  2502  0290  1803               	skipnc
  2503  0291  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2504  0292  3000               	movlw	0
  2505  0293  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2506  0294                     l3330:	
  2507                           
  2508                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2509  0294  1683               	bsf	3,5	;RP0=1, select bank1
  2510  0295  1303               	bcf	3,6	;RP1=0, select bank1
  2511  0296  0846               	movf	(sprintf@prec+1)^(0+128),w
  2512  0297  3A80               	xorlw	128
  2513  0298  00FF               	movwf	btemp+1
  2514  0299  3080               	movlw	128
  2515  029A  027F               	subwf	btemp+1,w
  2516  029B  1D03               	skipz
  2517  029C  2A9F               	goto	u5265
  2518  029D  300D               	movlw	13
  2519  029E  0245               	subwf	sprintf@prec^(0+128),w
  2520  029F                     u5265:	
  2521  029F  1803               	skipnc
  2522  02A0  2AA2               	goto	u5261
  2523  02A1  2AA3               	goto	u5260
  2524  02A2                     u5261:	
  2525  02A2  2AEA               	goto	l3334
  2526  02A3                     u5260:	
  2527  02A3                     l3332:	
  2528                           
  2529                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2530  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  2531  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  2532  02A5  0845               	movf	sprintf@prec^(0+128),w
  2533  02A6  160A  118A  236B  120A  118A  	fcall	_fround
  2534  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2535  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2536  02AD  0845               	movf	?_fround+3,w
  2537  02AE  00D9               	movwf	___fladd@b+3
  2538  02AF  0844               	movf	?_fround+2,w
  2539  02B0  00D8               	movwf	___fladd@b+2
  2540  02B1  0843               	movf	?_fround+1,w
  2541  02B2  00D7               	movwf	___fladd@b+1
  2542  02B3  0842               	movf	?_fround,w
  2543  02B4  00D6               	movwf	___fladd@b
  2544  02B5  1683               	bsf	3,5	;RP0=1, select bank1
  2545  02B6  1303               	bcf	3,6	;RP1=0, select bank1
  2546  02B7  0843               	movf	(sprintf@fval+3)^(0+128),w
  2547  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  2548  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  2549  02BA  00DD               	movwf	___fladd@a+3
  2550  02BB  1683               	bsf	3,5	;RP0=1, select bank1
  2551  02BC  1303               	bcf	3,6	;RP1=0, select bank1
  2552  02BD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2553  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2554  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2555  02C0  00DC               	movwf	___fladd@a+2
  2556  02C1  1683               	bsf	3,5	;RP0=1, select bank1
  2557  02C2  1303               	bcf	3,6	;RP1=0, select bank1
  2558  02C3  0841               	movf	(sprintf@fval+1)^(0+128),w
  2559  02C4  1283               	bcf	3,5	;RP0=0, select bank0
  2560  02C5  1303               	bcf	3,6	;RP1=0, select bank0
  2561  02C6  00DB               	movwf	___fladd@a+1
  2562  02C7  1683               	bsf	3,5	;RP0=1, select bank1
  2563  02C8  1303               	bcf	3,6	;RP1=0, select bank1
  2564  02C9  0840               	movf	sprintf@fval^(0+128),w
  2565  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  2566  02CB  1303               	bcf	3,6	;RP1=0, select bank0
  2567  02CC  00DA               	movwf	___fladd@a
  2568  02CD  160A  118A  2578  120A  118A  	fcall	___fladd
  2569  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2570  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2571  02D4  0859               	movf	?___fladd+3,w
  2572  02D5  1683               	bsf	3,5	;RP0=1, select bank1
  2573  02D6  1303               	bcf	3,6	;RP1=0, select bank1
  2574  02D7  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2575  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2576  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2577  02DA  0858               	movf	?___fladd+2,w
  2578  02DB  1683               	bsf	3,5	;RP0=1, select bank1
  2579  02DC  1303               	bcf	3,6	;RP1=0, select bank1
  2580  02DD  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2581  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  2582  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  2583  02E0  0857               	movf	?___fladd+1,w
  2584  02E1  1683               	bsf	3,5	;RP0=1, select bank1
  2585  02E2  1303               	bcf	3,6	;RP1=0, select bank1
  2586  02E3  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2587  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2588  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2589  02E6  0856               	movf	?___fladd,w
  2590  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2591  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2592  02E9  00C0               	movwf	sprintf@fval^(0+128)
  2593  02EA                     l3334:	
  2594                           
  2595                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2596  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2597  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2598  02EC  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2599  02ED  3A80               	xorlw	128
  2600  02EE  00FF               	movwf	btemp+1
  2601  02EF  3080               	movlw	128
  2602  02F0  027F               	subwf	btemp+1,w
  2603  02F1  1D03               	skipz
  2604  02F2  2AF5               	goto	u5275
  2605  02F3  300A               	movlw	10
  2606  02F4  023E               	subwf	sprintf@eexp^(0+128),w
  2607  02F5                     u5275:	
  2608  02F5  1803               	skipnc
  2609  02F6  2AF8               	goto	u5271
  2610  02F7  2AF9               	goto	u5270
  2611  02F8                     u5271:	
  2612  02F8  2B4A               	goto	l3342
  2613  02F9                     u5270:	
  2614  02F9                     l3336:	
  2615  02F9  1683               	bsf	3,5	;RP0=1, select bank1
  2616  02FA  1303               	bcf	3,6	;RP1=0, select bank1
  2617  02FB  0843               	movf	(sprintf@fval+3)^(0+128),w
  2618  02FC  00F6               	movwf	___fleq@ff1+3
  2619  02FD  0842               	movf	(sprintf@fval+2)^(0+128),w
  2620  02FE  00F5               	movwf	___fleq@ff1+2
  2621  02FF  0841               	movf	(sprintf@fval+1)^(0+128),w
  2622  0300  00F4               	movwf	___fleq@ff1+1
  2623  0301  0840               	movf	sprintf@fval^(0+128),w
  2624  0302  00F3               	movwf	___fleq@ff1
  2625  0303  3000               	movlw	0
  2626  0304  00FA               	movwf	___fleq@ff2+3
  2627  0305  3000               	movlw	0
  2628  0306  00F9               	movwf	___fleq@ff2+2
  2629  0307  3000               	movlw	0
  2630  0308  00F8               	movwf	___fleq@ff2+1
  2631  0309  3000               	movlw	0
  2632  030A  00F7               	movwf	___fleq@ff2
  2633  030B  160A  158A  252C  120A  118A  	fcall	___fleq
  2634  0310  1803               	btfsc	3,0
  2635  0311  2B13               	goto	u5281
  2636  0312  2B14               	goto	u5280
  2637  0313                     u5281:	
  2638  0313  2BBC               	goto	l3356
  2639  0314                     u5280:	
  2640  0314                     l3338:	
  2641  0314  1683               	bsf	3,5	;RP0=1, select bank1
  2642  0315  1303               	bcf	3,6	;RP1=0, select bank1
  2643  0316  0843               	movf	(sprintf@fval+3)^(0+128),w
  2644  0317  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0318  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0319  00D8               	movwf	___fltol@f1+3
  2647  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2648  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2649  031C  0842               	movf	(sprintf@fval+2)^(0+128),w
  2650  031D  1283               	bcf	3,5	;RP0=0, select bank0
  2651  031E  1303               	bcf	3,6	;RP1=0, select bank0
  2652  031F  00D7               	movwf	___fltol@f1+2
  2653  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2654  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2655  0322  0841               	movf	(sprintf@fval+1)^(0+128),w
  2656  0323  1283               	bcf	3,5	;RP0=0, select bank0
  2657  0324  1303               	bcf	3,6	;RP1=0, select bank0
  2658  0325  00D6               	movwf	___fltol@f1+1
  2659  0326  1683               	bsf	3,5	;RP0=1, select bank1
  2660  0327  1303               	bcf	3,6	;RP1=0, select bank1
  2661  0328  0840               	movf	sprintf@fval^(0+128),w
  2662  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2663  032A  1303               	bcf	3,6	;RP1=0, select bank0
  2664  032B  00D5               	movwf	___fltol@f1
  2665  032C  160A  158A  26E0  120A  118A  	fcall	___fltol
  2666  0331  1283               	bcf	3,5	;RP0=0, select bank0
  2667  0332  1303               	bcf	3,6	;RP1=0, select bank0
  2668  0333  0858               	movf	?___fltol+3,w
  2669  0334  0457               	iorwf	?___fltol+2,w
  2670  0335  0456               	iorwf	?___fltol+1,w
  2671  0336  0455               	iorwf	?___fltol,w
  2672  0337  1D03               	skipz
  2673  0338  2B3A               	goto	u5291
  2674  0339  2B3B               	goto	u5290
  2675  033A                     u5291:	
  2676  033A  2BBC               	goto	l3356
  2677  033B                     u5290:	
  2678  033B                     l3340:	
  2679  033B  1683               	bsf	3,5	;RP0=1, select bank1
  2680  033C  1303               	bcf	3,6	;RP1=0, select bank1
  2681  033D  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2682  033E  3A80               	xorlw	128
  2683  033F  00FF               	movwf	btemp+1
  2684  0340  3080               	movlw	128
  2685  0341  027F               	subwf	btemp+1,w
  2686  0342  1D03               	skipz
  2687  0343  2B46               	goto	u5305
  2688  0344  3002               	movlw	2
  2689  0345  023E               	subwf	sprintf@eexp^(0+128),w
  2690  0346                     u5305:	
  2691  0346  1C03               	skipc
  2692  0347  2B49               	goto	u5301
  2693  0348  2B4A               	goto	u5300
  2694  0349                     u5301:	
  2695  0349  2BBC               	goto	l3356
  2696  034A                     u5300:	
  2697  034A                     l3342:	
  2698                           
  2699                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  2700  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2701  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2702  034C  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2703  034D  00F6               	movwf	___flge@ff1+3
  2704  034E  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2705  034F  00F5               	movwf	___flge@ff1+2
  2706  0350  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2707  0351  00F4               	movwf	___flge@ff1+1
  2708  0352  083A               	movf	sprintf@tmpval^(0+128),w
  2709  0353  00F3               	movwf	___flge@ff1
  2710  0354  3040               	movlw	64
  2711  0355  00FA               	movwf	___flge@ff2+3
  2712  0356  3089               	movlw	137
  2713  0357  00F9               	movwf	___flge@ff2+2
  2714  0358  3070               	movlw	112
  2715  0359  00F8               	movwf	___flge@ff2+1
  2716  035A  305F               	movlw	95
  2717  035B  00F7               	movwf	___flge@ff2
  2718  035C  160A  158A  275C  120A  118A  	fcall	___flge
  2719  0361  1803               	btfsc	3,0
  2720  0362  2B64               	goto	u5311
  2721  0363  2B65               	goto	u5310
  2722  0364                     u5311:	
  2723  0364  2B6E               	goto	l3346
  2724  0365                     u5310:	
  2725  0365                     l3344:	
  2726                           
  2727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2728  0365  30F7               	movlw	247
  2729  0366  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0367  1303               	bcf	3,6	;RP1=0, select bank1
  2731  0368  07BE               	addwf	sprintf@eexp^(0+128),f
  2732  0369  1803               	skipnc
  2733  036A  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2734  036B  30FF               	movlw	255
  2735  036C  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2736                           
  2737                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
  2738  036D  2B76               	goto	l3348
  2739  036E                     l3346:	
  2740                           
  2741                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2742  036E  30F8               	movlw	248
  2743  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2744  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2745  0371  07BE               	addwf	sprintf@eexp^(0+128),f
  2746  0372  1803               	skipnc
  2747  0373  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  2748  0374  30FF               	movlw	255
  2749  0375  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  2750  0376                     l3348:	
  2751                           
  2752                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2753  0376  083E               	movf	sprintf@eexp^(0+128),w
  2754  0377  120A  158A  249D  120A  118A  	fcall	_scale
  2755  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2756  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2757  037E  0845               	movf	?_scale+3,w
  2758  037F  1683               	bsf	3,5	;RP0=1, select bank1
  2759  0380  1303               	bcf	3,6	;RP1=0, select bank1
  2760  0381  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  2761  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2762  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2763  0384  0844               	movf	?_scale+2,w
  2764  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2765  0386  1303               	bcf	3,6	;RP1=0, select bank1
  2766  0387  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  2767  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2768  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2769  038A  0843               	movf	?_scale+1,w
  2770  038B  1683               	bsf	3,5	;RP0=1, select bank1
  2771  038C  1303               	bcf	3,6	;RP1=0, select bank1
  2772  038D  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  2773  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2774  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0390  0842               	movf	?_scale,w
  2776  0391  1683               	bsf	3,5	;RP0=1, select bank1
  2777  0392  1303               	bcf	3,6	;RP1=0, select bank1
  2778  0393  00BA               	movwf	sprintf@tmpval^(0+128)
  2779  0394                     l3350:	
  2780  0394  0843               	movf	(sprintf@fval+3)^(0+128),w
  2781  0395  00F6               	movwf	__div_to_l_@f1+3
  2782  0396  0842               	movf	(sprintf@fval+2)^(0+128),w
  2783  0397  00F5               	movwf	__div_to_l_@f1+2
  2784  0398  0841               	movf	(sprintf@fval+1)^(0+128),w
  2785  0399  00F4               	movwf	__div_to_l_@f1+1
  2786  039A  0840               	movf	sprintf@fval^(0+128),w
  2787  039B  00F3               	movwf	__div_to_l_@f1
  2788  039C  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  2789  039D  00FA               	movwf	__div_to_l_@f2+3
  2790  039E  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  2791  039F  00F9               	movwf	__div_to_l_@f2+2
  2792  03A0  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  2793  03A1  00F8               	movwf	__div_to_l_@f2+1
  2794  03A2  083A               	movf	sprintf@tmpval^(0+128),w
  2795  03A3  00F7               	movwf	__div_to_l_@f2
  2796  03A4  160A  118A  21E9  120A  118A  	fcall	__div_to_l_
  2797  03A9  0876               	movf	?__div_to_l_+3,w
  2798  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  2799  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  2800  03AC  00B5               	movwf	(sprintf@val+3)^(0+128)
  2801  03AD  0875               	movf	?__div_to_l_+2,w
  2802  03AE  00B4               	movwf	(sprintf@val+2)^(0+128)
  2803  03AF  0874               	movf	?__div_to_l_+1,w
  2804  03B0  00B3               	movwf	(sprintf@val+1)^(0+128)
  2805  03B1  0873               	movf	?__div_to_l_,w
  2806  03B2  00B2               	movwf	sprintf@val^(0+128)
  2807  03B3                     l3354:	
  2808                           
  2809                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
  2810  03B3  3000               	movlw	0
  2811  03B4  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2812  03B5  3000               	movlw	0
  2813  03B6  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2814  03B7  3000               	movlw	0
  2815  03B8  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2816  03B9  3000               	movlw	0
  2817  03BA  00C0               	movwf	sprintf@fval^(0+128)
  2818                           
  2819                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
  2820  03BB  2C22               	goto	l3362
  2821  03BC                     l3356:	
  2822                           
  2823                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
  2824  03BC  1683               	bsf	3,5	;RP0=1, select bank1
  2825  03BD  1303               	bcf	3,6	;RP1=0, select bank1
  2826  03BE  0843               	movf	(sprintf@fval+3)^(0+128),w
  2827  03BF  1283               	bcf	3,5	;RP0=0, select bank0
  2828  03C0  1303               	bcf	3,6	;RP1=0, select bank0
  2829  03C1  00D8               	movwf	___fltol@f1+3
  2830  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2831  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2832  03C4  0842               	movf	(sprintf@fval+2)^(0+128),w
  2833  03C5  1283               	bcf	3,5	;RP0=0, select bank0
  2834  03C6  1303               	bcf	3,6	;RP1=0, select bank0
  2835  03C7  00D7               	movwf	___fltol@f1+2
  2836  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2837  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2838  03CA  0841               	movf	(sprintf@fval+1)^(0+128),w
  2839  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2840  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2841  03CD  00D6               	movwf	___fltol@f1+1
  2842  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  2843  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  2844  03D0  0840               	movf	sprintf@fval^(0+128),w
  2845  03D1  1283               	bcf	3,5	;RP0=0, select bank0
  2846  03D2  1303               	bcf	3,6	;RP1=0, select bank0
  2847  03D3  00D5               	movwf	___fltol@f1
  2848  03D4  160A  158A  26E0  120A  118A  	fcall	___fltol
  2849  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2850  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2851  03DB  0858               	movf	?___fltol+3,w
  2852  03DC  1683               	bsf	3,5	;RP0=1, select bank1
  2853  03DD  1303               	bcf	3,6	;RP1=0, select bank1
  2854  03DE  00B5               	movwf	(sprintf@val+3)^(0+128)
  2855  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2856  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2857  03E1  0857               	movf	?___fltol+2,w
  2858  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2859  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2860  03E4  00B4               	movwf	(sprintf@val+2)^(0+128)
  2861  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2862  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2863  03E7  0856               	movf	?___fltol+1,w
  2864  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  2865  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  2866  03EA  00B3               	movwf	(sprintf@val+1)^(0+128)
  2867  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2868  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2869  03ED  0855               	movf	?___fltol,w
  2870  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2871  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2872  03F0  00B2               	movwf	sprintf@val^(0+128)
  2873  03F1                     l3358:	
  2874                           
  2875                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
  2876  03F1  0835               	movf	(sprintf@val+3)^(0+128),w
  2877  03F2  00F6               	movwf	___xxtofl@val+3
  2878  03F3  0834               	movf	(sprintf@val+2)^(0+128),w
  2879  03F4  00F5               	movwf	___xxtofl@val+2
  2880  03F5  0833               	movf	(sprintf@val+1)^(0+128),w
  2881  03F6  00F4               	movwf	___xxtofl@val+1
  2882  03F7  0832               	movf	sprintf@val^(0+128),w
  2883  03F8  00F3               	movwf	___xxtofl@val
  2884  03F9  3000               	movlw	0
  2885  03FA  160A  118A  2070  120A  118A  	fcall	___xxtofl
  2886  03FF  0876               	movf	?___xxtofl+3,w
  2887  0400  1683               	bsf	3,5	;RP0=1, select bank1
  2888  0401  1303               	bcf	3,6	;RP1=0, select bank1
  2889  0402  00A3               	movwf	(___flsub@a+3)^(0+128)
  2890  0403  0875               	movf	?___xxtofl+2,w
  2891  0404  00A2               	movwf	(___flsub@a+2)^(0+128)
  2892  0405  0874               	movf	?___xxtofl+1,w
  2893  0406  00A1               	movwf	(___flsub@a+1)^(0+128)
  2894  0407  0873               	movf	?___xxtofl,w
  2895  0408  00A0               	movwf	___flsub@a^(0+128)
  2896  0409  0843               	movf	(sprintf@fval+3)^(0+128),w
  2897  040A  00A7               	movwf	(___flsub@b+3)^(0+128)
  2898  040B  0842               	movf	(sprintf@fval+2)^(0+128),w
  2899  040C  00A6               	movwf	(___flsub@b+2)^(0+128)
  2900  040D  0841               	movf	(sprintf@fval+1)^(0+128),w
  2901  040E  00A5               	movwf	(___flsub@b+1)^(0+128)
  2902  040F  0840               	movf	sprintf@fval^(0+128),w
  2903  0410  00A4               	movwf	___flsub@b^(0+128)
  2904  0411  160A  158A  257C  120A  118A  	fcall	___flsub
  2905  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2906  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2907  0418  0823               	movf	(?___flsub+3)^(0+128),w
  2908  0419  00C3               	movwf	(sprintf@fval+3)^(0+128)
  2909  041A  0822               	movf	(?___flsub+2)^(0+128),w
  2910  041B  00C2               	movwf	(sprintf@fval+2)^(0+128)
  2911  041C  0821               	movf	(?___flsub+1)^(0+128),w
  2912  041D  00C1               	movwf	(sprintf@fval+1)^(0+128)
  2913  041E  0820               	movf	?___flsub^(0+128),w
  2914  041F  00C0               	movwf	sprintf@fval^(0+128)
  2915  0420                     l3360:	
  2916                           
  2917                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
  2918  0420  01BE               	clrf	sprintf@eexp^(0+128)
  2919  0421  01BF               	clrf	(sprintf@eexp+1)^(0+128)
  2920  0422                     l3362:	
  2921                           
  2922                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2923  0422  01C7               	clrf	sprintf@c^(0+128)
  2924  0423  0AC7               	incf	sprintf@c^(0+128),f
  2925  0424                     l3368:	
  2926                           
  2927                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
  2928  0424  0847               	movf	sprintf@c^(0+128),w
  2929  0425  00A8               	movwf	??_sprintf^(0+128)
  2930  0426  3001               	movlw	1
  2931  0427                     u5325:	
  2932  0427  1003               	clrc
  2933  0428  0DA8               	rlf	??_sprintf^(0+128),f
  2934  0429  3EFF               	addlw	-1
  2935  042A  1D03               	skipz
  2936  042B  2C27               	goto	u5325
  2937  042C  1003               	clrc
  2938  042D  0D28               	rlf	??_sprintf^(0+128),w
  2939  042E  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2940  042F  0084               	movwf	4
  2941  0430  160A  158A  200A  120A  118A  	fcall	stringdir
  2942  0435  00A9               	movwf	(??_sprintf+1)^(0+128)
  2943  0436  160A  158A  200A  120A  118A  	fcall	stringdir
  2944  043B  00AA               	movwf	((??_sprintf+1)^(0+128)+1)
  2945  043C  160A  158A  200A  120A  118A  	fcall	stringdir
  2946  0441  00AB               	movwf	((??_sprintf+1)^(0+128)+2)
  2947  0442  160A  158A  200A  120A  118A  	fcall	stringdir
  2948  0447  00AC               	movwf	((??_sprintf+1)^(0+128)+3)
  2949  0448  082C               	movf	(??_sprintf+4)^(0+128),w
  2950  0449  0235               	subwf	(sprintf@val+3)^(0+128),w
  2951  044A  1D03               	skipz
  2952  044B  2C56               	goto	u5335
  2953  044C  082B               	movf	(??_sprintf+3)^(0+128),w
  2954  044D  0234               	subwf	(sprintf@val+2)^(0+128),w
  2955  044E  1D03               	skipz
  2956  044F  2C56               	goto	u5335
  2957  0450  082A               	movf	(??_sprintf+2)^(0+128),w
  2958  0451  0233               	subwf	(sprintf@val+1)^(0+128),w
  2959  0452  1D03               	skipz
  2960  0453  2C56               	goto	u5335
  2961  0454  0829               	movf	(??_sprintf+1)^(0+128),w
  2962  0455  0232               	subwf	sprintf@val^(0+128),w
  2963  0456                     u5335:	
  2964  0456  1803               	skipnc
  2965  0457  2C59               	goto	u5331
  2966  0458  2C5A               	goto	u5330
  2967  0459                     u5331:	
  2968  0459  2C5B               	goto	l3372
  2969  045A                     u5330:	
  2970  045A  2C65               	goto	l3374
  2971  045B                     l3372:	
  2972  045B  3001               	movlw	1
  2973  045C  00A8               	movwf	??_sprintf^(0+128)
  2974  045D  0828               	movf	??_sprintf^(0+128),w
  2975  045E  07C7               	addwf	sprintf@c^(0+128),f
  2976  045F  300A               	movlw	10
  2977  0460  0647               	xorwf	sprintf@c^(0+128),w
  2978  0461  1D03               	btfss	3,2
  2979  0462  2C64               	goto	u5341
  2980  0463  2C65               	goto	u5340
  2981  0464                     u5341:	
  2982  0464  2C24               	goto	l3368
  2983  0465                     u5340:	
  2984  0465                     l3374:	
  2985                           
  2986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1168:     w
      +                          idth -= prec + c + eexp;
  2987  0465  0847               	movf	sprintf@c^(0+128),w
  2988  0466  0745               	addwf	sprintf@prec^(0+128),w
  2989  0467  00A8               	movwf	??_sprintf^(0+128)
  2990  0468  0846               	movf	(sprintf@prec+1)^(0+128),w
  2991  0469  1803               	skipnc
  2992  046A  0A46               	incf	(sprintf@prec+1)^(0+128),w
  2993  046B  00A9               	movwf	(??_sprintf^(0+128)+1)
  2994  046C  083E               	movf	sprintf@eexp^(0+128),w
  2995  046D  0728               	addwf	??_sprintf^(0+128),w
  2996  046E  00AA               	movwf	(??_sprintf+2)^(0+128)
  2997  046F  083F               	movf	(sprintf@eexp+1)^(0+128),w
  2998  0470  1803               	skipnc
  2999  0471  0A3F               	incf	(sprintf@eexp+1)^(0+128),w
  3000  0472  0729               	addwf	(??_sprintf+1)^(0+128),w
  3001  0473  00AB               	movwf	(??_sprintf+3)^(0+128)
  3002  0474  082A               	movf	(??_sprintf+2)^(0+128),w
  3003  0475  02B8               	subwf	sprintf@width^(0+128),f
  3004  0476  082B               	movf	(??_sprintf+3)^(0+128),w
  3005  0477  1C03               	skipc
  3006  0478  03B9               	decf	(sprintf@width+1)^(0+128),f
  3007  0479  02B9               	subwf	(sprintf@width+1)^(0+128),f
  3008                           
  3009                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1169:     i
      +                          f(
  3010  047A  0845               	movf	sprintf@prec^(0+128),w
  3011  047B  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  3012  047C  1903               	btfsc	3,2
  3013  047D  2C7F               	goto	u5351
  3014  047E  2C80               	goto	u5350
  3015  047F                     u5351:	
  3016  047F  2C86               	goto	l3378
  3017  0480                     u5350:	
  3018  0480                     l3376:	
  3019                           
  3020                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1174:      
      +                          width--;
  3021  0480  30FF               	movlw	255
  3022  0481  07B8               	addwf	sprintf@width^(0+128),f
  3023  0482  1803               	skipnc
  3024  0483  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3025  0484  30FF               	movlw	255
  3026  0485  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3027  0486                     l3378:	
  3028                           
  3029                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1175:     i
      +                          f(flag & 0x03)
  3030  0486  3003               	movlw	3
  3031  0487  0536               	andwf	sprintf@flag^(0+128),w
  3032  0488  00A8               	movwf	??_sprintf^(0+128)
  3033  0489  3000               	movlw	0
  3034  048A  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3035  048B  00A9               	movwf	(??_sprintf+1)^(0+128)
  3036  048C  0828               	movf	??_sprintf^(0+128),w
  3037  048D  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3038  048E  1903               	btfsc	3,2
  3039  048F  2C91               	goto	u5361
  3040  0490  2C92               	goto	u5360
  3041  0491                     u5361:	
  3042  0491  2CA7               	goto	l3388
  3043  0492                     u5360:	
  3044  0492                     l3380:	
  3045                           
  3046                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1176:      
      +                          width--;
  3047  0492  30FF               	movlw	255
  3048  0493  07B8               	addwf	sprintf@width^(0+128),f
  3049  0494  1803               	skipnc
  3050  0495  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3051  0496  30FF               	movlw	255
  3052  0497  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3053  0498  2CA7               	goto	l3388
  3054  0499                     l3382:	
  3055                           
  3056                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1207:      
      +                           ((*sp++ = (' ')));
  3057  0499  3020               	movlw	32
  3058  049A  1683               	bsf	3,5	;RP0=1, select bank1
  3059  049B  1303               	bcf	3,6	;RP1=0, select bank1
  3060  049C  00A8               	movwf	??_sprintf^(0+128)
  3061  049D  0844               	movf	sprintf@sp^(0+128),w
  3062  049E  0084               	movwf	4
  3063  049F  0828               	movf	??_sprintf^(0+128),w
  3064  04A0  1383               	bcf	3,7	;select IRP bank0
  3065  04A1  0080               	movwf	0
  3066  04A2                     l3384:	
  3067  04A2  3001               	movlw	1
  3068  04A3  00A8               	movwf	??_sprintf^(0+128)
  3069  04A4  0828               	movf	??_sprintf^(0+128),w
  3070  04A5  07C4               	addwf	sprintf@sp^(0+128),f
  3071  04A6  2C92               	goto	l3380
  3072  04A7                     l3388:	
  3073                           
  3074                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1206:      
      +                          while(width > 0) {
  3075  04A7  0839               	movf	(sprintf@width+1)^(0+128),w
  3076  04A8  3A80               	xorlw	128
  3077  04A9  00FF               	movwf	btemp+1
  3078  04AA  3080               	movlw	128
  3079  04AB  027F               	subwf	btemp+1,w
  3080  04AC  1D03               	skipz
  3081  04AD  2CB0               	goto	u5375
  3082  04AE  3001               	movlw	1
  3083  04AF  0238               	subwf	sprintf@width^(0+128),w
  3084  04B0                     u5375:	
  3085  04B0  1803               	skipnc
  3086  04B1  2CB3               	goto	u5371
  3087  04B2  2CB4               	goto	u5370
  3088  04B3                     u5371:	
  3089  04B3  2C99               	goto	l3382
  3090  04B4                     u5370:	
  3091  04B4                     l3390:	
  3092                           
  3093                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
  3094  04B4  3003               	movlw	3
  3095  04B5  1683               	bsf	3,5	;RP0=1, select bank1
  3096  04B6  1303               	bcf	3,6	;RP1=0, select bank1
  3097  04B7  0536               	andwf	sprintf@flag^(0+128),w
  3098  04B8  00A8               	movwf	??_sprintf^(0+128)
  3099  04B9  3000               	movlw	0
  3100  04BA  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3101  04BB  00A9               	movwf	(??_sprintf+1)^(0+128)
  3102  04BC  0828               	movf	??_sprintf^(0+128),w
  3103  04BD  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3104  04BE  1903               	btfsc	3,2
  3105  04BF  2CC1               	goto	u5381
  3106  04C0  2CC2               	goto	u5380
  3107  04C1                     u5381:	
  3108  04C1  2D34               	goto	l339
  3109  04C2                     u5380:	
  3110  04C2                     l3392:	
  3111                           
  3112                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
  3113  04C2  302D               	movlw	45
  3114  04C3  00A8               	movwf	??_sprintf^(0+128)
  3115  04C4  0844               	movf	sprintf@sp^(0+128),w
  3116  04C5  0084               	movwf	4
  3117  04C6  0828               	movf	??_sprintf^(0+128),w
  3118  04C7  1383               	bcf	3,7	;select IRP bank0
  3119  04C8  0080               	movwf	0
  3120  04C9                     l3394:	
  3121  04C9  3001               	movlw	1
  3122  04CA  00A8               	movwf	??_sprintf^(0+128)
  3123  04CB  0828               	movf	??_sprintf^(0+128),w
  3124  04CC  07C4               	addwf	sprintf@sp^(0+128),f
  3125  04CD  2D34               	goto	l339
  3126  04CE                     l3396:	
  3127                           
  3128                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
  3129  04CE  0847               	movf	sprintf@c^(0+128),w
  3130  04CF  00A8               	movwf	??_sprintf^(0+128)
  3131  04D0  3001               	movlw	1
  3132  04D1                     u5395:	
  3133  04D1  1003               	clrc
  3134  04D2  0DA8               	rlf	??_sprintf^(0+128),f
  3135  04D3  3EFF               	addlw	-1
  3136  04D4  1D03               	skipz
  3137  04D5  2CD1               	goto	u5395
  3138  04D6  1003               	clrc
  3139  04D7  0D28               	rlf	??_sprintf^(0+128),w
  3140  04D8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3141  04D9  0084               	movwf	4
  3142  04DA  160A  158A  200A  120A  118A  	fcall	stringdir
  3143  04DF  00F3               	movwf	___lldiv@divisor
  3144  04E0  160A  158A  200A  120A  118A  	fcall	stringdir
  3145  04E5  00F4               	movwf	___lldiv@divisor+1
  3146  04E6  160A  158A  200A  120A  118A  	fcall	stringdir
  3147  04EB  00F5               	movwf	___lldiv@divisor+2
  3148  04EC  160A  158A  200A  120A  118A  	fcall	stringdir
  3149  04F1  00F6               	movwf	___lldiv@divisor+3
  3150  04F2  0835               	movf	(sprintf@val+3)^(0+128),w
  3151  04F3  00FA               	movwf	___lldiv@dividend+3
  3152  04F4  0834               	movf	(sprintf@val+2)^(0+128),w
  3153  04F5  00F9               	movwf	___lldiv@dividend+2
  3154  04F6  0833               	movf	(sprintf@val+1)^(0+128),w
  3155  04F7  00F8               	movwf	___lldiv@dividend+1
  3156  04F8  0832               	movf	sprintf@val^(0+128),w
  3157  04F9  00F7               	movwf	___lldiv@dividend
  3158  04FA  160A  158A  2678  120A  118A  	fcall	___lldiv
  3159  04FF  0876               	movf	?___lldiv+3,w
  3160  0500  1683               	bsf	3,5	;RP0=1, select bank1
  3161  0501  1303               	bcf	3,6	;RP1=0, select bank1
  3162  0502  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3163  0503  0875               	movf	?___lldiv+2,w
  3164  0504  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3165  0505  0874               	movf	?___lldiv+1,w
  3166  0506  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3167  0507  0873               	movf	?___lldiv,w
  3168  0508  00BA               	movwf	sprintf@tmpval^(0+128)
  3169  0509                     l3398:	
  3170                           
  3171                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
  3172  0509  3000               	movlw	0
  3173  050A  00F6               	movwf	___llmod@divisor+3
  3174  050B  3000               	movlw	0
  3175  050C  00F5               	movwf	___llmod@divisor+2
  3176  050D  3000               	movlw	0
  3177  050E  00F4               	movwf	___llmod@divisor+1
  3178  050F  300A               	movlw	10
  3179  0510  00F3               	movwf	___llmod@divisor
  3180  0511  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3181  0512  00FA               	movwf	___llmod@dividend+3
  3182  0513  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3183  0514  00F9               	movwf	___llmod@dividend+2
  3184  0515  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3185  0516  00F8               	movwf	___llmod@dividend+1
  3186  0517  083A               	movf	sprintf@tmpval^(0+128),w
  3187  0518  00F7               	movwf	___llmod@dividend
  3188  0519  120A  118A  27A9  120A  118A  	fcall	___llmod
  3189  051E  0876               	movf	?___llmod+3,w
  3190  051F  1683               	bsf	3,5	;RP0=1, select bank1
  3191  0520  1303               	bcf	3,6	;RP1=0, select bank1
  3192  0521  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3193  0522  0875               	movf	?___llmod+2,w
  3194  0523  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3195  0524  0874               	movf	?___llmod+1,w
  3196  0525  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3197  0526  0873               	movf	?___llmod,w
  3198  0527  00BA               	movwf	sprintf@tmpval^(0+128)
  3199  0528                     l3400:	
  3200                           
  3201                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  3202  0528  083A               	movf	sprintf@tmpval^(0+128),w
  3203  0529  3E30               	addlw	48
  3204  052A  00A8               	movwf	??_sprintf^(0+128)
  3205  052B  0844               	movf	sprintf@sp^(0+128),w
  3206  052C  0084               	movwf	4
  3207  052D  0828               	movf	??_sprintf^(0+128),w
  3208  052E  1383               	bcf	3,7	;select IRP bank0
  3209  052F  0080               	movwf	0
  3210  0530  3001               	movlw	1
  3211  0531  00A8               	movwf	??_sprintf^(0+128)
  3212  0532  0828               	movf	??_sprintf^(0+128),w
  3213  0533  07C4               	addwf	sprintf@sp^(0+128),f
  3214  0534                     l339:	
  3215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
  3216                           
  3217                           
  3218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
  3219  0534  3001               	movlw	1
  3220  0535  02C7               	subwf	sprintf@c^(0+128),f
  3221  0536  0A47               	incf	sprintf@c^(0+128),w
  3222  0537  1D03               	btfss	3,2
  3223  0538  2D3A               	goto	u5401
  3224  0539  2D3B               	goto	u5400
  3225  053A                     u5401:	
  3226  053A  2CCE               	goto	l3396
  3227  053B                     u5400:	
  3228  053B  2D4F               	goto	l3408
  3229  053C                     l3402:	
  3230                           
  3231                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
  3232  053C  3030               	movlw	48
  3233  053D  1683               	bsf	3,5	;RP0=1, select bank1
  3234  053E  1303               	bcf	3,6	;RP1=0, select bank1
  3235  053F  00A8               	movwf	??_sprintf^(0+128)
  3236  0540  0844               	movf	sprintf@sp^(0+128),w
  3237  0541  0084               	movwf	4
  3238  0542  0828               	movf	??_sprintf^(0+128),w
  3239  0543  1383               	bcf	3,7	;select IRP bank0
  3240  0544  0080               	movwf	0
  3241  0545                     l3404:	
  3242  0545  3001               	movlw	1
  3243  0546  00A8               	movwf	??_sprintf^(0+128)
  3244  0547  0828               	movf	??_sprintf^(0+128),w
  3245  0548  07C4               	addwf	sprintf@sp^(0+128),f
  3246  0549                     l3406:	
  3247                           
  3248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
  3249  0549  30FF               	movlw	255
  3250  054A  07BE               	addwf	sprintf@eexp^(0+128),f
  3251  054B  1803               	skipnc
  3252  054C  0ABF               	incf	(sprintf@eexp+1)^(0+128),f
  3253  054D  30FF               	movlw	255
  3254  054E  07BF               	addwf	(sprintf@eexp+1)^(0+128),f
  3255  054F                     l3408:	
  3256                           
  3257                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
  3258  054F  083F               	movf	(sprintf@eexp+1)^(0+128),w
  3259  0550  3A80               	xorlw	128
  3260  0551  00FF               	movwf	btemp+1
  3261  0552  3080               	movlw	128
  3262  0553  027F               	subwf	btemp+1,w
  3263  0554  1D03               	skipz
  3264  0555  2D58               	goto	u5415
  3265  0556  3001               	movlw	1
  3266  0557  023E               	subwf	sprintf@eexp^(0+128),w
  3267  0558                     u5415:	
  3268  0558  1803               	skipnc
  3269  0559  2D5B               	goto	u5411
  3270  055A  2D5C               	goto	u5410
  3271  055B                     u5411:	
  3272  055B  2D3C               	goto	l3402
  3273  055C                     u5410:	
  3274  055C                     l3410:	
  3275                           
  3276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3277  055C  1683               	bsf	3,5	;RP0=1, select bank1
  3278  055D  1303               	bcf	3,6	;RP1=0, select bank1
  3279  055E  0846               	movf	(sprintf@prec+1)^(0+128),w
  3280  055F  3A80               	xorlw	128
  3281  0560  00FF               	movwf	btemp+1
  3282  0561  3080               	movlw	128
  3283  0562  027F               	subwf	btemp+1,w
  3284  0563  1D03               	skipz
  3285  0564  2D67               	goto	u5425
  3286  0565  3009               	movlw	9
  3287  0566  0245               	subwf	sprintf@prec^(0+128),w
  3288  0567                     u5425:	
  3289  0567  1C03               	skipc
  3290  0568  2D6A               	goto	u5421
  3291  0569  2D6B               	goto	u5420
  3292  056A                     u5421:	
  3293  056A  2D72               	goto	l3414
  3294  056B                     u5420:	
  3295  056B                     l3412:	
  3296                           
  3297                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  3298  056B  3008               	movlw	8
  3299  056C  1683               	bsf	3,5	;RP0=1, select bank1
  3300  056D  1303               	bcf	3,6	;RP1=0, select bank1
  3301  056E  00A8               	movwf	??_sprintf^(0+128)
  3302  056F  0828               	movf	??_sprintf^(0+128),w
  3303  0570  00C7               	movwf	sprintf@c^(0+128)
  3304  0571  2D78               	goto	l346
  3305  0572                     l3414:	
  3306                           
  3307                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
  3308  0572  1683               	bsf	3,5	;RP0=1, select bank1
  3309  0573  1303               	bcf	3,6	;RP1=0, select bank1
  3310  0574  0845               	movf	sprintf@prec^(0+128),w
  3311  0575  00A8               	movwf	??_sprintf^(0+128)
  3312  0576  0828               	movf	??_sprintf^(0+128),w
  3313  0577  00C7               	movwf	sprintf@c^(0+128)
  3314  0578                     l346:	
  3315                           
  3316                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
  3317  0578  0847               	movf	sprintf@c^(0+128),w
  3318  0579  00A8               	movwf	??_sprintf^(0+128)
  3319  057A  01A9               	clrf	(??_sprintf^(0+128)+1)
  3320  057B  0828               	movf	??_sprintf^(0+128),w
  3321  057C  02C5               	subwf	sprintf@prec^(0+128),f
  3322  057D  0829               	movf	(??_sprintf+1)^(0+128),w
  3323  057E  1C03               	skipc
  3324  057F  03C6               	decf	(sprintf@prec+1)^(0+128),f
  3325  0580  02C6               	subwf	(sprintf@prec+1)^(0+128),f
  3326  0581                     l3416:	
  3327                           
  3328                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
  3329  0581  0847               	movf	sprintf@c^(0+128),w
  3330  0582  1903               	btfsc	3,2
  3331  0583  2D85               	goto	u5431
  3332  0584  2D86               	goto	u5430
  3333  0585                     u5431:	
  3334  0585  2D91               	goto	l3422
  3335  0586                     u5430:	
  3336  0586                     l3418:	
  3337                           
  3338                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
  3339  0586  302E               	movlw	46
  3340  0587  00A8               	movwf	??_sprintf^(0+128)
  3341  0588  0844               	movf	sprintf@sp^(0+128),w
  3342  0589  0084               	movwf	4
  3343  058A  0828               	movf	??_sprintf^(0+128),w
  3344  058B  1383               	bcf	3,7	;select IRP bank0
  3345  058C  0080               	movwf	0
  3346  058D                     l3420:	
  3347  058D  3001               	movlw	1
  3348  058E  00A8               	movwf	??_sprintf^(0+128)
  3349  058F  0828               	movf	??_sprintf^(0+128),w
  3350  0590  07C4               	addwf	sprintf@sp^(0+128),f
  3351  0591                     l3422:	
  3352                           
  3353                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3354  0591  0847               	movf	sprintf@c^(0+128),w
  3355  0592  120A  158A  249D  120A  118A  	fcall	_scale
  3356  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3357  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3358  0599  0845               	movf	?_scale+3,w
  3359  059A  1683               	bsf	3,5	;RP0=1, select bank1
  3360  059B  1303               	bcf	3,6	;RP1=0, select bank1
  3361  059C  00B0               	movwf	(_sprintf$1211+3)^(0+128)
  3362  059D  1283               	bcf	3,5	;RP0=0, select bank0
  3363  059E  1303               	bcf	3,6	;RP1=0, select bank0
  3364  059F  0844               	movf	?_scale+2,w
  3365  05A0  1683               	bsf	3,5	;RP0=1, select bank1
  3366  05A1  1303               	bcf	3,6	;RP1=0, select bank1
  3367  05A2  00AF               	movwf	(_sprintf$1211+2)^(0+128)
  3368  05A3  1283               	bcf	3,5	;RP0=0, select bank0
  3369  05A4  1303               	bcf	3,6	;RP1=0, select bank0
  3370  05A5  0843               	movf	?_scale+1,w
  3371  05A6  1683               	bsf	3,5	;RP0=1, select bank1
  3372  05A7  1303               	bcf	3,6	;RP1=0, select bank1
  3373  05A8  00AE               	movwf	(_sprintf$1211+1)^(0+128)
  3374  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  3375  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  3376  05AB  0842               	movf	?_scale,w
  3377  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  3378  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  3379  05AE  00AD               	movwf	_sprintf$1211^(0+128)
  3380  05AF                     l3424:	
  3381                           
  3382                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3383  05AF  0830               	movf	(_sprintf$1211+3)^(0+128),w
  3384  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  3385  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  3386  05B2  00AF               	movwf	___flmul@a+3
  3387  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  3388  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  3389  05B5  082F               	movf	(_sprintf$1211+2)^(0+128),w
  3390  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  3391  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  3392  05B8  00AE               	movwf	___flmul@a+2
  3393  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3394  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  3395  05BB  082E               	movf	(_sprintf$1211+1)^(0+128),w
  3396  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  3397  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  3398  05BE  00AD               	movwf	___flmul@a+1
  3399  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  3400  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  3401  05C1  082D               	movf	_sprintf$1211^(0+128),w
  3402  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  3403  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  3404  05C4  00AC               	movwf	___flmul@a
  3405  05C5  1683               	bsf	3,5	;RP0=1, select bank1
  3406  05C6  1303               	bcf	3,6	;RP1=0, select bank1
  3407  05C7  0843               	movf	(sprintf@fval+3)^(0+128),w
  3408  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  3409  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  3410  05CA  00AB               	movwf	___flmul@b+3
  3411  05CB  1683               	bsf	3,5	;RP0=1, select bank1
  3412  05CC  1303               	bcf	3,6	;RP1=0, select bank1
  3413  05CD  0842               	movf	(sprintf@fval+2)^(0+128),w
  3414  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  3415  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  3416  05D0  00AA               	movwf	___flmul@b+2
  3417  05D1  1683               	bsf	3,5	;RP0=1, select bank1
  3418  05D2  1303               	bcf	3,6	;RP1=0, select bank1
  3419  05D3  0841               	movf	(sprintf@fval+1)^(0+128),w
  3420  05D4  1283               	bcf	3,5	;RP0=0, select bank0
  3421  05D5  1303               	bcf	3,6	;RP1=0, select bank0
  3422  05D6  00A9               	movwf	___flmul@b+1
  3423  05D7  1683               	bsf	3,5	;RP0=1, select bank1
  3424  05D8  1303               	bcf	3,6	;RP1=0, select bank1
  3425  05D9  0840               	movf	sprintf@fval^(0+128),w
  3426  05DA  1283               	bcf	3,5	;RP0=0, select bank0
  3427  05DB  1303               	bcf	3,6	;RP1=0, select bank0
  3428  05DC  00A8               	movwf	___flmul@b
  3429  05DD  120A  158A  213C  120A  118A  	fcall	___flmul
  3430  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3431  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3432  05E4  082B               	movf	?___flmul+3,w
  3433  05E5  00D8               	movwf	___fltol@f1+3
  3434  05E6  082A               	movf	?___flmul+2,w
  3435  05E7  00D7               	movwf	___fltol@f1+2
  3436  05E8  0829               	movf	?___flmul+1,w
  3437  05E9  00D6               	movwf	___fltol@f1+1
  3438  05EA  0828               	movf	?___flmul,w
  3439  05EB  00D5               	movwf	___fltol@f1
  3440  05EC  160A  158A  26E0  120A  118A  	fcall	___fltol
  3441  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3442  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3443  05F3  0858               	movf	?___fltol+3,w
  3444  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3445  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3446  05F6  00B5               	movwf	(sprintf@val+3)^(0+128)
  3447  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3448  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3449  05F9  0857               	movf	?___fltol+2,w
  3450  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3451  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3452  05FC  00B4               	movwf	(sprintf@val+2)^(0+128)
  3453  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3454  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3455  05FF  0856               	movf	?___fltol+1,w
  3456  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3457  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3458  0602  00B3               	movwf	(sprintf@val+1)^(0+128)
  3459  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0605  0855               	movf	?___fltol,w
  3462  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3463  0607  1303               	bcf	3,6	;RP1=0, select bank1
  3464  0608  00B2               	movwf	sprintf@val^(0+128)
  3465                           
  3466                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3467  0609  2EAB               	goto	l3434
  3468  060A                     l3426:	
  3469                           
  3470                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
  3471  060A  0847               	movf	sprintf@c^(0+128),w
  3472  060B  00A8               	movwf	??_sprintf^(0+128)
  3473  060C  3001               	movlw	1
  3474  060D                     u5445:	
  3475  060D  1003               	clrc
  3476  060E  0DA8               	rlf	??_sprintf^(0+128),f
  3477  060F  3EFF               	addlw	-1
  3478  0610  1D03               	skipz
  3479  0611  2E0D               	goto	u5445
  3480  0612  1003               	clrc
  3481  0613  0D28               	rlf	??_sprintf^(0+128),w
  3482  0614  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3483  0615  0084               	movwf	4
  3484  0616  160A  158A  200A  120A  118A  	fcall	stringdir
  3485  061B  00F3               	movwf	___lldiv@divisor
  3486  061C  160A  158A  200A  120A  118A  	fcall	stringdir
  3487  0621  00F4               	movwf	___lldiv@divisor+1
  3488  0622  160A  158A  200A  120A  118A  	fcall	stringdir
  3489  0627  00F5               	movwf	___lldiv@divisor+2
  3490  0628  160A  158A  200A  120A  118A  	fcall	stringdir
  3491  062D  00F6               	movwf	___lldiv@divisor+3
  3492  062E  0835               	movf	(sprintf@val+3)^(0+128),w
  3493  062F  00FA               	movwf	___lldiv@dividend+3
  3494  0630  0834               	movf	(sprintf@val+2)^(0+128),w
  3495  0631  00F9               	movwf	___lldiv@dividend+2
  3496  0632  0833               	movf	(sprintf@val+1)^(0+128),w
  3497  0633  00F8               	movwf	___lldiv@dividend+1
  3498  0634  0832               	movf	sprintf@val^(0+128),w
  3499  0635  00F7               	movwf	___lldiv@dividend
  3500  0636  160A  158A  2678  120A  118A  	fcall	___lldiv
  3501  063B  0876               	movf	?___lldiv+3,w
  3502  063C  1683               	bsf	3,5	;RP0=1, select bank1
  3503  063D  1303               	bcf	3,6	;RP1=0, select bank1
  3504  063E  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3505  063F  0875               	movf	?___lldiv+2,w
  3506  0640  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3507  0641  0874               	movf	?___lldiv+1,w
  3508  0642  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3509  0643  0873               	movf	?___lldiv,w
  3510  0644  00BA               	movwf	sprintf@tmpval^(0+128)
  3511  0645                     l3428:	
  3512                           
  3513                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
  3514  0645  3000               	movlw	0
  3515  0646  00F6               	movwf	___llmod@divisor+3
  3516  0647  3000               	movlw	0
  3517  0648  00F5               	movwf	___llmod@divisor+2
  3518  0649  3000               	movlw	0
  3519  064A  00F4               	movwf	___llmod@divisor+1
  3520  064B  300A               	movlw	10
  3521  064C  00F3               	movwf	___llmod@divisor
  3522  064D  083D               	movf	(sprintf@tmpval+3)^(0+128),w
  3523  064E  00FA               	movwf	___llmod@dividend+3
  3524  064F  083C               	movf	(sprintf@tmpval+2)^(0+128),w
  3525  0650  00F9               	movwf	___llmod@dividend+2
  3526  0651  083B               	movf	(sprintf@tmpval+1)^(0+128),w
  3527  0652  00F8               	movwf	___llmod@dividend+1
  3528  0653  083A               	movf	sprintf@tmpval^(0+128),w
  3529  0654  00F7               	movwf	___llmod@dividend
  3530  0655  120A  118A  27A9  120A  118A  	fcall	___llmod
  3531  065A  0876               	movf	?___llmod+3,w
  3532  065B  1683               	bsf	3,5	;RP0=1, select bank1
  3533  065C  1303               	bcf	3,6	;RP1=0, select bank1
  3534  065D  00BD               	movwf	(sprintf@tmpval+3)^(0+128)
  3535  065E  0875               	movf	?___llmod+2,w
  3536  065F  00BC               	movwf	(sprintf@tmpval+2)^(0+128)
  3537  0660  0874               	movf	?___llmod+1,w
  3538  0661  00BB               	movwf	(sprintf@tmpval+1)^(0+128)
  3539  0662  0873               	movf	?___llmod,w
  3540  0663  00BA               	movwf	sprintf@tmpval^(0+128)
  3541  0664                     l3430:	
  3542                           
  3543                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3544  0664  083A               	movf	sprintf@tmpval^(0+128),w
  3545  0665  3E30               	addlw	48
  3546  0666  00A8               	movwf	??_sprintf^(0+128)
  3547  0667  0844               	movf	sprintf@sp^(0+128),w
  3548  0668  0084               	movwf	4
  3549  0669  0828               	movf	??_sprintf^(0+128),w
  3550  066A  1383               	bcf	3,7	;select IRP bank0
  3551  066B  0080               	movwf	0
  3552  066C  3001               	movlw	1
  3553  066D  00A8               	movwf	??_sprintf^(0+128)
  3554  066E  0828               	movf	??_sprintf^(0+128),w
  3555  066F  07C4               	addwf	sprintf@sp^(0+128),f
  3556  0670                     l3432:	
  3557                           
  3558                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
  3559  0670  0847               	movf	sprintf@c^(0+128),w
  3560  0671  00A8               	movwf	??_sprintf^(0+128)
  3561  0672  3001               	movlw	1
  3562  0673                     u5455:	
  3563  0673  1003               	clrc
  3564  0674  0DA8               	rlf	??_sprintf^(0+128),f
  3565  0675  3EFF               	addlw	-1
  3566  0676  1D03               	skipz
  3567  0677  2E73               	goto	u5455
  3568  0678  1003               	clrc
  3569  0679  0D28               	rlf	??_sprintf^(0+128),w
  3570  067A  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3571  067B  0084               	movwf	4
  3572  067C  160A  158A  200A  120A  118A  	fcall	stringdir
  3573  0681  00F3               	movwf	___llmod@divisor
  3574  0682  160A  158A  200A  120A  118A  	fcall	stringdir
  3575  0687  00F4               	movwf	___llmod@divisor+1
  3576  0688  160A  158A  200A  120A  118A  	fcall	stringdir
  3577  068D  00F5               	movwf	___llmod@divisor+2
  3578  068E  160A  158A  200A  120A  118A  	fcall	stringdir
  3579  0693  00F6               	movwf	___llmod@divisor+3
  3580  0694  0835               	movf	(sprintf@val+3)^(0+128),w
  3581  0695  00FA               	movwf	___llmod@dividend+3
  3582  0696  0834               	movf	(sprintf@val+2)^(0+128),w
  3583  0697  00F9               	movwf	___llmod@dividend+2
  3584  0698  0833               	movf	(sprintf@val+1)^(0+128),w
  3585  0699  00F8               	movwf	___llmod@dividend+1
  3586  069A  0832               	movf	sprintf@val^(0+128),w
  3587  069B  00F7               	movwf	___llmod@dividend
  3588  069C  120A  118A  27A9  120A  118A  	fcall	___llmod
  3589  06A1  0876               	movf	?___llmod+3,w
  3590  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3591  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3592  06A4  00B5               	movwf	(sprintf@val+3)^(0+128)
  3593  06A5  0875               	movf	?___llmod+2,w
  3594  06A6  00B4               	movwf	(sprintf@val+2)^(0+128)
  3595  06A7  0874               	movf	?___llmod+1,w
  3596  06A8  00B3               	movwf	(sprintf@val+1)^(0+128)
  3597  06A9  0873               	movf	?___llmod,w
  3598  06AA  00B2               	movwf	sprintf@val^(0+128)
  3599  06AB                     l3434:	
  3600                           
  3601                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
  3602  06AB  3001               	movlw	1
  3603  06AC  02C7               	subwf	sprintf@c^(0+128),f
  3604  06AD  0A47               	incf	sprintf@c^(0+128),w
  3605  06AE  1D03               	btfss	3,2
  3606  06AF  2EB1               	goto	u5461
  3607  06B0  2EB2               	goto	u5460
  3608  06B1                     u5461:	
  3609  06B1  2E0A               	goto	l3426
  3610  06B2                     u5460:	
  3611  06B2  2EC4               	goto	l3442
  3612  06B3                     l3436:	
  3613                           
  3614                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
  3615  06B3  3030               	movlw	48
  3616  06B4  00A8               	movwf	??_sprintf^(0+128)
  3617  06B5  0844               	movf	sprintf@sp^(0+128),w
  3618  06B6  0084               	movwf	4
  3619  06B7  0828               	movf	??_sprintf^(0+128),w
  3620  06B8  1383               	bcf	3,7	;select IRP bank0
  3621  06B9  0080               	movwf	0
  3622  06BA                     l3438:	
  3623  06BA  3001               	movlw	1
  3624  06BB  00A8               	movwf	??_sprintf^(0+128)
  3625  06BC  0828               	movf	??_sprintf^(0+128),w
  3626  06BD  07C4               	addwf	sprintf@sp^(0+128),f
  3627  06BE                     l3440:	
  3628                           
  3629                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
  3630  06BE  30FF               	movlw	255
  3631  06BF  07C5               	addwf	sprintf@prec^(0+128),f
  3632  06C0  1803               	skipnc
  3633  06C1  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  3634  06C2  30FF               	movlw	255
  3635  06C3  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  3636  06C4                     l3442:	
  3637                           
  3638                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
  3639  06C4  0845               	movf	sprintf@prec^(0+128),w
  3640  06C5  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  3641  06C6  1D03               	btfss	3,2
  3642  06C7  2EC9               	goto	u5471
  3643  06C8  2ECA               	goto	u5470
  3644  06C9                     u5471:	
  3645  06C9  2EB3               	goto	l3436
  3646  06CA                     u5470:	
  3647  06CA  2F8E               	goto	l3490
  3648  06CB                     l3444:	
  3649                           
  3650                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
  3651  06CB  0845               	movf	sprintf@prec^(0+128),w
  3652  06CC  0446               	iorwf	(sprintf@prec+1)^(0+128),w
  3653  06CD  1D03               	btfss	3,2
  3654  06CE  2ED0               	goto	u5481
  3655  06CF  2ED1               	goto	u5480
  3656  06D0                     u5481:	
  3657  06D0  2EDF               	goto	l354
  3658  06D1                     u5480:	
  3659  06D1                     l3446:	
  3660  06D1  0835               	movf	(sprintf@val+3)^(0+128),w
  3661  06D2  0434               	iorwf	(sprintf@val+2)^(0+128),w
  3662  06D3  0433               	iorwf	(sprintf@val+1)^(0+128),w
  3663  06D4  0432               	iorwf	sprintf@val^(0+128),w
  3664  06D5  1D03               	skipz
  3665  06D6  2ED8               	goto	u5491
  3666  06D7  2ED9               	goto	u5490
  3667  06D8                     u5491:	
  3668  06D8  2EDF               	goto	l354
  3669  06D9                     u5490:	
  3670  06D9                     l3448:	
  3671                           
  3672                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
  3673  06D9  3001               	movlw	1
  3674  06DA  07C5               	addwf	sprintf@prec^(0+128),f
  3675  06DB  1803               	skipnc
  3676  06DC  0AC6               	incf	(sprintf@prec+1)^(0+128),f
  3677  06DD  3000               	movlw	0
  3678  06DE  07C6               	addwf	(sprintf@prec+1)^(0+128),f
  3679  06DF                     l354:	
  3680                           
  3681                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
  3682  06DF  0846               	movf	(sprintf@prec+1)^(0+128),w
  3683  06E0  3A80               	xorlw	128
  3684  06E1  3C80               	sublw	128
  3685  06E2  1D03               	skipz
  3686  06E3  2EE6               	goto	u5505
  3687  06E4  0845               	movf	sprintf@prec^(0+128),w
  3688  06E5  0247               	subwf	sprintf@c^(0+128),w
  3689  06E6                     u5505:	
  3690  06E6  1803               	skipnc
  3691  06E7  2EE9               	goto	u5501
  3692  06E8  2EEA               	goto	u5500
  3693  06E9                     u5501:	
  3694  06E9  2EF1               	goto	l3452
  3695  06EA                     u5500:	
  3696  06EA                     l3450:	
  3697                           
  3698                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1366:    c 
      +                          = (char)prec;
  3699  06EA  1683               	bsf	3,5	;RP0=1, select bank1
  3700  06EB  1303               	bcf	3,6	;RP1=0, select bank1
  3701  06EC  0845               	movf	sprintf@prec^(0+128),w
  3702  06ED  00A8               	movwf	??_sprintf^(0+128)
  3703  06EE  0828               	movf	??_sprintf^(0+128),w
  3704  06EF  00C7               	movwf	sprintf@c^(0+128)
  3705  06F0  2F09               	goto	l3456
  3706  06F1                     l3452:	
  3707  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  3708  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  3709  06F3  0846               	movf	(sprintf@prec+1)^(0+128),w
  3710  06F4  3A80               	xorlw	128
  3711  06F5  00A8               	movwf	??_sprintf^(0+128)
  3712  06F6  3080               	movlw	128
  3713  06F7  0228               	subwf	??_sprintf^(0+128),w
  3714  06F8  1D03               	skipz
  3715  06F9  2EFC               	goto	u5515
  3716  06FA  0847               	movf	sprintf@c^(0+128),w
  3717  06FB  0245               	subwf	sprintf@prec^(0+128),w
  3718  06FC                     u5515:	
  3719  06FC  1803               	skipnc
  3720  06FD  2EFF               	goto	u5511
  3721  06FE  2F00               	goto	u5510
  3722  06FF                     u5511:	
  3723  06FF  2F09               	goto	l3456
  3724  0700                     u5510:	
  3725  0700                     l3454:	
  3726                           
  3727                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
  3728  0700  1683               	bsf	3,5	;RP0=1, select bank1
  3729  0701  1303               	bcf	3,6	;RP1=0, select bank1
  3730  0702  0847               	movf	sprintf@c^(0+128),w
  3731  0703  00A8               	movwf	??_sprintf^(0+128)
  3732  0704  01A9               	clrf	(??_sprintf^(0+128)+1)
  3733  0705  0828               	movf	??_sprintf^(0+128),w
  3734  0706  00C5               	movwf	sprintf@prec^(0+128)
  3735  0707  0829               	movf	(??_sprintf+1)^(0+128),w
  3736  0708  00C6               	movwf	(sprintf@prec+1)^(0+128)
  3737  0709                     l3456:	
  3738                           
  3739                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
  3740  0709  1683               	bsf	3,5	;RP0=1, select bank1
  3741  070A  1303               	bcf	3,6	;RP1=0, select bank1
  3742  070B  0838               	movf	sprintf@width^(0+128),w
  3743  070C  0439               	iorwf	(sprintf@width+1)^(0+128),w
  3744  070D  1903               	btfsc	3,2
  3745  070E  2F10               	goto	u5521
  3746  070F  2F11               	goto	u5520
  3747  0710                     u5521:	
  3748  0710  2F23               	goto	l3462
  3749  0711                     u5520:	
  3750  0711                     l3458:	
  3751  0711  3003               	movlw	3
  3752  0712  0536               	andwf	sprintf@flag^(0+128),w
  3753  0713  00A8               	movwf	??_sprintf^(0+128)
  3754  0714  3000               	movlw	0
  3755  0715  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3756  0716  00A9               	movwf	(??_sprintf+1)^(0+128)
  3757  0717  0828               	movf	??_sprintf^(0+128),w
  3758  0718  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3759  0719  1903               	btfsc	3,2
  3760  071A  2F1C               	goto	u5531
  3761  071B  2F1D               	goto	u5530
  3762  071C                     u5531:	
  3763  071C  2F23               	goto	l3462
  3764  071D                     u5530:	
  3765  071D                     l3460:	
  3766                           
  3767                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
  3768  071D  30FF               	movlw	255
  3769  071E  07B8               	addwf	sprintf@width^(0+128),f
  3770  071F  1803               	skipnc
  3771  0720  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3772  0721  30FF               	movlw	255
  3773  0722  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3774  0723                     l3462:	
  3775                           
  3776                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1374:   if(
      +                          flag & 0x4000) {
  3777  0723  1F37               	btfss	(sprintf@flag+1)^(0+128),6
  3778  0724  2F26               	goto	u5541
  3779  0725  2F27               	goto	u5540
  3780  0726                     u5541:	
  3781  0726  2F42               	goto	l3470
  3782  0727                     u5540:	
  3783  0727                     l3464:	
  3784                           
  3785                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1375:    if
      +                          (width > prec)
  3786  0727  0846               	movf	(sprintf@prec+1)^(0+128),w
  3787  0728  3A80               	xorlw	128
  3788  0729  00A8               	movwf	??_sprintf^(0+128)
  3789  072A  0839               	movf	(sprintf@width+1)^(0+128),w
  3790  072B  3A80               	xorlw	128
  3791  072C  0228               	subwf	??_sprintf^(0+128),w
  3792  072D  1D03               	skipz
  3793  072E  2F31               	goto	u5555
  3794  072F  0838               	movf	sprintf@width^(0+128),w
  3795  0730  0245               	subwf	sprintf@prec^(0+128),w
  3796  0731                     u5555:	
  3797  0731  1803               	skipnc
  3798  0732  2F34               	goto	u5551
  3799  0733  2F35               	goto	u5550
  3800  0734                     u5551:	
  3801  0734  2F3E               	goto	l3468
  3802  0735                     u5550:	
  3803  0735                     l3466:	
  3804                           
  3805                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1376:     w
      +                          idth -= prec;
  3806  0735  1683               	bsf	3,5	;RP0=1, select bank1
  3807  0736  1303               	bcf	3,6	;RP1=0, select bank1
  3808  0737  0845               	movf	sprintf@prec^(0+128),w
  3809  0738  02B8               	subwf	sprintf@width^(0+128),f
  3810  0739  0846               	movf	(sprintf@prec+1)^(0+128),w
  3811  073A  1C03               	skipc
  3812  073B  03B9               	decf	(sprintf@width+1)^(0+128),f
  3813  073C  02B9               	subwf	(sprintf@width+1)^(0+128),f
  3814  073D  2F42               	goto	l3470
  3815  073E                     l3468:	
  3816                           
  3817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1378:     w
      +                          idth = 0;
  3818  073E  1683               	bsf	3,5	;RP0=1, select bank1
  3819  073F  1303               	bcf	3,6	;RP1=0, select bank1
  3820  0740  01B8               	clrf	sprintf@width^(0+128)
  3821  0741  01B9               	clrf	(sprintf@width+1)^(0+128)
  3822  0742                     l3470:	
  3823                           
  3824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
  3825  0742  0839               	movf	(sprintf@width+1)^(0+128),w
  3826  0743  3A80               	xorlw	128
  3827  0744  3C80               	sublw	128
  3828  0745  1D03               	skipz
  3829  0746  2F49               	goto	u5565
  3830  0747  0838               	movf	sprintf@width^(0+128),w
  3831  0748  0247               	subwf	sprintf@c^(0+128),w
  3832  0749                     u5565:	
  3833  0749  1803               	skipnc
  3834  074A  2F4C               	goto	u5561
  3835  074B  2F4D               	goto	u5560
  3836  074C                     u5561:	
  3837  074C  2F59               	goto	l3474
  3838  074D                     u5560:	
  3839  074D                     l3472:	
  3840                           
  3841                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
  3842  074D  1683               	bsf	3,5	;RP0=1, select bank1
  3843  074E  1303               	bcf	3,6	;RP1=0, select bank1
  3844  074F  0847               	movf	sprintf@c^(0+128),w
  3845  0750  00A8               	movwf	??_sprintf^(0+128)
  3846  0751  01A9               	clrf	(??_sprintf^(0+128)+1)
  3847  0752  0828               	movf	??_sprintf^(0+128),w
  3848  0753  02B8               	subwf	sprintf@width^(0+128),f
  3849  0754  0829               	movf	(??_sprintf+1)^(0+128),w
  3850  0755  1C03               	skipc
  3851  0756  03B9               	decf	(sprintf@width+1)^(0+128),f
  3852  0757  02B9               	subwf	(sprintf@width+1)^(0+128),f
  3853  0758  2F5D               	goto	l3476
  3854  0759                     l3474:	
  3855                           
  3856                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
  3857  0759  1683               	bsf	3,5	;RP0=1, select bank1
  3858  075A  1303               	bcf	3,6	;RP1=0, select bank1
  3859  075B  01B8               	clrf	sprintf@width^(0+128)
  3860  075C  01B9               	clrf	(sprintf@width+1)^(0+128)
  3861  075D                     l3476:	
  3862                           
  3863                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
  3864  075D  0838               	movf	sprintf@width^(0+128),w
  3865  075E  0439               	iorwf	(sprintf@width+1)^(0+128),w
  3866  075F  1903               	btfsc	3,2
  3867  0760  2F62               	goto	u5571
  3868  0761  2F63               	goto	u5570
  3869  0762                     u5571:	
  3870  0762  2F7A               	goto	l3484
  3871  0763                     u5570:	
  3872  0763                     l3478:	
  3873                           
  3874                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
  3875  0763  3020               	movlw	32
  3876  0764  00A8               	movwf	??_sprintf^(0+128)
  3877  0765  0844               	movf	sprintf@sp^(0+128),w
  3878  0766  0084               	movwf	4
  3879  0767  0828               	movf	??_sprintf^(0+128),w
  3880  0768  1383               	bcf	3,7	;select IRP bank0
  3881  0769  0080               	movwf	0
  3882  076A                     l3480:	
  3883  076A  3001               	movlw	1
  3884  076B  00A8               	movwf	??_sprintf^(0+128)
  3885  076C  0828               	movf	??_sprintf^(0+128),w
  3886  076D  07C4               	addwf	sprintf@sp^(0+128),f
  3887  076E                     l3482:	
  3888  076E  30FF               	movlw	255
  3889  076F  07B8               	addwf	sprintf@width^(0+128),f
  3890  0770  1803               	skipnc
  3891  0771  0AB9               	incf	(sprintf@width+1)^(0+128),f
  3892  0772  30FF               	movlw	255
  3893  0773  07B9               	addwf	(sprintf@width+1)^(0+128),f
  3894  0774  0838               	movf	sprintf@width^(0+128),w
  3895  0775  0439               	iorwf	(sprintf@width+1)^(0+128),w
  3896  0776  1D03               	btfss	3,2
  3897  0777  2F79               	goto	u5581
  3898  0778  2F7A               	goto	u5580
  3899  0779                     u5581:	
  3900  0779  2F63               	goto	l3478
  3901  077A                     u5580:	
  3902  077A                     l3484:	
  3903                           
  3904                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
  3905  077A  3003               	movlw	3
  3906  077B  0536               	andwf	sprintf@flag^(0+128),w
  3907  077C  00A8               	movwf	??_sprintf^(0+128)
  3908  077D  3000               	movlw	0
  3909  077E  0537               	andwf	(sprintf@flag+1)^(0+128),w
  3910  077F  00A9               	movwf	(??_sprintf+1)^(0+128)
  3911  0780  0828               	movf	??_sprintf^(0+128),w
  3912  0781  0429               	iorwf	(??_sprintf^(0+128)+1),w
  3913  0782  1903               	btfsc	3,2
  3914  0783  2F85               	goto	u5591
  3915  0784  2F86               	goto	u5590
  3916  0785                     u5591:	
  3917  0785  2F8E               	goto	l3490
  3918  0786                     u5590:	
  3919  0786                     l3486:	
  3920                           
  3921                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
  3922  0786  302D               	movlw	45
  3923  0787  00A8               	movwf	??_sprintf^(0+128)
  3924  0788  0844               	movf	sprintf@sp^(0+128),w
  3925  0789  0084               	movwf	4
  3926  078A  0828               	movf	??_sprintf^(0+128),w
  3927  078B  1383               	bcf	3,7	;select IRP bank0
  3928  078C  0080               	movwf	0
  3929  078D  2834               	goto	l3246
  3930  078E                     l3490:	
  3931                           
  3932                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  3933  078E  3001               	movlw	1
  3934  078F  1283               	bcf	3,5	;RP0=0, select bank0
  3935  0790  1303               	bcf	3,6	;RP1=0, select bank0
  3936  0791  07EA               	addwf	sprintf@f,f
  3937  0792  30FF               	movlw	-1
  3938  0793  076A               	addwf	sprintf@f,w
  3939  0794  0084               	movwf	4
  3940  0795  160A  158A  200A  120A  118A  	fcall	stringdir
  3941  079A  1683               	bsf	3,5	;RP0=1, select bank1
  3942  079B  1303               	bcf	3,6	;RP1=0, select bank1
  3943  079C  00A8               	movwf	??_sprintf^(0+128)
  3944  079D  0828               	movf	??_sprintf^(0+128),w
  3945  079E  00C7               	movwf	sprintf@c^(0+128)
  3946  079F  0847               	movf	sprintf@c^(0+128),w
  3947  07A0  1D03               	btfss	3,2
  3948  07A1  2FA3               	goto	u5601
  3949  07A2  2FA4               	goto	u5600
  3950  07A3                     u5601:	
  3951  07A3  2827               	goto	l3242
  3952  07A4                     u5600:	
  3953  07A4                     l3492:	
  3954                           
  3955                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
  3956  07A4  0844               	movf	sprintf@sp^(0+128),w
  3957  07A5  0084               	movwf	4
  3958  07A6  1383               	bcf	3,7	;select IRP bank0
  3959  07A7  0180               	clrf	0
  3960  07A8                     l369:	
  3961  07A8  0008               	return
  3962  07A9                     __end_of_sprintf:	
  3963                           
  3964                           	psect	text3
  3965  0C9D                     __ptext3:	
  3966 ;; *************** function _scale *****************
  3967 ;; Defined at:
  3968 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  scl             1    wreg     char 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  scl             1   52[BANK0 ] char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;                  4   34[BANK0 ] char 
  3975 ;; Registers used:
  3976 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3982 ;;      Params:         0       4       0       0       0
  3983 ;;      Locals:         0       5       0       0       0
  3984 ;;      Temps:          0      10       0       0       0
  3985 ;;      Totals:         0      19       0       0       0
  3986 ;;Total ram usage:       19 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    3
  3989 ;; This function calls:
  3990 ;;		___awdiv
  3991 ;;		___awmod
  3992 ;;		___flmul
  3993 ;; This function is called by:
  3994 ;;		_sprintf
  3995 ;; This function uses a non-reentrant model
  3996 ;;
  3997                           
  3998                           
  3999                           ;psect for function _scale
  4000  0C9D                     _scale:	
  4001                           
  4002                           ;incstack = 0
  4003                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4004                           ;scale@scl stored from wreg
  4005  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  4006  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  4007  0C9F  00D4               	movwf	scale@scl
  4008  0CA0                     l2804:	
  4009                           
  4010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  4011  0CA0  1FD4               	btfss	scale@scl,7
  4012  0CA1  2CA3               	goto	u4091
  4013  0CA2  2CA4               	goto	u4090
  4014  0CA3                     u4091:	
  4015  0CA3  2E53               	goto	l2826
  4016  0CA4                     u4090:	
  4017  0CA4                     l2806:	
  4018                           
  4019                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  4020  0CA4  09D4               	comf	scale@scl,f
  4021  0CA5  0AD4               	incf	scale@scl,f
  4022  0CA6                     l2808:	
  4023                           
  4024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  4025  0CA6  0854               	movf	scale@scl,w
  4026  0CA7  3A80               	xorlw	128
  4027  0CA8  3E12               	addlw	-238
  4028  0CA9  1C03               	skipc
  4029  0CAA  2CAC               	goto	u4101
  4030  0CAB  2CAD               	goto	u4100
  4031  0CAC                     u4101:	
  4032  0CAC  2D97               	goto	l2816
  4033  0CAD                     u4100:	
  4034  0CAD                     l2810:	
  4035                           
  4036                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4037  0CAD  300A               	movlw	10
  4038  0CAE  00A0               	movwf	___awdiv@divisor
  4039  0CAF  3000               	movlw	0
  4040  0CB0  00A1               	movwf	___awdiv@divisor+1
  4041  0CB1  0854               	movf	scale@scl,w
  4042  0CB2  00F5               	movwf	___awmod@dividend
  4043  0CB3  01F6               	clrf	___awmod@dividend+1
  4044  0CB4  1BF5               	btfsc	___awmod@dividend,7
  4045  0CB5  03F6               	decf	___awmod@dividend+1,f
  4046  0CB6  3064               	movlw	100
  4047  0CB7  00F3               	movwf	___awmod@divisor
  4048  0CB8  3000               	movlw	0
  4049  0CB9  00F4               	movwf	___awmod@divisor+1
  4050  0CBA  160A  158A  261F  120A  158A  	fcall	___awmod
  4051  0CBF  0874               	movf	?___awmod+1,w
  4052  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  4053  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  4054  0CC2  00A3               	movwf	___awdiv@dividend+1
  4055  0CC3  0873               	movf	?___awmod,w
  4056  0CC4  00A2               	movwf	___awdiv@dividend
  4057  0CC5  160A  118A  2007  120A  158A  	fcall	___awdiv
  4058  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  4059  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  4060  0CCC  0820               	movf	?___awdiv,w
  4061  0CCD  00C6               	movwf	??_scale
  4062  0CCE  3001               	movlw	1
  4063  0CCF                     u4115:	
  4064  0CCF  1003               	clrc
  4065  0CD0  0DC6               	rlf	??_scale,f
  4066  0CD1  3EFF               	addlw	-1
  4067  0CD2  1D03               	skipz
  4068  0CD3  2CCF               	goto	u4115
  4069  0CD4  1003               	clrc
  4070  0CD5  0D46               	rlf	??_scale,w
  4071  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4072  0CD7  0084               	movwf	4
  4073  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  4074  0CDD  00C7               	movwf	??_scale+1
  4075  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  4076  0CE3  00C8               	movwf	??_scale+2
  4077  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  4078  0CE9  00C9               	movwf	??_scale+3
  4079  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  4080  0CEF  00CA               	movwf	??_scale+4
  4081  0CF0  084A               	movf	??_scale+4,w
  4082  0CF1  00AB               	movwf	___flmul@b+3
  4083  0CF2  0849               	movf	??_scale+3,w
  4084  0CF3  00AA               	movwf	___flmul@b+2
  4085  0CF4  0848               	movf	??_scale+2,w
  4086  0CF5  00A9               	movwf	___flmul@b+1
  4087  0CF6  0847               	movf	??_scale+1,w
  4088  0CF7  00A8               	movwf	___flmul@b
  4089  0CF8  3064               	movlw	100
  4090  0CF9  00A0               	movwf	___awdiv@divisor
  4091  0CFA  3000               	movlw	0
  4092  0CFB  00A1               	movwf	___awdiv@divisor+1
  4093  0CFC  0854               	movf	scale@scl,w
  4094  0CFD  00A2               	movwf	___awdiv@dividend
  4095  0CFE  01A3               	clrf	___awdiv@dividend+1
  4096  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  4097  0D00  03A3               	decf	___awdiv@dividend+1,f
  4098  0D01  160A  118A  2007  120A  158A  	fcall	___awdiv
  4099  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  4101  0D08  0820               	movf	?___awdiv,w
  4102  0D09  00CB               	movwf	??_scale+5
  4103  0D0A  3001               	movlw	1
  4104  0D0B                     u4125:	
  4105  0D0B  1003               	clrc
  4106  0D0C  0DCB               	rlf	??_scale+5,f
  4107  0D0D  3EFF               	addlw	-1
  4108  0D0E  1D03               	skipz
  4109  0D0F  2D0B               	goto	u4125
  4110  0D10  1003               	clrc
  4111  0D11  0D4B               	rlf	??_scale+5,w
  4112  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4113  0D13  0084               	movwf	4
  4114  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  4115  0D19  00CC               	movwf	??_scale+6
  4116  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  4117  0D1F  00CD               	movwf	??_scale+7
  4118  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  4119  0D25  00CE               	movwf	??_scale+8
  4120  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  4121  0D2B  00CF               	movwf	??_scale+9
  4122  0D2C  084F               	movf	??_scale+9,w
  4123  0D2D  00AF               	movwf	___flmul@a+3
  4124  0D2E  084E               	movf	??_scale+8,w
  4125  0D2F  00AE               	movwf	___flmul@a+2
  4126  0D30  084D               	movf	??_scale+7,w
  4127  0D31  00AD               	movwf	___flmul@a+1
  4128  0D32  084C               	movf	??_scale+6,w
  4129  0D33  00AC               	movwf	___flmul@a
  4130  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  4131  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  4132  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  4133  0D3B  082B               	movf	?___flmul+3,w
  4134  0D3C  00D3               	movwf	_scale$1210+3
  4135  0D3D  082A               	movf	?___flmul+2,w
  4136  0D3E  00D2               	movwf	_scale$1210+2
  4137  0D3F  0829               	movf	?___flmul+1,w
  4138  0D40  00D1               	movwf	_scale$1210+1
  4139  0D41  0828               	movf	?___flmul,w
  4140  0D42  00D0               	movwf	_scale$1210
  4141                           
  4142                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4143  0D43  300A               	movlw	10
  4144  0D44  00F3               	movwf	___awmod@divisor
  4145  0D45  3000               	movlw	0
  4146  0D46  00F4               	movwf	___awmod@divisor+1
  4147  0D47  0854               	movf	scale@scl,w
  4148  0D48  00F5               	movwf	___awmod@dividend
  4149  0D49  01F6               	clrf	___awmod@dividend+1
  4150  0D4A  1BF5               	btfsc	___awmod@dividend,7
  4151  0D4B  03F6               	decf	___awmod@dividend+1,f
  4152  0D4C  160A  158A  261F  120A  158A  	fcall	___awmod
  4153  0D51  0873               	movf	?___awmod,w
  4154  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  4155  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  4156  0D54  00C6               	movwf	??_scale
  4157  0D55  3001               	movlw	1
  4158  0D56                     u4135:	
  4159  0D56  1003               	clrc
  4160  0D57  0DC6               	rlf	??_scale,f
  4161  0D58  3EFF               	addlw	-1
  4162  0D59  1D03               	skipz
  4163  0D5A  2D56               	goto	u4135
  4164  0D5B  1003               	clrc
  4165  0D5C  0D46               	rlf	??_scale,w
  4166  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4167  0D5E  0084               	movwf	4
  4168  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  4169  0D64  00C7               	movwf	??_scale+1
  4170  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  4171  0D6A  00C8               	movwf	??_scale+2
  4172  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  4173  0D70  00C9               	movwf	??_scale+3
  4174  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  4175  0D76  00CA               	movwf	??_scale+4
  4176  0D77  084A               	movf	??_scale+4,w
  4177  0D78  00AB               	movwf	___flmul@b+3
  4178  0D79  0849               	movf	??_scale+3,w
  4179  0D7A  00AA               	movwf	___flmul@b+2
  4180  0D7B  0848               	movf	??_scale+2,w
  4181  0D7C  00A9               	movwf	___flmul@b+1
  4182  0D7D  0847               	movf	??_scale+1,w
  4183  0D7E  00A8               	movwf	___flmul@b
  4184  0D7F  0853               	movf	_scale$1210+3,w
  4185  0D80  00AF               	movwf	___flmul@a+3
  4186  0D81  0852               	movf	_scale$1210+2,w
  4187  0D82  00AE               	movwf	___flmul@a+2
  4188  0D83  0851               	movf	_scale$1210+1,w
  4189  0D84  00AD               	movwf	___flmul@a+1
  4190  0D85  0850               	movf	_scale$1210,w
  4191  0D86  00AC               	movwf	___flmul@a
  4192  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  4193  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4194  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4195  0D8E  082B               	movf	?___flmul+3,w
  4196  0D8F  00C5               	movwf	?_scale+3
  4197  0D90  082A               	movf	?___flmul+2,w
  4198  0D91  00C4               	movwf	?_scale+2
  4199  0D92  0829               	movf	?___flmul+1,w
  4200  0D93  00C3               	movwf	?_scale+1
  4201  0D94  0828               	movf	?___flmul,w
  4202  0D95  00C2               	movwf	?_scale
  4203  0D96  2FFF               	goto	l286
  4204  0D97                     l2816:	
  4205  0D97  0854               	movf	scale@scl,w
  4206  0D98  3A80               	xorlw	128
  4207  0D99  3E75               	addlw	-139
  4208  0D9A  1C03               	skipc
  4209  0D9B  2D9D               	goto	u4141
  4210  0D9C  2D9E               	goto	u4140
  4211  0D9D                     u4141:	
  4212  0D9D  2E26               	goto	l2822
  4213  0D9E                     u4140:	
  4214  0D9E                     l2818:	
  4215                           
  4216                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4217  0D9E  300A               	movlw	10
  4218  0D9F  00F3               	movwf	___awmod@divisor
  4219  0DA0  3000               	movlw	0
  4220  0DA1  00F4               	movwf	___awmod@divisor+1
  4221  0DA2  0854               	movf	scale@scl,w
  4222  0DA3  00F5               	movwf	___awmod@dividend
  4223  0DA4  01F6               	clrf	___awmod@dividend+1
  4224  0DA5  1BF5               	btfsc	___awmod@dividend,7
  4225  0DA6  03F6               	decf	___awmod@dividend+1,f
  4226  0DA7  160A  158A  261F  120A  158A  	fcall	___awmod
  4227  0DAC  0873               	movf	?___awmod,w
  4228  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  4229  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  4230  0DAF  00C6               	movwf	??_scale
  4231  0DB0  3001               	movlw	1
  4232  0DB1                     u4155:	
  4233  0DB1  1003               	clrc
  4234  0DB2  0DC6               	rlf	??_scale,f
  4235  0DB3  3EFF               	addlw	-1
  4236  0DB4  1D03               	skipz
  4237  0DB5  2DB1               	goto	u4155
  4238  0DB6  1003               	clrc
  4239  0DB7  0D46               	rlf	??_scale,w
  4240  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4241  0DB9  0084               	movwf	4
  4242  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  4243  0DBF  00C7               	movwf	??_scale+1
  4244  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  4245  0DC5  00C8               	movwf	??_scale+2
  4246  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  4247  0DCB  00C9               	movwf	??_scale+3
  4248  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  4249  0DD1  00CA               	movwf	??_scale+4
  4250  0DD2  084A               	movf	??_scale+4,w
  4251  0DD3  00AB               	movwf	___flmul@b+3
  4252  0DD4  0849               	movf	??_scale+3,w
  4253  0DD5  00AA               	movwf	___flmul@b+2
  4254  0DD6  0848               	movf	??_scale+2,w
  4255  0DD7  00A9               	movwf	___flmul@b+1
  4256  0DD8  0847               	movf	??_scale+1,w
  4257  0DD9  00A8               	movwf	___flmul@b
  4258  0DDA  300A               	movlw	10
  4259  0DDB  00A0               	movwf	___awdiv@divisor
  4260  0DDC  3000               	movlw	0
  4261  0DDD  00A1               	movwf	___awdiv@divisor+1
  4262  0DDE  0854               	movf	scale@scl,w
  4263  0DDF  00A2               	movwf	___awdiv@dividend
  4264  0DE0  01A3               	clrf	___awdiv@dividend+1
  4265  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  4266  0DE2  03A3               	decf	___awdiv@dividend+1,f
  4267  0DE3  160A  118A  2007  120A  158A  	fcall	___awdiv
  4268  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4269  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4270  0DEA  0820               	movf	?___awdiv,w
  4271  0DEB  00CB               	movwf	??_scale+5
  4272  0DEC  3001               	movlw	1
  4273  0DED                     u4165:	
  4274  0DED  1003               	clrc
  4275  0DEE  0DCB               	rlf	??_scale+5,f
  4276  0DEF  3EFF               	addlw	-1
  4277  0DF0  1D03               	skipz
  4278  0DF1  2DED               	goto	u4165
  4279  0DF2  1003               	clrc
  4280  0DF3  0D4B               	rlf	??_scale+5,w
  4281  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4282  0DF5  0084               	movwf	4
  4283  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  4284  0DFB  00CC               	movwf	??_scale+6
  4285  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  4286  0E01  00CD               	movwf	??_scale+7
  4287  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  4288  0E07  00CE               	movwf	??_scale+8
  4289  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  4290  0E0D  00CF               	movwf	??_scale+9
  4291  0E0E  084F               	movf	??_scale+9,w
  4292  0E0F  00AF               	movwf	___flmul@a+3
  4293  0E10  084E               	movf	??_scale+8,w
  4294  0E11  00AE               	movwf	___flmul@a+2
  4295  0E12  084D               	movf	??_scale+7,w
  4296  0E13  00AD               	movwf	___flmul@a+1
  4297  0E14  084C               	movf	??_scale+6,w
  4298  0E15  00AC               	movwf	___flmul@a
  4299  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  4300  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4301  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4302  0E1D  082B               	movf	?___flmul+3,w
  4303  0E1E  00C5               	movwf	?_scale+3
  4304  0E1F  082A               	movf	?___flmul+2,w
  4305  0E20  00C4               	movwf	?_scale+2
  4306  0E21  0829               	movf	?___flmul+1,w
  4307  0E22  00C3               	movwf	?_scale+1
  4308  0E23  0828               	movf	?___flmul,w
  4309  0E24  00C2               	movwf	?_scale
  4310  0E25  2FFF               	goto	l286
  4311  0E26                     l2822:	
  4312                           
  4313                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  4314  0E26  0854               	movf	scale@scl,w
  4315  0E27  00C6               	movwf	??_scale
  4316  0E28  3001               	movlw	1
  4317  0E29                     u4175:	
  4318  0E29  1003               	clrc
  4319  0E2A  0DC6               	rlf	??_scale,f
  4320  0E2B  3EFF               	addlw	-1
  4321  0E2C  1D03               	skipz
  4322  0E2D  2E29               	goto	u4175
  4323  0E2E  1003               	clrc
  4324  0E2F  0D46               	rlf	??_scale,w
  4325  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4326  0E31  0084               	movwf	4
  4327  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  4328  0E37  00C7               	movwf	??_scale+1
  4329  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  4330  0E3D  00C8               	movwf	??_scale+2
  4331  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  4332  0E43  00C9               	movwf	??_scale+3
  4333  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  4334  0E49  00CA               	movwf	??_scale+4
  4335  0E4A  084A               	movf	??_scale+4,w
  4336  0E4B  00C5               	movwf	?_scale+3
  4337  0E4C  0849               	movf	??_scale+3,w
  4338  0E4D  00C4               	movwf	?_scale+2
  4339  0E4E  0848               	movf	??_scale+2,w
  4340  0E4F  00C3               	movwf	?_scale+1
  4341  0E50  0847               	movf	??_scale+1,w
  4342  0E51  00C2               	movwf	?_scale
  4343  0E52  2FFF               	goto	l286
  4344  0E53                     l2826:	
  4345                           
  4346                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  4347  0E53  0854               	movf	scale@scl,w
  4348  0E54  3A80               	xorlw	128
  4349  0E55  3E12               	addlw	-238
  4350  0E56  1C03               	skipc
  4351  0E57  2E59               	goto	u4181
  4352  0E58  2E5A               	goto	u4180
  4353  0E59                     u4181:	
  4354  0E59  2F44               	goto	l2834
  4355  0E5A                     u4180:	
  4356  0E5A                     l2828:	
  4357                           
  4358                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4359  0E5A  300A               	movlw	10
  4360  0E5B  00A0               	movwf	___awdiv@divisor
  4361  0E5C  3000               	movlw	0
  4362  0E5D  00A1               	movwf	___awdiv@divisor+1
  4363  0E5E  0854               	movf	scale@scl,w
  4364  0E5F  00F5               	movwf	___awmod@dividend
  4365  0E60  01F6               	clrf	___awmod@dividend+1
  4366  0E61  1BF5               	btfsc	___awmod@dividend,7
  4367  0E62  03F6               	decf	___awmod@dividend+1,f
  4368  0E63  3064               	movlw	100
  4369  0E64  00F3               	movwf	___awmod@divisor
  4370  0E65  3000               	movlw	0
  4371  0E66  00F4               	movwf	___awmod@divisor+1
  4372  0E67  160A  158A  261F  120A  158A  	fcall	___awmod
  4373  0E6C  0874               	movf	?___awmod+1,w
  4374  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  4375  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  4376  0E6F  00A3               	movwf	___awdiv@dividend+1
  4377  0E70  0873               	movf	?___awmod,w
  4378  0E71  00A2               	movwf	___awdiv@dividend
  4379  0E72  160A  118A  2007  120A  158A  	fcall	___awdiv
  4380  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  4381  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  4382  0E79  0820               	movf	?___awdiv,w
  4383  0E7A  00C6               	movwf	??_scale
  4384  0E7B  3001               	movlw	1
  4385  0E7C                     u4195:	
  4386  0E7C  1003               	clrc
  4387  0E7D  0DC6               	rlf	??_scale,f
  4388  0E7E  3EFF               	addlw	-1
  4389  0E7F  1D03               	skipz
  4390  0E80  2E7C               	goto	u4195
  4391  0E81  1003               	clrc
  4392  0E82  0D46               	rlf	??_scale,w
  4393  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4394  0E84  0084               	movwf	4
  4395  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  4396  0E8A  00C7               	movwf	??_scale+1
  4397  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  4398  0E90  00C8               	movwf	??_scale+2
  4399  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  4400  0E96  00C9               	movwf	??_scale+3
  4401  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  4402  0E9C  00CA               	movwf	??_scale+4
  4403  0E9D  084A               	movf	??_scale+4,w
  4404  0E9E  00AB               	movwf	___flmul@b+3
  4405  0E9F  0849               	movf	??_scale+3,w
  4406  0EA0  00AA               	movwf	___flmul@b+2
  4407  0EA1  0848               	movf	??_scale+2,w
  4408  0EA2  00A9               	movwf	___flmul@b+1
  4409  0EA3  0847               	movf	??_scale+1,w
  4410  0EA4  00A8               	movwf	___flmul@b
  4411  0EA5  3064               	movlw	100
  4412  0EA6  00A0               	movwf	___awdiv@divisor
  4413  0EA7  3000               	movlw	0
  4414  0EA8  00A1               	movwf	___awdiv@divisor+1
  4415  0EA9  0854               	movf	scale@scl,w
  4416  0EAA  00A2               	movwf	___awdiv@dividend
  4417  0EAB  01A3               	clrf	___awdiv@dividend+1
  4418  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  4419  0EAD  03A3               	decf	___awdiv@dividend+1,f
  4420  0EAE  160A  118A  2007  120A  158A  	fcall	___awdiv
  4421  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  4422  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  4423  0EB5  0820               	movf	?___awdiv,w
  4424  0EB6  00CB               	movwf	??_scale+5
  4425  0EB7  3001               	movlw	1
  4426  0EB8                     u4205:	
  4427  0EB8  1003               	clrc
  4428  0EB9  0DCB               	rlf	??_scale+5,f
  4429  0EBA  3EFF               	addlw	-1
  4430  0EBB  1D03               	skipz
  4431  0EBC  2EB8               	goto	u4205
  4432  0EBD  1003               	clrc
  4433  0EBE  0D4B               	rlf	??_scale+5,w
  4434  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4435  0EC0  0084               	movwf	4
  4436  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  4437  0EC6  00CC               	movwf	??_scale+6
  4438  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  4439  0ECC  00CD               	movwf	??_scale+7
  4440  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  4441  0ED2  00CE               	movwf	??_scale+8
  4442  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  4443  0ED8  00CF               	movwf	??_scale+9
  4444  0ED9  084F               	movf	??_scale+9,w
  4445  0EDA  00AF               	movwf	___flmul@a+3
  4446  0EDB  084E               	movf	??_scale+8,w
  4447  0EDC  00AE               	movwf	___flmul@a+2
  4448  0EDD  084D               	movf	??_scale+7,w
  4449  0EDE  00AD               	movwf	___flmul@a+1
  4450  0EDF  084C               	movf	??_scale+6,w
  4451  0EE0  00AC               	movwf	___flmul@a
  4452  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  4453  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  4454  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  4455  0EE8  082B               	movf	?___flmul+3,w
  4456  0EE9  00D3               	movwf	_scale$1210+3
  4457  0EEA  082A               	movf	?___flmul+2,w
  4458  0EEB  00D2               	movwf	_scale$1210+2
  4459  0EEC  0829               	movf	?___flmul+1,w
  4460  0EED  00D1               	movwf	_scale$1210+1
  4461  0EEE  0828               	movf	?___flmul,w
  4462  0EEF  00D0               	movwf	_scale$1210
  4463                           
  4464                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4465  0EF0  300A               	movlw	10
  4466  0EF1  00F3               	movwf	___awmod@divisor
  4467  0EF2  3000               	movlw	0
  4468  0EF3  00F4               	movwf	___awmod@divisor+1
  4469  0EF4  0854               	movf	scale@scl,w
  4470  0EF5  00F5               	movwf	___awmod@dividend
  4471  0EF6  01F6               	clrf	___awmod@dividend+1
  4472  0EF7  1BF5               	btfsc	___awmod@dividend,7
  4473  0EF8  03F6               	decf	___awmod@dividend+1,f
  4474  0EF9  160A  158A  261F  120A  158A  	fcall	___awmod
  4475  0EFE  0873               	movf	?___awmod,w
  4476  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  4477  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  4478  0F01  00C6               	movwf	??_scale
  4479  0F02  3001               	movlw	1
  4480  0F03                     u4215:	
  4481  0F03  1003               	clrc
  4482  0F04  0DC6               	rlf	??_scale,f
  4483  0F05  3EFF               	addlw	-1
  4484  0F06  1D03               	skipz
  4485  0F07  2F03               	goto	u4215
  4486  0F08  1003               	clrc
  4487  0F09  0D46               	rlf	??_scale,w
  4488  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4489  0F0B  0084               	movwf	4
  4490  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  4491  0F11  00C7               	movwf	??_scale+1
  4492  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  4493  0F17  00C8               	movwf	??_scale+2
  4494  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  4495  0F1D  00C9               	movwf	??_scale+3
  4496  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  4497  0F23  00CA               	movwf	??_scale+4
  4498  0F24  084A               	movf	??_scale+4,w
  4499  0F25  00AB               	movwf	___flmul@b+3
  4500  0F26  0849               	movf	??_scale+3,w
  4501  0F27  00AA               	movwf	___flmul@b+2
  4502  0F28  0848               	movf	??_scale+2,w
  4503  0F29  00A9               	movwf	___flmul@b+1
  4504  0F2A  0847               	movf	??_scale+1,w
  4505  0F2B  00A8               	movwf	___flmul@b
  4506  0F2C  0853               	movf	_scale$1210+3,w
  4507  0F2D  00AF               	movwf	___flmul@a+3
  4508  0F2E  0852               	movf	_scale$1210+2,w
  4509  0F2F  00AE               	movwf	___flmul@a+2
  4510  0F30  0851               	movf	_scale$1210+1,w
  4511  0F31  00AD               	movwf	___flmul@a+1
  4512  0F32  0850               	movf	_scale$1210,w
  4513  0F33  00AC               	movwf	___flmul@a
  4514  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  4515  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  4516  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  4517  0F3B  082B               	movf	?___flmul+3,w
  4518  0F3C  00C5               	movwf	?_scale+3
  4519  0F3D  082A               	movf	?___flmul+2,w
  4520  0F3E  00C4               	movwf	?_scale+2
  4521  0F3F  0829               	movf	?___flmul+1,w
  4522  0F40  00C3               	movwf	?_scale+1
  4523  0F41  0828               	movf	?___flmul,w
  4524  0F42  00C2               	movwf	?_scale
  4525  0F43  2FFF               	goto	l286
  4526  0F44                     l2834:	
  4527  0F44  0854               	movf	scale@scl,w
  4528  0F45  3A80               	xorlw	128
  4529  0F46  3E75               	addlw	-139
  4530  0F47  1C03               	skipc
  4531  0F48  2F4A               	goto	u4221
  4532  0F49  2F4B               	goto	u4220
  4533  0F4A                     u4221:	
  4534  0F4A  2FD3               	goto	l2840
  4535  0F4B                     u4220:	
  4536  0F4B                     l2836:	
  4537                           
  4538                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4539  0F4B  300A               	movlw	10
  4540  0F4C  00F3               	movwf	___awmod@divisor
  4541  0F4D  3000               	movlw	0
  4542  0F4E  00F4               	movwf	___awmod@divisor+1
  4543  0F4F  0854               	movf	scale@scl,w
  4544  0F50  00F5               	movwf	___awmod@dividend
  4545  0F51  01F6               	clrf	___awmod@dividend+1
  4546  0F52  1BF5               	btfsc	___awmod@dividend,7
  4547  0F53  03F6               	decf	___awmod@dividend+1,f
  4548  0F54  160A  158A  261F  120A  158A  	fcall	___awmod
  4549  0F59  0873               	movf	?___awmod,w
  4550  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  4551  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  4552  0F5C  00C6               	movwf	??_scale
  4553  0F5D  3001               	movlw	1
  4554  0F5E                     u4235:	
  4555  0F5E  1003               	clrc
  4556  0F5F  0DC6               	rlf	??_scale,f
  4557  0F60  3EFF               	addlw	-1
  4558  0F61  1D03               	skipz
  4559  0F62  2F5E               	goto	u4235
  4560  0F63  1003               	clrc
  4561  0F64  0D46               	rlf	??_scale,w
  4562  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4563  0F66  0084               	movwf	4
  4564  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  4565  0F6C  00C7               	movwf	??_scale+1
  4566  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  4567  0F72  00C8               	movwf	??_scale+2
  4568  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  4569  0F78  00C9               	movwf	??_scale+3
  4570  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  4571  0F7E  00CA               	movwf	??_scale+4
  4572  0F7F  084A               	movf	??_scale+4,w
  4573  0F80  00AB               	movwf	___flmul@b+3
  4574  0F81  0849               	movf	??_scale+3,w
  4575  0F82  00AA               	movwf	___flmul@b+2
  4576  0F83  0848               	movf	??_scale+2,w
  4577  0F84  00A9               	movwf	___flmul@b+1
  4578  0F85  0847               	movf	??_scale+1,w
  4579  0F86  00A8               	movwf	___flmul@b
  4580  0F87  300A               	movlw	10
  4581  0F88  00A0               	movwf	___awdiv@divisor
  4582  0F89  3000               	movlw	0
  4583  0F8A  00A1               	movwf	___awdiv@divisor+1
  4584  0F8B  0854               	movf	scale@scl,w
  4585  0F8C  00A2               	movwf	___awdiv@dividend
  4586  0F8D  01A3               	clrf	___awdiv@dividend+1
  4587  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  4588  0F8F  03A3               	decf	___awdiv@dividend+1,f
  4589  0F90  160A  118A  2007  120A  158A  	fcall	___awdiv
  4590  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  4591  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  4592  0F97  0820               	movf	?___awdiv,w
  4593  0F98  00CB               	movwf	??_scale+5
  4594  0F99  3001               	movlw	1
  4595  0F9A                     u4245:	
  4596  0F9A  1003               	clrc
  4597  0F9B  0DCB               	rlf	??_scale+5,f
  4598  0F9C  3EFF               	addlw	-1
  4599  0F9D  1D03               	skipz
  4600  0F9E  2F9A               	goto	u4245
  4601  0F9F  1003               	clrc
  4602  0FA0  0D4B               	rlf	??_scale+5,w
  4603  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4604  0FA2  0084               	movwf	4
  4605  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  4606  0FA8  00CC               	movwf	??_scale+6
  4607  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  4608  0FAE  00CD               	movwf	??_scale+7
  4609  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  4610  0FB4  00CE               	movwf	??_scale+8
  4611  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  4612  0FBA  00CF               	movwf	??_scale+9
  4613  0FBB  084F               	movf	??_scale+9,w
  4614  0FBC  00AF               	movwf	___flmul@a+3
  4615  0FBD  084E               	movf	??_scale+8,w
  4616  0FBE  00AE               	movwf	___flmul@a+2
  4617  0FBF  084D               	movf	??_scale+7,w
  4618  0FC0  00AD               	movwf	___flmul@a+1
  4619  0FC1  084C               	movf	??_scale+6,w
  4620  0FC2  00AC               	movwf	___flmul@a
  4621  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  4622  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  4623  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  4624  0FCA  082B               	movf	?___flmul+3,w
  4625  0FCB  00C5               	movwf	?_scale+3
  4626  0FCC  082A               	movf	?___flmul+2,w
  4627  0FCD  00C4               	movwf	?_scale+2
  4628  0FCE  0829               	movf	?___flmul+1,w
  4629  0FCF  00C3               	movwf	?_scale+1
  4630  0FD0  0828               	movf	?___flmul,w
  4631  0FD1  00C2               	movwf	?_scale
  4632  0FD2  2FFF               	goto	l286
  4633  0FD3                     l2840:	
  4634                           
  4635                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4636  0FD3  0854               	movf	scale@scl,w
  4637  0FD4  00C6               	movwf	??_scale
  4638  0FD5  3001               	movlw	1
  4639  0FD6                     u4255:	
  4640  0FD6  1003               	clrc
  4641  0FD7  0DC6               	rlf	??_scale,f
  4642  0FD8  3EFF               	addlw	-1
  4643  0FD9  1D03               	skipz
  4644  0FDA  2FD6               	goto	u4255
  4645  0FDB  1003               	clrc
  4646  0FDC  0D46               	rlf	??_scale,w
  4647  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4648  0FDE  0084               	movwf	4
  4649  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  4650  0FE4  00C7               	movwf	??_scale+1
  4651  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  4652  0FEA  00C8               	movwf	??_scale+2
  4653  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  4654  0FF0  00C9               	movwf	??_scale+3
  4655  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  4656  0FF6  00CA               	movwf	??_scale+4
  4657  0FF7  084A               	movf	??_scale+4,w
  4658  0FF8  00C5               	movwf	?_scale+3
  4659  0FF9  0849               	movf	??_scale+3,w
  4660  0FFA  00C4               	movwf	?_scale+2
  4661  0FFB  0848               	movf	??_scale+2,w
  4662  0FFC  00C3               	movwf	?_scale+1
  4663  0FFD  0847               	movf	??_scale+1,w
  4664  0FFE  00C2               	movwf	?_scale
  4665  0FFF                     l286:	
  4666  0FFF  0008               	return
  4667  1000                     __end_of_scale:	
  4668                           
  4669                           	psect	text4
  4670  1E1F                     __ptext4:	
  4671 ;; *************** function ___awmod *****************
  4672 ;; Defined at:
  4673 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  divisor         2    3[COMMON] int 
  4676 ;;  dividend        2    5[COMMON] int 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  sign            1    9[COMMON] unsigned char 
  4679 ;;  counter         1    8[COMMON] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  2    3[COMMON] int 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4689 ;;      Params:         4       0       0       0       0
  4690 ;;      Locals:         2       0       0       0       0
  4691 ;;      Temps:          1       0       0       0       0
  4692 ;;      Totals:         7       0       0       0       0
  4693 ;;Total ram usage:        7 bytes
  4694 ;; Hardware stack levels used:    1
  4695 ;; Hardware stack levels required when called:    1
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_scale
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           
  4704                           ;psect for function ___awmod
  4705  1E1F                     ___awmod:	
  4706  1E1F                     l2348:	
  4707                           ;incstack = 0
  4708                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4709                           
  4710  1E1F  01F9               	clrf	___awmod@sign
  4711  1E20                     l2350:	
  4712  1E20  1FF6               	btfss	___awmod@dividend+1,7
  4713  1E21  2E23               	goto	u2961
  4714  1E22  2E24               	goto	u2960
  4715  1E23                     u2961:	
  4716  1E23  2E2B               	goto	l2356
  4717  1E24                     u2960:	
  4718  1E24                     l2352:	
  4719  1E24  09F5               	comf	___awmod@dividend,f
  4720  1E25  09F6               	comf	___awmod@dividend+1,f
  4721  1E26  0AF5               	incf	___awmod@dividend,f
  4722  1E27  1903               	skipnz
  4723  1E28  0AF6               	incf	___awmod@dividend+1,f
  4724  1E29                     l2354:	
  4725  1E29  01F9               	clrf	___awmod@sign
  4726  1E2A  0AF9               	incf	___awmod@sign,f
  4727  1E2B                     l2356:	
  4728  1E2B  1FF4               	btfss	___awmod@divisor+1,7
  4729  1E2C  2E2E               	goto	u2971
  4730  1E2D  2E2F               	goto	u2970
  4731  1E2E                     u2971:	
  4732  1E2E  2E34               	goto	l2360
  4733  1E2F                     u2970:	
  4734  1E2F                     l2358:	
  4735  1E2F  09F3               	comf	___awmod@divisor,f
  4736  1E30  09F4               	comf	___awmod@divisor+1,f
  4737  1E31  0AF3               	incf	___awmod@divisor,f
  4738  1E32  1903               	skipnz
  4739  1E33  0AF4               	incf	___awmod@divisor+1,f
  4740  1E34                     l2360:	
  4741  1E34  0873               	movf	___awmod@divisor,w
  4742  1E35  0474               	iorwf	___awmod@divisor+1,w
  4743  1E36  1903               	btfsc	3,2
  4744  1E37  2E39               	goto	u2981
  4745  1E38  2E3A               	goto	u2980
  4746  1E39                     u2981:	
  4747  1E39  2E69               	goto	l2378
  4748  1E3A                     u2980:	
  4749  1E3A                     l2362:	
  4750  1E3A  01F8               	clrf	___awmod@counter
  4751  1E3B  0AF8               	incf	___awmod@counter,f
  4752  1E3C  2E48               	goto	l2368
  4753  1E3D                     l2364:	
  4754  1E3D  3001               	movlw	1
  4755  1E3E                     u2995:	
  4756  1E3E  1003               	clrc
  4757  1E3F  0DF3               	rlf	___awmod@divisor,f
  4758  1E40  0DF4               	rlf	___awmod@divisor+1,f
  4759  1E41  3EFF               	addlw	-1
  4760  1E42  1D03               	skipz
  4761  1E43  2E3E               	goto	u2995
  4762  1E44                     l2366:	
  4763  1E44  3001               	movlw	1
  4764  1E45  00F7               	movwf	??___awmod
  4765  1E46  0877               	movf	??___awmod,w
  4766  1E47  07F8               	addwf	___awmod@counter,f
  4767  1E48                     l2368:	
  4768  1E48  1FF4               	btfss	___awmod@divisor+1,7
  4769  1E49  2E4B               	goto	u3001
  4770  1E4A  2E4C               	goto	u3000
  4771  1E4B                     u3001:	
  4772  1E4B  2E3D               	goto	l2364
  4773  1E4C                     u3000:	
  4774  1E4C                     l2370:	
  4775  1E4C  0874               	movf	___awmod@divisor+1,w
  4776  1E4D  0276               	subwf	___awmod@dividend+1,w
  4777  1E4E  1D03               	skipz
  4778  1E4F  2E52               	goto	u3015
  4779  1E50  0873               	movf	___awmod@divisor,w
  4780  1E51  0275               	subwf	___awmod@dividend,w
  4781  1E52                     u3015:	
  4782  1E52  1C03               	skipc
  4783  1E53  2E55               	goto	u3011
  4784  1E54  2E56               	goto	u3010
  4785  1E55                     u3011:	
  4786  1E55  2E5C               	goto	l2374
  4787  1E56                     u3010:	
  4788  1E56                     l2372:	
  4789  1E56  0873               	movf	___awmod@divisor,w
  4790  1E57  02F5               	subwf	___awmod@dividend,f
  4791  1E58  0874               	movf	___awmod@divisor+1,w
  4792  1E59  1C03               	skipc
  4793  1E5A  03F6               	decf	___awmod@dividend+1,f
  4794  1E5B  02F6               	subwf	___awmod@dividend+1,f
  4795  1E5C                     l2374:	
  4796  1E5C  3001               	movlw	1
  4797  1E5D                     u3025:	
  4798  1E5D  1003               	clrc
  4799  1E5E  0CF4               	rrf	___awmod@divisor+1,f
  4800  1E5F  0CF3               	rrf	___awmod@divisor,f
  4801  1E60  3EFF               	addlw	-1
  4802  1E61  1D03               	skipz
  4803  1E62  2E5D               	goto	u3025
  4804  1E63                     l2376:	
  4805  1E63  3001               	movlw	1
  4806  1E64  02F8               	subwf	___awmod@counter,f
  4807  1E65  1D03               	btfss	3,2
  4808  1E66  2E68               	goto	u3031
  4809  1E67  2E69               	goto	u3030
  4810  1E68                     u3031:	
  4811  1E68  2E4C               	goto	l2370
  4812  1E69                     u3030:	
  4813  1E69                     l2378:	
  4814  1E69  0879               	movf	___awmod@sign,w
  4815  1E6A  1903               	btfsc	3,2
  4816  1E6B  2E6D               	goto	u3041
  4817  1E6C  2E6E               	goto	u3040
  4818  1E6D                     u3041:	
  4819  1E6D  2E73               	goto	l2382
  4820  1E6E                     u3040:	
  4821  1E6E                     l2380:	
  4822  1E6E  09F5               	comf	___awmod@dividend,f
  4823  1E6F  09F6               	comf	___awmod@dividend+1,f
  4824  1E70  0AF5               	incf	___awmod@dividend,f
  4825  1E71  1903               	skipnz
  4826  1E72  0AF6               	incf	___awmod@dividend+1,f
  4827  1E73                     l2382:	
  4828  1E73  0876               	movf	___awmod@dividend+1,w
  4829  1E74  00F4               	movwf	?___awmod+1
  4830  1E75  0875               	movf	___awmod@dividend,w
  4831  1E76  00F3               	movwf	?___awmod
  4832  1E77                     l539:	
  4833  1E77  0008               	return
  4834  1E78                     __end_of___awmod:	
  4835                           
  4836                           	psect	text5
  4837  1007                     __ptext5:	
  4838 ;; *************** function ___awdiv *****************
  4839 ;; Defined at:
  4840 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  4841 ;; Parameters:    Size  Location     Type
  4842 ;;  divisor         2    0[BANK0 ] int 
  4843 ;;  dividend        2    2[BANK0 ] int 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  quotient        2    6[BANK0 ] int 
  4846 ;;  sign            1    5[BANK0 ] unsigned char 
  4847 ;;  counter         1    4[BANK0 ] unsigned char 
  4848 ;; Return value:  Size  Location     Type
  4849 ;;                  2    0[BANK0 ] int 
  4850 ;; Registers used:
  4851 ;;		wreg, status,2, status,0
  4852 ;; Tracked objects:
  4853 ;;		On entry : 0/0
  4854 ;;		On exit  : 0/0
  4855 ;;		Unchanged: 0/0
  4856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4857 ;;      Params:         0       4       0       0       0
  4858 ;;      Locals:         0       4       0       0       0
  4859 ;;      Temps:          1       0       0       0       0
  4860 ;;      Totals:         1       8       0       0       0
  4861 ;;Total ram usage:        9 bytes
  4862 ;; Hardware stack levels used:    1
  4863 ;; Hardware stack levels required when called:    1
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_scale
  4868 ;;		_sprintf
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           
  4873                           ;psect for function ___awdiv
  4874  1007                     ___awdiv:	
  4875  1007                     l2304:	
  4876                           ;incstack = 0
  4877                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4878                           
  4879  1007  1283               	bcf	3,5	;RP0=0, select bank0
  4880  1008  1303               	bcf	3,6	;RP1=0, select bank0
  4881  1009  01A5               	clrf	___awdiv@sign
  4882  100A                     l2306:	
  4883  100A  1FA1               	btfss	___awdiv@divisor+1,7
  4884  100B  280D               	goto	u2861
  4885  100C  280E               	goto	u2860
  4886  100D                     u2861:	
  4887  100D  2815               	goto	l2312
  4888  100E                     u2860:	
  4889  100E                     l2308:	
  4890  100E  09A0               	comf	___awdiv@divisor,f
  4891  100F  09A1               	comf	___awdiv@divisor+1,f
  4892  1010  0AA0               	incf	___awdiv@divisor,f
  4893  1011  1903               	skipnz
  4894  1012  0AA1               	incf	___awdiv@divisor+1,f
  4895  1013                     l2310:	
  4896  1013  01A5               	clrf	___awdiv@sign
  4897  1014  0AA5               	incf	___awdiv@sign,f
  4898  1015                     l2312:	
  4899  1015  1FA3               	btfss	___awdiv@dividend+1,7
  4900  1016  2818               	goto	u2871
  4901  1017  2819               	goto	u2870
  4902  1018                     u2871:	
  4903  1018  2822               	goto	l2318
  4904  1019                     u2870:	
  4905  1019                     l2314:	
  4906  1019  09A2               	comf	___awdiv@dividend,f
  4907  101A  09A3               	comf	___awdiv@dividend+1,f
  4908  101B  0AA2               	incf	___awdiv@dividend,f
  4909  101C  1903               	skipnz
  4910  101D  0AA3               	incf	___awdiv@dividend+1,f
  4911  101E                     l2316:	
  4912  101E  3001               	movlw	1
  4913  101F  00FA               	movwf	??___awdiv
  4914  1020  087A               	movf	??___awdiv,w
  4915  1021  06A5               	xorwf	___awdiv@sign,f
  4916  1022                     l2318:	
  4917  1022  01A6               	clrf	___awdiv@quotient
  4918  1023  01A7               	clrf	___awdiv@quotient+1
  4919  1024                     l2320:	
  4920  1024  0820               	movf	___awdiv@divisor,w
  4921  1025  0421               	iorwf	___awdiv@divisor+1,w
  4922  1026  1903               	btfsc	3,2
  4923  1027  2829               	goto	u2881
  4924  1028  282A               	goto	u2880
  4925  1029                     u2881:	
  4926  1029  2861               	goto	l2340
  4927  102A                     u2880:	
  4928  102A                     l2322:	
  4929  102A  01A4               	clrf	___awdiv@counter
  4930  102B  0AA4               	incf	___awdiv@counter,f
  4931  102C  2838               	goto	l2328
  4932  102D                     l2324:	
  4933  102D  3001               	movlw	1
  4934  102E                     u2895:	
  4935  102E  1003               	clrc
  4936  102F  0DA0               	rlf	___awdiv@divisor,f
  4937  1030  0DA1               	rlf	___awdiv@divisor+1,f
  4938  1031  3EFF               	addlw	-1
  4939  1032  1D03               	skipz
  4940  1033  282E               	goto	u2895
  4941  1034                     l2326:	
  4942  1034  3001               	movlw	1
  4943  1035  00FA               	movwf	??___awdiv
  4944  1036  087A               	movf	??___awdiv,w
  4945  1037  07A4               	addwf	___awdiv@counter,f
  4946  1038                     l2328:	
  4947  1038  1FA1               	btfss	___awdiv@divisor+1,7
  4948  1039  283B               	goto	u2901
  4949  103A  283C               	goto	u2900
  4950  103B                     u2901:	
  4951  103B  282D               	goto	l2324
  4952  103C                     u2900:	
  4953  103C                     l2330:	
  4954  103C  3001               	movlw	1
  4955  103D                     u2915:	
  4956  103D  1003               	clrc
  4957  103E  0DA6               	rlf	___awdiv@quotient,f
  4958  103F  0DA7               	rlf	___awdiv@quotient+1,f
  4959  1040  3EFF               	addlw	-1
  4960  1041  1D03               	skipz
  4961  1042  283D               	goto	u2915
  4962  1043  0821               	movf	___awdiv@divisor+1,w
  4963  1044  0223               	subwf	___awdiv@dividend+1,w
  4964  1045  1D03               	skipz
  4965  1046  2849               	goto	u2925
  4966  1047  0820               	movf	___awdiv@divisor,w
  4967  1048  0222               	subwf	___awdiv@dividend,w
  4968  1049                     u2925:	
  4969  1049  1C03               	skipc
  4970  104A  284C               	goto	u2921
  4971  104B  284D               	goto	u2920
  4972  104C                     u2921:	
  4973  104C  2854               	goto	l2336
  4974  104D                     u2920:	
  4975  104D                     l2332:	
  4976  104D  0820               	movf	___awdiv@divisor,w
  4977  104E  02A2               	subwf	___awdiv@dividend,f
  4978  104F  0821               	movf	___awdiv@divisor+1,w
  4979  1050  1C03               	skipc
  4980  1051  03A3               	decf	___awdiv@dividend+1,f
  4981  1052  02A3               	subwf	___awdiv@dividend+1,f
  4982  1053                     l2334:	
  4983  1053  1426               	bsf	___awdiv@quotient,0
  4984  1054                     l2336:	
  4985  1054  3001               	movlw	1
  4986  1055                     u2935:	
  4987  1055  1003               	clrc
  4988  1056  0CA1               	rrf	___awdiv@divisor+1,f
  4989  1057  0CA0               	rrf	___awdiv@divisor,f
  4990  1058  3EFF               	addlw	-1
  4991  1059  1D03               	skipz
  4992  105A  2855               	goto	u2935
  4993  105B                     l2338:	
  4994  105B  3001               	movlw	1
  4995  105C  02A4               	subwf	___awdiv@counter,f
  4996  105D  1D03               	btfss	3,2
  4997  105E  2860               	goto	u2941
  4998  105F  2861               	goto	u2940
  4999  1060                     u2941:	
  5000  1060  283C               	goto	l2330
  5001  1061                     u2940:	
  5002  1061                     l2340:	
  5003  1061  0825               	movf	___awdiv@sign,w
  5004  1062  1903               	btfsc	3,2
  5005  1063  2865               	goto	u2951
  5006  1064  2866               	goto	u2950
  5007  1065                     u2951:	
  5008  1065  286B               	goto	l2344
  5009  1066                     u2950:	
  5010  1066                     l2342:	
  5011  1066  09A6               	comf	___awdiv@quotient,f
  5012  1067  09A7               	comf	___awdiv@quotient+1,f
  5013  1068  0AA6               	incf	___awdiv@quotient,f
  5014  1069  1903               	skipnz
  5015  106A  0AA7               	incf	___awdiv@quotient+1,f
  5016  106B                     l2344:	
  5017  106B  0827               	movf	___awdiv@quotient+1,w
  5018  106C  00A1               	movwf	?___awdiv+1
  5019  106D  0826               	movf	___awdiv@quotient,w
  5020  106E  00A0               	movwf	?___awdiv
  5021  106F                     l526:	
  5022  106F  0008               	return
  5023  1070                     __end_of___awdiv:	
  5024                           
  5025                           	psect	text6
  5026  1B4D                     __ptext6:	
  5027 ;; *************** function _isdigit *****************
  5028 ;; Defined at:
  5029 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  c               1    wreg     unsigned char 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;  c               1    4[COMMON] unsigned char 
  5034 ;; Return value:  Size  Location     Type
  5035 ;;		None               void
  5036 ;; Registers used:
  5037 ;;		wreg, status,2, status,0
  5038 ;; Tracked objects:
  5039 ;;		On entry : 0/0
  5040 ;;		On exit  : 0/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5043 ;;      Params:         0       0       0       0       0
  5044 ;;      Locals:         2       0       0       0       0
  5045 ;;      Temps:          0       0       0       0       0
  5046 ;;      Totals:         2       0       0       0       0
  5047 ;;Total ram usage:        2 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    1
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_sprintf
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           
  5058                           ;psect for function _isdigit
  5059  1B4D                     _isdigit:	
  5060                           
  5061                           ;incstack = 0
  5062                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5063                           ;isdigit@c stored from wreg
  5064  1B4D  00F4               	movwf	isdigit@c
  5065  1B4E                     l2844:	
  5066  1B4E  01F3               	clrf	_isdigit$1009
  5067  1B4F                     l2846:	
  5068  1B4F  303A               	movlw	58
  5069  1B50  0274               	subwf	isdigit@c,w
  5070  1B51  1803               	skipnc
  5071  1B52  2B54               	goto	u4261
  5072  1B53  2B55               	goto	u4260
  5073  1B54                     u4261:	
  5074  1B54  2B5D               	goto	l2852
  5075  1B55                     u4260:	
  5076  1B55                     l2848:	
  5077  1B55  3030               	movlw	48
  5078  1B56  0274               	subwf	isdigit@c,w
  5079  1B57  1C03               	skipc
  5080  1B58  2B5A               	goto	u4271
  5081  1B59  2B5B               	goto	u4270
  5082  1B5A                     u4271:	
  5083  1B5A  2B5D               	goto	l2852
  5084  1B5B                     u4270:	
  5085  1B5B                     l2850:	
  5086  1B5B  01F3               	clrf	_isdigit$1009
  5087  1B5C  0AF3               	incf	_isdigit$1009,f
  5088  1B5D                     l2852:	
  5089  1B5D  0C73               	rrf	_isdigit$1009,w
  5090  1B5E                     l854:	
  5091  1B5E  0008               	return
  5092  1B5F                     __end_of_isdigit:	
  5093                           
  5094                           	psect	text7
  5095  136B                     __ptext7:	
  5096 ;; *************** function _fround *****************
  5097 ;; Defined at:
  5098 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;  prec            1    wreg     unsigned char 
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;  prec            1   53[BANK0 ] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  4   34[BANK0 ] unsigned char 
  5105 ;; Registers used:
  5106 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5112 ;;      Params:         0       4       0       0       0
  5113 ;;      Locals:         0       9       0       0       0
  5114 ;;      Temps:          0       7       0       0       0
  5115 ;;      Totals:         0      20       0       0       0
  5116 ;;Total ram usage:       20 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    3
  5119 ;; This function calls:
  5120 ;;		___flmul
  5121 ;;		___lwdiv
  5122 ;;		___lwmod
  5123 ;; This function is called by:
  5124 ;;		_sprintf
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           
  5129                           ;psect for function _fround
  5130  136B                     _fround:	
  5131                           
  5132                           ;incstack = 0
  5133                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5134                           ;fround@prec stored from wreg
  5135  136B  1283               	bcf	3,5	;RP0=0, select bank0
  5136  136C  1303               	bcf	3,6	;RP1=0, select bank0
  5137  136D  00D5               	movwf	fround@prec
  5138  136E                     l2786:	
  5139                           
  5140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  5141  136E  306E               	movlw	110
  5142  136F  0255               	subwf	fround@prec,w
  5143  1370  1C03               	skipc
  5144  1371  2B73               	goto	u4011
  5145  1372  2B74               	goto	u4010
  5146  1373                     u4011:	
  5147  1373  2C83               	goto	l2794
  5148  1374                     u4010:	
  5149  1374                     l2788:	
  5150                           
  5151                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5152  1374  303F               	movlw	63
  5153  1375  00AB               	movwf	___flmul@b+3
  5154  1376  3000               	movlw	0
  5155  1377  00AA               	movwf	___flmul@b+2
  5156  1378  3000               	movlw	0
  5157  1379  00A9               	movwf	___flmul@b+1
  5158  137A  3000               	movlw	0
  5159  137B  00A8               	movwf	___flmul@b
  5160  137C  3064               	movlw	100
  5161  137D  00A0               	movwf	___lwdiv@divisor
  5162  137E  3000               	movlw	0
  5163  137F  00A1               	movwf	___lwdiv@divisor+1
  5164  1380  0855               	movf	fround@prec,w
  5165  1381  00C6               	movwf	??_fround
  5166  1382  01C7               	clrf	??_fround+1
  5167  1383  0846               	movf	??_fround,w
  5168  1384  00A2               	movwf	___lwdiv@dividend
  5169  1385  0847               	movf	??_fround+1,w
  5170  1386  00A3               	movwf	___lwdiv@dividend+1
  5171  1387  160A  158A  24E6  160A  118A  	fcall	___lwdiv
  5172  138C  1283               	bcf	3,5	;RP0=0, select bank0
  5173  138D  1303               	bcf	3,6	;RP1=0, select bank0
  5174  138E  0820               	movf	?___lwdiv,w
  5175  138F  00C8               	movwf	??_fround+2
  5176  1390  3001               	movlw	1
  5177  1391                     u4025:	
  5178  1391  1003               	clrc
  5179  1392  0DC8               	rlf	??_fround+2,f
  5180  1393  3EFF               	addlw	-1
  5181  1394  1D03               	skipz
  5182  1395  2B91               	goto	u4025
  5183  1396  1003               	clrc
  5184  1397  0D48               	rlf	??_fround+2,w
  5185  1398  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5186  1399  0084               	movwf	4
  5187  139A  160A  158A  200A  160A  118A  	fcall	stringdir
  5188  139F  00C9               	movwf	??_fround+3
  5189  13A0  160A  158A  200A  160A  118A  	fcall	stringdir
  5190  13A5  00CA               	movwf	??_fround+4
  5191  13A6  160A  158A  200A  160A  118A  	fcall	stringdir
  5192  13AB  00CB               	movwf	??_fround+5
  5193  13AC  160A  158A  200A  160A  118A  	fcall	stringdir
  5194  13B1  00CC               	movwf	??_fround+6
  5195  13B2  084C               	movf	??_fround+6,w
  5196  13B3  00AF               	movwf	___flmul@a+3
  5197  13B4  084B               	movf	??_fround+5,w
  5198  13B5  00AE               	movwf	___flmul@a+2
  5199  13B6  084A               	movf	??_fround+4,w
  5200  13B7  00AD               	movwf	___flmul@a+1
  5201  13B8  0849               	movf	??_fround+3,w
  5202  13B9  00AC               	movwf	___flmul@a
  5203  13BA  120A  158A  213C  160A  118A  	fcall	___flmul
  5204  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  5205  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  5206  13C1  082B               	movf	?___flmul+3,w
  5207  13C2  00D4               	movwf	_fround$1208+3
  5208  13C3  082A               	movf	?___flmul+2,w
  5209  13C4  00D3               	movwf	_fround$1208+2
  5210  13C5  0829               	movf	?___flmul+1,w
  5211  13C6  00D2               	movwf	_fround$1208+1
  5212  13C7  0828               	movf	?___flmul,w
  5213  13C8  00D1               	movwf	_fround$1208
  5214                           
  5215                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5216  13C9  300A               	movlw	10
  5217  13CA  00A0               	movwf	___lwdiv@divisor
  5218  13CB  3000               	movlw	0
  5219  13CC  00A1               	movwf	___lwdiv@divisor+1
  5220  13CD  0855               	movf	fround@prec,w
  5221  13CE  00C6               	movwf	??_fround
  5222  13CF  01C7               	clrf	??_fround+1
  5223  13D0  0846               	movf	??_fround,w
  5224  13D1  00F5               	movwf	___lwmod@dividend
  5225  13D2  0847               	movf	??_fround+1,w
  5226  13D3  00F6               	movwf	___lwmod@dividend+1
  5227  13D4  3064               	movlw	100
  5228  13D5  00F3               	movwf	___lwmod@divisor
  5229  13D6  3000               	movlw	0
  5230  13D7  00F4               	movwf	___lwmod@divisor+1
  5231  13D8  160A  158A  2466  160A  118A  	fcall	___lwmod
  5232  13DD  0874               	movf	?___lwmod+1,w
  5233  13DE  1283               	bcf	3,5	;RP0=0, select bank0
  5234  13DF  1303               	bcf	3,6	;RP1=0, select bank0
  5235  13E0  00A3               	movwf	___lwdiv@dividend+1
  5236  13E1  0873               	movf	?___lwmod,w
  5237  13E2  00A2               	movwf	___lwdiv@dividend
  5238  13E3  160A  158A  24E6  160A  118A  	fcall	___lwdiv
  5239  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  5240  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  5241  13EA  0820               	movf	?___lwdiv,w
  5242  13EB  00C8               	movwf	??_fround+2
  5243  13EC  3001               	movlw	1
  5244  13ED                     u4035:	
  5245  13ED  1003               	clrc
  5246  13EE  0DC8               	rlf	??_fround+2,f
  5247  13EF  3EFF               	addlw	-1
  5248  13F0  1D03               	skipz
  5249  13F1  2BED               	goto	u4035
  5250  13F2  1003               	clrc
  5251  13F3  0D48               	rlf	??_fround+2,w
  5252  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5253  13F5  0084               	movwf	4
  5254  13F6  160A  158A  200A  160A  118A  	fcall	stringdir
  5255  13FB  00C9               	movwf	??_fround+3
  5256  13FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5257  1401  00CA               	movwf	??_fround+4
  5258  1402  160A  158A  200A  160A  118A  	fcall	stringdir
  5259  1407  00CB               	movwf	??_fround+5
  5260  1408  160A  158A  200A  160A  118A  	fcall	stringdir
  5261  140D  00CC               	movwf	??_fround+6
  5262  140E  084C               	movf	??_fround+6,w
  5263  140F  00AB               	movwf	___flmul@b+3
  5264  1410  084B               	movf	??_fround+5,w
  5265  1411  00AA               	movwf	___flmul@b+2
  5266  1412  084A               	movf	??_fround+4,w
  5267  1413  00A9               	movwf	___flmul@b+1
  5268  1414  0849               	movf	??_fround+3,w
  5269  1415  00A8               	movwf	___flmul@b
  5270  1416  0854               	movf	_fround$1208+3,w
  5271  1417  00AF               	movwf	___flmul@a+3
  5272  1418  0853               	movf	_fround$1208+2,w
  5273  1419  00AE               	movwf	___flmul@a+2
  5274  141A  0852               	movf	_fround$1208+1,w
  5275  141B  00AD               	movwf	___flmul@a+1
  5276  141C  0851               	movf	_fround$1208,w
  5277  141D  00AC               	movwf	___flmul@a
  5278  141E  120A  158A  213C  160A  118A  	fcall	___flmul
  5279  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5280  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5281  1425  082B               	movf	?___flmul+3,w
  5282  1426  00D0               	movwf	_fround$1209+3
  5283  1427  082A               	movf	?___flmul+2,w
  5284  1428  00CF               	movwf	_fround$1209+2
  5285  1429  0829               	movf	?___flmul+1,w
  5286  142A  00CE               	movwf	_fround$1209+1
  5287  142B  0828               	movf	?___flmul,w
  5288  142C  00CD               	movwf	_fround$1209
  5289                           
  5290                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5291  142D  300A               	movlw	10
  5292  142E  00F3               	movwf	___lwmod@divisor
  5293  142F  3000               	movlw	0
  5294  1430  00F4               	movwf	___lwmod@divisor+1
  5295  1431  0855               	movf	fround@prec,w
  5296  1432  00C6               	movwf	??_fround
  5297  1433  01C7               	clrf	??_fround+1
  5298  1434  0846               	movf	??_fround,w
  5299  1435  00F5               	movwf	___lwmod@dividend
  5300  1436  0847               	movf	??_fround+1,w
  5301  1437  00F6               	movwf	___lwmod@dividend+1
  5302  1438  160A  158A  2466  160A  118A  	fcall	___lwmod
  5303  143D  0873               	movf	?___lwmod,w
  5304  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5305  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5306  1440  00C8               	movwf	??_fround+2
  5307  1441  3001               	movlw	1
  5308  1442                     u4045:	
  5309  1442  1003               	clrc
  5310  1443  0DC8               	rlf	??_fround+2,f
  5311  1444  3EFF               	addlw	-1
  5312  1445  1D03               	skipz
  5313  1446  2C42               	goto	u4045
  5314  1447  1003               	clrc
  5315  1448  0D48               	rlf	??_fround+2,w
  5316  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5317  144A  0084               	movwf	4
  5318  144B  160A  158A  200A  160A  118A  	fcall	stringdir
  5319  1450  00C9               	movwf	??_fround+3
  5320  1451  160A  158A  200A  160A  118A  	fcall	stringdir
  5321  1456  00CA               	movwf	??_fround+4
  5322  1457  160A  158A  200A  160A  118A  	fcall	stringdir
  5323  145C  00CB               	movwf	??_fround+5
  5324  145D  160A  158A  200A  160A  118A  	fcall	stringdir
  5325  1462  00CC               	movwf	??_fround+6
  5326  1463  084C               	movf	??_fround+6,w
  5327  1464  00AB               	movwf	___flmul@b+3
  5328  1465  084B               	movf	??_fround+5,w
  5329  1466  00AA               	movwf	___flmul@b+2
  5330  1467  084A               	movf	??_fround+4,w
  5331  1468  00A9               	movwf	___flmul@b+1
  5332  1469  0849               	movf	??_fround+3,w
  5333  146A  00A8               	movwf	___flmul@b
  5334  146B  0850               	movf	_fround$1209+3,w
  5335  146C  00AF               	movwf	___flmul@a+3
  5336  146D  084F               	movf	_fround$1209+2,w
  5337  146E  00AE               	movwf	___flmul@a+2
  5338  146F  084E               	movf	_fround$1209+1,w
  5339  1470  00AD               	movwf	___flmul@a+1
  5340  1471  084D               	movf	_fround$1209,w
  5341  1472  00AC               	movwf	___flmul@a
  5342  1473  120A  158A  213C  160A  118A  	fcall	___flmul
  5343  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5344  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5345  147A  082B               	movf	?___flmul+3,w
  5346  147B  00C5               	movwf	?_fround+3
  5347  147C  082A               	movf	?___flmul+2,w
  5348  147D  00C4               	movwf	?_fround+2
  5349  147E  0829               	movf	?___flmul+1,w
  5350  147F  00C3               	movwf	?_fround+1
  5351  1480  0828               	movf	?___flmul,w
  5352  1481  00C2               	movwf	?_fround
  5353  1482  2D77               	goto	l279
  5354  1483                     l2794:	
  5355  1483  300B               	movlw	11
  5356  1484  0255               	subwf	fround@prec,w
  5357  1485  1C03               	skipc
  5358  1486  2C88               	goto	u4051
  5359  1487  2C89               	goto	u4050
  5360  1488                     u4051:	
  5361  1488  2D34               	goto	l2800
  5362  1489                     u4050:	
  5363  1489                     l2796:	
  5364                           
  5365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5366  1489  303F               	movlw	63
  5367  148A  00AB               	movwf	___flmul@b+3
  5368  148B  3000               	movlw	0
  5369  148C  00AA               	movwf	___flmul@b+2
  5370  148D  3000               	movlw	0
  5371  148E  00A9               	movwf	___flmul@b+1
  5372  148F  3000               	movlw	0
  5373  1490  00A8               	movwf	___flmul@b
  5374  1491  300A               	movlw	10
  5375  1492  00A0               	movwf	___lwdiv@divisor
  5376  1493  3000               	movlw	0
  5377  1494  00A1               	movwf	___lwdiv@divisor+1
  5378  1495  0855               	movf	fround@prec,w
  5379  1496  00C6               	movwf	??_fround
  5380  1497  01C7               	clrf	??_fround+1
  5381  1498  0846               	movf	??_fround,w
  5382  1499  00A2               	movwf	___lwdiv@dividend
  5383  149A  0847               	movf	??_fround+1,w
  5384  149B  00A3               	movwf	___lwdiv@dividend+1
  5385  149C  160A  158A  24E6  160A  118A  	fcall	___lwdiv
  5386  14A1  1283               	bcf	3,5	;RP0=0, select bank0
  5387  14A2  1303               	bcf	3,6	;RP1=0, select bank0
  5388  14A3  0820               	movf	?___lwdiv,w
  5389  14A4  00C8               	movwf	??_fround+2
  5390  14A5  3001               	movlw	1
  5391  14A6                     u4065:	
  5392  14A6  1003               	clrc
  5393  14A7  0DC8               	rlf	??_fround+2,f
  5394  14A8  3EFF               	addlw	-1
  5395  14A9  1D03               	skipz
  5396  14AA  2CA6               	goto	u4065
  5397  14AB  1003               	clrc
  5398  14AC  0D48               	rlf	??_fround+2,w
  5399  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5400  14AE  0084               	movwf	4
  5401  14AF  160A  158A  200A  160A  118A  	fcall	stringdir
  5402  14B4  00C9               	movwf	??_fround+3
  5403  14B5  160A  158A  200A  160A  118A  	fcall	stringdir
  5404  14BA  00CA               	movwf	??_fround+4
  5405  14BB  160A  158A  200A  160A  118A  	fcall	stringdir
  5406  14C0  00CB               	movwf	??_fround+5
  5407  14C1  160A  158A  200A  160A  118A  	fcall	stringdir
  5408  14C6  00CC               	movwf	??_fround+6
  5409  14C7  084C               	movf	??_fround+6,w
  5410  14C8  00AF               	movwf	___flmul@a+3
  5411  14C9  084B               	movf	??_fround+5,w
  5412  14CA  00AE               	movwf	___flmul@a+2
  5413  14CB  084A               	movf	??_fround+4,w
  5414  14CC  00AD               	movwf	___flmul@a+1
  5415  14CD  0849               	movf	??_fround+3,w
  5416  14CE  00AC               	movwf	___flmul@a
  5417  14CF  120A  158A  213C  160A  118A  	fcall	___flmul
  5418  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5419  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5420  14D6  082B               	movf	?___flmul+3,w
  5421  14D7  00D4               	movwf	_fround$1208+3
  5422  14D8  082A               	movf	?___flmul+2,w
  5423  14D9  00D3               	movwf	_fround$1208+2
  5424  14DA  0829               	movf	?___flmul+1,w
  5425  14DB  00D2               	movwf	_fround$1208+1
  5426  14DC  0828               	movf	?___flmul,w
  5427  14DD  00D1               	movwf	_fround$1208
  5428                           
  5429                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5430  14DE  300A               	movlw	10
  5431  14DF  00F3               	movwf	___lwmod@divisor
  5432  14E0  3000               	movlw	0
  5433  14E1  00F4               	movwf	___lwmod@divisor+1
  5434  14E2  0855               	movf	fround@prec,w
  5435  14E3  00C6               	movwf	??_fround
  5436  14E4  01C7               	clrf	??_fround+1
  5437  14E5  0846               	movf	??_fround,w
  5438  14E6  00F5               	movwf	___lwmod@dividend
  5439  14E7  0847               	movf	??_fround+1,w
  5440  14E8  00F6               	movwf	___lwmod@dividend+1
  5441  14E9  160A  158A  2466  160A  118A  	fcall	___lwmod
  5442  14EE  0873               	movf	?___lwmod,w
  5443  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5444  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5445  14F1  00C8               	movwf	??_fround+2
  5446  14F2  3001               	movlw	1
  5447  14F3                     u4075:	
  5448  14F3  1003               	clrc
  5449  14F4  0DC8               	rlf	??_fround+2,f
  5450  14F5  3EFF               	addlw	-1
  5451  14F6  1D03               	skipz
  5452  14F7  2CF3               	goto	u4075
  5453  14F8  1003               	clrc
  5454  14F9  0D48               	rlf	??_fround+2,w
  5455  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5456  14FB  0084               	movwf	4
  5457  14FC  160A  158A  200A  160A  118A  	fcall	stringdir
  5458  1501  00C9               	movwf	??_fround+3
  5459  1502  160A  158A  200A  160A  118A  	fcall	stringdir
  5460  1507  00CA               	movwf	??_fround+4
  5461  1508  160A  158A  200A  160A  118A  	fcall	stringdir
  5462  150D  00CB               	movwf	??_fround+5
  5463  150E  160A  158A  200A  160A  118A  	fcall	stringdir
  5464  1513  00CC               	movwf	??_fround+6
  5465  1514  084C               	movf	??_fround+6,w
  5466  1515  00AB               	movwf	___flmul@b+3
  5467  1516  084B               	movf	??_fround+5,w
  5468  1517  00AA               	movwf	___flmul@b+2
  5469  1518  084A               	movf	??_fround+4,w
  5470  1519  00A9               	movwf	___flmul@b+1
  5471  151A  0849               	movf	??_fround+3,w
  5472  151B  00A8               	movwf	___flmul@b
  5473  151C  0854               	movf	_fround$1208+3,w
  5474  151D  00AF               	movwf	___flmul@a+3
  5475  151E  0853               	movf	_fround$1208+2,w
  5476  151F  00AE               	movwf	___flmul@a+2
  5477  1520  0852               	movf	_fround$1208+1,w
  5478  1521  00AD               	movwf	___flmul@a+1
  5479  1522  0851               	movf	_fround$1208,w
  5480  1523  00AC               	movwf	___flmul@a
  5481  1524  120A  158A  213C  160A  118A  	fcall	___flmul
  5482  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5483  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5484  152B  082B               	movf	?___flmul+3,w
  5485  152C  00C5               	movwf	?_fround+3
  5486  152D  082A               	movf	?___flmul+2,w
  5487  152E  00C4               	movwf	?_fround+2
  5488  152F  0829               	movf	?___flmul+1,w
  5489  1530  00C3               	movwf	?_fround+1
  5490  1531  0828               	movf	?___flmul,w
  5491  1532  00C2               	movwf	?_fround
  5492  1533  2D77               	goto	l279
  5493  1534                     l2800:	
  5494                           
  5495                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  5496  1534  303F               	movlw	63
  5497  1535  00AB               	movwf	___flmul@b+3
  5498  1536  3000               	movlw	0
  5499  1537  00AA               	movwf	___flmul@b+2
  5500  1538  3000               	movlw	0
  5501  1539  00A9               	movwf	___flmul@b+1
  5502  153A  3000               	movlw	0
  5503  153B  00A8               	movwf	___flmul@b
  5504  153C  0855               	movf	fround@prec,w
  5505  153D  00C6               	movwf	??_fround
  5506  153E  3001               	movlw	1
  5507  153F                     u4085:	
  5508  153F  1003               	clrc
  5509  1540  0DC6               	rlf	??_fround,f
  5510  1541  3EFF               	addlw	-1
  5511  1542  1D03               	skipz
  5512  1543  2D3F               	goto	u4085
  5513  1544  1003               	clrc
  5514  1545  0D46               	rlf	??_fround,w
  5515  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5516  1547  0084               	movwf	4
  5517  1548  160A  158A  200A  160A  118A  	fcall	stringdir
  5518  154D  00C7               	movwf	??_fround+1
  5519  154E  160A  158A  200A  160A  118A  	fcall	stringdir
  5520  1553  00C8               	movwf	??_fround+2
  5521  1554  160A  158A  200A  160A  118A  	fcall	stringdir
  5522  1559  00C9               	movwf	??_fround+3
  5523  155A  160A  158A  200A  160A  118A  	fcall	stringdir
  5524  155F  00CA               	movwf	??_fround+4
  5525  1560  084A               	movf	??_fround+4,w
  5526  1561  00AF               	movwf	___flmul@a+3
  5527  1562  0849               	movf	??_fround+3,w
  5528  1563  00AE               	movwf	___flmul@a+2
  5529  1564  0848               	movf	??_fround+2,w
  5530  1565  00AD               	movwf	___flmul@a+1
  5531  1566  0847               	movf	??_fround+1,w
  5532  1567  00AC               	movwf	___flmul@a
  5533  1568  120A  158A  213C  160A  118A  	fcall	___flmul
  5534  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5535  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5536  156F  082B               	movf	?___flmul+3,w
  5537  1570  00C5               	movwf	?_fround+3
  5538  1571  082A               	movf	?___flmul+2,w
  5539  1572  00C4               	movwf	?_fround+2
  5540  1573  0829               	movf	?___flmul+1,w
  5541  1574  00C3               	movwf	?_fround+1
  5542  1575  0828               	movf	?___flmul,w
  5543  1576  00C2               	movwf	?_fround
  5544  1577                     l279:	
  5545  1577  0008               	return
  5546  1578                     __end_of_fround:	
  5547                           
  5548                           	psect	text8
  5549  1C66                     __ptext8:	
  5550 ;; *************** function ___lwmod *****************
  5551 ;; Defined at:
  5552 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  divisor         2    3[COMMON] unsigned int 
  5555 ;;  dividend        2    5[COMMON] unsigned int 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  counter         1    8[COMMON] unsigned char 
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  2    3[COMMON] unsigned int 
  5560 ;; Registers used:
  5561 ;;		wreg, status,2, status,0
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5567 ;;      Params:         4       0       0       0       0
  5568 ;;      Locals:         1       0       0       0       0
  5569 ;;      Temps:          1       0       0       0       0
  5570 ;;      Totals:         6       0       0       0       0
  5571 ;;Total ram usage:        6 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    1
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_fround
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function ___lwmod
  5583  1C66                     ___lwmod:	
  5584  1C66                     l2412:	
  5585                           ;incstack = 0
  5586                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5587                           
  5588  1C66  0873               	movf	___lwmod@divisor,w
  5589  1C67  0474               	iorwf	___lwmod@divisor+1,w
  5590  1C68  1903               	btfsc	3,2
  5591  1C69  2C6B               	goto	u3121
  5592  1C6A  2C6C               	goto	u3120
  5593  1C6B                     u3121:	
  5594  1C6B  2C9B               	goto	l2430
  5595  1C6C                     u3120:	
  5596  1C6C                     l2414:	
  5597  1C6C  01F8               	clrf	___lwmod@counter
  5598  1C6D  0AF8               	incf	___lwmod@counter,f
  5599  1C6E  2C7A               	goto	l2420
  5600  1C6F                     l2416:	
  5601  1C6F  3001               	movlw	1
  5602  1C70                     u3135:	
  5603  1C70  1003               	clrc
  5604  1C71  0DF3               	rlf	___lwmod@divisor,f
  5605  1C72  0DF4               	rlf	___lwmod@divisor+1,f
  5606  1C73  3EFF               	addlw	-1
  5607  1C74  1D03               	skipz
  5608  1C75  2C70               	goto	u3135
  5609  1C76                     l2418:	
  5610  1C76  3001               	movlw	1
  5611  1C77  00F7               	movwf	??___lwmod
  5612  1C78  0877               	movf	??___lwmod,w
  5613  1C79  07F8               	addwf	___lwmod@counter,f
  5614  1C7A                     l2420:	
  5615  1C7A  1FF4               	btfss	___lwmod@divisor+1,7
  5616  1C7B  2C7D               	goto	u3141
  5617  1C7C  2C7E               	goto	u3140
  5618  1C7D                     u3141:	
  5619  1C7D  2C6F               	goto	l2416
  5620  1C7E                     u3140:	
  5621  1C7E                     l2422:	
  5622  1C7E  0874               	movf	___lwmod@divisor+1,w
  5623  1C7F  0276               	subwf	___lwmod@dividend+1,w
  5624  1C80  1D03               	skipz
  5625  1C81  2C84               	goto	u3155
  5626  1C82  0873               	movf	___lwmod@divisor,w
  5627  1C83  0275               	subwf	___lwmod@dividend,w
  5628  1C84                     u3155:	
  5629  1C84  1C03               	skipc
  5630  1C85  2C87               	goto	u3151
  5631  1C86  2C88               	goto	u3150
  5632  1C87                     u3151:	
  5633  1C87  2C8E               	goto	l2426
  5634  1C88                     u3150:	
  5635  1C88                     l2424:	
  5636  1C88  0873               	movf	___lwmod@divisor,w
  5637  1C89  02F5               	subwf	___lwmod@dividend,f
  5638  1C8A  0874               	movf	___lwmod@divisor+1,w
  5639  1C8B  1C03               	skipc
  5640  1C8C  03F6               	decf	___lwmod@dividend+1,f
  5641  1C8D  02F6               	subwf	___lwmod@dividend+1,f
  5642  1C8E                     l2426:	
  5643  1C8E  3001               	movlw	1
  5644  1C8F                     u3165:	
  5645  1C8F  1003               	clrc
  5646  1C90  0CF4               	rrf	___lwmod@divisor+1,f
  5647  1C91  0CF3               	rrf	___lwmod@divisor,f
  5648  1C92  3EFF               	addlw	-1
  5649  1C93  1D03               	skipz
  5650  1C94  2C8F               	goto	u3165
  5651  1C95                     l2428:	
  5652  1C95  3001               	movlw	1
  5653  1C96  02F8               	subwf	___lwmod@counter,f
  5654  1C97  1D03               	btfss	3,2
  5655  1C98  2C9A               	goto	u3171
  5656  1C99  2C9B               	goto	u3170
  5657  1C9A                     u3171:	
  5658  1C9A  2C7E               	goto	l2422
  5659  1C9B                     u3170:	
  5660  1C9B                     l2430:	
  5661  1C9B  0876               	movf	___lwmod@dividend+1,w
  5662  1C9C  00F4               	movwf	?___lwmod+1
  5663  1C9D  0875               	movf	___lwmod@dividend,w
  5664  1C9E  00F3               	movwf	?___lwmod
  5665  1C9F                     l689:	
  5666  1C9F  0008               	return
  5667  1CA0                     __end_of___lwmod:	
  5668                           
  5669                           	psect	text9
  5670  1CE6                     __ptext9:	
  5671 ;; *************** function ___lwdiv *****************
  5672 ;; Defined at:
  5673 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  divisor         2    0[BANK0 ] unsigned int 
  5676 ;;  dividend        2    2[BANK0 ] unsigned int 
  5677 ;; Auto vars:     Size  Location     Type
  5678 ;;  quotient        2    4[BANK0 ] unsigned int 
  5679 ;;  counter         1    6[BANK0 ] unsigned char 
  5680 ;; Return value:  Size  Location     Type
  5681 ;;                  2    0[BANK0 ] unsigned int 
  5682 ;; Registers used:
  5683 ;;		wreg, status,2, status,0
  5684 ;; Tracked objects:
  5685 ;;		On entry : 0/0
  5686 ;;		On exit  : 0/0
  5687 ;;		Unchanged: 0/0
  5688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5689 ;;      Params:         0       4       0       0       0
  5690 ;;      Locals:         0       3       0       0       0
  5691 ;;      Temps:          1       0       0       0       0
  5692 ;;      Totals:         1       7       0       0       0
  5693 ;;Total ram usage:        8 bytes
  5694 ;; Hardware stack levels used:    1
  5695 ;; Hardware stack levels required when called:    1
  5696 ;; This function calls:
  5697 ;;		Nothing
  5698 ;; This function is called by:
  5699 ;;		_fround
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           
  5703                           
  5704                           ;psect for function ___lwdiv
  5705  1CE6                     ___lwdiv:	
  5706  1CE6                     l2386:	
  5707                           ;incstack = 0
  5708                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5709                           
  5710  1CE6  1283               	bcf	3,5	;RP0=0, select bank0
  5711  1CE7  1303               	bcf	3,6	;RP1=0, select bank0
  5712  1CE8  01A4               	clrf	___lwdiv@quotient
  5713  1CE9  01A5               	clrf	___lwdiv@quotient+1
  5714  1CEA                     l2388:	
  5715  1CEA  0820               	movf	___lwdiv@divisor,w
  5716  1CEB  0421               	iorwf	___lwdiv@divisor+1,w
  5717  1CEC  1903               	btfsc	3,2
  5718  1CED  2CEF               	goto	u3051
  5719  1CEE  2CF0               	goto	u3050
  5720  1CEF                     u3051:	
  5721  1CEF  2D27               	goto	l2408
  5722  1CF0                     u3050:	
  5723  1CF0                     l2390:	
  5724  1CF0  01A6               	clrf	___lwdiv@counter
  5725  1CF1  0AA6               	incf	___lwdiv@counter,f
  5726  1CF2  2CFE               	goto	l2396
  5727  1CF3                     l2392:	
  5728  1CF3  3001               	movlw	1
  5729  1CF4                     u3065:	
  5730  1CF4  1003               	clrc
  5731  1CF5  0DA0               	rlf	___lwdiv@divisor,f
  5732  1CF6  0DA1               	rlf	___lwdiv@divisor+1,f
  5733  1CF7  3EFF               	addlw	-1
  5734  1CF8  1D03               	skipz
  5735  1CF9  2CF4               	goto	u3065
  5736  1CFA                     l2394:	
  5737  1CFA  3001               	movlw	1
  5738  1CFB  00F9               	movwf	??___lwdiv
  5739  1CFC  0879               	movf	??___lwdiv,w
  5740  1CFD  07A6               	addwf	___lwdiv@counter,f
  5741  1CFE                     l2396:	
  5742  1CFE  1FA1               	btfss	___lwdiv@divisor+1,7
  5743  1CFF  2D01               	goto	u3071
  5744  1D00  2D02               	goto	u3070
  5745  1D01                     u3071:	
  5746  1D01  2CF3               	goto	l2392
  5747  1D02                     u3070:	
  5748  1D02                     l2398:	
  5749  1D02  3001               	movlw	1
  5750  1D03                     u3085:	
  5751  1D03  1003               	clrc
  5752  1D04  0DA4               	rlf	___lwdiv@quotient,f
  5753  1D05  0DA5               	rlf	___lwdiv@quotient+1,f
  5754  1D06  3EFF               	addlw	-1
  5755  1D07  1D03               	skipz
  5756  1D08  2D03               	goto	u3085
  5757  1D09  0821               	movf	___lwdiv@divisor+1,w
  5758  1D0A  0223               	subwf	___lwdiv@dividend+1,w
  5759  1D0B  1D03               	skipz
  5760  1D0C  2D0F               	goto	u3095
  5761  1D0D  0820               	movf	___lwdiv@divisor,w
  5762  1D0E  0222               	subwf	___lwdiv@dividend,w
  5763  1D0F                     u3095:	
  5764  1D0F  1C03               	skipc
  5765  1D10  2D12               	goto	u3091
  5766  1D11  2D13               	goto	u3090
  5767  1D12                     u3091:	
  5768  1D12  2D1A               	goto	l2404
  5769  1D13                     u3090:	
  5770  1D13                     l2400:	
  5771  1D13  0820               	movf	___lwdiv@divisor,w
  5772  1D14  02A2               	subwf	___lwdiv@dividend,f
  5773  1D15  0821               	movf	___lwdiv@divisor+1,w
  5774  1D16  1C03               	skipc
  5775  1D17  03A3               	decf	___lwdiv@dividend+1,f
  5776  1D18  02A3               	subwf	___lwdiv@dividend+1,f
  5777  1D19                     l2402:	
  5778  1D19  1424               	bsf	___lwdiv@quotient,0
  5779  1D1A                     l2404:	
  5780  1D1A  3001               	movlw	1
  5781  1D1B                     u3105:	
  5782  1D1B  1003               	clrc
  5783  1D1C  0CA1               	rrf	___lwdiv@divisor+1,f
  5784  1D1D  0CA0               	rrf	___lwdiv@divisor,f
  5785  1D1E  3EFF               	addlw	-1
  5786  1D1F  1D03               	skipz
  5787  1D20  2D1B               	goto	u3105
  5788  1D21                     l2406:	
  5789  1D21  3001               	movlw	1
  5790  1D22  02A6               	subwf	___lwdiv@counter,f
  5791  1D23  1D03               	btfss	3,2
  5792  1D24  2D26               	goto	u3111
  5793  1D25  2D27               	goto	u3110
  5794  1D26                     u3111:	
  5795  1D26  2D02               	goto	l2398
  5796  1D27                     u3110:	
  5797  1D27                     l2408:	
  5798  1D27  0825               	movf	___lwdiv@quotient+1,w
  5799  1D28  00A1               	movwf	?___lwdiv+1
  5800  1D29  0824               	movf	___lwdiv@quotient,w
  5801  1D2A  00A0               	movwf	?___lwdiv
  5802  1D2B                     l679:	
  5803  1D2B  0008               	return
  5804  1D2C                     __end_of___lwdiv:	
  5805                           
  5806                           	psect	text10
  5807  093C                     __ptext10:	
  5808 ;; *************** function ___flmul *****************
  5809 ;; Defined at:
  5810 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  b               4    8[BANK0 ] unsigned int 
  5813 ;;  a               4   12[BANK0 ] unsigned int 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  prod            4   28[BANK0 ] struct .
  5816 ;;  grs             4   22[BANK0 ] unsigned long 
  5817 ;;  temp            2   32[BANK0 ] struct .
  5818 ;;  bexp            1   27[BANK0 ] unsigned char 
  5819 ;;  aexp            1   26[BANK0 ] unsigned char 
  5820 ;;  sign            1   21[BANK0 ] unsigned char 
  5821 ;; Return value:  Size  Location     Type
  5822 ;;                  4    8[BANK0 ] unsigned char 
  5823 ;; Registers used:
  5824 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5825 ;; Tracked objects:
  5826 ;;		On entry : 0/0
  5827 ;;		On exit  : 0/0
  5828 ;;		Unchanged: 0/0
  5829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5830 ;;      Params:         0       8       0       0       0
  5831 ;;      Locals:         0      13       0       0       0
  5832 ;;      Temps:          0       5       0       0       0
  5833 ;;      Totals:         0      26       0       0       0
  5834 ;;Total ram usage:       26 bytes
  5835 ;; Hardware stack levels used:    1
  5836 ;; Hardware stack levels required when called:    2
  5837 ;; This function calls:
  5838 ;;		__Umul8_16
  5839 ;; This function is called by:
  5840 ;;		_main
  5841 ;;		_fround
  5842 ;;		_scale
  5843 ;;		_sprintf
  5844 ;; This function uses a non-reentrant model
  5845 ;;
  5846                           
  5847                           
  5848                           ;psect for function ___flmul
  5849  093C                     ___flmul:	
  5850  093C                     l2628:	
  5851                           ;incstack = 0
  5852                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5853                           
  5854  093C  1283               	bcf	3,5	;RP0=0, select bank0
  5855  093D  1303               	bcf	3,6	;RP1=0, select bank0
  5856  093E  082B               	movf	___flmul@b+3,w
  5857  093F  3980               	andlw	128
  5858  0940  00B0               	movwf	??___flmul
  5859  0941  0830               	movf	??___flmul,w
  5860  0942  00B5               	movwf	___flmul@sign
  5861  0943                     l2630:	
  5862  0943  082B               	movf	___flmul@b+3,w
  5863  0944  00B0               	movwf	??___flmul
  5864  0945  0730               	addwf	??___flmul,w
  5865  0946  00B1               	movwf	??___flmul+1
  5866  0947  0831               	movf	??___flmul+1,w
  5867  0948  00BB               	movwf	___flmul@bexp
  5868  0949                     l2632:	
  5869  0949  1FAA               	btfss	___flmul@b+2,7
  5870  094A  294C               	goto	u3641
  5871  094B  294D               	goto	u3640
  5872  094C                     u3641:	
  5873  094C  294E               	goto	l2636
  5874  094D                     u3640:	
  5875  094D                     l2634:	
  5876  094D  143B               	bsf	___flmul@bexp,0
  5877  094E                     l2636:	
  5878  094E  083B               	movf	___flmul@bexp,w
  5879  094F  1903               	btfsc	3,2
  5880  0950  2952               	goto	u3651
  5881  0951  2953               	goto	u3650
  5882  0952                     u3651:	
  5883  0952  2962               	goto	l2644
  5884  0953                     u3650:	
  5885  0953                     l2638:	
  5886  0953  0A3B               	incf	___flmul@bexp,w
  5887  0954  1D03               	btfss	3,2
  5888  0955  2957               	goto	u3661
  5889  0956  2958               	goto	u3660
  5890  0957                     u3661:	
  5891  0957  2960               	goto	l2642
  5892  0958                     u3660:	
  5893  0958                     l2640:	
  5894  0958  3000               	movlw	0
  5895  0959  00AB               	movwf	___flmul@b+3
  5896  095A  3000               	movlw	0
  5897  095B  00AA               	movwf	___flmul@b+2
  5898  095C  3000               	movlw	0
  5899  095D  00A9               	movwf	___flmul@b+1
  5900  095E  3000               	movlw	0
  5901  095F  00A8               	movwf	___flmul@b
  5902  0960                     l2642:	
  5903  0960  17AA               	bsf	___flmul@b+2,7
  5904  0961  296A               	goto	l2646
  5905  0962                     l2644:	
  5906  0962  3000               	movlw	0
  5907  0963  00AB               	movwf	___flmul@b+3
  5908  0964  3000               	movlw	0
  5909  0965  00AA               	movwf	___flmul@b+2
  5910  0966  3000               	movlw	0
  5911  0967  00A9               	movwf	___flmul@b+1
  5912  0968  3000               	movlw	0
  5913  0969  00A8               	movwf	___flmul@b
  5914  096A                     l2646:	
  5915  096A  082F               	movf	___flmul@a+3,w
  5916  096B  3980               	andlw	128
  5917  096C  00B0               	movwf	??___flmul
  5918  096D  0830               	movf	??___flmul,w
  5919  096E  06B5               	xorwf	___flmul@sign,f
  5920  096F                     l2648:	
  5921  096F  082F               	movf	___flmul@a+3,w
  5922  0970  00B0               	movwf	??___flmul
  5923  0971  0730               	addwf	??___flmul,w
  5924  0972  00B1               	movwf	??___flmul+1
  5925  0973  0831               	movf	??___flmul+1,w
  5926  0974  00BA               	movwf	___flmul@aexp
  5927  0975                     l2650:	
  5928  0975  1FAE               	btfss	___flmul@a+2,7
  5929  0976  2978               	goto	u3671
  5930  0977  2979               	goto	u3670
  5931  0978                     u3671:	
  5932  0978  297A               	goto	l2654
  5933  0979                     u3670:	
  5934  0979                     l2652:	
  5935  0979  143A               	bsf	___flmul@aexp,0
  5936  097A                     l2654:	
  5937  097A  083A               	movf	___flmul@aexp,w
  5938  097B  1903               	btfsc	3,2
  5939  097C  297E               	goto	u3681
  5940  097D  297F               	goto	u3680
  5941  097E                     u3681:	
  5942  097E  298E               	goto	l2662
  5943  097F                     u3680:	
  5944  097F                     l2656:	
  5945  097F  0A3A               	incf	___flmul@aexp,w
  5946  0980  1D03               	btfss	3,2
  5947  0981  2983               	goto	u3691
  5948  0982  2984               	goto	u3690
  5949  0983                     u3691:	
  5950  0983  298C               	goto	l2660
  5951  0984                     u3690:	
  5952  0984                     l2658:	
  5953  0984  3000               	movlw	0
  5954  0985  00AF               	movwf	___flmul@a+3
  5955  0986  3000               	movlw	0
  5956  0987  00AE               	movwf	___flmul@a+2
  5957  0988  3000               	movlw	0
  5958  0989  00AD               	movwf	___flmul@a+1
  5959  098A  3000               	movlw	0
  5960  098B  00AC               	movwf	___flmul@a
  5961  098C                     l2660:	
  5962  098C  17AE               	bsf	___flmul@a+2,7
  5963  098D  2996               	goto	l2664
  5964  098E                     l2662:	
  5965  098E  3000               	movlw	0
  5966  098F  00AF               	movwf	___flmul@a+3
  5967  0990  3000               	movlw	0
  5968  0991  00AE               	movwf	___flmul@a+2
  5969  0992  3000               	movlw	0
  5970  0993  00AD               	movwf	___flmul@a+1
  5971  0994  3000               	movlw	0
  5972  0995  00AC               	movwf	___flmul@a
  5973  0996                     l2664:	
  5974  0996  083A               	movf	___flmul@aexp,w
  5975  0997  1903               	btfsc	3,2
  5976  0998  299A               	goto	u3701
  5977  0999  299B               	goto	u3700
  5978  099A                     u3701:	
  5979  099A  29A0               	goto	l2668
  5980  099B                     u3700:	
  5981  099B                     l2666:	
  5982  099B  083B               	movf	___flmul@bexp,w
  5983  099C  1D03               	btfss	3,2
  5984  099D  299F               	goto	u3711
  5985  099E  29A0               	goto	u3710
  5986  099F                     u3711:	
  5987  099F  29A9               	goto	l2672
  5988  09A0                     u3710:	
  5989  09A0                     l2668:	
  5990  09A0  3000               	movlw	0
  5991  09A1  00AB               	movwf	?___flmul+3
  5992  09A2  3000               	movlw	0
  5993  09A3  00AA               	movwf	?___flmul+2
  5994  09A4  3000               	movlw	0
  5995  09A5  00A9               	movwf	?___flmul+1
  5996  09A6  3000               	movlw	0
  5997  09A7  00A8               	movwf	?___flmul
  5998  09A8  2C9C               	goto	l796
  5999  09A9                     l2672:	
  6000  09A9  0828               	movf	___flmul@b,w
  6001  09AA  00B0               	movwf	??___flmul
  6002  09AB  0830               	movf	??___flmul,w
  6003  09AC  00F3               	movwf	__Umul8_16@multiplicand
  6004  09AD  082E               	movf	___flmul@a+2,w
  6005  09AE  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6006  09B3  0874               	movf	?__Umul8_16+1,w
  6007  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  6008  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  6009  09B6  00C1               	movwf	___flmul@temp+1
  6010  09B7  0873               	movf	?__Umul8_16,w
  6011  09B8  00C0               	movwf	___flmul@temp
  6012  09B9                     l2674:	
  6013  09B9  0840               	movf	___flmul@temp,w
  6014  09BA  00B0               	movwf	??___flmul
  6015  09BB  01B1               	clrf	??___flmul+1
  6016  09BC  01B2               	clrf	??___flmul+2
  6017  09BD  01B3               	clrf	??___flmul+3
  6018  09BE  0833               	movf	??___flmul+3,w
  6019  09BF  00B9               	movwf	___flmul@grs+3
  6020  09C0  0832               	movf	??___flmul+2,w
  6021  09C1  00B8               	movwf	___flmul@grs+2
  6022  09C2  0831               	movf	??___flmul+1,w
  6023  09C3  00B7               	movwf	___flmul@grs+1
  6024  09C4  0830               	movf	??___flmul,w
  6025  09C5  00B6               	movwf	___flmul@grs
  6026  09C6                     l2676:	
  6027  09C6  0841               	movf	___flmul@temp+1,w
  6028  09C7  00B0               	movwf	??___flmul
  6029  09C8  01B1               	clrf	??___flmul+1
  6030  09C9  01B2               	clrf	??___flmul+2
  6031  09CA  01B3               	clrf	??___flmul+3
  6032  09CB  0833               	movf	??___flmul+3,w
  6033  09CC  00BF               	movwf	___flmul@prod+3
  6034  09CD  0832               	movf	??___flmul+2,w
  6035  09CE  00BE               	movwf	___flmul@prod+2
  6036  09CF  0831               	movf	??___flmul+1,w
  6037  09D0  00BD               	movwf	___flmul@prod+1
  6038  09D1  0830               	movf	??___flmul,w
  6039  09D2  00BC               	movwf	___flmul@prod
  6040  09D3  0829               	movf	___flmul@b+1,w
  6041  09D4  00B0               	movwf	??___flmul
  6042  09D5  0830               	movf	??___flmul,w
  6043  09D6  00F3               	movwf	__Umul8_16@multiplicand
  6044  09D7  082D               	movf	___flmul@a+1,w
  6045  09D8  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6046  09DD  0874               	movf	?__Umul8_16+1,w
  6047  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  6048  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  6049  09E0  00C1               	movwf	___flmul@temp+1
  6050  09E1  0873               	movf	?__Umul8_16,w
  6051  09E2  00C0               	movwf	___flmul@temp
  6052  09E3                     l2678:	
  6053  09E3  0840               	movf	___flmul@temp,w
  6054  09E4  00B0               	movwf	??___flmul
  6055  09E5  01B1               	clrf	??___flmul+1
  6056  09E6  01B2               	clrf	??___flmul+2
  6057  09E7  01B3               	clrf	??___flmul+3
  6058  09E8  0830               	movf	??___flmul,w
  6059  09E9  07B6               	addwf	___flmul@grs,f
  6060  09EA  0831               	movf	??___flmul+1,w
  6061  09EB  1103               	clrz
  6062  09EC  1803               	skipnc
  6063  09ED  3E01               	addlw	1
  6064  09EE  1903               	skipnz
  6065  09EF  29F1               	goto	u3721
  6066  09F0  07B7               	addwf	___flmul@grs+1,f
  6067  09F1                     u3721:	
  6068  09F1  0832               	movf	??___flmul+2,w
  6069  09F2  1103               	clrz
  6070  09F3  1803               	skipnc
  6071  09F4  3E01               	addlw	1
  6072  09F5  1903               	skipnz
  6073  09F6  29F8               	goto	u3722
  6074  09F7  07B8               	addwf	___flmul@grs+2,f
  6075  09F8                     u3722:	
  6076  09F8  0833               	movf	??___flmul+3,w
  6077  09F9  1103               	clrz
  6078  09FA  1803               	skipnc
  6079  09FB  3E01               	addlw	1
  6080  09FC  1903               	skipnz
  6081  09FD  29FF               	goto	u3723
  6082  09FE  07B9               	addwf	___flmul@grs+3,f
  6083  09FF                     u3723:	
  6084  09FF                     l2680:	
  6085  09FF  0841               	movf	___flmul@temp+1,w
  6086  0A00  00B0               	movwf	??___flmul
  6087  0A01  01B1               	clrf	??___flmul+1
  6088  0A02  01B2               	clrf	??___flmul+2
  6089  0A03  01B3               	clrf	??___flmul+3
  6090  0A04  0830               	movf	??___flmul,w
  6091  0A05  07BC               	addwf	___flmul@prod,f
  6092  0A06  0831               	movf	??___flmul+1,w
  6093  0A07  1103               	clrz
  6094  0A08  1803               	skipnc
  6095  0A09  3E01               	addlw	1
  6096  0A0A  1903               	skipnz
  6097  0A0B  2A0D               	goto	u3731
  6098  0A0C  07BD               	addwf	___flmul@prod+1,f
  6099  0A0D                     u3731:	
  6100  0A0D  0832               	movf	??___flmul+2,w
  6101  0A0E  1103               	clrz
  6102  0A0F  1803               	skipnc
  6103  0A10  3E01               	addlw	1
  6104  0A11  1903               	skipnz
  6105  0A12  2A14               	goto	u3732
  6106  0A13  07BE               	addwf	___flmul@prod+2,f
  6107  0A14                     u3732:	
  6108  0A14  0833               	movf	??___flmul+3,w
  6109  0A15  1103               	clrz
  6110  0A16  1803               	skipnc
  6111  0A17  3E01               	addlw	1
  6112  0A18  1903               	skipnz
  6113  0A19  2A1B               	goto	u3733
  6114  0A1A  07BF               	addwf	___flmul@prod+3,f
  6115  0A1B                     u3733:	
  6116  0A1B  082A               	movf	___flmul@b+2,w
  6117  0A1C  00B0               	movwf	??___flmul
  6118  0A1D  0830               	movf	??___flmul,w
  6119  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  6120  0A1F  082C               	movf	___flmul@a,w
  6121  0A20  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6122  0A25  0874               	movf	?__Umul8_16+1,w
  6123  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  6124  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  6125  0A28  00C1               	movwf	___flmul@temp+1
  6126  0A29  0873               	movf	?__Umul8_16,w
  6127  0A2A  00C0               	movwf	___flmul@temp
  6128  0A2B                     l2682:	
  6129  0A2B  0840               	movf	___flmul@temp,w
  6130  0A2C  00B0               	movwf	??___flmul
  6131  0A2D  01B1               	clrf	??___flmul+1
  6132  0A2E  01B2               	clrf	??___flmul+2
  6133  0A2F  01B3               	clrf	??___flmul+3
  6134  0A30  0830               	movf	??___flmul,w
  6135  0A31  07B6               	addwf	___flmul@grs,f
  6136  0A32  0831               	movf	??___flmul+1,w
  6137  0A33  1103               	clrz
  6138  0A34  1803               	skipnc
  6139  0A35  3E01               	addlw	1
  6140  0A36  1903               	skipnz
  6141  0A37  2A39               	goto	u3741
  6142  0A38  07B7               	addwf	___flmul@grs+1,f
  6143  0A39                     u3741:	
  6144  0A39  0832               	movf	??___flmul+2,w
  6145  0A3A  1103               	clrz
  6146  0A3B  1803               	skipnc
  6147  0A3C  3E01               	addlw	1
  6148  0A3D  1903               	skipnz
  6149  0A3E  2A40               	goto	u3742
  6150  0A3F  07B8               	addwf	___flmul@grs+2,f
  6151  0A40                     u3742:	
  6152  0A40  0833               	movf	??___flmul+3,w
  6153  0A41  1103               	clrz
  6154  0A42  1803               	skipnc
  6155  0A43  3E01               	addlw	1
  6156  0A44  1903               	skipnz
  6157  0A45  2A47               	goto	u3743
  6158  0A46  07B9               	addwf	___flmul@grs+3,f
  6159  0A47                     u3743:	
  6160  0A47                     l2684:	
  6161  0A47  0841               	movf	___flmul@temp+1,w
  6162  0A48  00B0               	movwf	??___flmul
  6163  0A49  01B1               	clrf	??___flmul+1
  6164  0A4A  01B2               	clrf	??___flmul+2
  6165  0A4B  01B3               	clrf	??___flmul+3
  6166  0A4C  0830               	movf	??___flmul,w
  6167  0A4D  07BC               	addwf	___flmul@prod,f
  6168  0A4E  0831               	movf	??___flmul+1,w
  6169  0A4F  1103               	clrz
  6170  0A50  1803               	skipnc
  6171  0A51  3E01               	addlw	1
  6172  0A52  1903               	skipnz
  6173  0A53  2A55               	goto	u3751
  6174  0A54  07BD               	addwf	___flmul@prod+1,f
  6175  0A55                     u3751:	
  6176  0A55  0832               	movf	??___flmul+2,w
  6177  0A56  1103               	clrz
  6178  0A57  1803               	skipnc
  6179  0A58  3E01               	addlw	1
  6180  0A59  1903               	skipnz
  6181  0A5A  2A5C               	goto	u3752
  6182  0A5B  07BE               	addwf	___flmul@prod+2,f
  6183  0A5C                     u3752:	
  6184  0A5C  0833               	movf	??___flmul+3,w
  6185  0A5D  1103               	clrz
  6186  0A5E  1803               	skipnc
  6187  0A5F  3E01               	addlw	1
  6188  0A60  1903               	skipnz
  6189  0A61  2A63               	goto	u3753
  6190  0A62  07BF               	addwf	___flmul@prod+3,f
  6191  0A63                     u3753:	
  6192  0A63                     l2686:	
  6193  0A63  3008               	movlw	8
  6194  0A64  00B0               	movwf	??___flmul
  6195  0A65                     u3765:	
  6196  0A65  1003               	clrc
  6197  0A66  0DB6               	rlf	___flmul@grs,f
  6198  0A67  0DB7               	rlf	___flmul@grs+1,f
  6199  0A68  0DB8               	rlf	___flmul@grs+2,f
  6200  0A69  0DB9               	rlf	___flmul@grs+3,f
  6201  0A6A  0BB0               	decfsz	??___flmul,f
  6202  0A6B  2A65               	goto	u3765
  6203  0A6C                     l2688:	
  6204  0A6C  0829               	movf	___flmul@b+1,w
  6205  0A6D  00B0               	movwf	??___flmul
  6206  0A6E  0830               	movf	??___flmul,w
  6207  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  6208  0A70  082C               	movf	___flmul@a,w
  6209  0A71  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6210  0A76  0874               	movf	?__Umul8_16+1,w
  6211  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  6212  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  6213  0A79  00C1               	movwf	___flmul@temp+1
  6214  0A7A  0873               	movf	?__Umul8_16,w
  6215  0A7B  00C0               	movwf	___flmul@temp
  6216  0A7C                     l2690:	
  6217  0A7C  0840               	movf	___flmul@temp,w
  6218  0A7D  00B0               	movwf	??___flmul
  6219  0A7E  0841               	movf	___flmul@temp+1,w
  6220  0A7F  00B1               	movwf	??___flmul+1
  6221  0A80  01B2               	clrf	??___flmul+2
  6222  0A81  01B3               	clrf	??___flmul+3
  6223  0A82  0830               	movf	??___flmul,w
  6224  0A83  07B6               	addwf	___flmul@grs,f
  6225  0A84  0831               	movf	??___flmul+1,w
  6226  0A85  1103               	clrz
  6227  0A86  1803               	skipnc
  6228  0A87  3E01               	addlw	1
  6229  0A88  1903               	skipnz
  6230  0A89  2A8B               	goto	u3771
  6231  0A8A  07B7               	addwf	___flmul@grs+1,f
  6232  0A8B                     u3771:	
  6233  0A8B  0832               	movf	??___flmul+2,w
  6234  0A8C  1103               	clrz
  6235  0A8D  1803               	skipnc
  6236  0A8E  3E01               	addlw	1
  6237  0A8F  1903               	skipnz
  6238  0A90  2A92               	goto	u3772
  6239  0A91  07B8               	addwf	___flmul@grs+2,f
  6240  0A92                     u3772:	
  6241  0A92  0833               	movf	??___flmul+3,w
  6242  0A93  1103               	clrz
  6243  0A94  1803               	skipnc
  6244  0A95  3E01               	addlw	1
  6245  0A96  1903               	skipnz
  6246  0A97  2A99               	goto	u3773
  6247  0A98  07B9               	addwf	___flmul@grs+3,f
  6248  0A99                     u3773:	
  6249  0A99                     l2692:	
  6250  0A99  0828               	movf	___flmul@b,w
  6251  0A9A  00B0               	movwf	??___flmul
  6252  0A9B  0830               	movf	??___flmul,w
  6253  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  6254  0A9D  082D               	movf	___flmul@a+1,w
  6255  0A9E  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6256  0AA3  0874               	movf	?__Umul8_16+1,w
  6257  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  6258  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  6259  0AA6  00C1               	movwf	___flmul@temp+1
  6260  0AA7  0873               	movf	?__Umul8_16,w
  6261  0AA8  00C0               	movwf	___flmul@temp
  6262  0AA9                     l2694:	
  6263  0AA9  0840               	movf	___flmul@temp,w
  6264  0AAA  00B0               	movwf	??___flmul
  6265  0AAB  0841               	movf	___flmul@temp+1,w
  6266  0AAC  00B1               	movwf	??___flmul+1
  6267  0AAD  01B2               	clrf	??___flmul+2
  6268  0AAE  01B3               	clrf	??___flmul+3
  6269  0AAF  0830               	movf	??___flmul,w
  6270  0AB0  07B6               	addwf	___flmul@grs,f
  6271  0AB1  0831               	movf	??___flmul+1,w
  6272  0AB2  1103               	clrz
  6273  0AB3  1803               	skipnc
  6274  0AB4  3E01               	addlw	1
  6275  0AB5  1903               	skipnz
  6276  0AB6  2AB8               	goto	u3781
  6277  0AB7  07B7               	addwf	___flmul@grs+1,f
  6278  0AB8                     u3781:	
  6279  0AB8  0832               	movf	??___flmul+2,w
  6280  0AB9  1103               	clrz
  6281  0ABA  1803               	skipnc
  6282  0ABB  3E01               	addlw	1
  6283  0ABC  1903               	skipnz
  6284  0ABD  2ABF               	goto	u3782
  6285  0ABE  07B8               	addwf	___flmul@grs+2,f
  6286  0ABF                     u3782:	
  6287  0ABF  0833               	movf	??___flmul+3,w
  6288  0AC0  1103               	clrz
  6289  0AC1  1803               	skipnc
  6290  0AC2  3E01               	addlw	1
  6291  0AC3  1903               	skipnz
  6292  0AC4  2AC6               	goto	u3783
  6293  0AC5  07B9               	addwf	___flmul@grs+3,f
  6294  0AC6                     u3783:	
  6295  0AC6                     l2696:	
  6296  0AC6  3008               	movlw	8
  6297  0AC7  00B0               	movwf	??___flmul
  6298  0AC8                     u3795:	
  6299  0AC8  1003               	clrc
  6300  0AC9  0DB6               	rlf	___flmul@grs,f
  6301  0ACA  0DB7               	rlf	___flmul@grs+1,f
  6302  0ACB  0DB8               	rlf	___flmul@grs+2,f
  6303  0ACC  0DB9               	rlf	___flmul@grs+3,f
  6304  0ACD  0BB0               	decfsz	??___flmul,f
  6305  0ACE  2AC8               	goto	u3795
  6306  0ACF  0828               	movf	___flmul@b,w
  6307  0AD0  00B0               	movwf	??___flmul
  6308  0AD1  0830               	movf	??___flmul,w
  6309  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  6310  0AD3  082C               	movf	___flmul@a,w
  6311  0AD4  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6312  0AD9  0874               	movf	?__Umul8_16+1,w
  6313  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  6314  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  6315  0ADC  00C1               	movwf	___flmul@temp+1
  6316  0ADD  0873               	movf	?__Umul8_16,w
  6317  0ADE  00C0               	movwf	___flmul@temp
  6318  0ADF                     l2698:	
  6319  0ADF  0840               	movf	___flmul@temp,w
  6320  0AE0  00B0               	movwf	??___flmul
  6321  0AE1  0841               	movf	___flmul@temp+1,w
  6322  0AE2  00B1               	movwf	??___flmul+1
  6323  0AE3  01B2               	clrf	??___flmul+2
  6324  0AE4  01B3               	clrf	??___flmul+3
  6325  0AE5  0830               	movf	??___flmul,w
  6326  0AE6  07B6               	addwf	___flmul@grs,f
  6327  0AE7  0831               	movf	??___flmul+1,w
  6328  0AE8  1103               	clrz
  6329  0AE9  1803               	skipnc
  6330  0AEA  3E01               	addlw	1
  6331  0AEB  1903               	skipnz
  6332  0AEC  2AEE               	goto	u3801
  6333  0AED  07B7               	addwf	___flmul@grs+1,f
  6334  0AEE                     u3801:	
  6335  0AEE  0832               	movf	??___flmul+2,w
  6336  0AEF  1103               	clrz
  6337  0AF0  1803               	skipnc
  6338  0AF1  3E01               	addlw	1
  6339  0AF2  1903               	skipnz
  6340  0AF3  2AF5               	goto	u3802
  6341  0AF4  07B8               	addwf	___flmul@grs+2,f
  6342  0AF5                     u3802:	
  6343  0AF5  0833               	movf	??___flmul+3,w
  6344  0AF6  1103               	clrz
  6345  0AF7  1803               	skipnc
  6346  0AF8  3E01               	addlw	1
  6347  0AF9  1903               	skipnz
  6348  0AFA  2AFC               	goto	u3803
  6349  0AFB  07B9               	addwf	___flmul@grs+3,f
  6350  0AFC                     u3803:	
  6351  0AFC                     l2700:	
  6352  0AFC  0829               	movf	___flmul@b+1,w
  6353  0AFD  00B0               	movwf	??___flmul
  6354  0AFE  0830               	movf	??___flmul,w
  6355  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  6356  0B00  082E               	movf	___flmul@a+2,w
  6357  0B01  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6358  0B06  0874               	movf	?__Umul8_16+1,w
  6359  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  6360  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  6361  0B09  00C1               	movwf	___flmul@temp+1
  6362  0B0A  0873               	movf	?__Umul8_16,w
  6363  0B0B  00C0               	movwf	___flmul@temp
  6364  0B0C  0840               	movf	___flmul@temp,w
  6365  0B0D  00B0               	movwf	??___flmul
  6366  0B0E  0841               	movf	___flmul@temp+1,w
  6367  0B0F  00B1               	movwf	??___flmul+1
  6368  0B10  01B2               	clrf	??___flmul+2
  6369  0B11  01B3               	clrf	??___flmul+3
  6370  0B12  0830               	movf	??___flmul,w
  6371  0B13  07BC               	addwf	___flmul@prod,f
  6372  0B14  0831               	movf	??___flmul+1,w
  6373  0B15  1103               	clrz
  6374  0B16  1803               	skipnc
  6375  0B17  3E01               	addlw	1
  6376  0B18  1903               	skipnz
  6377  0B19  2B1B               	goto	u3811
  6378  0B1A  07BD               	addwf	___flmul@prod+1,f
  6379  0B1B                     u3811:	
  6380  0B1B  0832               	movf	??___flmul+2,w
  6381  0B1C  1103               	clrz
  6382  0B1D  1803               	skipnc
  6383  0B1E  3E01               	addlw	1
  6384  0B1F  1903               	skipnz
  6385  0B20  2B22               	goto	u3812
  6386  0B21  07BE               	addwf	___flmul@prod+2,f
  6387  0B22                     u3812:	
  6388  0B22  0833               	movf	??___flmul+3,w
  6389  0B23  1103               	clrz
  6390  0B24  1803               	skipnc
  6391  0B25  3E01               	addlw	1
  6392  0B26  1903               	skipnz
  6393  0B27  2B29               	goto	u3813
  6394  0B28  07BF               	addwf	___flmul@prod+3,f
  6395  0B29                     u3813:	
  6396  0B29                     l2702:	
  6397  0B29  082A               	movf	___flmul@b+2,w
  6398  0B2A  00B0               	movwf	??___flmul
  6399  0B2B  0830               	movf	??___flmul,w
  6400  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  6401  0B2D  082D               	movf	___flmul@a+1,w
  6402  0B2E  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6403  0B33  0874               	movf	?__Umul8_16+1,w
  6404  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  6405  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  6406  0B36  00C1               	movwf	___flmul@temp+1
  6407  0B37  0873               	movf	?__Umul8_16,w
  6408  0B38  00C0               	movwf	___flmul@temp
  6409  0B39                     l2704:	
  6410  0B39  0840               	movf	___flmul@temp,w
  6411  0B3A  00B0               	movwf	??___flmul
  6412  0B3B  0841               	movf	___flmul@temp+1,w
  6413  0B3C  00B1               	movwf	??___flmul+1
  6414  0B3D  01B2               	clrf	??___flmul+2
  6415  0B3E  01B3               	clrf	??___flmul+3
  6416  0B3F  0830               	movf	??___flmul,w
  6417  0B40  07BC               	addwf	___flmul@prod,f
  6418  0B41  0831               	movf	??___flmul+1,w
  6419  0B42  1103               	clrz
  6420  0B43  1803               	skipnc
  6421  0B44  3E01               	addlw	1
  6422  0B45  1903               	skipnz
  6423  0B46  2B48               	goto	u3821
  6424  0B47  07BD               	addwf	___flmul@prod+1,f
  6425  0B48                     u3821:	
  6426  0B48  0832               	movf	??___flmul+2,w
  6427  0B49  1103               	clrz
  6428  0B4A  1803               	skipnc
  6429  0B4B  3E01               	addlw	1
  6430  0B4C  1903               	skipnz
  6431  0B4D  2B4F               	goto	u3822
  6432  0B4E  07BE               	addwf	___flmul@prod+2,f
  6433  0B4F                     u3822:	
  6434  0B4F  0833               	movf	??___flmul+3,w
  6435  0B50  1103               	clrz
  6436  0B51  1803               	skipnc
  6437  0B52  3E01               	addlw	1
  6438  0B53  1903               	skipnz
  6439  0B54  2B56               	goto	u3823
  6440  0B55  07BF               	addwf	___flmul@prod+3,f
  6441  0B56                     u3823:	
  6442  0B56  082A               	movf	___flmul@b+2,w
  6443  0B57  00B0               	movwf	??___flmul
  6444  0B58  0830               	movf	??___flmul,w
  6445  0B59  00F3               	movwf	__Umul8_16@multiplicand
  6446  0B5A  082E               	movf	___flmul@a+2,w
  6447  0B5B  160A  158A  243D  120A  158A  	fcall	__Umul8_16
  6448  0B60  0874               	movf	?__Umul8_16+1,w
  6449  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  6450  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  6451  0B63  00C1               	movwf	___flmul@temp+1
  6452  0B64  0873               	movf	?__Umul8_16,w
  6453  0B65  00C0               	movwf	___flmul@temp
  6454  0B66                     l2706:	
  6455  0B66  0840               	movf	___flmul@temp,w
  6456  0B67  00B0               	movwf	??___flmul
  6457  0B68  0841               	movf	___flmul@temp+1,w
  6458  0B69  00B1               	movwf	??___flmul+1
  6459  0B6A  01B2               	clrf	??___flmul+2
  6460  0B6B  01B3               	clrf	??___flmul+3
  6461  0B6C  3008               	movlw	8
  6462  0B6D                     u3835:	
  6463  0B6D  1003               	clrc
  6464  0B6E  0DB0               	rlf	??___flmul,f
  6465  0B6F  0DB1               	rlf	??___flmul+1,f
  6466  0B70  0DB2               	rlf	??___flmul+2,f
  6467  0B71  0DB3               	rlf	??___flmul+3,f
  6468  0B72                     u3830:	
  6469  0B72  3EFF               	addlw	-1
  6470  0B73  1D03               	skipz
  6471  0B74  2B6D               	goto	u3835
  6472  0B75  0830               	movf	??___flmul,w
  6473  0B76  07BC               	addwf	___flmul@prod,f
  6474  0B77  0831               	movf	??___flmul+1,w
  6475  0B78  1103               	clrz
  6476  0B79  1803               	skipnc
  6477  0B7A  3E01               	addlw	1
  6478  0B7B  1903               	skipnz
  6479  0B7C  2B7E               	goto	u3841
  6480  0B7D  07BD               	addwf	___flmul@prod+1,f
  6481  0B7E                     u3841:	
  6482  0B7E  0832               	movf	??___flmul+2,w
  6483  0B7F  1103               	clrz
  6484  0B80  1803               	skipnc
  6485  0B81  3E01               	addlw	1
  6486  0B82  1903               	skipnz
  6487  0B83  2B85               	goto	u3842
  6488  0B84  07BE               	addwf	___flmul@prod+2,f
  6489  0B85                     u3842:	
  6490  0B85  0833               	movf	??___flmul+3,w
  6491  0B86  1103               	clrz
  6492  0B87  1803               	skipnc
  6493  0B88  3E01               	addlw	1
  6494  0B89  1903               	skipnz
  6495  0B8A  2B8C               	goto	u3843
  6496  0B8B  07BF               	addwf	___flmul@prod+3,f
  6497  0B8C                     u3843:	
  6498  0B8C                     l2708:	
  6499  0B8C  0836               	movf	___flmul@grs,w
  6500  0B8D  00B0               	movwf	??___flmul
  6501  0B8E  0837               	movf	___flmul@grs+1,w
  6502  0B8F  00B1               	movwf	??___flmul+1
  6503  0B90  0838               	movf	___flmul@grs+2,w
  6504  0B91  00B2               	movwf	??___flmul+2
  6505  0B92  0839               	movf	___flmul@grs+3,w
  6506  0B93  00B3               	movwf	??___flmul+3
  6507  0B94  3018               	movlw	24
  6508  0B95                     u3855:	
  6509  0B95  1003               	clrc
  6510  0B96  0CB3               	rrf	??___flmul+3,f
  6511  0B97  0CB2               	rrf	??___flmul+2,f
  6512  0B98  0CB1               	rrf	??___flmul+1,f
  6513  0B99  0CB0               	rrf	??___flmul,f
  6514  0B9A                     u3850:	
  6515  0B9A  3EFF               	addlw	-1
  6516  0B9B  1D03               	skipz
  6517  0B9C  2B95               	goto	u3855
  6518  0B9D  0830               	movf	??___flmul,w
  6519  0B9E  07BC               	addwf	___flmul@prod,f
  6520  0B9F  0831               	movf	??___flmul+1,w
  6521  0BA0  1103               	clrz
  6522  0BA1  1803               	skipnc
  6523  0BA2  3E01               	addlw	1
  6524  0BA3  1903               	skipnz
  6525  0BA4  2BA6               	goto	u3861
  6526  0BA5  07BD               	addwf	___flmul@prod+1,f
  6527  0BA6                     u3861:	
  6528  0BA6  0832               	movf	??___flmul+2,w
  6529  0BA7  1103               	clrz
  6530  0BA8  1803               	skipnc
  6531  0BA9  3E01               	addlw	1
  6532  0BAA  1903               	skipnz
  6533  0BAB  2BAD               	goto	u3862
  6534  0BAC  07BE               	addwf	___flmul@prod+2,f
  6535  0BAD                     u3862:	
  6536  0BAD  0833               	movf	??___flmul+3,w
  6537  0BAE  1103               	clrz
  6538  0BAF  1803               	skipnc
  6539  0BB0  3E01               	addlw	1
  6540  0BB1  1903               	skipnz
  6541  0BB2  2BB4               	goto	u3863
  6542  0BB3  07BF               	addwf	___flmul@prod+3,f
  6543  0BB4                     u3863:	
  6544  0BB4                     l2710:	
  6545  0BB4  3008               	movlw	8
  6546  0BB5  00B0               	movwf	??___flmul
  6547  0BB6                     u3875:	
  6548  0BB6  1003               	clrc
  6549  0BB7  0DB6               	rlf	___flmul@grs,f
  6550  0BB8  0DB7               	rlf	___flmul@grs+1,f
  6551  0BB9  0DB8               	rlf	___flmul@grs+2,f
  6552  0BBA  0DB9               	rlf	___flmul@grs+3,f
  6553  0BBB  0BB0               	decfsz	??___flmul,f
  6554  0BBC  2BB6               	goto	u3875
  6555  0BBD                     l2712:	
  6556  0BBD  083B               	movf	___flmul@bexp,w
  6557  0BBE  073A               	addwf	___flmul@aexp,w
  6558  0BBF  00B0               	movwf	??___flmul
  6559  0BC0  01B1               	clrf	??___flmul+1
  6560  0BC1  0DB1               	rlf	??___flmul+1,f
  6561  0BC2  0830               	movf	??___flmul,w
  6562  0BC3  3E82               	addlw	130
  6563  0BC4  00C0               	movwf	___flmul@temp
  6564  0BC5  0831               	movf	??___flmul+1,w
  6565  0BC6  1803               	skipnc
  6566  0BC7  3E01               	addlw	1
  6567  0BC8  3EFF               	addlw	255
  6568  0BC9  00C1               	movwf	___flmul@temp+1
  6569  0BCA  2BE8               	goto	l2724
  6570  0BCB                     l2714:	
  6571  0BCB  3001               	movlw	1
  6572  0BCC  00B0               	movwf	??___flmul
  6573  0BCD                     u3885:	
  6574  0BCD  1003               	clrc
  6575  0BCE  0DBC               	rlf	___flmul@prod,f
  6576  0BCF  0DBD               	rlf	___flmul@prod+1,f
  6577  0BD0  0DBE               	rlf	___flmul@prod+2,f
  6578  0BD1  0DBF               	rlf	___flmul@prod+3,f
  6579  0BD2  0BB0               	decfsz	??___flmul,f
  6580  0BD3  2BCD               	goto	u3885
  6581  0BD4                     l2716:	
  6582  0BD4  1FB9               	btfss	___flmul@grs+3,7
  6583  0BD5  2BD7               	goto	u3891
  6584  0BD6  2BD8               	goto	u3890
  6585  0BD7                     u3891:	
  6586  0BD7  2BD9               	goto	l2720
  6587  0BD8                     u3890:	
  6588  0BD8                     l2718:	
  6589  0BD8  143C               	bsf	___flmul@prod,0
  6590  0BD9                     l2720:	
  6591  0BD9  3001               	movlw	1
  6592  0BDA  00B0               	movwf	??___flmul
  6593  0BDB                     u3905:	
  6594  0BDB  1003               	clrc
  6595  0BDC  0DB6               	rlf	___flmul@grs,f
  6596  0BDD  0DB7               	rlf	___flmul@grs+1,f
  6597  0BDE  0DB8               	rlf	___flmul@grs+2,f
  6598  0BDF  0DB9               	rlf	___flmul@grs+3,f
  6599  0BE0  0BB0               	decfsz	??___flmul,f
  6600  0BE1  2BDB               	goto	u3905
  6601  0BE2                     l2722:	
  6602  0BE2  30FF               	movlw	255
  6603  0BE3  07C0               	addwf	___flmul@temp,f
  6604  0BE4  1803               	skipnc
  6605  0BE5  0AC1               	incf	___flmul@temp+1,f
  6606  0BE6  30FF               	movlw	255
  6607  0BE7  07C1               	addwf	___flmul@temp+1,f
  6608  0BE8                     l2724:	
  6609  0BE8  1FBE               	btfss	___flmul@prod+2,7
  6610  0BE9  2BEB               	goto	u3911
  6611  0BEA  2BEC               	goto	u3910
  6612  0BEB                     u3911:	
  6613  0BEB  2BCB               	goto	l2714
  6614  0BEC                     u3910:	
  6615  0BEC                     l2726:	
  6616  0BEC  01BA               	clrf	___flmul@aexp
  6617  0BED                     l2728:	
  6618  0BED  1FB9               	btfss	___flmul@grs+3,7
  6619  0BEE  2BF0               	goto	u3921
  6620  0BEF  2BF1               	goto	u3920
  6621  0BF0                     u3921:	
  6622  0BF0  2C0D               	goto	l2736
  6623  0BF1                     u3920:	
  6624  0BF1                     l2730:	
  6625  0BF1  30FF               	movlw	255
  6626  0BF2  0536               	andwf	___flmul@grs,w
  6627  0BF3  00B0               	movwf	??___flmul
  6628  0BF4  30FF               	movlw	255
  6629  0BF5  0537               	andwf	___flmul@grs+1,w
  6630  0BF6  00B1               	movwf	??___flmul+1
  6631  0BF7  30FF               	movlw	255
  6632  0BF8  0538               	andwf	___flmul@grs+2,w
  6633  0BF9  00B2               	movwf	??___flmul+2
  6634  0BFA  307F               	movlw	127
  6635  0BFB  0539               	andwf	___flmul@grs+3,w
  6636  0BFC  00B3               	movwf	??___flmul+3
  6637  0BFD  0833               	movf	??___flmul+3,w
  6638  0BFE  0432               	iorwf	??___flmul+2,w
  6639  0BFF  0431               	iorwf	??___flmul+1,w
  6640  0C00  0430               	iorwf	??___flmul,w
  6641  0C01  1903               	skipnz
  6642  0C02  2C04               	goto	u3931
  6643  0C03  2C05               	goto	u3930
  6644  0C04                     u3931:	
  6645  0C04  2C08               	goto	l802
  6646  0C05                     u3930:	
  6647  0C05                     l2732:	
  6648  0C05  01BA               	clrf	___flmul@aexp
  6649  0C06  0ABA               	incf	___flmul@aexp,f
  6650  0C07  2C0D               	goto	l2736
  6651  0C08                     l802:	
  6652  0C08  1C3C               	btfss	___flmul@prod,0
  6653  0C09  2C0B               	goto	u3941
  6654  0C0A  2C0C               	goto	u3940
  6655  0C0B                     u3941:	
  6656  0C0B  2C0D               	goto	l2736
  6657  0C0C                     u3940:	
  6658  0C0C  2C05               	goto	l2732
  6659  0C0D                     l2736:	
  6660  0C0D  083A               	movf	___flmul@aexp,w
  6661  0C0E  1903               	btfsc	3,2
  6662  0C0F  2C11               	goto	u3951
  6663  0C10  2C12               	goto	u3950
  6664  0C11                     u3951:	
  6665  0C11  2C43               	goto	l2746
  6666  0C12                     u3950:	
  6667  0C12                     l2738:	
  6668  0C12  3001               	movlw	1
  6669  0C13  07BC               	addwf	___flmul@prod,f
  6670  0C14  3000               	movlw	0
  6671  0C15  1803               	skipnc
  6672  0C16  3001               	movlw	1
  6673  0C17  07BD               	addwf	___flmul@prod+1,f
  6674  0C18  3000               	movlw	0
  6675  0C19  1803               	skipnc
  6676  0C1A  3001               	movlw	1
  6677  0C1B  07BE               	addwf	___flmul@prod+2,f
  6678  0C1C  3000               	movlw	0
  6679  0C1D  1803               	skipnc
  6680  0C1E  3001               	movlw	1
  6681  0C1F  07BF               	addwf	___flmul@prod+3,f
  6682  0C20                     l2740:	
  6683  0C20  1C3F               	btfss	___flmul@prod+3,0
  6684  0C21  2C23               	goto	u3961
  6685  0C22  2C24               	goto	u3960
  6686  0C23                     u3961:	
  6687  0C23  2C43               	goto	l2746
  6688  0C24                     u3960:	
  6689  0C24                     l2742:	
  6690  0C24  083C               	movf	___flmul@prod,w
  6691  0C25  00B0               	movwf	??___flmul
  6692  0C26  083D               	movf	___flmul@prod+1,w
  6693  0C27  00B1               	movwf	??___flmul+1
  6694  0C28  083E               	movf	___flmul@prod+2,w
  6695  0C29  00B2               	movwf	??___flmul+2
  6696  0C2A  083F               	movf	___flmul@prod+3,w
  6697  0C2B  00B3               	movwf	??___flmul+3
  6698  0C2C  3001               	movlw	1
  6699  0C2D  00B4               	movwf	??___flmul+4
  6700  0C2E                     u3975:	
  6701  0C2E  0D33               	rlf	??___flmul+3,w
  6702  0C2F  0CB3               	rrf	??___flmul+3,f
  6703  0C30  0CB2               	rrf	??___flmul+2,f
  6704  0C31  0CB1               	rrf	??___flmul+1,f
  6705  0C32  0CB0               	rrf	??___flmul,f
  6706  0C33                     u3970:	
  6707  0C33  0BB4               	decfsz	??___flmul+4,f
  6708  0C34  2C2E               	goto	u3975
  6709  0C35  0833               	movf	??___flmul+3,w
  6710  0C36  00BF               	movwf	___flmul@prod+3
  6711  0C37  0832               	movf	??___flmul+2,w
  6712  0C38  00BE               	movwf	___flmul@prod+2
  6713  0C39  0831               	movf	??___flmul+1,w
  6714  0C3A  00BD               	movwf	___flmul@prod+1
  6715  0C3B  0830               	movf	??___flmul,w
  6716  0C3C  00BC               	movwf	___flmul@prod
  6717  0C3D                     l2744:	
  6718  0C3D  3001               	movlw	1
  6719  0C3E  07C0               	addwf	___flmul@temp,f
  6720  0C3F  1803               	skipnc
  6721  0C40  0AC1               	incf	___flmul@temp+1,f
  6722  0C41  3000               	movlw	0
  6723  0C42  07C1               	addwf	___flmul@temp+1,f
  6724  0C43                     l2746:	
  6725  0C43  0841               	movf	___flmul@temp+1,w
  6726  0C44  3A80               	xorlw	128
  6727  0C45  00FF               	movwf	btemp+1
  6728  0C46  3080               	movlw	128
  6729  0C47  027F               	subwf	btemp+1,w
  6730  0C48  1D03               	skipz
  6731  0C49  2C4C               	goto	u3985
  6732  0C4A  30FF               	movlw	255
  6733  0C4B  0240               	subwf	___flmul@temp,w
  6734  0C4C                     u3985:	
  6735  0C4C  1C03               	skipc
  6736  0C4D  2C4F               	goto	u3981
  6737  0C4E  2C50               	goto	u3980
  6738  0C4F                     u3981:	
  6739  0C4F  2C5B               	goto	l2750
  6740  0C50                     u3980:	
  6741  0C50                     l2748:	
  6742  0C50  307F               	movlw	127
  6743  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  6744  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  6745  0C53  00BF               	movwf	___flmul@prod+3
  6746  0C54  3080               	movlw	128
  6747  0C55  00BE               	movwf	___flmul@prod+2
  6748  0C56  3000               	movlw	0
  6749  0C57  00BD               	movwf	___flmul@prod+1
  6750  0C58  3000               	movlw	0
  6751  0C59  00BC               	movwf	___flmul@prod
  6752  0C5A  2C90               	goto	l808
  6753  0C5B                     l2750:	
  6754  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6755  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6756  0C5D  0841               	movf	___flmul@temp+1,w
  6757  0C5E  3A80               	xorlw	128
  6758  0C5F  00FF               	movwf	btemp+1
  6759  0C60  3080               	movlw	128
  6760  0C61  027F               	subwf	btemp+1,w
  6761  0C62  1D03               	skipz
  6762  0C63  2C66               	goto	u3995
  6763  0C64  3001               	movlw	1
  6764  0C65  0240               	subwf	___flmul@temp,w
  6765  0C66                     u3995:	
  6766  0C66  1803               	skipnc
  6767  0C67  2C69               	goto	u3991
  6768  0C68  2C6A               	goto	u3990
  6769  0C69                     u3991:	
  6770  0C69  2C76               	goto	l2756
  6771  0C6A                     u3990:	
  6772  0C6A                     l2752:	
  6773  0C6A  3000               	movlw	0
  6774  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  6775  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  6776  0C6D  00BF               	movwf	___flmul@prod+3
  6777  0C6E  3000               	movlw	0
  6778  0C6F  00BE               	movwf	___flmul@prod+2
  6779  0C70  3000               	movlw	0
  6780  0C71  00BD               	movwf	___flmul@prod+1
  6781  0C72  3000               	movlw	0
  6782  0C73  00BC               	movwf	___flmul@prod
  6783  0C74                     l2754:	
  6784  0C74  01B5               	clrf	___flmul@sign
  6785  0C75  2C90               	goto	l808
  6786  0C76                     l2756:	
  6787  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  6788  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  6789  0C78  0840               	movf	___flmul@temp,w
  6790  0C79  00B0               	movwf	??___flmul
  6791  0C7A  0830               	movf	??___flmul,w
  6792  0C7B  00BB               	movwf	___flmul@bexp
  6793  0C7C  30FF               	movlw	255
  6794  0C7D  05BC               	andwf	___flmul@prod,f
  6795  0C7E  30FF               	movlw	255
  6796  0C7F  05BD               	andwf	___flmul@prod+1,f
  6797  0C80  307F               	movlw	127
  6798  0C81  05BE               	andwf	___flmul@prod+2,f
  6799  0C82  3000               	movlw	0
  6800  0C83  05BF               	andwf	___flmul@prod+3,f
  6801  0C84                     l2758:	
  6802  0C84  1C3B               	btfss	___flmul@bexp,0
  6803  0C85  2C87               	goto	u4001
  6804  0C86  2C88               	goto	u4000
  6805  0C87                     u4001:	
  6806  0C87  2C89               	goto	l2762
  6807  0C88                     u4000:	
  6808  0C88                     l2760:	
  6809  0C88  17BE               	bsf	___flmul@prod+2,7
  6810  0C89                     l2762:	
  6811  0C89  083B               	movf	___flmul@bexp,w
  6812  0C8A  00B0               	movwf	??___flmul
  6813  0C8B  1003               	clrc
  6814  0C8C  0C30               	rrf	??___flmul,w
  6815  0C8D  00B1               	movwf	??___flmul+1
  6816  0C8E  0831               	movf	??___flmul+1,w
  6817  0C8F  00BF               	movwf	___flmul@prod+3
  6818  0C90                     l808:	
  6819  0C90  0835               	movf	___flmul@sign,w
  6820  0C91  00B0               	movwf	??___flmul
  6821  0C92  0830               	movf	??___flmul,w
  6822  0C93  04BF               	iorwf	___flmul@prod+3,f
  6823  0C94                     l2764:	
  6824  0C94  083F               	movf	___flmul@prod+3,w
  6825  0C95  00AB               	movwf	?___flmul+3
  6826  0C96  083E               	movf	___flmul@prod+2,w
  6827  0C97  00AA               	movwf	?___flmul+2
  6828  0C98  083D               	movf	___flmul@prod+1,w
  6829  0C99  00A9               	movwf	?___flmul+1
  6830  0C9A  083C               	movf	___flmul@prod,w
  6831  0C9B  00A8               	movwf	?___flmul
  6832  0C9C                     l796:	
  6833  0C9C  0008               	return
  6834  0C9D                     __end_of___flmul:	
  6835                           
  6836                           	psect	text11
  6837  1C3D                     __ptext11:	
  6838 ;; *************** function __Umul8_16 *****************
  6839 ;; Defined at:
  6840 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  multiplier      1    wreg     unsigned char 
  6843 ;;  multiplicand    1    3[COMMON] unsigned char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6846 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6847 ;;  product         2    0[BANK0 ] unsigned int 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2    3[COMMON] unsigned int 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6857 ;;      Params:         2       0       0       0       0
  6858 ;;      Locals:         0       5       0       0       0
  6859 ;;      Temps:          2       0       0       0       0
  6860 ;;      Totals:         4       5       0       0       0
  6861 ;;Total ram usage:        9 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    1
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		___flmul
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           
  6872                           ;psect for function __Umul8_16
  6873  1C3D                     __Umul8_16:	
  6874                           
  6875                           ;incstack = 0
  6876                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6877                           ;__Umul8_16@multiplier stored from wreg
  6878  1C3D  1283               	bcf	3,5	;RP0=0, select bank0
  6879  1C3E  1303               	bcf	3,6	;RP1=0, select bank0
  6880  1C3F  00A4               	movwf	__Umul8_16@multiplier
  6881  1C40                     l2290:	
  6882  1C40  01A0               	clrf	__Umul8_16@product
  6883  1C41  01A1               	clrf	__Umul8_16@product+1
  6884  1C42                     l2292:	
  6885  1C42  0873               	movf	__Umul8_16@multiplicand,w
  6886  1C43  00F5               	movwf	??__Umul8_16
  6887  1C44  01F6               	clrf	??__Umul8_16+1
  6888  1C45  0875               	movf	??__Umul8_16,w
  6889  1C46  00A2               	movwf	__Umul8_16@word_mpld
  6890  1C47  0876               	movf	??__Umul8_16+1,w
  6891  1C48  00A3               	movwf	__Umul8_16@word_mpld+1
  6892  1C49                     l2294:	
  6893  1C49  1C24               	btfss	__Umul8_16@multiplier,0
  6894  1C4A  2C4C               	goto	u2831
  6895  1C4B  2C4D               	goto	u2830
  6896  1C4C                     u2831:	
  6897  1C4C  2C53               	goto	l862
  6898  1C4D                     u2830:	
  6899  1C4D                     l2296:	
  6900  1C4D  0822               	movf	__Umul8_16@word_mpld,w
  6901  1C4E  07A0               	addwf	__Umul8_16@product,f
  6902  1C4F  1803               	skipnc
  6903  1C50  0AA1               	incf	__Umul8_16@product+1,f
  6904  1C51  0823               	movf	__Umul8_16@word_mpld+1,w
  6905  1C52  07A1               	addwf	__Umul8_16@product+1,f
  6906  1C53                     l862:	
  6907  1C53  3001               	movlw	1
  6908  1C54                     u2845:	
  6909  1C54  1003               	clrc
  6910  1C55  0DA2               	rlf	__Umul8_16@word_mpld,f
  6911  1C56  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6912  1C57  3EFF               	addlw	-1
  6913  1C58  1D03               	skipz
  6914  1C59  2C54               	goto	u2845
  6915  1C5A  1003               	clrc
  6916  1C5B  0CA4               	rrf	__Umul8_16@multiplier,f
  6917  1C5C                     l2298:	
  6918  1C5C  0824               	movf	__Umul8_16@multiplier,w
  6919  1C5D  1D03               	btfss	3,2
  6920  1C5E  2C60               	goto	u2851
  6921  1C5F  2C61               	goto	u2850
  6922  1C60                     u2851:	
  6923  1C60  2C49               	goto	l2294
  6924  1C61                     u2850:	
  6925  1C61                     l2300:	
  6926  1C61  0821               	movf	__Umul8_16@product+1,w
  6927  1C62  00F4               	movwf	?__Umul8_16+1
  6928  1C63  0820               	movf	__Umul8_16@product,w
  6929  1C64  00F3               	movwf	?__Umul8_16
  6930  1C65                     l864:	
  6931  1C65  0008               	return
  6932  1C66                     __end_of__Umul8_16:	
  6933                           
  6934                           	psect	text12
  6935  112C                     __ptext12:	
  6936 ;; *************** function __tdiv_to_l_ *****************
  6937 ;; Defined at:
  6938 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  6939 ;; Parameters:    Size  Location     Type
  6940 ;;  f1              4    3[COMMON] float 
  6941 ;;  f2              4    7[COMMON] float 
  6942 ;; Auto vars:     Size  Location     Type
  6943 ;;  quot            4    4[BANK0 ] unsigned long 
  6944 ;;  exp1            1    9[BANK0 ] unsigned char 
  6945 ;;  cntr            1    8[BANK0 ] unsigned char 
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  4    3[COMMON] unsigned long 
  6948 ;; Registers used:
  6949 ;;		wreg, status,2, status,0
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6955 ;;      Params:         8       0       0       0       0
  6956 ;;      Locals:         0       6       0       0       0
  6957 ;;      Temps:          0       4       0       0       0
  6958 ;;      Totals:         8      10       0       0       0
  6959 ;;Total ram usage:       18 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    1
  6962 ;; This function calls:
  6963 ;;		Nothing
  6964 ;; This function is called by:
  6965 ;;		_sprintf
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           
  6970                           ;psect for function __tdiv_to_l_
  6971  112C                     __tdiv_to_l_:	
  6972  112C                     l2856:	
  6973                           ;incstack = 0
  6974                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6975                           
  6976  112C  0873               	movf	__tdiv_to_l_@f1,w
  6977  112D  1283               	bcf	3,5	;RP0=0, select bank0
  6978  112E  1303               	bcf	3,6	;RP1=0, select bank0
  6979  112F  00A0               	movwf	??__tdiv_to_l_
  6980  1130  0874               	movf	__tdiv_to_l_@f1+1,w
  6981  1131  00A1               	movwf	??__tdiv_to_l_+1
  6982  1132  0875               	movf	__tdiv_to_l_@f1+2,w
  6983  1133  00A2               	movwf	??__tdiv_to_l_+2
  6984  1134  1003               	clrc
  6985  1135  0D21               	rlf	??__tdiv_to_l_+1,w
  6986  1136  0D22               	rlf	??__tdiv_to_l_+2,w
  6987  1137  00A3               	movwf	??__tdiv_to_l_+3
  6988  1138  0823               	movf	??__tdiv_to_l_+3,w
  6989  1139  00A9               	movwf	__tdiv_to_l_@exp1
  6990  113A  0829               	movf	__tdiv_to_l_@exp1,w
  6991  113B  1D03               	btfss	3,2
  6992  113C  293E               	goto	u4281
  6993  113D  293F               	goto	u4280
  6994  113E                     u4281:	
  6995  113E  2948               	goto	l2862
  6996  113F                     u4280:	
  6997  113F                     l2858:	
  6998  113F  3000               	movlw	0
  6999  1140  00F6               	movwf	?__tdiv_to_l_+3
  7000  1141  3000               	movlw	0
  7001  1142  00F5               	movwf	?__tdiv_to_l_+2
  7002  1143  3000               	movlw	0
  7003  1144  00F4               	movwf	?__tdiv_to_l_+1
  7004  1145  3000               	movlw	0
  7005  1146  00F3               	movwf	?__tdiv_to_l_
  7006  1147  29E8               	goto	l590
  7007  1148                     l2862:	
  7008  1148  0877               	movf	__tdiv_to_l_@f2,w
  7009  1149  00A0               	movwf	??__tdiv_to_l_
  7010  114A  0878               	movf	__tdiv_to_l_@f2+1,w
  7011  114B  00A1               	movwf	??__tdiv_to_l_+1
  7012  114C  0879               	movf	__tdiv_to_l_@f2+2,w
  7013  114D  00A2               	movwf	??__tdiv_to_l_+2
  7014  114E  1003               	clrc
  7015  114F  0D21               	rlf	??__tdiv_to_l_+1,w
  7016  1150  0D22               	rlf	??__tdiv_to_l_+2,w
  7017  1151  00A3               	movwf	??__tdiv_to_l_+3
  7018  1152  0823               	movf	??__tdiv_to_l_+3,w
  7019  1153  00A8               	movwf	__tdiv_to_l_@cntr
  7020  1154  0828               	movf	__tdiv_to_l_@cntr,w
  7021  1155  1D03               	btfss	3,2
  7022  1156  2958               	goto	u4291
  7023  1157  2959               	goto	u4290
  7024  1158                     u4291:	
  7025  1158  295A               	goto	l591
  7026  1159                     u4290:	
  7027  1159  293F               	goto	l2858
  7028  115A                     l591:	
  7029  115A  17F4               	bsf	__tdiv_to_l_@f1+1,7
  7030  115B                     l2868:	
  7031  115B  30FF               	movlw	255
  7032  115C  05F3               	andwf	__tdiv_to_l_@f1,f
  7033  115D  30FF               	movlw	255
  7034  115E  05F4               	andwf	__tdiv_to_l_@f1+1,f
  7035  115F  3000               	movlw	0
  7036  1160  05F5               	andwf	__tdiv_to_l_@f1+2,f
  7037  1161                     l2870:	
  7038  1161  17F8               	bsf	__tdiv_to_l_@f2+1,7
  7039  1162  30FF               	movlw	255
  7040  1163  05F7               	andwf	__tdiv_to_l_@f2,f
  7041  1164  30FF               	movlw	255
  7042  1165  05F8               	andwf	__tdiv_to_l_@f2+1,f
  7043  1166  3000               	movlw	0
  7044  1167  05F9               	andwf	__tdiv_to_l_@f2+2,f
  7045  1168  3000               	movlw	0
  7046  1169  00A7               	movwf	__tdiv_to_l_@quot+3
  7047  116A  3000               	movlw	0
  7048  116B  00A6               	movwf	__tdiv_to_l_@quot+2
  7049  116C  3000               	movlw	0
  7050  116D  00A5               	movwf	__tdiv_to_l_@quot+1
  7051  116E  3000               	movlw	0
  7052  116F  00A4               	movwf	__tdiv_to_l_@quot
  7053  1170                     l2872:	
  7054  1170  307F               	movlw	127
  7055  1171  02A9               	subwf	__tdiv_to_l_@exp1,f
  7056  1172                     l2874:	
  7057  1172  3098               	movlw	152
  7058  1173  0728               	addwf	__tdiv_to_l_@cntr,w
  7059  1174  00A0               	movwf	??__tdiv_to_l_
  7060  1175  0820               	movf	??__tdiv_to_l_,w
  7061  1176  02A9               	subwf	__tdiv_to_l_@exp1,f
  7062  1177  3018               	movlw	24
  7063  1178  00A0               	movwf	??__tdiv_to_l_
  7064  1179  0820               	movf	??__tdiv_to_l_,w
  7065  117A  00A8               	movwf	__tdiv_to_l_@cntr
  7066  117B                     l2876:	
  7067  117B  3001               	movlw	1
  7068  117C  00A0               	movwf	??__tdiv_to_l_
  7069  117D                     u4305:	
  7070  117D  1003               	clrc
  7071  117E  0DA4               	rlf	__tdiv_to_l_@quot,f
  7072  117F  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7073  1180  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7074  1181  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7075  1182  0BA0               	decfsz	??__tdiv_to_l_,f
  7076  1183  297D               	goto	u4305
  7077  1184                     l2878:	
  7078  1184  0879               	movf	__tdiv_to_l_@f2+2,w
  7079  1185  0275               	subwf	__tdiv_to_l_@f1+2,w
  7080  1186  1D03               	skipz
  7081  1187  298E               	goto	u4315
  7082  1188  0878               	movf	__tdiv_to_l_@f2+1,w
  7083  1189  0274               	subwf	__tdiv_to_l_@f1+1,w
  7084  118A  1D03               	skipz
  7085  118B  298E               	goto	u4315
  7086  118C  0877               	movf	__tdiv_to_l_@f2,w
  7087  118D  0273               	subwf	__tdiv_to_l_@f1,w
  7088  118E                     u4315:	
  7089  118E  1C03               	skipc
  7090  118F  2991               	goto	u4311
  7091  1190  2992               	goto	u4310
  7092  1191                     u4311:	
  7093  1191  299D               	goto	l2884
  7094  1192                     u4310:	
  7095  1192                     l2880:	
  7096  1192  0877               	movf	__tdiv_to_l_@f2,w
  7097  1193  02F3               	subwf	__tdiv_to_l_@f1,f
  7098  1194  0878               	movf	__tdiv_to_l_@f2+1,w
  7099  1195  1C03               	skipc
  7100  1196  0F78               	incfsz	__tdiv_to_l_@f2+1,w
  7101  1197  02F4               	subwf	__tdiv_to_l_@f1+1,f
  7102  1198  0879               	movf	__tdiv_to_l_@f2+2,w
  7103  1199  1C03               	skipc
  7104  119A  0A79               	incf	__tdiv_to_l_@f2+2,w
  7105  119B  02F5               	subwf	__tdiv_to_l_@f1+2,f
  7106  119C                     l2882:	
  7107  119C  1424               	bsf	__tdiv_to_l_@quot,0
  7108  119D                     l2884:	
  7109  119D  3001               	movlw	1
  7110  119E                     u4325:	
  7111  119E  1003               	clrc
  7112  119F  0DF3               	rlf	__tdiv_to_l_@f1,f
  7113  11A0  0DF4               	rlf	__tdiv_to_l_@f1+1,f
  7114  11A1  0DF5               	rlf	__tdiv_to_l_@f1+2,f
  7115  11A2  3EFF               	addlw	-1
  7116  11A3  1D03               	skipz
  7117  11A4  299E               	goto	u4325
  7118  11A5                     l2886:	
  7119  11A5  3001               	movlw	1
  7120  11A6  02A8               	subwf	__tdiv_to_l_@cntr,f
  7121  11A7  1D03               	btfss	3,2
  7122  11A8  29AA               	goto	u4331
  7123  11A9  29AB               	goto	u4330
  7124  11AA                     u4331:	
  7125  11AA  297B               	goto	l2876
  7126  11AB                     u4330:	
  7127  11AB                     l594:	
  7128  11AB  1FA9               	btfss	__tdiv_to_l_@exp1,7
  7129  11AC  29AE               	goto	u4341
  7130  11AD  29AF               	goto	u4340
  7131  11AE                     u4341:	
  7132  11AE  29C9               	goto	l2896
  7133  11AF                     u4340:	
  7134  11AF                     l2888:	
  7135  11AF  0829               	movf	__tdiv_to_l_@exp1,w
  7136  11B0  3A80               	xorlw	128
  7137  11B1  3E97               	addlw	151
  7138  11B2  1803               	skipnc
  7139  11B3  29B5               	goto	u4351
  7140  11B4  29B6               	goto	u4350
  7141  11B5                     u4351:	
  7142  11B5  29B7               	goto	l2894
  7143  11B6                     u4350:	
  7144  11B6  293F               	goto	l2858
  7145  11B7                     l2894:	
  7146  11B7  3001               	movlw	1
  7147  11B8                     u4365:	
  7148  11B8  1003               	clrc
  7149  11B9  0CA7               	rrf	__tdiv_to_l_@quot+3,f
  7150  11BA  0CA6               	rrf	__tdiv_to_l_@quot+2,f
  7151  11BB  0CA5               	rrf	__tdiv_to_l_@quot+1,f
  7152  11BC  0CA4               	rrf	__tdiv_to_l_@quot,f
  7153  11BD  3EFF               	addlw	-1
  7154  11BE  1D03               	skipz
  7155  11BF  29B8               	goto	u4365
  7156  11C0  3001               	movlw	1
  7157  11C1  00A0               	movwf	??__tdiv_to_l_
  7158  11C2  0820               	movf	??__tdiv_to_l_,w
  7159  11C3  07A9               	addwf	__tdiv_to_l_@exp1,f
  7160  11C4  1D03               	btfss	3,2
  7161  11C5  29C7               	goto	u4371
  7162  11C6  29C8               	goto	u4370
  7163  11C7                     u4371:	
  7164  11C7  29B7               	goto	l2894
  7165  11C8                     u4370:	
  7166  11C8  29E0               	goto	l2904
  7167  11C9                     l2896:	
  7168  11C9  3018               	movlw	24
  7169  11CA  0229               	subwf	__tdiv_to_l_@exp1,w
  7170  11CB  1C03               	skipc
  7171  11CC  29CE               	goto	u4381
  7172  11CD  29CF               	goto	u4380
  7173  11CE                     u4381:	
  7174  11CE  29DB               	goto	l601
  7175  11CF                     u4380:	
  7176  11CF  293F               	goto	l2858
  7177  11D0                     l2902:	
  7178  11D0  3001               	movlw	1
  7179  11D1  00A0               	movwf	??__tdiv_to_l_
  7180  11D2                     u4395:	
  7181  11D2  1003               	clrc
  7182  11D3  0DA4               	rlf	__tdiv_to_l_@quot,f
  7183  11D4  0DA5               	rlf	__tdiv_to_l_@quot+1,f
  7184  11D5  0DA6               	rlf	__tdiv_to_l_@quot+2,f
  7185  11D6  0DA7               	rlf	__tdiv_to_l_@quot+3,f
  7186  11D7  0BA0               	decfsz	??__tdiv_to_l_,f
  7187  11D8  29D2               	goto	u4395
  7188  11D9  3001               	movlw	1
  7189  11DA  02A9               	subwf	__tdiv_to_l_@exp1,f
  7190  11DB                     l601:	
  7191  11DB  0829               	movf	__tdiv_to_l_@exp1,w
  7192  11DC  1D03               	btfss	3,2
  7193  11DD  29DF               	goto	u4401
  7194  11DE  29E0               	goto	u4400
  7195  11DF                     u4401:	
  7196  11DF  29D0               	goto	l2902
  7197  11E0                     u4400:	
  7198  11E0                     l2904:	
  7199  11E0  0827               	movf	__tdiv_to_l_@quot+3,w
  7200  11E1  00F6               	movwf	?__tdiv_to_l_+3
  7201  11E2  0826               	movf	__tdiv_to_l_@quot+2,w
  7202  11E3  00F5               	movwf	?__tdiv_to_l_+2
  7203  11E4  0825               	movf	__tdiv_to_l_@quot+1,w
  7204  11E5  00F4               	movwf	?__tdiv_to_l_+1
  7205  11E6  0824               	movf	__tdiv_to_l_@quot,w
  7206  11E7  00F3               	movwf	?__tdiv_to_l_
  7207  11E8                     l590:	
  7208  11E8  0008               	return
  7209  11E9                     __end_of__tdiv_to_l_:	
  7210                           
  7211                           	psect	text13
  7212  11E9                     __ptext13:	
  7213 ;; *************** function __div_to_l_ *****************
  7214 ;; Defined at:
  7215 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  7216 ;; Parameters:    Size  Location     Type
  7217 ;;  f1              4    3[COMMON] unsigned long 
  7218 ;;  f2              4    7[COMMON] unsigned long 
  7219 ;; Auto vars:     Size  Location     Type
  7220 ;;  quot            4    1[BANK0 ] unsigned long 
  7221 ;;  exp1            1    6[BANK0 ] unsigned char 
  7222 ;;  cntr            1    5[BANK0 ] unsigned char 
  7223 ;; Return value:  Size  Location     Type
  7224 ;;                  4    3[COMMON] unsigned long 
  7225 ;; Registers used:
  7226 ;;		wreg, status,2, status,0
  7227 ;; Tracked objects:
  7228 ;;		On entry : 0/0
  7229 ;;		On exit  : 0/0
  7230 ;;		Unchanged: 0/0
  7231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7232 ;;      Params:         8       0       0       0       0
  7233 ;;      Locals:         0       6       0       0       0
  7234 ;;      Temps:          0       1       0       0       0
  7235 ;;      Totals:         8       7       0       0       0
  7236 ;;Total ram usage:       15 bytes
  7237 ;; Hardware stack levels used:    1
  7238 ;; Hardware stack levels required when called:    1
  7239 ;; This function calls:
  7240 ;;		Nothing
  7241 ;; This function is called by:
  7242 ;;		_sprintf
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           
  7247                           ;psect for function __div_to_l_
  7248  11E9                     __div_to_l_:	
  7249  11E9                     l2908:	
  7250                           ;incstack = 0
  7251                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7252                           
  7253  11E9  1003               	clrc
  7254  11EA  0D75               	rlf	__div_to_l_@f1+2,w
  7255  11EB  0D76               	rlf	__div_to_l_@f1+3,w
  7256  11EC  1283               	bcf	3,5	;RP0=0, select bank0
  7257  11ED  1303               	bcf	3,6	;RP1=0, select bank0
  7258  11EE  00A0               	movwf	??__div_to_l_
  7259  11EF  0820               	movf	??__div_to_l_,w
  7260  11F0  00A6               	movwf	__div_to_l_@exp1
  7261  11F1  0826               	movf	__div_to_l_@exp1,w
  7262  11F2  1D03               	btfss	3,2
  7263  11F3  29F5               	goto	u4411
  7264  11F4  29F6               	goto	u4410
  7265  11F5                     u4411:	
  7266  11F5  29FF               	goto	l2914
  7267  11F6                     u4410:	
  7268  11F6                     l2910:	
  7269  11F6  3000               	movlw	0
  7270  11F7  00F6               	movwf	?__div_to_l_+3
  7271  11F8  3000               	movlw	0
  7272  11F9  00F5               	movwf	?__div_to_l_+2
  7273  11FA  3000               	movlw	0
  7274  11FB  00F4               	movwf	?__div_to_l_+1
  7275  11FC  3000               	movlw	0
  7276  11FD  00F3               	movwf	?__div_to_l_
  7277  11FE  2AA6               	goto	l543
  7278  11FF                     l2914:	
  7279  11FF  1003               	clrc
  7280  1200  0D79               	rlf	__div_to_l_@f2+2,w
  7281  1201  0D7A               	rlf	__div_to_l_@f2+3,w
  7282  1202  00A0               	movwf	??__div_to_l_
  7283  1203  0820               	movf	??__div_to_l_,w
  7284  1204  00A5               	movwf	__div_to_l_@cntr
  7285  1205  0825               	movf	__div_to_l_@cntr,w
  7286  1206  1D03               	btfss	3,2
  7287  1207  2A09               	goto	u4421
  7288  1208  2A0A               	goto	u4420
  7289  1209                     u4421:	
  7290  1209  2A0B               	goto	l544
  7291  120A                     u4420:	
  7292  120A  29F6               	goto	l2910
  7293  120B                     l544:	
  7294  120B  17F5               	bsf	__div_to_l_@f1+2,7
  7295  120C                     l2920:	
  7296  120C  30FF               	movlw	255
  7297  120D  05F3               	andwf	__div_to_l_@f1,f
  7298  120E  30FF               	movlw	255
  7299  120F  05F4               	andwf	__div_to_l_@f1+1,f
  7300  1210  30FF               	movlw	255
  7301  1211  05F5               	andwf	__div_to_l_@f1+2,f
  7302  1212  3000               	movlw	0
  7303  1213  05F6               	andwf	__div_to_l_@f1+3,f
  7304  1214                     l2922:	
  7305  1214  17F9               	bsf	__div_to_l_@f2+2,7
  7306  1215  30FF               	movlw	255
  7307  1216  05F7               	andwf	__div_to_l_@f2,f
  7308  1217  30FF               	movlw	255
  7309  1218  05F8               	andwf	__div_to_l_@f2+1,f
  7310  1219  30FF               	movlw	255
  7311  121A  05F9               	andwf	__div_to_l_@f2+2,f
  7312  121B  3000               	movlw	0
  7313  121C  05FA               	andwf	__div_to_l_@f2+3,f
  7314  121D  3000               	movlw	0
  7315  121E  00A4               	movwf	__div_to_l_@quot+3
  7316  121F  3000               	movlw	0
  7317  1220  00A3               	movwf	__div_to_l_@quot+2
  7318  1221  3000               	movlw	0
  7319  1222  00A2               	movwf	__div_to_l_@quot+1
  7320  1223  3000               	movlw	0
  7321  1224  00A1               	movwf	__div_to_l_@quot
  7322  1225                     l2924:	
  7323  1225  307F               	movlw	127
  7324  1226  02A6               	subwf	__div_to_l_@exp1,f
  7325  1227                     l2926:	
  7326  1227  30A0               	movlw	160
  7327  1228  0725               	addwf	__div_to_l_@cntr,w
  7328  1229  00A0               	movwf	??__div_to_l_
  7329  122A  0820               	movf	??__div_to_l_,w
  7330  122B  02A6               	subwf	__div_to_l_@exp1,f
  7331  122C  3020               	movlw	32
  7332  122D  00A0               	movwf	??__div_to_l_
  7333  122E  0820               	movf	??__div_to_l_,w
  7334  122F  00A5               	movwf	__div_to_l_@cntr
  7335  1230                     l2928:	
  7336  1230  3001               	movlw	1
  7337  1231  00A0               	movwf	??__div_to_l_
  7338  1232                     u4435:	
  7339  1232  1003               	clrc
  7340  1233  0DA1               	rlf	__div_to_l_@quot,f
  7341  1234  0DA2               	rlf	__div_to_l_@quot+1,f
  7342  1235  0DA3               	rlf	__div_to_l_@quot+2,f
  7343  1236  0DA4               	rlf	__div_to_l_@quot+3,f
  7344  1237  0BA0               	decfsz	??__div_to_l_,f
  7345  1238  2A32               	goto	u4435
  7346  1239                     l2930:	
  7347  1239  087A               	movf	__div_to_l_@f2+3,w
  7348  123A  0276               	subwf	__div_to_l_@f1+3,w
  7349  123B  1D03               	skipz
  7350  123C  2A47               	goto	u4445
  7351  123D  0879               	movf	__div_to_l_@f2+2,w
  7352  123E  0275               	subwf	__div_to_l_@f1+2,w
  7353  123F  1D03               	skipz
  7354  1240  2A47               	goto	u4445
  7355  1241  0878               	movf	__div_to_l_@f2+1,w
  7356  1242  0274               	subwf	__div_to_l_@f1+1,w
  7357  1243  1D03               	skipz
  7358  1244  2A47               	goto	u4445
  7359  1245  0877               	movf	__div_to_l_@f2,w
  7360  1246  0273               	subwf	__div_to_l_@f1,w
  7361  1247                     u4445:	
  7362  1247  1C03               	skipc
  7363  1248  2A4A               	goto	u4441
  7364  1249  2A4B               	goto	u4440
  7365  124A                     u4441:	
  7366  124A  2A5A               	goto	l2936
  7367  124B                     u4440:	
  7368  124B                     l2932:	
  7369  124B  0877               	movf	__div_to_l_@f2,w
  7370  124C  02F3               	subwf	__div_to_l_@f1,f
  7371  124D  0878               	movf	__div_to_l_@f2+1,w
  7372  124E  1C03               	skipc
  7373  124F  0F78               	incfsz	__div_to_l_@f2+1,w
  7374  1250  02F4               	subwf	__div_to_l_@f1+1,f
  7375  1251  0879               	movf	__div_to_l_@f2+2,w
  7376  1252  1C03               	skipc
  7377  1253  0F79               	incfsz	__div_to_l_@f2+2,w
  7378  1254  02F5               	subwf	__div_to_l_@f1+2,f
  7379  1255  087A               	movf	__div_to_l_@f2+3,w
  7380  1256  1C03               	skipc
  7381  1257  0F7A               	incfsz	__div_to_l_@f2+3,w
  7382  1258  02F6               	subwf	__div_to_l_@f1+3,f
  7383  1259                     l2934:	
  7384  1259  1421               	bsf	__div_to_l_@quot,0
  7385  125A                     l2936:	
  7386  125A  3001               	movlw	1
  7387  125B  00A0               	movwf	??__div_to_l_
  7388  125C                     u4455:	
  7389  125C  1003               	clrc
  7390  125D  0DF3               	rlf	__div_to_l_@f1,f
  7391  125E  0DF4               	rlf	__div_to_l_@f1+1,f
  7392  125F  0DF5               	rlf	__div_to_l_@f1+2,f
  7393  1260  0DF6               	rlf	__div_to_l_@f1+3,f
  7394  1261  0BA0               	decfsz	??__div_to_l_,f
  7395  1262  2A5C               	goto	u4455
  7396  1263                     l2938:	
  7397  1263  3001               	movlw	1
  7398  1264  02A5               	subwf	__div_to_l_@cntr,f
  7399  1265  1D03               	btfss	3,2
  7400  1266  2A68               	goto	u4461
  7401  1267  2A69               	goto	u4460
  7402  1268                     u4461:	
  7403  1268  2A30               	goto	l2928
  7404  1269                     u4460:	
  7405  1269                     l547:	
  7406  1269  1FA6               	btfss	__div_to_l_@exp1,7
  7407  126A  2A6C               	goto	u4471
  7408  126B  2A6D               	goto	u4470
  7409  126C                     u4471:	
  7410  126C  2A87               	goto	l2948
  7411  126D                     u4470:	
  7412  126D                     l2940:	
  7413  126D  0826               	movf	__div_to_l_@exp1,w
  7414  126E  3A80               	xorlw	128
  7415  126F  3E9F               	addlw	159
  7416  1270  1803               	skipnc
  7417  1271  2A73               	goto	u4481
  7418  1272  2A74               	goto	u4480
  7419  1273                     u4481:	
  7420  1273  2A75               	goto	l2946
  7421  1274                     u4480:	
  7422  1274  29F6               	goto	l2910
  7423  1275                     l2946:	
  7424  1275  3001               	movlw	1
  7425  1276                     u4495:	
  7426  1276  1003               	clrc
  7427  1277  0CA4               	rrf	__div_to_l_@quot+3,f
  7428  1278  0CA3               	rrf	__div_to_l_@quot+2,f
  7429  1279  0CA2               	rrf	__div_to_l_@quot+1,f
  7430  127A  0CA1               	rrf	__div_to_l_@quot,f
  7431  127B  3EFF               	addlw	-1
  7432  127C  1D03               	skipz
  7433  127D  2A76               	goto	u4495
  7434  127E  3001               	movlw	1
  7435  127F  00A0               	movwf	??__div_to_l_
  7436  1280  0820               	movf	??__div_to_l_,w
  7437  1281  07A6               	addwf	__div_to_l_@exp1,f
  7438  1282  1D03               	btfss	3,2
  7439  1283  2A85               	goto	u4501
  7440  1284  2A86               	goto	u4500
  7441  1285                     u4501:	
  7442  1285  2A75               	goto	l2946
  7443  1286                     u4500:	
  7444  1286  2A9E               	goto	l2956
  7445  1287                     l2948:	
  7446  1287  3020               	movlw	32
  7447  1288  0226               	subwf	__div_to_l_@exp1,w
  7448  1289  1C03               	skipc
  7449  128A  2A8C               	goto	u4511
  7450  128B  2A8D               	goto	u4510
  7451  128C                     u4511:	
  7452  128C  2A99               	goto	l554
  7453  128D                     u4510:	
  7454  128D  29F6               	goto	l2910
  7455  128E                     l2954:	
  7456  128E  3001               	movlw	1
  7457  128F  00A0               	movwf	??__div_to_l_
  7458  1290                     u4525:	
  7459  1290  1003               	clrc
  7460  1291  0DA1               	rlf	__div_to_l_@quot,f
  7461  1292  0DA2               	rlf	__div_to_l_@quot+1,f
  7462  1293  0DA3               	rlf	__div_to_l_@quot+2,f
  7463  1294  0DA4               	rlf	__div_to_l_@quot+3,f
  7464  1295  0BA0               	decfsz	??__div_to_l_,f
  7465  1296  2A90               	goto	u4525
  7466  1297  3001               	movlw	1
  7467  1298  02A6               	subwf	__div_to_l_@exp1,f
  7468  1299                     l554:	
  7469  1299  0826               	movf	__div_to_l_@exp1,w
  7470  129A  1D03               	btfss	3,2
  7471  129B  2A9D               	goto	u4531
  7472  129C  2A9E               	goto	u4530
  7473  129D                     u4531:	
  7474  129D  2A8E               	goto	l2954
  7475  129E                     u4530:	
  7476  129E                     l2956:	
  7477  129E  0824               	movf	__div_to_l_@quot+3,w
  7478  129F  00F6               	movwf	?__div_to_l_+3
  7479  12A0  0823               	movf	__div_to_l_@quot+2,w
  7480  12A1  00F5               	movwf	?__div_to_l_+2
  7481  12A2  0822               	movf	__div_to_l_@quot+1,w
  7482  12A3  00F4               	movwf	?__div_to_l_+1
  7483  12A4  0821               	movf	__div_to_l_@quot,w
  7484  12A5  00F3               	movwf	?__div_to_l_
  7485  12A6                     l543:	
  7486  12A6  0008               	return
  7487  12A7                     __end_of__div_to_l_:	
  7488                           
  7489                           	psect	text14
  7490  1070                     __ptext14:	
  7491 ;; *************** function ___xxtofl *****************
  7492 ;; Defined at:
  7493 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;  sign            1    wreg     unsigned char 
  7496 ;;  val             4    3[COMMON] long 
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;  sign            1    0[BANK0 ] unsigned char 
  7499 ;;  arg             4    2[BANK0 ] unsigned long 
  7500 ;;  exp             1    1[BANK0 ] unsigned char 
  7501 ;; Return value:  Size  Location     Type
  7502 ;;                  4    3[COMMON] unsigned char 
  7503 ;; Registers used:
  7504 ;;		wreg, status,2, status,0
  7505 ;; Tracked objects:
  7506 ;;		On entry : 0/0
  7507 ;;		On exit  : 0/0
  7508 ;;		Unchanged: 0/0
  7509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7510 ;;      Params:         4       0       0       0       0
  7511 ;;      Locals:         0       6       0       0       0
  7512 ;;      Temps:          4       0       0       0       0
  7513 ;;      Totals:         8       6       0       0       0
  7514 ;;Total ram usage:       14 bytes
  7515 ;; Hardware stack levels used:    1
  7516 ;; Hardware stack levels required when called:    1
  7517 ;; This function calls:
  7518 ;;		Nothing
  7519 ;; This function is called by:
  7520 ;;		_main
  7521 ;;		_sprintf
  7522 ;; This function uses a non-reentrant model
  7523 ;;
  7524                           
  7525                           
  7526                           ;psect for function ___xxtofl
  7527  1070                     ___xxtofl:	
  7528                           
  7529                           ;incstack = 0
  7530                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7531                           ;___xxtofl@sign stored from wreg
  7532  1070  1283               	bcf	3,5	;RP0=0, select bank0
  7533  1071  1303               	bcf	3,6	;RP1=0, select bank0
  7534  1072  00A0               	movwf	___xxtofl@sign
  7535  1073                     l3100:	
  7536  1073  0820               	movf	___xxtofl@sign,w
  7537  1074  1903               	btfsc	3,2
  7538  1075  2877               	goto	u4921
  7539  1076  2878               	goto	u4920
  7540  1077                     u4921:	
  7541  1077  288C               	goto	l3106
  7542  1078                     u4920:	
  7543  1078                     l3102:	
  7544  1078  1FF6               	btfss	___xxtofl@val+3,7
  7545  1079  287B               	goto	u4931
  7546  107A  287C               	goto	u4930
  7547  107B                     u4931:	
  7548  107B  288C               	goto	l3106
  7549  107C                     u4930:	
  7550  107C                     l3104:	
  7551  107C  0973               	comf	___xxtofl@val,w
  7552  107D  00A2               	movwf	___xxtofl@arg
  7553  107E  0974               	comf	___xxtofl@val+1,w
  7554  107F  00A3               	movwf	___xxtofl@arg+1
  7555  1080  0975               	comf	___xxtofl@val+2,w
  7556  1081  00A4               	movwf	___xxtofl@arg+2
  7557  1082  0976               	comf	___xxtofl@val+3,w
  7558  1083  00A5               	movwf	___xxtofl@arg+3
  7559  1084  0AA2               	incf	___xxtofl@arg,f
  7560  1085  1903               	skipnz
  7561  1086  0AA3               	incf	___xxtofl@arg+1,f
  7562  1087  1903               	skipnz
  7563  1088  0AA4               	incf	___xxtofl@arg+2,f
  7564  1089  1903               	skipnz
  7565  108A  0AA5               	incf	___xxtofl@arg+3,f
  7566  108B  2894               	goto	l834
  7567  108C                     l3106:	
  7568  108C  0876               	movf	___xxtofl@val+3,w
  7569  108D  00A5               	movwf	___xxtofl@arg+3
  7570  108E  0875               	movf	___xxtofl@val+2,w
  7571  108F  00A4               	movwf	___xxtofl@arg+2
  7572  1090  0874               	movf	___xxtofl@val+1,w
  7573  1091  00A3               	movwf	___xxtofl@arg+1
  7574  1092  0873               	movf	___xxtofl@val,w
  7575  1093  00A2               	movwf	___xxtofl@arg
  7576  1094                     l834:	
  7577  1094  0876               	movf	___xxtofl@val+3,w
  7578  1095  0475               	iorwf	___xxtofl@val+2,w
  7579  1096  0474               	iorwf	___xxtofl@val+1,w
  7580  1097  0473               	iorwf	___xxtofl@val,w
  7581  1098  1D03               	skipz
  7582  1099  289B               	goto	u4941
  7583  109A  289C               	goto	u4940
  7584  109B                     u4941:	
  7585  109B  28A5               	goto	l3112
  7586  109C                     u4940:	
  7587  109C                     l3108:	
  7588  109C  3000               	movlw	0
  7589  109D  00F6               	movwf	?___xxtofl+3
  7590  109E  3000               	movlw	0
  7591  109F  00F5               	movwf	?___xxtofl+2
  7592  10A0  3000               	movlw	0
  7593  10A1  00F4               	movwf	?___xxtofl+1
  7594  10A2  3000               	movlw	0
  7595  10A3  00F3               	movwf	?___xxtofl
  7596  10A4  292B               	goto	l836
  7597  10A5                     l3112:	
  7598  10A5  3096               	movlw	150
  7599  10A6  00F7               	movwf	??___xxtofl
  7600  10A7  0877               	movf	??___xxtofl,w
  7601  10A8  00A1               	movwf	___xxtofl@exp
  7602  10A9  28B7               	goto	l3116
  7603  10AA                     l3114:	
  7604  10AA  3001               	movlw	1
  7605  10AB  00F7               	movwf	??___xxtofl
  7606  10AC  0877               	movf	??___xxtofl,w
  7607  10AD  07A1               	addwf	___xxtofl@exp,f
  7608  10AE  3001               	movlw	1
  7609  10AF                     u4955:	
  7610  10AF  1003               	clrc
  7611  10B0  0CA5               	rrf	___xxtofl@arg+3,f
  7612  10B1  0CA4               	rrf	___xxtofl@arg+2,f
  7613  10B2  0CA3               	rrf	___xxtofl@arg+1,f
  7614  10B3  0CA2               	rrf	___xxtofl@arg,f
  7615  10B4  3EFF               	addlw	-1
  7616  10B5  1D03               	skipz
  7617  10B6  28AF               	goto	u4955
  7618  10B7                     l3116:	
  7619  10B7  30FE               	movlw	254
  7620  10B8  0525               	andwf	___xxtofl@arg+3,w
  7621  10B9  1D03               	btfss	3,2
  7622  10BA  28BC               	goto	u4961
  7623  10BB  28BD               	goto	u4960
  7624  10BC                     u4961:	
  7625  10BC  28AA               	goto	l3114
  7626  10BD                     u4960:	
  7627  10BD  28D9               	goto	l840
  7628  10BE                     l3118:	
  7629  10BE  3001               	movlw	1
  7630  10BF  00F7               	movwf	??___xxtofl
  7631  10C0  0877               	movf	??___xxtofl,w
  7632  10C1  07A1               	addwf	___xxtofl@exp,f
  7633  10C2                     l3120:	
  7634  10C2  3001               	movlw	1
  7635  10C3  07A2               	addwf	___xxtofl@arg,f
  7636  10C4  3000               	movlw	0
  7637  10C5  1803               	skipnc
  7638  10C6  3001               	movlw	1
  7639  10C7  07A3               	addwf	___xxtofl@arg+1,f
  7640  10C8  3000               	movlw	0
  7641  10C9  1803               	skipnc
  7642  10CA  3001               	movlw	1
  7643  10CB  07A4               	addwf	___xxtofl@arg+2,f
  7644  10CC  3000               	movlw	0
  7645  10CD  1803               	skipnc
  7646  10CE  3001               	movlw	1
  7647  10CF  07A5               	addwf	___xxtofl@arg+3,f
  7648  10D0                     l3122:	
  7649  10D0  3001               	movlw	1
  7650  10D1                     u4975:	
  7651  10D1  1003               	clrc
  7652  10D2  0CA5               	rrf	___xxtofl@arg+3,f
  7653  10D3  0CA4               	rrf	___xxtofl@arg+2,f
  7654  10D4  0CA3               	rrf	___xxtofl@arg+1,f
  7655  10D5  0CA2               	rrf	___xxtofl@arg,f
  7656  10D6  3EFF               	addlw	-1
  7657  10D7  1D03               	skipz
  7658  10D8  28D1               	goto	u4975
  7659  10D9                     l840:	
  7660  10D9  30FF               	movlw	255
  7661  10DA  0525               	andwf	___xxtofl@arg+3,w
  7662  10DB  1D03               	btfss	3,2
  7663  10DC  28DE               	goto	u4981
  7664  10DD  28DF               	goto	u4980
  7665  10DE                     u4981:	
  7666  10DE  28BE               	goto	l3118
  7667  10DF                     u4980:	
  7668  10DF  28EB               	goto	l3126
  7669  10E0                     l3124:	
  7670  10E0  3001               	movlw	1
  7671  10E1  02A1               	subwf	___xxtofl@exp,f
  7672  10E2  3001               	movlw	1
  7673  10E3  00F7               	movwf	??___xxtofl
  7674  10E4                     u4995:	
  7675  10E4  1003               	clrc
  7676  10E5  0DA2               	rlf	___xxtofl@arg,f
  7677  10E6  0DA3               	rlf	___xxtofl@arg+1,f
  7678  10E7  0DA4               	rlf	___xxtofl@arg+2,f
  7679  10E8  0DA5               	rlf	___xxtofl@arg+3,f
  7680  10E9  0BF7               	decfsz	??___xxtofl,f
  7681  10EA  28E4               	goto	u4995
  7682  10EB                     l3126:	
  7683  10EB  1BA4               	btfsc	___xxtofl@arg+2,7
  7684  10EC  28EE               	goto	u5001
  7685  10ED  28EF               	goto	u5000
  7686  10EE                     u5001:	
  7687  10EE  28F5               	goto	l847
  7688  10EF                     u5000:	
  7689  10EF                     l3128:	
  7690  10EF  3002               	movlw	2
  7691  10F0  0221               	subwf	___xxtofl@exp,w
  7692  10F1  1803               	skipnc
  7693  10F2  28F4               	goto	u5011
  7694  10F3  28F5               	goto	u5010
  7695  10F4                     u5011:	
  7696  10F4  28E0               	goto	l3124
  7697  10F5                     u5010:	
  7698  10F5                     l847:	
  7699  10F5  1821               	btfsc	___xxtofl@exp,0
  7700  10F6  28F8               	goto	u5021
  7701  10F7  28F9               	goto	u5020
  7702  10F8                     u5021:	
  7703  10F8  2901               	goto	l848
  7704  10F9                     u5020:	
  7705  10F9                     l3130:	
  7706  10F9  30FF               	movlw	255
  7707  10FA  05A2               	andwf	___xxtofl@arg,f
  7708  10FB  30FF               	movlw	255
  7709  10FC  05A3               	andwf	___xxtofl@arg+1,f
  7710  10FD  307F               	movlw	127
  7711  10FE  05A4               	andwf	___xxtofl@arg+2,f
  7712  10FF  30FF               	movlw	255
  7713  1100  05A5               	andwf	___xxtofl@arg+3,f
  7714  1101                     l848:	
  7715  1101  1003               	clrc
  7716  1102  0CA1               	rrf	___xxtofl@exp,f
  7717  1103                     l3132:	
  7718  1103  0821               	movf	___xxtofl@exp,w
  7719  1104  00F7               	movwf	??___xxtofl
  7720  1105  01F8               	clrf	??___xxtofl+1
  7721  1106  01F9               	clrf	??___xxtofl+2
  7722  1107  01FA               	clrf	??___xxtofl+3
  7723  1108  3018               	movlw	24
  7724  1109                     u5035:	
  7725  1109  1003               	clrc
  7726  110A  0DF7               	rlf	??___xxtofl,f
  7727  110B  0DF8               	rlf	??___xxtofl+1,f
  7728  110C  0DF9               	rlf	??___xxtofl+2,f
  7729  110D  0DFA               	rlf	??___xxtofl+3,f
  7730  110E                     u5030:	
  7731  110E  3EFF               	addlw	-1
  7732  110F  1D03               	skipz
  7733  1110  2909               	goto	u5035
  7734  1111  0877               	movf	??___xxtofl,w
  7735  1112  04A2               	iorwf	___xxtofl@arg,f
  7736  1113  0878               	movf	??___xxtofl+1,w
  7737  1114  04A3               	iorwf	___xxtofl@arg+1,f
  7738  1115  0879               	movf	??___xxtofl+2,w
  7739  1116  04A4               	iorwf	___xxtofl@arg+2,f
  7740  1117  087A               	movf	??___xxtofl+3,w
  7741  1118  04A5               	iorwf	___xxtofl@arg+3,f
  7742  1119                     l3134:	
  7743  1119  0820               	movf	___xxtofl@sign,w
  7744  111A  1903               	btfsc	3,2
  7745  111B  291D               	goto	u5041
  7746  111C  291E               	goto	u5040
  7747  111D                     u5041:	
  7748  111D  2923               	goto	l3140
  7749  111E                     u5040:	
  7750  111E                     l3136:	
  7751  111E  1FF6               	btfss	___xxtofl@val+3,7
  7752  111F  2921               	goto	u5051
  7753  1120  2922               	goto	u5050
  7754  1121                     u5051:	
  7755  1121  2923               	goto	l3140
  7756  1122                     u5050:	
  7757  1122                     l3138:	
  7758  1122  17A5               	bsf	___xxtofl@arg+3,7
  7759  1123                     l3140:	
  7760  1123  0825               	movf	___xxtofl@arg+3,w
  7761  1124  00F6               	movwf	?___xxtofl+3
  7762  1125  0824               	movf	___xxtofl@arg+2,w
  7763  1126  00F5               	movwf	?___xxtofl+2
  7764  1127  0823               	movf	___xxtofl@arg+1,w
  7765  1128  00F4               	movwf	?___xxtofl+1
  7766  1129  0822               	movf	___xxtofl@arg,w
  7767  112A  00F3               	movwf	?___xxtofl
  7768  112B                     l836:	
  7769  112B  0008               	return
  7770  112C                     __end_of___xxtofl:	
  7771                           
  7772                           	psect	text15
  7773  1BC8                     __ptext15:	
  7774 ;; *************** function ___wmul *****************
  7775 ;; Defined at:
  7776 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  multiplier      2    3[COMMON] unsigned int 
  7779 ;;  multiplicand    2    5[COMMON] unsigned int 
  7780 ;; Auto vars:     Size  Location     Type
  7781 ;;  product         2    7[COMMON] unsigned int 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  2    3[COMMON] unsigned int 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7791 ;;      Params:         4       0       0       0       0
  7792 ;;      Locals:         2       0       0       0       0
  7793 ;;      Temps:          0       0       0       0       0
  7794 ;;      Totals:         6       0       0       0       0
  7795 ;;Total ram usage:        6 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:    1
  7798 ;; This function calls:
  7799 ;;		Nothing
  7800 ;; This function is called by:
  7801 ;;		_sprintf
  7802 ;; This function uses a non-reentrant model
  7803 ;;
  7804                           
  7805                           
  7806                           ;psect for function ___wmul
  7807  1BC8                     ___wmul:	
  7808  1BC8                     l2960:	
  7809                           ;incstack = 0
  7810                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7811                           
  7812  1BC8  01F7               	clrf	___wmul@product
  7813  1BC9  01F8               	clrf	___wmul@product+1
  7814  1BCA                     l2962:	
  7815  1BCA  1C73               	btfss	___wmul@multiplier,0
  7816  1BCB  2BCD               	goto	u4541
  7817  1BCC  2BCE               	goto	u4540
  7818  1BCD                     u4541:	
  7819  1BCD  2BD4               	goto	l373
  7820  1BCE                     u4540:	
  7821  1BCE                     l2964:	
  7822  1BCE  0875               	movf	___wmul@multiplicand,w
  7823  1BCF  07F7               	addwf	___wmul@product,f
  7824  1BD0  1803               	skipnc
  7825  1BD1  0AF8               	incf	___wmul@product+1,f
  7826  1BD2  0876               	movf	___wmul@multiplicand+1,w
  7827  1BD3  07F8               	addwf	___wmul@product+1,f
  7828  1BD4                     l373:	
  7829  1BD4  3001               	movlw	1
  7830  1BD5                     u4555:	
  7831  1BD5  1003               	clrc
  7832  1BD6  0DF5               	rlf	___wmul@multiplicand,f
  7833  1BD7  0DF6               	rlf	___wmul@multiplicand+1,f
  7834  1BD8  3EFF               	addlw	-1
  7835  1BD9  1D03               	skipz
  7836  1BDA  2BD5               	goto	u4555
  7837  1BDB                     l2966:	
  7838  1BDB  3001               	movlw	1
  7839  1BDC                     u4565:	
  7840  1BDC  1003               	clrc
  7841  1BDD  0CF4               	rrf	___wmul@multiplier+1,f
  7842  1BDE  0CF3               	rrf	___wmul@multiplier,f
  7843  1BDF  3EFF               	addlw	-1
  7844  1BE0  1D03               	skipz
  7845  1BE1  2BDC               	goto	u4565
  7846  1BE2                     l2968:	
  7847  1BE2  0873               	movf	___wmul@multiplier,w
  7848  1BE3  0474               	iorwf	___wmul@multiplier+1,w
  7849  1BE4  1D03               	btfss	3,2
  7850  1BE5  2BE7               	goto	u4571
  7851  1BE6  2BE8               	goto	u4570
  7852  1BE7                     u4571:	
  7853  1BE7  2BCA               	goto	l2962
  7854  1BE8                     u4570:	
  7855  1BE8                     l2970:	
  7856  1BE8  0878               	movf	___wmul@product+1,w
  7857  1BE9  00F4               	movwf	?___wmul+1
  7858  1BEA  0877               	movf	___wmul@product,w
  7859  1BEB  00F3               	movwf	?___wmul
  7860  1BEC                     l375:	
  7861  1BEC  0008               	return
  7862  1BED                     __end_of___wmul:	
  7863                           
  7864                           	psect	text16
  7865  07A9                     __ptext16:	
  7866 ;; *************** function ___llmod *****************
  7867 ;; Defined at:
  7868 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;  divisor         4    3[COMMON] unsigned long 
  7871 ;;  dividend        4    7[COMMON] unsigned long 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;  counter         1    1[BANK0 ] unsigned char 
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  4    3[COMMON] unsigned long 
  7876 ;; Registers used:
  7877 ;;		wreg, status,2, status,0
  7878 ;; Tracked objects:
  7879 ;;		On entry : 0/0
  7880 ;;		On exit  : 0/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7883 ;;      Params:         8       0       0       0       0
  7884 ;;      Locals:         0       1       0       0       0
  7885 ;;      Temps:          0       1       0       0       0
  7886 ;;      Totals:         8       2       0       0       0
  7887 ;;Total ram usage:       10 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    1
  7890 ;; This function calls:
  7891 ;;		Nothing
  7892 ;; This function is called by:
  7893 ;;		_sprintf
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           
  7898                           ;psect for function ___llmod
  7899  07A9                     ___llmod:	
  7900  07A9                     l3074:	
  7901                           ;incstack = 0
  7902                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7903                           
  7904  07A9  0876               	movf	___llmod@divisor+3,w
  7905  07AA  0475               	iorwf	___llmod@divisor+2,w
  7906  07AB  0474               	iorwf	___llmod@divisor+1,w
  7907  07AC  0473               	iorwf	___llmod@divisor,w
  7908  07AD  1903               	skipnz
  7909  07AE  2FB0               	goto	u4861
  7910  07AF  2FB1               	goto	u4860
  7911  07B0                     u4861:	
  7912  07B0  2FF6               	goto	l3090
  7913  07B1                     u4860:	
  7914  07B1                     l3076:	
  7915  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  7916  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  7917  07B3  01A1               	clrf	___llmod@counter
  7918  07B4  0AA1               	incf	___llmod@counter,f
  7919  07B5  2FC3               	goto	l3080
  7920  07B6                     l3078:	
  7921  07B6  3001               	movlw	1
  7922  07B7  00A0               	movwf	??___llmod
  7923  07B8                     u4875:	
  7924  07B8  1003               	clrc
  7925  07B9  0DF3               	rlf	___llmod@divisor,f
  7926  07BA  0DF4               	rlf	___llmod@divisor+1,f
  7927  07BB  0DF5               	rlf	___llmod@divisor+2,f
  7928  07BC  0DF6               	rlf	___llmod@divisor+3,f
  7929  07BD  0BA0               	decfsz	??___llmod,f
  7930  07BE  2FB8               	goto	u4875
  7931  07BF  3001               	movlw	1
  7932  07C0  00A0               	movwf	??___llmod
  7933  07C1  0820               	movf	??___llmod,w
  7934  07C2  07A1               	addwf	___llmod@counter,f
  7935  07C3                     l3080:	
  7936  07C3  1FF6               	btfss	___llmod@divisor+3,7
  7937  07C4  2FC6               	goto	u4881
  7938  07C5  2FC7               	goto	u4880
  7939  07C6                     u4881:	
  7940  07C6  2FB6               	goto	l3078
  7941  07C7                     u4880:	
  7942  07C7                     l3082:	
  7943  07C7  0876               	movf	___llmod@divisor+3,w
  7944  07C8  027A               	subwf	___llmod@dividend+3,w
  7945  07C9  1D03               	skipz
  7946  07CA  2FD5               	goto	u4895
  7947  07CB  0875               	movf	___llmod@divisor+2,w
  7948  07CC  0279               	subwf	___llmod@dividend+2,w
  7949  07CD  1D03               	skipz
  7950  07CE  2FD5               	goto	u4895
  7951  07CF  0874               	movf	___llmod@divisor+1,w
  7952  07D0  0278               	subwf	___llmod@dividend+1,w
  7953  07D1  1D03               	skipz
  7954  07D2  2FD5               	goto	u4895
  7955  07D3  0873               	movf	___llmod@divisor,w
  7956  07D4  0277               	subwf	___llmod@dividend,w
  7957  07D5                     u4895:	
  7958  07D5  1C03               	skipc
  7959  07D6  2FD8               	goto	u4891
  7960  07D7  2FD9               	goto	u4890
  7961  07D8                     u4891:	
  7962  07D8  2FE7               	goto	l3086
  7963  07D9                     u4890:	
  7964  07D9                     l3084:	
  7965  07D9  0873               	movf	___llmod@divisor,w
  7966  07DA  02F7               	subwf	___llmod@dividend,f
  7967  07DB  0874               	movf	___llmod@divisor+1,w
  7968  07DC  1C03               	skipc
  7969  07DD  0F74               	incfsz	___llmod@divisor+1,w
  7970  07DE  02F8               	subwf	___llmod@dividend+1,f
  7971  07DF  0875               	movf	___llmod@divisor+2,w
  7972  07E0  1C03               	skipc
  7973  07E1  0F75               	incfsz	___llmod@divisor+2,w
  7974  07E2  02F9               	subwf	___llmod@dividend+2,f
  7975  07E3  0876               	movf	___llmod@divisor+3,w
  7976  07E4  1C03               	skipc
  7977  07E5  0F76               	incfsz	___llmod@divisor+3,w
  7978  07E6  02FA               	subwf	___llmod@dividend+3,f
  7979  07E7                     l3086:	
  7980  07E7  3001               	movlw	1
  7981  07E8                     u4905:	
  7982  07E8  1003               	clrc
  7983  07E9  0CF6               	rrf	___llmod@divisor+3,f
  7984  07EA  0CF5               	rrf	___llmod@divisor+2,f
  7985  07EB  0CF4               	rrf	___llmod@divisor+1,f
  7986  07EC  0CF3               	rrf	___llmod@divisor,f
  7987  07ED  3EFF               	addlw	-1
  7988  07EE  1D03               	skipz
  7989  07EF  2FE8               	goto	u4905
  7990  07F0                     l3088:	
  7991  07F0  3001               	movlw	1
  7992  07F1  02A1               	subwf	___llmod@counter,f
  7993  07F2  1D03               	btfss	3,2
  7994  07F3  2FF5               	goto	u4911
  7995  07F4  2FF6               	goto	u4910
  7996  07F5                     u4911:	
  7997  07F5  2FC7               	goto	l3082
  7998  07F6                     u4910:	
  7999  07F6                     l3090:	
  8000  07F6  087A               	movf	___llmod@dividend+3,w
  8001  07F7  00F6               	movwf	?___llmod+3
  8002  07F8  0879               	movf	___llmod@dividend+2,w
  8003  07F9  00F5               	movwf	?___llmod+2
  8004  07FA  0878               	movf	___llmod@dividend+1,w
  8005  07FB  00F4               	movwf	?___llmod+1
  8006  07FC  0877               	movf	___llmod@dividend,w
  8007  07FD  00F3               	movwf	?___llmod
  8008  07FE                     l629:	
  8009  07FE  0008               	return
  8010  07FF                     __end_of___llmod:	
  8011                           
  8012                           	psect	text17
  8013  1E78                     __ptext17:	
  8014 ;; *************** function ___lldiv *****************
  8015 ;; Defined at:
  8016 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  8017 ;; Parameters:    Size  Location     Type
  8018 ;;  divisor         4    3[COMMON] unsigned long 
  8019 ;;  dividend        4    7[COMMON] unsigned long 
  8020 ;; Auto vars:     Size  Location     Type
  8021 ;;  quotient        4    1[BANK0 ] unsigned long 
  8022 ;;  counter         1    5[BANK0 ] unsigned char 
  8023 ;; Return value:  Size  Location     Type
  8024 ;;                  4    3[COMMON] unsigned long 
  8025 ;; Registers used:
  8026 ;;		wreg, status,2, status,0
  8027 ;; Tracked objects:
  8028 ;;		On entry : 0/0
  8029 ;;		On exit  : 0/0
  8030 ;;		Unchanged: 0/0
  8031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8032 ;;      Params:         8       0       0       0       0
  8033 ;;      Locals:         0       5       0       0       0
  8034 ;;      Temps:          0       1       0       0       0
  8035 ;;      Totals:         8       6       0       0       0
  8036 ;;Total ram usage:       14 bytes
  8037 ;; Hardware stack levels used:    1
  8038 ;; Hardware stack levels required when called:    1
  8039 ;; This function calls:
  8040 ;;		Nothing
  8041 ;; This function is called by:
  8042 ;;		_sprintf
  8043 ;; This function uses a non-reentrant model
  8044 ;;
  8045                           
  8046                           
  8047                           ;psect for function ___lldiv
  8048  1E78                     ___lldiv:	
  8049  1E78                     l2974:	
  8050                           ;incstack = 0
  8051                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8052                           
  8053  1E78  3000               	movlw	0
  8054  1E79  1283               	bcf	3,5	;RP0=0, select bank0
  8055  1E7A  1303               	bcf	3,6	;RP1=0, select bank0
  8056  1E7B  00A4               	movwf	___lldiv@quotient+3
  8057  1E7C  3000               	movlw	0
  8058  1E7D  00A3               	movwf	___lldiv@quotient+2
  8059  1E7E  3000               	movlw	0
  8060  1E7F  00A2               	movwf	___lldiv@quotient+1
  8061  1E80  3000               	movlw	0
  8062  1E81  00A1               	movwf	___lldiv@quotient
  8063  1E82  0876               	movf	___lldiv@divisor+3,w
  8064  1E83  0475               	iorwf	___lldiv@divisor+2,w
  8065  1E84  0474               	iorwf	___lldiv@divisor+1,w
  8066  1E85  0473               	iorwf	___lldiv@divisor,w
  8067  1E86  1903               	skipnz
  8068  1E87  2E89               	goto	u4581
  8069  1E88  2E8A               	goto	u4580
  8070  1E89                     u4581:	
  8071  1E89  2ED7               	goto	l2994
  8072  1E8A                     u4580:	
  8073  1E8A                     l2976:	
  8074  1E8A  01A5               	clrf	___lldiv@counter
  8075  1E8B  0AA5               	incf	___lldiv@counter,f
  8076  1E8C  2E9A               	goto	l2980
  8077  1E8D                     l2978:	
  8078  1E8D  3001               	movlw	1
  8079  1E8E  00A0               	movwf	??___lldiv
  8080  1E8F                     u4595:	
  8081  1E8F  1003               	clrc
  8082  1E90  0DF3               	rlf	___lldiv@divisor,f
  8083  1E91  0DF4               	rlf	___lldiv@divisor+1,f
  8084  1E92  0DF5               	rlf	___lldiv@divisor+2,f
  8085  1E93  0DF6               	rlf	___lldiv@divisor+3,f
  8086  1E94  0BA0               	decfsz	??___lldiv,f
  8087  1E95  2E8F               	goto	u4595
  8088  1E96  3001               	movlw	1
  8089  1E97  00A0               	movwf	??___lldiv
  8090  1E98  0820               	movf	??___lldiv,w
  8091  1E99  07A5               	addwf	___lldiv@counter,f
  8092  1E9A                     l2980:	
  8093  1E9A  1FF6               	btfss	___lldiv@divisor+3,7
  8094  1E9B  2E9D               	goto	u4601
  8095  1E9C  2E9E               	goto	u4600
  8096  1E9D                     u4601:	
  8097  1E9D  2E8D               	goto	l2978
  8098  1E9E                     u4600:	
  8099  1E9E                     l2982:	
  8100  1E9E  3001               	movlw	1
  8101  1E9F  00A0               	movwf	??___lldiv
  8102  1EA0                     u4615:	
  8103  1EA0  1003               	clrc
  8104  1EA1  0DA1               	rlf	___lldiv@quotient,f
  8105  1EA2  0DA2               	rlf	___lldiv@quotient+1,f
  8106  1EA3  0DA3               	rlf	___lldiv@quotient+2,f
  8107  1EA4  0DA4               	rlf	___lldiv@quotient+3,f
  8108  1EA5  0BA0               	decfsz	??___lldiv,f
  8109  1EA6  2EA0               	goto	u4615
  8110  1EA7                     l2984:	
  8111  1EA7  0876               	movf	___lldiv@divisor+3,w
  8112  1EA8  027A               	subwf	___lldiv@dividend+3,w
  8113  1EA9  1D03               	skipz
  8114  1EAA  2EB5               	goto	u4625
  8115  1EAB  0875               	movf	___lldiv@divisor+2,w
  8116  1EAC  0279               	subwf	___lldiv@dividend+2,w
  8117  1EAD  1D03               	skipz
  8118  1EAE  2EB5               	goto	u4625
  8119  1EAF  0874               	movf	___lldiv@divisor+1,w
  8120  1EB0  0278               	subwf	___lldiv@dividend+1,w
  8121  1EB1  1D03               	skipz
  8122  1EB2  2EB5               	goto	u4625
  8123  1EB3  0873               	movf	___lldiv@divisor,w
  8124  1EB4  0277               	subwf	___lldiv@dividend,w
  8125  1EB5                     u4625:	
  8126  1EB5  1C03               	skipc
  8127  1EB6  2EB8               	goto	u4621
  8128  1EB7  2EB9               	goto	u4620
  8129  1EB8                     u4621:	
  8130  1EB8  2EC8               	goto	l2990
  8131  1EB9                     u4620:	
  8132  1EB9                     l2986:	
  8133  1EB9  0873               	movf	___lldiv@divisor,w
  8134  1EBA  02F7               	subwf	___lldiv@dividend,f
  8135  1EBB  0874               	movf	___lldiv@divisor+1,w
  8136  1EBC  1C03               	skipc
  8137  1EBD  0F74               	incfsz	___lldiv@divisor+1,w
  8138  1EBE  02F8               	subwf	___lldiv@dividend+1,f
  8139  1EBF  0875               	movf	___lldiv@divisor+2,w
  8140  1EC0  1C03               	skipc
  8141  1EC1  0F75               	incfsz	___lldiv@divisor+2,w
  8142  1EC2  02F9               	subwf	___lldiv@dividend+2,f
  8143  1EC3  0876               	movf	___lldiv@divisor+3,w
  8144  1EC4  1C03               	skipc
  8145  1EC5  0F76               	incfsz	___lldiv@divisor+3,w
  8146  1EC6  02FA               	subwf	___lldiv@dividend+3,f
  8147  1EC7                     l2988:	
  8148  1EC7  1421               	bsf	___lldiv@quotient,0
  8149  1EC8                     l2990:	
  8150  1EC8  3001               	movlw	1
  8151  1EC9                     u4635:	
  8152  1EC9  1003               	clrc
  8153  1ECA  0CF6               	rrf	___lldiv@divisor+3,f
  8154  1ECB  0CF5               	rrf	___lldiv@divisor+2,f
  8155  1ECC  0CF4               	rrf	___lldiv@divisor+1,f
  8156  1ECD  0CF3               	rrf	___lldiv@divisor,f
  8157  1ECE  3EFF               	addlw	-1
  8158  1ECF  1D03               	skipz
  8159  1ED0  2EC9               	goto	u4635
  8160  1ED1                     l2992:	
  8161  1ED1  3001               	movlw	1
  8162  1ED2  02A5               	subwf	___lldiv@counter,f
  8163  1ED3  1D03               	btfss	3,2
  8164  1ED4  2ED6               	goto	u4641
  8165  1ED5  2ED7               	goto	u4640
  8166  1ED6                     u4641:	
  8167  1ED6  2E9E               	goto	l2982
  8168  1ED7                     u4640:	
  8169  1ED7                     l2994:	
  8170  1ED7  0824               	movf	___lldiv@quotient+3,w
  8171  1ED8  00F6               	movwf	?___lldiv+3
  8172  1ED9  0823               	movf	___lldiv@quotient+2,w
  8173  1EDA  00F5               	movwf	?___lldiv+2
  8174  1EDB  0822               	movf	___lldiv@quotient+1,w
  8175  1EDC  00F4               	movwf	?___lldiv+1
  8176  1EDD  0821               	movf	___lldiv@quotient,w
  8177  1EDE  00F3               	movwf	?___lldiv
  8178  1EDF                     l409:	
  8179  1EDF  0008               	return
  8180  1EE0                     __end_of___lldiv:	
  8181                           
  8182                           	psect	text18
  8183  1EE0                     __ptext18:	
  8184 ;; *************** function ___fltol *****************
  8185 ;; Defined at:
  8186 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  8187 ;; Parameters:    Size  Location     Type
  8188 ;;  f1              4   53[BANK0 ] unsigned long 
  8189 ;; Auto vars:     Size  Location     Type
  8190 ;;  exp1            1   63[BANK0 ] unsigned char 
  8191 ;;  sign1           1   62[BANK0 ] unsigned char 
  8192 ;; Return value:  Size  Location     Type
  8193 ;;                  4   53[BANK0 ] long 
  8194 ;; Registers used:
  8195 ;;		wreg, status,2, status,0
  8196 ;; Tracked objects:
  8197 ;;		On entry : 0/0
  8198 ;;		On exit  : 0/0
  8199 ;;		Unchanged: 0/0
  8200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8201 ;;      Params:         0       4       0       0       0
  8202 ;;      Locals:         0       2       0       0       0
  8203 ;;      Temps:          0       5       0       0       0
  8204 ;;      Totals:         0      11       0       0       0
  8205 ;;Total ram usage:       11 bytes
  8206 ;; Hardware stack levels used:    1
  8207 ;; Hardware stack levels required when called:    1
  8208 ;; This function calls:
  8209 ;;		Nothing
  8210 ;; This function is called by:
  8211 ;;		_sprintf
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           
  8216                           ;psect for function ___fltol
  8217  1EE0                     ___fltol:	
  8218  1EE0                     l3038:	
  8219                           ;incstack = 0
  8220                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8221                           
  8222  1EE0  1003               	clrc
  8223  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  8224  1EE2  1303               	bcf	3,6	;RP1=0, select bank0
  8225  1EE3  0D57               	rlf	___fltol@f1+2,w
  8226  1EE4  0D58               	rlf	___fltol@f1+3,w
  8227  1EE5  00D9               	movwf	??___fltol
  8228  1EE6  0859               	movf	??___fltol,w
  8229  1EE7  00DF               	movwf	___fltol@exp1
  8230  1EE8  085F               	movf	___fltol@exp1,w
  8231  1EE9  1D03               	btfss	3,2
  8232  1EEA  2EEC               	goto	u4761
  8233  1EEB  2EED               	goto	u4760
  8234  1EEC                     u4761:	
  8235  1EEC  2EF6               	goto	l3044
  8236  1EED                     u4760:	
  8237  1EED                     l3040:	
  8238  1EED  3000               	movlw	0
  8239  1EEE  00D8               	movwf	?___fltol+3
  8240  1EEF  3000               	movlw	0
  8241  1EF0  00D7               	movwf	?___fltol+2
  8242  1EF1  3000               	movlw	0
  8243  1EF2  00D6               	movwf	?___fltol+1
  8244  1EF3  3000               	movlw	0
  8245  1EF4  00D5               	movwf	?___fltol
  8246  1EF5  2F5B               	goto	l576
  8247  1EF6                     l3044:	
  8248  1EF6  0855               	movf	___fltol@f1,w
  8249  1EF7  00D9               	movwf	??___fltol
  8250  1EF8  0856               	movf	___fltol@f1+1,w
  8251  1EF9  00DA               	movwf	??___fltol+1
  8252  1EFA  0857               	movf	___fltol@f1+2,w
  8253  1EFB  00DB               	movwf	??___fltol+2
  8254  1EFC  0858               	movf	___fltol@f1+3,w
  8255  1EFD  00DC               	movwf	??___fltol+3
  8256  1EFE  301F               	movlw	31
  8257  1EFF                     u4775:	
  8258  1EFF  1003               	clrc
  8259  1F00  0CDC               	rrf	??___fltol+3,f
  8260  1F01  0CDB               	rrf	??___fltol+2,f
  8261  1F02  0CDA               	rrf	??___fltol+1,f
  8262  1F03  0CD9               	rrf	??___fltol,f
  8263  1F04                     u4770:	
  8264  1F04  3EFF               	addlw	-1
  8265  1F05  1D03               	skipz
  8266  1F06  2EFF               	goto	u4775
  8267  1F07  0859               	movf	??___fltol,w
  8268  1F08  00DD               	movwf	??___fltol+4
  8269  1F09  085D               	movf	??___fltol+4,w
  8270  1F0A  00DE               	movwf	___fltol@sign1
  8271  1F0B                     l3046:	
  8272  1F0B  17D7               	bsf	___fltol@f1+2,7
  8273  1F0C                     l3048:	
  8274  1F0C  30FF               	movlw	255
  8275  1F0D  05D5               	andwf	___fltol@f1,f
  8276  1F0E  30FF               	movlw	255
  8277  1F0F  05D6               	andwf	___fltol@f1+1,f
  8278  1F10  30FF               	movlw	255
  8279  1F11  05D7               	andwf	___fltol@f1+2,f
  8280  1F12  3000               	movlw	0
  8281  1F13  05D8               	andwf	___fltol@f1+3,f
  8282  1F14                     l3050:	
  8283  1F14  3096               	movlw	150
  8284  1F15  02DF               	subwf	___fltol@exp1,f
  8285  1F16                     l3052:	
  8286  1F16  1FDF               	btfss	___fltol@exp1,7
  8287  1F17  2F19               	goto	u4781
  8288  1F18  2F1A               	goto	u4780
  8289  1F19                     u4781:	
  8290  1F19  2F34               	goto	l3062
  8291  1F1A                     u4780:	
  8292  1F1A                     l3054:	
  8293  1F1A  085F               	movf	___fltol@exp1,w
  8294  1F1B  3A80               	xorlw	128
  8295  1F1C  3E97               	addlw	151
  8296  1F1D  1803               	skipnc
  8297  1F1E  2F20               	goto	u4791
  8298  1F1F  2F21               	goto	u4790
  8299  1F20                     u4791:	
  8300  1F20  2F22               	goto	l3060
  8301  1F21                     u4790:	
  8302  1F21  2EED               	goto	l3040
  8303  1F22                     l3060:	
  8304  1F22  3001               	movlw	1
  8305  1F23                     u4805:	
  8306  1F23  1003               	clrc
  8307  1F24  0CD8               	rrf	___fltol@f1+3,f
  8308  1F25  0CD7               	rrf	___fltol@f1+2,f
  8309  1F26  0CD6               	rrf	___fltol@f1+1,f
  8310  1F27  0CD5               	rrf	___fltol@f1,f
  8311  1F28  3EFF               	addlw	-1
  8312  1F29  1D03               	skipz
  8313  1F2A  2F23               	goto	u4805
  8314  1F2B  3001               	movlw	1
  8315  1F2C  00D9               	movwf	??___fltol
  8316  1F2D  0859               	movf	??___fltol,w
  8317  1F2E  07DF               	addwf	___fltol@exp1,f
  8318  1F2F  1D03               	btfss	3,2
  8319  1F30  2F32               	goto	u4811
  8320  1F31  2F33               	goto	u4810
  8321  1F32                     u4811:	
  8322  1F32  2F22               	goto	l3060
  8323  1F33                     u4810:	
  8324  1F33  2F4B               	goto	l3070
  8325  1F34                     l3062:	
  8326  1F34  3020               	movlw	32
  8327  1F35  025F               	subwf	___fltol@exp1,w
  8328  1F36  1C03               	skipc
  8329  1F37  2F39               	goto	u4821
  8330  1F38  2F3A               	goto	u4820
  8331  1F39                     u4821:	
  8332  1F39  2F46               	goto	l583
  8333  1F3A                     u4820:	
  8334  1F3A  2EED               	goto	l3040
  8335  1F3B                     l3068:	
  8336  1F3B  3001               	movlw	1
  8337  1F3C  00D9               	movwf	??___fltol
  8338  1F3D                     u4835:	
  8339  1F3D  1003               	clrc
  8340  1F3E  0DD5               	rlf	___fltol@f1,f
  8341  1F3F  0DD6               	rlf	___fltol@f1+1,f
  8342  1F40  0DD7               	rlf	___fltol@f1+2,f
  8343  1F41  0DD8               	rlf	___fltol@f1+3,f
  8344  1F42  0BD9               	decfsz	??___fltol,f
  8345  1F43  2F3D               	goto	u4835
  8346  1F44  3001               	movlw	1
  8347  1F45  02DF               	subwf	___fltol@exp1,f
  8348  1F46                     l583:	
  8349  1F46  085F               	movf	___fltol@exp1,w
  8350  1F47  1D03               	btfss	3,2
  8351  1F48  2F4A               	goto	u4841
  8352  1F49  2F4B               	goto	u4840
  8353  1F4A                     u4841:	
  8354  1F4A  2F3B               	goto	l3068
  8355  1F4B                     u4840:	
  8356  1F4B                     l3070:	
  8357  1F4B  085E               	movf	___fltol@sign1,w
  8358  1F4C  1903               	btfsc	3,2
  8359  1F4D  2F4F               	goto	u4851
  8360  1F4E  2F50               	goto	u4850
  8361  1F4F                     u4851:	
  8362  1F4F  2F5B               	goto	l586
  8363  1F50                     u4850:	
  8364  1F50                     l3072:	
  8365  1F50  09D5               	comf	___fltol@f1,f
  8366  1F51  09D6               	comf	___fltol@f1+1,f
  8367  1F52  09D7               	comf	___fltol@f1+2,f
  8368  1F53  09D8               	comf	___fltol@f1+3,f
  8369  1F54  0AD5               	incf	___fltol@f1,f
  8370  1F55  1903               	skipnz
  8371  1F56  0AD6               	incf	___fltol@f1+1,f
  8372  1F57  1903               	skipnz
  8373  1F58  0AD7               	incf	___fltol@f1+2,f
  8374  1F59  1903               	skipnz
  8375  1F5A  0AD8               	incf	___fltol@f1+3,f
  8376  1F5B                     l586:	
  8377  1F5B                     l576:	
  8378  1F5B  0008               	return
  8379  1F5C                     __end_of___fltol:	
  8380                           
  8381                           	psect	text19
  8382  1D7C                     __ptext19:	
  8383 ;; *************** function ___flsub *****************
  8384 ;; Defined at:
  8385 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  a               4    0[BANK1 ] long 
  8388 ;;  b               4    4[BANK1 ] long 
  8389 ;; Auto vars:     Size  Location     Type
  8390 ;;		None
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  4    0[BANK1 ] long 
  8393 ;; Registers used:
  8394 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8400 ;;      Params:         0       0       8       0       0
  8401 ;;      Locals:         0       0       0       0       0
  8402 ;;      Temps:          0       0       0       0       0
  8403 ;;      Totals:         0       0       8       0       0
  8404 ;;Total ram usage:        8 bytes
  8405 ;; Hardware stack levels used:    1
  8406 ;; Hardware stack levels required when called:    2
  8407 ;; This function calls:
  8408 ;;		___fladd
  8409 ;; This function is called by:
  8410 ;;		_sprintf
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           
  8415                           ;psect for function ___flsub
  8416  1D7C                     ___flsub:	
  8417  1D7C                     l3094:	
  8418                           ;incstack = 0
  8419                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8420                           
  8421  1D7C  3080               	movlw	128
  8422  1D7D  1683               	bsf	3,5	;RP0=1, select bank1
  8423  1D7E  1303               	bcf	3,6	;RP1=0, select bank1
  8424  1D7F  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  8425  1D80                     l3096:	
  8426  1D80  0827               	movf	(___flsub@b+3)^(0+128),w
  8427  1D81  1283               	bcf	3,5	;RP0=0, select bank0
  8428  1D82  1303               	bcf	3,6	;RP1=0, select bank0
  8429  1D83  00D9               	movwf	___fladd@b+3
  8430  1D84  1683               	bsf	3,5	;RP0=1, select bank1
  8431  1D85  1303               	bcf	3,6	;RP1=0, select bank1
  8432  1D86  0826               	movf	(___flsub@b+2)^(0+128),w
  8433  1D87  1283               	bcf	3,5	;RP0=0, select bank0
  8434  1D88  1303               	bcf	3,6	;RP1=0, select bank0
  8435  1D89  00D8               	movwf	___fladd@b+2
  8436  1D8A  1683               	bsf	3,5	;RP0=1, select bank1
  8437  1D8B  1303               	bcf	3,6	;RP1=0, select bank1
  8438  1D8C  0825               	movf	(___flsub@b+1)^(0+128),w
  8439  1D8D  1283               	bcf	3,5	;RP0=0, select bank0
  8440  1D8E  1303               	bcf	3,6	;RP1=0, select bank0
  8441  1D8F  00D7               	movwf	___fladd@b+1
  8442  1D90  1683               	bsf	3,5	;RP0=1, select bank1
  8443  1D91  1303               	bcf	3,6	;RP1=0, select bank1
  8444  1D92  0824               	movf	___flsub@b^(0+128),w
  8445  1D93  1283               	bcf	3,5	;RP0=0, select bank0
  8446  1D94  1303               	bcf	3,6	;RP1=0, select bank0
  8447  1D95  00D6               	movwf	___fladd@b
  8448  1D96  1683               	bsf	3,5	;RP0=1, select bank1
  8449  1D97  1303               	bcf	3,6	;RP1=0, select bank1
  8450  1D98  0823               	movf	(___flsub@a+3)^(0+128),w
  8451  1D99  1283               	bcf	3,5	;RP0=0, select bank0
  8452  1D9A  1303               	bcf	3,6	;RP1=0, select bank0
  8453  1D9B  00DD               	movwf	___fladd@a+3
  8454  1D9C  1683               	bsf	3,5	;RP0=1, select bank1
  8455  1D9D  1303               	bcf	3,6	;RP1=0, select bank1
  8456  1D9E  0822               	movf	(___flsub@a+2)^(0+128),w
  8457  1D9F  1283               	bcf	3,5	;RP0=0, select bank0
  8458  1DA0  1303               	bcf	3,6	;RP1=0, select bank0
  8459  1DA1  00DC               	movwf	___fladd@a+2
  8460  1DA2  1683               	bsf	3,5	;RP0=1, select bank1
  8461  1DA3  1303               	bcf	3,6	;RP1=0, select bank1
  8462  1DA4  0821               	movf	(___flsub@a+1)^(0+128),w
  8463  1DA5  1283               	bcf	3,5	;RP0=0, select bank0
  8464  1DA6  1303               	bcf	3,6	;RP1=0, select bank0
  8465  1DA7  00DB               	movwf	___fladd@a+1
  8466  1DA8  1683               	bsf	3,5	;RP0=1, select bank1
  8467  1DA9  1303               	bcf	3,6	;RP1=0, select bank1
  8468  1DAA  0820               	movf	___flsub@a^(0+128),w
  8469  1DAB  1283               	bcf	3,5	;RP0=0, select bank0
  8470  1DAC  1303               	bcf	3,6	;RP1=0, select bank0
  8471  1DAD  00DA               	movwf	___fladd@a
  8472  1DAE  160A  118A  2578  160A  158A  	fcall	___fladd
  8473  1DB3  1283               	bcf	3,5	;RP0=0, select bank0
  8474  1DB4  1303               	bcf	3,6	;RP1=0, select bank0
  8475  1DB5  0859               	movf	?___fladd+3,w
  8476  1DB6  1683               	bsf	3,5	;RP0=1, select bank1
  8477  1DB7  1303               	bcf	3,6	;RP1=0, select bank1
  8478  1DB8  00A3               	movwf	(?___flsub+3)^(0+128)
  8479  1DB9  1283               	bcf	3,5	;RP0=0, select bank0
  8480  1DBA  1303               	bcf	3,6	;RP1=0, select bank0
  8481  1DBB  0858               	movf	?___fladd+2,w
  8482  1DBC  1683               	bsf	3,5	;RP0=1, select bank1
  8483  1DBD  1303               	bcf	3,6	;RP1=0, select bank1
  8484  1DBE  00A2               	movwf	(?___flsub+2)^(0+128)
  8485  1DBF  1283               	bcf	3,5	;RP0=0, select bank0
  8486  1DC0  1303               	bcf	3,6	;RP1=0, select bank0
  8487  1DC1  0857               	movf	?___fladd+1,w
  8488  1DC2  1683               	bsf	3,5	;RP0=1, select bank1
  8489  1DC3  1303               	bcf	3,6	;RP1=0, select bank1
  8490  1DC4  00A1               	movwf	(?___flsub+1)^(0+128)
  8491  1DC5  1283               	bcf	3,5	;RP0=0, select bank0
  8492  1DC6  1303               	bcf	3,6	;RP1=0, select bank0
  8493  1DC7  0856               	movf	?___fladd,w
  8494  1DC8  1683               	bsf	3,5	;RP0=1, select bank1
  8495  1DC9  1303               	bcf	3,6	;RP1=0, select bank1
  8496  1DCA  00A0               	movwf	?___flsub^(0+128)
  8497  1DCB                     l746:	
  8498  1DCB  0008               	return
  8499  1DCC                     __end_of___flsub:	
  8500                           
  8501                           	psect	text20
  8502  1578                     __ptext20:	
  8503 ;; *************** function ___fladd *****************
  8504 ;; Defined at:
  8505 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;  b               4   54[BANK0 ] long 
  8508 ;;  a               4   58[BANK0 ] long 
  8509 ;; Auto vars:     Size  Location     Type
  8510 ;;  grs             1   73[BANK0 ] unsigned char 
  8511 ;;  bexp            1   72[BANK0 ] unsigned char 
  8512 ;;  aexp            1   71[BANK0 ] unsigned char 
  8513 ;;  signs           1   70[BANK0 ] unsigned char 
  8514 ;; Return value:  Size  Location     Type
  8515 ;;                  4   54[BANK0 ] unsigned char 
  8516 ;; Registers used:
  8517 ;;		wreg, status,2, status,0, btemp+1
  8518 ;; Tracked objects:
  8519 ;;		On entry : 0/0
  8520 ;;		On exit  : 0/0
  8521 ;;		Unchanged: 0/0
  8522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8523 ;;      Params:         0       8       0       0       0
  8524 ;;      Locals:         0       4       0       0       0
  8525 ;;      Temps:          0       8       0       0       0
  8526 ;;      Totals:         0      20       0       0       0
  8527 ;;Total ram usage:       20 bytes
  8528 ;; Hardware stack levels used:    1
  8529 ;; Hardware stack levels required when called:    1
  8530 ;; This function calls:
  8531 ;;		Nothing
  8532 ;; This function is called by:
  8533 ;;		_sprintf
  8534 ;;		___flsub
  8535 ;; This function uses a non-reentrant model
  8536 ;;
  8537                           
  8538                           
  8539                           ;psect for function ___fladd
  8540  1578                     ___fladd:	
  8541  1578                     l2434:	
  8542                           ;incstack = 0
  8543                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8544                           
  8545  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8546  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8547  157A  0859               	movf	___fladd@b+3,w
  8548  157B  3980               	andlw	128
  8549  157C  00DE               	movwf	??___fladd
  8550  157D  085E               	movf	??___fladd,w
  8551  157E  00E6               	movwf	___fladd@signs
  8552  157F                     l2436:	
  8553  157F  0859               	movf	___fladd@b+3,w
  8554  1580  00DE               	movwf	??___fladd
  8555  1581  075E               	addwf	??___fladd,w
  8556  1582  00DF               	movwf	??___fladd+1
  8557  1583  085F               	movf	??___fladd+1,w
  8558  1584  00E8               	movwf	___fladd@bexp
  8559  1585                     l2438:	
  8560  1585  1FD8               	btfss	___fladd@b+2,7
  8561  1586  2D88               	goto	u3181
  8562  1587  2D89               	goto	u3180
  8563  1588                     u3181:	
  8564  1588  2D8A               	goto	l2442
  8565  1589                     u3180:	
  8566  1589                     l2440:	
  8567  1589  1468               	bsf	___fladd@bexp,0
  8568  158A                     l2442:	
  8569  158A  0868               	movf	___fladd@bexp,w
  8570  158B  1903               	btfsc	3,2
  8571  158C  2D8E               	goto	u3191
  8572  158D  2D8F               	goto	u3190
  8573  158E                     u3191:	
  8574  158E  2D9F               	goto	l2452
  8575  158F                     u3190:	
  8576  158F                     l2444:	
  8577  158F  0A68               	incf	___fladd@bexp,w
  8578  1590  1D03               	btfss	3,2
  8579  1591  2D93               	goto	u3201
  8580  1592  2D94               	goto	u3200
  8581  1593                     u3201:	
  8582  1593  2D9C               	goto	l2448
  8583  1594                     u3200:	
  8584  1594                     l2446:	
  8585  1594  3000               	movlw	0
  8586  1595  00D9               	movwf	___fladd@b+3
  8587  1596  3000               	movlw	0
  8588  1597  00D8               	movwf	___fladd@b+2
  8589  1598  3000               	movlw	0
  8590  1599  00D7               	movwf	___fladd@b+1
  8591  159A  3000               	movlw	0
  8592  159B  00D6               	movwf	___fladd@b
  8593  159C                     l2448:	
  8594  159C  17D8               	bsf	___fladd@b+2,7
  8595  159D                     l2450:	
  8596  159D  01D9               	clrf	___fladd@b+3
  8597  159E  2DA7               	goto	l2454
  8598  159F                     l2452:	
  8599  159F  3000               	movlw	0
  8600  15A0  00D9               	movwf	___fladd@b+3
  8601  15A1  3000               	movlw	0
  8602  15A2  00D8               	movwf	___fladd@b+2
  8603  15A3  3000               	movlw	0
  8604  15A4  00D7               	movwf	___fladd@b+1
  8605  15A5  3000               	movlw	0
  8606  15A6  00D6               	movwf	___fladd@b
  8607  15A7                     l2454:	
  8608  15A7  085D               	movf	___fladd@a+3,w
  8609  15A8  3980               	andlw	128
  8610  15A9  00DE               	movwf	??___fladd
  8611  15AA  085E               	movf	??___fladd,w
  8612  15AB  00E7               	movwf	___fladd@aexp
  8613  15AC                     l2456:	
  8614  15AC  0867               	movf	___fladd@aexp,w
  8615  15AD  0666               	xorwf	___fladd@signs,w
  8616  15AE  1903               	skipnz
  8617  15AF  2DB1               	goto	u3211
  8618  15B0  2DB2               	goto	u3210
  8619  15B1                     u3211:	
  8620  15B1  2DB3               	goto	l2460
  8621  15B2                     u3210:	
  8622  15B2                     l2458:	
  8623  15B2  1766               	bsf	___fladd@signs,6
  8624  15B3                     l2460:	
  8625  15B3  085D               	movf	___fladd@a+3,w
  8626  15B4  00DE               	movwf	??___fladd
  8627  15B5  075E               	addwf	??___fladd,w
  8628  15B6  00DF               	movwf	??___fladd+1
  8629  15B7  085F               	movf	??___fladd+1,w
  8630  15B8  00E7               	movwf	___fladd@aexp
  8631  15B9                     l2462:	
  8632  15B9  1FDC               	btfss	___fladd@a+2,7
  8633  15BA  2DBC               	goto	u3221
  8634  15BB  2DBD               	goto	u3220
  8635  15BC                     u3221:	
  8636  15BC  2DBE               	goto	l2466
  8637  15BD                     u3220:	
  8638  15BD                     l2464:	
  8639  15BD  1467               	bsf	___fladd@aexp,0
  8640  15BE                     l2466:	
  8641  15BE  0867               	movf	___fladd@aexp,w
  8642  15BF  1903               	btfsc	3,2
  8643  15C0  2DC2               	goto	u3231
  8644  15C1  2DC3               	goto	u3230
  8645  15C2                     u3231:	
  8646  15C2  2DD3               	goto	l2476
  8647  15C3                     u3230:	
  8648  15C3                     l2468:	
  8649  15C3  0A67               	incf	___fladd@aexp,w
  8650  15C4  1D03               	btfss	3,2
  8651  15C5  2DC7               	goto	u3241
  8652  15C6  2DC8               	goto	u3240
  8653  15C7                     u3241:	
  8654  15C7  2DD0               	goto	l2472
  8655  15C8                     u3240:	
  8656  15C8                     l2470:	
  8657  15C8  3000               	movlw	0
  8658  15C9  00DD               	movwf	___fladd@a+3
  8659  15CA  3000               	movlw	0
  8660  15CB  00DC               	movwf	___fladd@a+2
  8661  15CC  3000               	movlw	0
  8662  15CD  00DB               	movwf	___fladd@a+1
  8663  15CE  3000               	movlw	0
  8664  15CF  00DA               	movwf	___fladd@a
  8665  15D0                     l2472:	
  8666  15D0  17DC               	bsf	___fladd@a+2,7
  8667  15D1                     l2474:	
  8668  15D1  01DD               	clrf	___fladd@a+3
  8669  15D2  2DDB               	goto	l700
  8670  15D3                     l2476:	
  8671  15D3  3000               	movlw	0
  8672  15D4  00DD               	movwf	___fladd@a+3
  8673  15D5  3000               	movlw	0
  8674  15D6  00DC               	movwf	___fladd@a+2
  8675  15D7  3000               	movlw	0
  8676  15D8  00DB               	movwf	___fladd@a+1
  8677  15D9  3000               	movlw	0
  8678  15DA  00DA               	movwf	___fladd@a
  8679  15DB                     l700:	
  8680  15DB  0868               	movf	___fladd@bexp,w
  8681  15DC  0267               	subwf	___fladd@aexp,w
  8682  15DD  1803               	skipnc
  8683  15DE  2DE0               	goto	u3251
  8684  15DF  2DE1               	goto	u3250
  8685  15E0                     u3251:	
  8686  15E0  2E25               	goto	l2512
  8687  15E1                     u3250:	
  8688  15E1                     l2478:	
  8689  15E1  1F66               	btfss	___fladd@signs,6
  8690  15E2  2DE4               	goto	u3261
  8691  15E3  2DE5               	goto	u3260
  8692  15E4                     u3261:	
  8693  15E4  2DE9               	goto	l2482
  8694  15E5                     u3260:	
  8695  15E5                     l2480:	
  8696  15E5  3080               	movlw	128
  8697  15E6  00DE               	movwf	??___fladd
  8698  15E7  085E               	movf	??___fladd,w
  8699  15E8  06E6               	xorwf	___fladd@signs,f
  8700  15E9                     l2482:	
  8701  15E9  0868               	movf	___fladd@bexp,w
  8702  15EA  00DE               	movwf	??___fladd
  8703  15EB  085E               	movf	??___fladd,w
  8704  15EC  00E9               	movwf	___fladd@grs
  8705  15ED                     l2484:	
  8706  15ED  0867               	movf	___fladd@aexp,w
  8707  15EE  00DE               	movwf	??___fladd
  8708  15EF  085E               	movf	??___fladd,w
  8709  15F0  00E8               	movwf	___fladd@bexp
  8710  15F1                     l2486:	
  8711  15F1  0869               	movf	___fladd@grs,w
  8712  15F2  00DE               	movwf	??___fladd
  8713  15F3  085E               	movf	??___fladd,w
  8714  15F4  00E7               	movwf	___fladd@aexp
  8715  15F5                     l2488:	
  8716  15F5  0856               	movf	___fladd@b,w
  8717  15F6  00DE               	movwf	??___fladd
  8718  15F7  085E               	movf	??___fladd,w
  8719  15F8  00E9               	movwf	___fladd@grs
  8720  15F9                     l2490:	
  8721  15F9  085A               	movf	___fladd@a,w
  8722  15FA  00DE               	movwf	??___fladd
  8723  15FB  085E               	movf	??___fladd,w
  8724  15FC  00D6               	movwf	___fladd@b
  8725  15FD                     l2492:	
  8726  15FD  0869               	movf	___fladd@grs,w
  8727  15FE  00DE               	movwf	??___fladd
  8728  15FF  085E               	movf	??___fladd,w
  8729  1600  00DA               	movwf	___fladd@a
  8730  1601                     l2494:	
  8731  1601  0857               	movf	___fladd@b+1,w
  8732  1602  00DE               	movwf	??___fladd
  8733  1603  085E               	movf	??___fladd,w
  8734  1604  00E9               	movwf	___fladd@grs
  8735  1605                     l2496:	
  8736  1605  085B               	movf	___fladd@a+1,w
  8737  1606  00DE               	movwf	??___fladd
  8738  1607  085E               	movf	??___fladd,w
  8739  1608  00D7               	movwf	___fladd@b+1
  8740  1609                     l2498:	
  8741  1609  0869               	movf	___fladd@grs,w
  8742  160A  00DE               	movwf	??___fladd
  8743  160B  085E               	movf	??___fladd,w
  8744  160C  00DB               	movwf	___fladd@a+1
  8745  160D                     l2500:	
  8746  160D  0858               	movf	___fladd@b+2,w
  8747  160E  00DE               	movwf	??___fladd
  8748  160F  085E               	movf	??___fladd,w
  8749  1610  00E9               	movwf	___fladd@grs
  8750  1611                     l2502:	
  8751  1611  085C               	movf	___fladd@a+2,w
  8752  1612  00DE               	movwf	??___fladd
  8753  1613  085E               	movf	??___fladd,w
  8754  1614  00D8               	movwf	___fladd@b+2
  8755  1615                     l2504:	
  8756  1615  0869               	movf	___fladd@grs,w
  8757  1616  00DE               	movwf	??___fladd
  8758  1617  085E               	movf	??___fladd,w
  8759  1618  00DC               	movwf	___fladd@a+2
  8760  1619                     l2506:	
  8761  1619  0859               	movf	___fladd@b+3,w
  8762  161A  00DE               	movwf	??___fladd
  8763  161B  085E               	movf	??___fladd,w
  8764  161C  00E9               	movwf	___fladd@grs
  8765  161D                     l2508:	
  8766  161D  085D               	movf	___fladd@a+3,w
  8767  161E  00DE               	movwf	??___fladd
  8768  161F  085E               	movf	??___fladd,w
  8769  1620  00D9               	movwf	___fladd@b+3
  8770  1621                     l2510:	
  8771  1621  0869               	movf	___fladd@grs,w
  8772  1622  00DE               	movwf	??___fladd
  8773  1623  085E               	movf	??___fladd,w
  8774  1624  00DD               	movwf	___fladd@a+3
  8775  1625                     l2512:	
  8776  1625  01E9               	clrf	___fladd@grs
  8777  1626                     l2514:	
  8778  1626  0867               	movf	___fladd@aexp,w
  8779  1627  00DE               	movwf	??___fladd
  8780  1628  01DF               	clrf	??___fladd+1
  8781  1629  085F               	movf	??___fladd+1,w
  8782  162A  00E1               	movwf	??___fladd+3
  8783  162B  0868               	movf	___fladd@bexp,w
  8784  162C  025E               	subwf	??___fladd,w
  8785  162D  00E0               	movwf	??___fladd+2
  8786  162E  1C03               	skipc
  8787  162F  03E1               	decf	??___fladd+3,f
  8788  1630  0861               	movf	??___fladd+3,w
  8789  1631  3A80               	xorlw	128
  8790  1632  00FF               	movwf	btemp+1
  8791  1633  3080               	movlw	128
  8792  1634  027F               	subwf	btemp+1,w
  8793  1635  1D03               	skipz
  8794  1636  2E39               	goto	u3275
  8795  1637  301A               	movlw	26
  8796  1638  0260               	subwf	??___fladd+2,w
  8797  1639                     u3275:	
  8798  1639  1C03               	skipc
  8799  163A  2E3C               	goto	u3271
  8800  163B  2E3D               	goto	u3270
  8801  163C                     u3271:	
  8802  163C  2E7A               	goto	l2530
  8803  163D                     u3270:	
  8804  163D                     l2516:	
  8805  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8806  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8807  163F  0859               	movf	___fladd@b+3,w
  8808  1640  0458               	iorwf	___fladd@b+2,w
  8809  1641  0457               	iorwf	___fladd@b+1,w
  8810  1642  0456               	iorwf	___fladd@b,w
  8811  1643  1D03               	skipz
  8812  1644  2E46               	goto	u3281
  8813  1645  2E48               	goto	u3280
  8814  1646                     u3281:	
  8815  1646  3001               	movlw	1
  8816  1647  2E49               	goto	u3290
  8817  1648                     u3280:	
  8818  1648  3000               	movlw	0
  8819  1649                     u3290:	
  8820  1649  00DE               	movwf	??___fladd
  8821  164A  085E               	movf	??___fladd,w
  8822  164B  00E9               	movwf	___fladd@grs
  8823  164C  3000               	movlw	0
  8824  164D  00D9               	movwf	___fladd@b+3
  8825  164E  3000               	movlw	0
  8826  164F  00D8               	movwf	___fladd@b+2
  8827  1650  3000               	movlw	0
  8828  1651  00D7               	movwf	___fladd@b+1
  8829  1652  3000               	movlw	0
  8830  1653  00D6               	movwf	___fladd@b
  8831  1654  0867               	movf	___fladd@aexp,w
  8832  1655  00DE               	movwf	??___fladd
  8833  1656  085E               	movf	??___fladd,w
  8834  1657  00E8               	movwf	___fladd@bexp
  8835  1658  2E82               	goto	l704
  8836  1659                     l706:	
  8837  1659  1C69               	btfss	___fladd@grs,0
  8838  165A  2E5C               	goto	u3301
  8839  165B  2E5D               	goto	u3300
  8840  165C                     u3301:	
  8841  165C  2E66               	goto	l2520
  8842  165D                     u3300:	
  8843  165D                     l2518:	
  8844  165D  0869               	movf	___fladd@grs,w
  8845  165E  00DE               	movwf	??___fladd
  8846  165F  1003               	clrc
  8847  1660  0C5E               	rrf	??___fladd,w
  8848  1661  3801               	iorlw	1
  8849  1662  00DF               	movwf	??___fladd+1
  8850  1663  085F               	movf	??___fladd+1,w
  8851  1664  00E9               	movwf	___fladd@grs
  8852  1665  2E68               	goto	l2522
  8853  1666                     l2520:	
  8854  1666  1003               	clrc
  8855  1667  0CE9               	rrf	___fladd@grs,f
  8856  1668                     l2522:	
  8857  1668  1C56               	btfss	___fladd@b,0
  8858  1669  2E6B               	goto	u3311
  8859  166A  2E6C               	goto	u3310
  8860  166B                     u3311:	
  8861  166B  2E6D               	goto	l2526
  8862  166C                     u3310:	
  8863  166C                     l2524:	
  8864  166C  17E9               	bsf	___fladd@grs,7
  8865  166D                     l2526:	
  8866  166D  3001               	movlw	1
  8867  166E  00DE               	movwf	??___fladd
  8868  166F                     u3325:	
  8869  166F  0D59               	rlf	___fladd@b+3,w
  8870  1670  0CD9               	rrf	___fladd@b+3,f
  8871  1671  0CD8               	rrf	___fladd@b+2,f
  8872  1672  0CD7               	rrf	___fladd@b+1,f
  8873  1673  0CD6               	rrf	___fladd@b,f
  8874  1674  0BDE               	decfsz	??___fladd& (0+127),f
  8875  1675  2E6F               	goto	u3325
  8876  1676                     l2528:	
  8877  1676  3001               	movlw	1
  8878  1677  00DE               	movwf	??___fladd
  8879  1678  085E               	movf	??___fladd,w
  8880  1679  07E8               	addwf	___fladd@bexp,f
  8881  167A                     l2530:	
  8882  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8883  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8884  167C  0867               	movf	___fladd@aexp,w
  8885  167D  0268               	subwf	___fladd@bexp,w
  8886  167E  1C03               	skipc
  8887  167F  2E81               	goto	u3331
  8888  1680  2E82               	goto	u3330
  8889  1681                     u3331:	
  8890  1681  2E59               	goto	l706
  8891  1682                     u3330:	
  8892  1682                     l704:	
  8893  1682  1B66               	btfsc	___fladd@signs,6
  8894  1683  2E85               	goto	u3341
  8895  1684  2E86               	goto	u3340
  8896  1685                     u3341:	
  8897  1685  2ED1               	goto	l2556
  8898  1686                     u3340:	
  8899  1686                     l2532:	
  8900  1686  0868               	movf	___fladd@bexp,w
  8901  1687  1D03               	btfss	3,2
  8902  1688  2E8A               	goto	u3351
  8903  1689  2E8B               	goto	u3350
  8904  168A                     u3351:	
  8905  168A  2E94               	goto	l2538
  8906  168B                     u3350:	
  8907  168B                     l2534:	
  8908  168B  3000               	movlw	0
  8909  168C  00D9               	movwf	?___fladd+3
  8910  168D  3000               	movlw	0
  8911  168E  00D8               	movwf	?___fladd+2
  8912  168F  3000               	movlw	0
  8913  1690  00D7               	movwf	?___fladd+1
  8914  1691  3000               	movlw	0
  8915  1692  00D6               	movwf	?___fladd
  8916  1693  2FFF               	goto	l713
  8917  1694                     l2538:	
  8918  1694  085A               	movf	___fladd@a,w
  8919  1695  07D6               	addwf	___fladd@b,f
  8920  1696  085B               	movf	___fladd@a+1,w
  8921  1697  1103               	clrz
  8922  1698  1803               	skipnc
  8923  1699  3E01               	addlw	1
  8924  169A  1903               	skipnz
  8925  169B  2E9D               	goto	u3361
  8926  169C  07D7               	addwf	___fladd@b+1,f
  8927  169D                     u3361:	
  8928  169D  085C               	movf	___fladd@a+2,w
  8929  169E  1103               	clrz
  8930  169F  1803               	skipnc
  8931  16A0  3E01               	addlw	1
  8932  16A1  1903               	skipnz
  8933  16A2  2EA4               	goto	u3362
  8934  16A3  07D8               	addwf	___fladd@b+2,f
  8935  16A4                     u3362:	
  8936  16A4  085D               	movf	___fladd@a+3,w
  8937  16A5  1103               	clrz
  8938  16A6  1803               	skipnc
  8939  16A7  3E01               	addlw	1
  8940  16A8  1903               	skipnz
  8941  16A9  2EAB               	goto	u3363
  8942  16AA  07D9               	addwf	___fladd@b+3,f
  8943  16AB                     u3363:	
  8944  16AB                     l2540:	
  8945  16AB  1C59               	btfss	___fladd@b+3,0
  8946  16AC  2EAE               	goto	u3371
  8947  16AD  2EAF               	goto	u3370
  8948  16AE                     u3371:	
  8949  16AE  2F85               	goto	l2590
  8950  16AF                     u3370:	
  8951  16AF                     l2542:	
  8952  16AF  1C69               	btfss	___fladd@grs,0
  8953  16B0  2EB2               	goto	u3381
  8954  16B1  2EB3               	goto	u3380
  8955  16B2                     u3381:	
  8956  16B2  2EBC               	goto	l2546
  8957  16B3                     u3380:	
  8958  16B3                     l2544:	
  8959  16B3  0869               	movf	___fladd@grs,w
  8960  16B4  00DE               	movwf	??___fladd
  8961  16B5  1003               	clrc
  8962  16B6  0C5E               	rrf	??___fladd,w
  8963  16B7  3801               	iorlw	1
  8964  16B8  00DF               	movwf	??___fladd+1
  8965  16B9  085F               	movf	??___fladd+1,w
  8966  16BA  00E9               	movwf	___fladd@grs
  8967  16BB  2EBE               	goto	l2548
  8968  16BC                     l2546:	
  8969  16BC  1003               	clrc
  8970  16BD  0CE9               	rrf	___fladd@grs,f
  8971  16BE                     l2548:	
  8972  16BE  1C56               	btfss	___fladd@b,0
  8973  16BF  2EC1               	goto	u3391
  8974  16C0  2EC2               	goto	u3390
  8975  16C1                     u3391:	
  8976  16C1  2EC3               	goto	l2552
  8977  16C2                     u3390:	
  8978  16C2                     l2550:	
  8979  16C2  17E9               	bsf	___fladd@grs,7
  8980  16C3                     l2552:	
  8981  16C3  3001               	movlw	1
  8982  16C4  00DE               	movwf	??___fladd
  8983  16C5                     u3405:	
  8984  16C5  0D59               	rlf	___fladd@b+3,w
  8985  16C6  0CD9               	rrf	___fladd@b+3,f
  8986  16C7  0CD8               	rrf	___fladd@b+2,f
  8987  16C8  0CD7               	rrf	___fladd@b+1,f
  8988  16C9  0CD6               	rrf	___fladd@b,f
  8989  16CA  0BDE               	decfsz	??___fladd& (0+127),f
  8990  16CB  2EC5               	goto	u3405
  8991  16CC                     l2554:	
  8992  16CC  3001               	movlw	1
  8993  16CD  00DE               	movwf	??___fladd
  8994  16CE  085E               	movf	??___fladd,w
  8995  16CF  07E8               	addwf	___fladd@bexp,f
  8996  16D0  2F85               	goto	l2590
  8997  16D1                     l2556:	
  8998  16D1  0859               	movf	___fladd@b+3,w
  8999  16D2  3A80               	xorlw	128
  9000  16D3  00FF               	movwf	btemp+1
  9001  16D4  085D               	movf	___fladd@a+3,w
  9002  16D5  3A80               	xorlw	128
  9003  16D6  027F               	subwf	btemp+1,w
  9004  16D7  1D03               	skipz
  9005  16D8  2EE3               	goto	u3413
  9006  16D9  085C               	movf	___fladd@a+2,w
  9007  16DA  0258               	subwf	___fladd@b+2,w
  9008  16DB  1D03               	skipz
  9009  16DC  2EE3               	goto	u3413
  9010  16DD  085B               	movf	___fladd@a+1,w
  9011  16DE  0257               	subwf	___fladd@b+1,w
  9012  16DF  1D03               	skipz
  9013  16E0  2EE3               	goto	u3413
  9014  16E1  085A               	movf	___fladd@a,w
  9015  16E2  0256               	subwf	___fladd@b,w
  9016  16E3                     u3413:	
  9017  16E3  1803               	skipnc
  9018  16E4  2EE6               	goto	u3411
  9019  16E5  2EE7               	goto	u3410
  9020  16E6                     u3411:	
  9021  16E6  2F3F               	goto	l2566
  9022  16E7                     u3410:	
  9023  16E7                     l2558:	
  9024  16E7  30FF               	movlw	255
  9025  16E8  00DE               	movwf	??___fladd
  9026  16E9  30FF               	movlw	255
  9027  16EA  00DF               	movwf	??___fladd+1
  9028  16EB  30FF               	movlw	255
  9029  16EC  00E0               	movwf	??___fladd+2
  9030  16ED  30FF               	movlw	255
  9031  16EE  00E1               	movwf	??___fladd+3
  9032  16EF  085A               	movf	___fladd@a,w
  9033  16F0  00E2               	movwf	??___fladd+4
  9034  16F1  085B               	movf	___fladd@a+1,w
  9035  16F2  00E3               	movwf	??___fladd+5
  9036  16F3  085C               	movf	___fladd@a+2,w
  9037  16F4  00E4               	movwf	??___fladd+6
  9038  16F5  085D               	movf	___fladd@a+3,w
  9039  16F6  00E5               	movwf	??___fladd+7
  9040  16F7  0856               	movf	___fladd@b,w
  9041  16F8  02E2               	subwf	??___fladd+4,f
  9042  16F9  0857               	movf	___fladd@b+1,w
  9043  16FA  1C03               	skipc
  9044  16FB  0F57               	incfsz	___fladd@b+1,w
  9045  16FC  2EFE               	goto	u3421
  9046  16FD  2EFF               	goto	u3422
  9047  16FE                     u3421:	
  9048  16FE  02E3               	subwf	??___fladd+5,f
  9049  16FF                     u3422:	
  9050  16FF  0858               	movf	___fladd@b+2,w
  9051  1700  1C03               	skipc
  9052  1701  0F58               	incfsz	___fladd@b+2,w
  9053  1702  2F04               	goto	u3423
  9054  1703  2F05               	goto	u3424
  9055  1704                     u3423:	
  9056  1704  02E4               	subwf	??___fladd+6,f
  9057  1705                     u3424:	
  9058  1705  0859               	movf	___fladd@b+3,w
  9059  1706  1C03               	skipc
  9060  1707  0F59               	incfsz	___fladd@b+3,w
  9061  1708  2F0A               	goto	u3425
  9062  1709  2F0B               	goto	u3426
  9063  170A                     u3425:	
  9064  170A  02E5               	subwf	??___fladd+7,f
  9065  170B                     u3426:	
  9066  170B  0862               	movf	??___fladd+4,w
  9067  170C  07DE               	addwf	??___fladd,f
  9068  170D  0863               	movf	??___fladd+5,w
  9069  170E  1803               	skipnc
  9070  170F  0F63               	incfsz	??___fladd+5,w
  9071  1710  2F12               	goto	u3430
  9072  1711  2F13               	goto	u3431
  9073  1712                     u3430:	
  9074  1712  07DF               	addwf	??___fladd+1,f
  9075  1713                     u3431:	
  9076  1713  0864               	movf	??___fladd+6,w
  9077  1714  1803               	skipnc
  9078  1715  0F64               	incfsz	??___fladd+6,w
  9079  1716  2F18               	goto	u3432
  9080  1717  2F19               	goto	u3433
  9081  1718                     u3432:	
  9082  1718  07E0               	addwf	??___fladd+2,f
  9083  1719                     u3433:	
  9084  1719  0865               	movf	??___fladd+7,w
  9085  171A  1803               	skipnc
  9086  171B  0A65               	incf	??___fladd+7,w
  9087  171C  07E1               	addwf	??___fladd+3,f
  9088  171D  0861               	movf	??___fladd+3,w
  9089  171E  00D9               	movwf	___fladd@b+3
  9090  171F  0860               	movf	??___fladd+2,w
  9091  1720  00D8               	movwf	___fladd@b+2
  9092  1721  085F               	movf	??___fladd+1,w
  9093  1722  00D7               	movwf	___fladd@b+1
  9094  1723  085E               	movf	??___fladd,w
  9095  1724  00D6               	movwf	___fladd@b
  9096  1725                     l2560:	
  9097  1725  3080               	movlw	128
  9098  1726  00DE               	movwf	??___fladd
  9099  1727  085E               	movf	??___fladd,w
  9100  1728  06E6               	xorwf	___fladd@signs,f
  9101  1729  09E9               	comf	___fladd@grs,f
  9102  172A  0AE9               	incf	___fladd@grs,f
  9103  172B                     l2562:	
  9104  172B  0869               	movf	___fladd@grs,w
  9105  172C  1D03               	btfss	3,2
  9106  172D  2F2F               	goto	u3441
  9107  172E  2F30               	goto	u3440
  9108  172F                     u3441:	
  9109  172F  2F4D               	goto	l721
  9110  1730                     u3440:	
  9111  1730                     l2564:	
  9112  1730  3001               	movlw	1
  9113  1731  07D6               	addwf	___fladd@b,f
  9114  1732  3000               	movlw	0
  9115  1733  1803               	skipnc
  9116  1734  3001               	movlw	1
  9117  1735  07D7               	addwf	___fladd@b+1,f
  9118  1736  3000               	movlw	0
  9119  1737  1803               	skipnc
  9120  1738  3001               	movlw	1
  9121  1739  07D8               	addwf	___fladd@b+2,f
  9122  173A  3000               	movlw	0
  9123  173B  1803               	skipnc
  9124  173C  3001               	movlw	1
  9125  173D  07D9               	addwf	___fladd@b+3,f
  9126  173E  2F4D               	goto	l721
  9127  173F                     l2566:	
  9128  173F  085A               	movf	___fladd@a,w
  9129  1740  02D6               	subwf	___fladd@b,f
  9130  1741  085B               	movf	___fladd@a+1,w
  9131  1742  1C03               	skipc
  9132  1743  0F5B               	incfsz	___fladd@a+1,w
  9133  1744  02D7               	subwf	___fladd@b+1,f
  9134  1745  085C               	movf	___fladd@a+2,w
  9135  1746  1C03               	skipc
  9136  1747  0F5C               	incfsz	___fladd@a+2,w
  9137  1748  02D8               	subwf	___fladd@b+2,f
  9138  1749  085D               	movf	___fladd@a+3,w
  9139  174A  1C03               	skipc
  9140  174B  0F5D               	incfsz	___fladd@a+3,w
  9141  174C  02D9               	subwf	___fladd@b+3,f
  9142  174D                     l721:	
  9143  174D  0859               	movf	___fladd@b+3,w
  9144  174E  0458               	iorwf	___fladd@b+2,w
  9145  174F  0457               	iorwf	___fladd@b+1,w
  9146  1750  0456               	iorwf	___fladd@b,w
  9147  1751  1D03               	skipz
  9148  1752  2F54               	goto	u3451
  9149  1753  2F55               	goto	u3450
  9150  1754                     u3451:	
  9151  1754  2F81               	goto	l2588
  9152  1755                     u3450:	
  9153  1755                     l2568:	
  9154  1755  0869               	movf	___fladd@grs,w
  9155  1756  1D03               	btfss	3,2
  9156  1757  2F59               	goto	u3461
  9157  1758  2F5A               	goto	u3460
  9158  1759                     u3461:	
  9159  1759  2F81               	goto	l2588
  9160  175A                     u3460:	
  9161  175A                     l2570:	
  9162  175A  3000               	movlw	0
  9163  175B  00D9               	movwf	?___fladd+3
  9164  175C  3000               	movlw	0
  9165  175D  00D8               	movwf	?___fladd+2
  9166  175E  3000               	movlw	0
  9167  175F  00D7               	movwf	?___fladd+1
  9168  1760  3000               	movlw	0
  9169  1761  00D6               	movwf	?___fladd
  9170  1762  2FFF               	goto	l713
  9171  1763                     l2574:	
  9172  1763  3001               	movlw	1
  9173  1764  00DE               	movwf	??___fladd
  9174  1765                     u3475:	
  9175  1765  1003               	clrc
  9176  1766  0DD6               	rlf	___fladd@b,f
  9177  1767  0DD7               	rlf	___fladd@b+1,f
  9178  1768  0DD8               	rlf	___fladd@b+2,f
  9179  1769  0DD9               	rlf	___fladd@b+3,f
  9180  176A  0BDE               	decfsz	??___fladd,f
  9181  176B  2F65               	goto	u3475
  9182  176C                     l2576:	
  9183  176C  1FE9               	btfss	___fladd@grs,7
  9184  176D  2F6F               	goto	u3481
  9185  176E  2F70               	goto	u3480
  9186  176F                     u3481:	
  9187  176F  2F71               	goto	l725
  9188  1770                     u3480:	
  9189  1770                     l2578:	
  9190  1770  1456               	bsf	___fladd@b,0
  9191  1771                     l725:	
  9192  1771  1C69               	btfss	___fladd@grs,0
  9193  1772  2F74               	goto	u3491
  9194  1773  2F75               	goto	u3490
  9195  1774                     u3491:	
  9196  1774  2F78               	goto	l2582
  9197  1775                     u3490:	
  9198  1775                     l2580:	
  9199  1775  1403               	setc
  9200  1776  0DE9               	rlf	___fladd@grs,f
  9201  1777  2F7A               	goto	l2584
  9202  1778                     l2582:	
  9203  1778  1003               	clrc
  9204  1779  0DE9               	rlf	___fladd@grs,f
  9205  177A                     l2584:	
  9206  177A  0868               	movf	___fladd@bexp,w
  9207  177B  1903               	btfsc	3,2
  9208  177C  2F7E               	goto	u3501
  9209  177D  2F7F               	goto	u3500
  9210  177E                     u3501:	
  9211  177E  2F81               	goto	l2588
  9212  177F                     u3500:	
  9213  177F                     l2586:	
  9214  177F  3001               	movlw	1
  9215  1780  02E8               	subwf	___fladd@bexp,f
  9216  1781                     l2588:	
  9217  1781  1FD8               	btfss	___fladd@b+2,7
  9218  1782  2F84               	goto	u3511
  9219  1783  2F85               	goto	u3510
  9220  1784                     u3511:	
  9221  1784  2F63               	goto	l2574
  9222  1785                     u3510:	
  9223  1785                     l2590:	
  9224  1785  01E7               	clrf	___fladd@aexp
  9225  1786                     l2592:	
  9226  1786  1FE9               	btfss	___fladd@grs,7
  9227  1787  2F89               	goto	u3521
  9228  1788  2F8A               	goto	u3520
  9229  1789                     u3521:	
  9230  1789  2F98               	goto	l2600
  9231  178A                     u3520:	
  9232  178A                     l2594:	
  9233  178A  0869               	movf	___fladd@grs,w
  9234  178B  397F               	andlw	127
  9235  178C  1903               	btfsc	3,2
  9236  178D  2F8F               	goto	u3531
  9237  178E  2F90               	goto	u3530
  9238  178F                     u3531:	
  9239  178F  2F93               	goto	l731
  9240  1790                     u3530:	
  9241  1790                     l2596:	
  9242  1790  01E7               	clrf	___fladd@aexp
  9243  1791  0AE7               	incf	___fladd@aexp,f
  9244  1792  2F98               	goto	l2600
  9245  1793                     l731:	
  9246  1793  1C56               	btfss	___fladd@b,0
  9247  1794  2F96               	goto	u3541
  9248  1795  2F97               	goto	u3540
  9249  1796                     u3541:	
  9250  1796  2F98               	goto	l2600
  9251  1797                     u3540:	
  9252  1797  2F90               	goto	l2596
  9253  1798                     l2600:	
  9254  1798  0867               	movf	___fladd@aexp,w
  9255  1799  1903               	btfsc	3,2
  9256  179A  2F9C               	goto	u3551
  9257  179B  2F9D               	goto	u3550
  9258  179C                     u3551:	
  9259  179C  2FD1               	goto	l734
  9260  179D                     u3550:	
  9261  179D                     l2602:	
  9262  179D  3001               	movlw	1
  9263  179E  07D6               	addwf	___fladd@b,f
  9264  179F  3000               	movlw	0
  9265  17A0  1803               	skipnc
  9266  17A1  3001               	movlw	1
  9267  17A2  07D7               	addwf	___fladd@b+1,f
  9268  17A3  3000               	movlw	0
  9269  17A4  1803               	skipnc
  9270  17A5  3001               	movlw	1
  9271  17A6  07D8               	addwf	___fladd@b+2,f
  9272  17A7  3000               	movlw	0
  9273  17A8  1803               	skipnc
  9274  17A9  3001               	movlw	1
  9275  17AA  07D9               	addwf	___fladd@b+3,f
  9276  17AB                     l2604:	
  9277  17AB  1C59               	btfss	___fladd@b+3,0
  9278  17AC  2FAE               	goto	u3561
  9279  17AD  2FAF               	goto	u3560
  9280  17AE                     u3561:	
  9281  17AE  2FD1               	goto	l734
  9282  17AF                     u3560:	
  9283  17AF                     l2606:	
  9284  17AF  0856               	movf	___fladd@b,w
  9285  17B0  00DE               	movwf	??___fladd
  9286  17B1  0857               	movf	___fladd@b+1,w
  9287  17B2  00DF               	movwf	??___fladd+1
  9288  17B3  0858               	movf	___fladd@b+2,w
  9289  17B4  00E0               	movwf	??___fladd+2
  9290  17B5  0859               	movf	___fladd@b+3,w
  9291  17B6  00E1               	movwf	??___fladd+3
  9292  17B7  3001               	movlw	1
  9293  17B8  00E2               	movwf	??___fladd+4
  9294  17B9                     u3575:	
  9295  17B9  0D61               	rlf	??___fladd+3,w
  9296  17BA  0CE1               	rrf	??___fladd+3,f
  9297  17BB  0CE0               	rrf	??___fladd+2,f
  9298  17BC  0CDF               	rrf	??___fladd+1,f
  9299  17BD  0CDE               	rrf	??___fladd,f
  9300  17BE                     u3570:	
  9301  17BE  0BE2               	decfsz	??___fladd+4,f
  9302  17BF  2FB9               	goto	u3575
  9303  17C0  0861               	movf	??___fladd+3,w
  9304  17C1  00D9               	movwf	___fladd@b+3
  9305  17C2  0860               	movf	??___fladd+2,w
  9306  17C3  00D8               	movwf	___fladd@b+2
  9307  17C4  085F               	movf	??___fladd+1,w
  9308  17C5  00D7               	movwf	___fladd@b+1
  9309  17C6  085E               	movf	??___fladd,w
  9310  17C7  00D6               	movwf	___fladd@b
  9311  17C8  0A68               	incf	___fladd@bexp,w
  9312  17C9  1903               	btfsc	3,2
  9313  17CA  2FCC               	goto	u3581
  9314  17CB  2FCD               	goto	u3580
  9315  17CC                     u3581:	
  9316  17CC  2FD1               	goto	l734
  9317  17CD                     u3580:	
  9318  17CD                     l2608:	
  9319  17CD  3001               	movlw	1
  9320  17CE  00DE               	movwf	??___fladd
  9321  17CF  085E               	movf	??___fladd,w
  9322  17D0  07E8               	addwf	___fladd@bexp,f
  9323  17D1                     l734:	
  9324  17D1  0A68               	incf	___fladd@bexp,w
  9325  17D2  1903               	btfsc	3,2
  9326  17D3  2FD5               	goto	u3591
  9327  17D4  2FD6               	goto	u3590
  9328  17D5                     u3591:	
  9329  17D5  2FDB               	goto	l2612
  9330  17D6                     u3590:	
  9331  17D6                     l2610:	
  9332  17D6  0868               	movf	___fladd@bexp,w
  9333  17D7  1D03               	btfss	3,2
  9334  17D8  2FDA               	goto	u3601
  9335  17D9  2FDB               	goto	u3600
  9336  17DA                     u3601:	
  9337  17DA  2FE9               	goto	l2618
  9338  17DB                     u3600:	
  9339  17DB                     l2612:	
  9340  17DB  3000               	movlw	0
  9341  17DC  00D9               	movwf	___fladd@b+3
  9342  17DD  3000               	movlw	0
  9343  17DE  00D8               	movwf	___fladd@b+2
  9344  17DF  3000               	movlw	0
  9345  17E0  00D7               	movwf	___fladd@b+1
  9346  17E1  3000               	movlw	0
  9347  17E2  00D6               	movwf	___fladd@b
  9348  17E3                     l2614:	
  9349  17E3  0868               	movf	___fladd@bexp,w
  9350  17E4  1D03               	btfss	3,2
  9351  17E5  2FE7               	goto	u3611
  9352  17E6  2FE8               	goto	u3610
  9353  17E7                     u3611:	
  9354  17E7  2FE9               	goto	l2618
  9355  17E8                     u3610:	
  9356  17E8                     l2616:	
  9357  17E8  01E6               	clrf	___fladd@signs
  9358  17E9                     l2618:	
  9359  17E9  1C68               	btfss	___fladd@bexp,0
  9360  17EA  2FEC               	goto	u3621
  9361  17EB  2FED               	goto	u3620
  9362  17EC                     u3621:	
  9363  17EC  2FEF               	goto	l2622
  9364  17ED                     u3620:	
  9365  17ED                     l2620:	
  9366  17ED  17D8               	bsf	___fladd@b+2,7
  9367  17EE  2FF3               	goto	l742
  9368  17EF                     l2622:	
  9369  17EF  307F               	movlw	127
  9370  17F0  00DE               	movwf	??___fladd
  9371  17F1  085E               	movf	??___fladd,w
  9372  17F2  05D8               	andwf	___fladd@b+2,f
  9373  17F3                     l742:	
  9374  17F3  0868               	movf	___fladd@bexp,w
  9375  17F4  00DE               	movwf	??___fladd
  9376  17F5  1003               	clrc
  9377  17F6  0C5E               	rrf	??___fladd,w
  9378  17F7  00DF               	movwf	??___fladd+1
  9379  17F8  085F               	movf	??___fladd+1,w
  9380  17F9  00D9               	movwf	___fladd@b+3
  9381  17FA                     l2624:	
  9382  17FA  1FE6               	btfss	___fladd@signs,7
  9383  17FB  2FFD               	goto	u3631
  9384  17FC  2FFE               	goto	u3630
  9385  17FD                     u3631:	
  9386  17FD  2FFF               	goto	l743
  9387  17FE                     u3630:	
  9388  17FE                     l2626:	
  9389  17FE  17D9               	bsf	___fladd@b+3,7
  9390  17FF                     l743:	
  9391  17FF                     l713:	
  9392  17FF  0008               	return
  9393  1800                     __end_of___fladd:	
  9394                           
  9395                           	psect	text21
  9396  1B42                     __ptext21:	
  9397 ;; *************** function ___flneg *****************
  9398 ;; Defined at:
  9399 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  f1              4    3[COMMON] unsigned char 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;		None
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  4    3[COMMON] unsigned char 
  9406 ;; Registers used:
  9407 ;;		wreg
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9413 ;;      Params:         4       0       0       0       0
  9414 ;;      Locals:         0       0       0       0       0
  9415 ;;      Temps:          0       0       0       0       0
  9416 ;;      Totals:         4       0       0       0       0
  9417 ;;Total ram usage:        4 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:    1
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		_sprintf
  9424 ;; This function uses a non-reentrant model
  9425 ;;
  9426                           
  9427                           
  9428                           ;psect for function ___flneg
  9429  1B42                     ___flneg:	
  9430  1B42                     l3030:	
  9431                           ;incstack = 0
  9432                           ; Regs used in ___flneg: [wreg]
  9433                           
  9434  1B42  0876               	movf	___flneg@f1+3,w
  9435  1B43  0475               	iorwf	___flneg@f1+2,w
  9436  1B44  0474               	iorwf	___flneg@f1+1,w
  9437  1B45  0473               	iorwf	___flneg@f1,w
  9438  1B46  1903               	skipnz
  9439  1B47  2B49               	goto	u4751
  9440  1B48  2B4A               	goto	u4750
  9441  1B49                     u4751:	
  9442  1B49  2B4C               	goto	l3034
  9443  1B4A                     u4750:	
  9444  1B4A                     l3032:	
  9445  1B4A  3080               	movlw	128
  9446  1B4B  06F6               	xorwf	___flneg@f1+3,f
  9447  1B4C                     l3034:	
  9448  1B4C                     l572:	
  9449  1B4C  0008               	return
  9450  1B4D                     __end_of___flneg:	
  9451                           
  9452                           	psect	text22
  9453  1F5C                     __ptext22:	
  9454 ;; *************** function ___flge *****************
  9455 ;; Defined at:
  9456 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  9457 ;; Parameters:    Size  Location     Type
  9458 ;;  ff1             4    3[COMMON] unsigned char 
  9459 ;;  ff2             4    7[COMMON] unsigned char 
  9460 ;; Auto vars:     Size  Location     Type
  9461 ;;		None
  9462 ;; Return value:  Size  Location     Type
  9463 ;;		None               void
  9464 ;; Registers used:
  9465 ;;		wreg, status,2, status,0
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9471 ;;      Params:         8       0       0       0       0
  9472 ;;      Locals:         0       0       0       0       0
  9473 ;;      Temps:          0       4       0       0       0
  9474 ;;      Totals:         8       4       0       0       0
  9475 ;;Total ram usage:       12 bytes
  9476 ;; Hardware stack levels used:    1
  9477 ;; Hardware stack levels required when called:    1
  9478 ;; This function calls:
  9479 ;;		Nothing
  9480 ;; This function is called by:
  9481 ;;		_sprintf
  9482 ;; This function uses a non-reentrant model
  9483 ;;
  9484                           
  9485                           
  9486                           ;psect for function ___flge
  9487  1F5C                     ___flge:	
  9488  1F5C                     l3010:	
  9489                           ;incstack = 0
  9490                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9491                           
  9492  1F5C  3000               	movlw	0
  9493  1F5D  0573               	andwf	___flge@ff1,w
  9494  1F5E  1283               	bcf	3,5	;RP0=0, select bank0
  9495  1F5F  1303               	bcf	3,6	;RP1=0, select bank0
  9496  1F60  00A0               	movwf	??___flge
  9497  1F61  3000               	movlw	0
  9498  1F62  0574               	andwf	___flge@ff1+1,w
  9499  1F63  00A1               	movwf	??___flge+1
  9500  1F64  3080               	movlw	128
  9501  1F65  0575               	andwf	___flge@ff1+2,w
  9502  1F66  00A2               	movwf	??___flge+2
  9503  1F67  307F               	movlw	127
  9504  1F68  0576               	andwf	___flge@ff1+3,w
  9505  1F69  00A3               	movwf	??___flge+3
  9506  1F6A  0823               	movf	??___flge+3,w
  9507  1F6B  0422               	iorwf	??___flge+2,w
  9508  1F6C  0421               	iorwf	??___flge+1,w
  9509  1F6D  0420               	iorwf	??___flge,w
  9510  1F6E  1D03               	skipz
  9511  1F6F  2F71               	goto	u4681
  9512  1F70  2F72               	goto	u4680
  9513  1F71                     u4681:	
  9514  1F71  2F7A               	goto	l564
  9515  1F72                     u4680:	
  9516  1F72                     l3012:	
  9517  1F72  3000               	movlw	0
  9518  1F73  00F6               	movwf	___flge@ff1+3
  9519  1F74  3000               	movlw	0
  9520  1F75  00F5               	movwf	___flge@ff1+2
  9521  1F76  3000               	movlw	0
  9522  1F77  00F4               	movwf	___flge@ff1+1
  9523  1F78  3000               	movlw	0
  9524  1F79  00F3               	movwf	___flge@ff1
  9525  1F7A                     l564:	
  9526  1F7A  3000               	movlw	0
  9527  1F7B  0577               	andwf	___flge@ff2,w
  9528  1F7C  00A0               	movwf	??___flge
  9529  1F7D  3000               	movlw	0
  9530  1F7E  0578               	andwf	___flge@ff2+1,w
  9531  1F7F  00A1               	movwf	??___flge+1
  9532  1F80  3080               	movlw	128
  9533  1F81  0579               	andwf	___flge@ff2+2,w
  9534  1F82  00A2               	movwf	??___flge+2
  9535  1F83  307F               	movlw	127
  9536  1F84  057A               	andwf	___flge@ff2+3,w
  9537  1F85  00A3               	movwf	??___flge+3
  9538  1F86  0823               	movf	??___flge+3,w
  9539  1F87  0422               	iorwf	??___flge+2,w
  9540  1F88  0421               	iorwf	??___flge+1,w
  9541  1F89  0420               	iorwf	??___flge,w
  9542  1F8A  1D03               	skipz
  9543  1F8B  2F8D               	goto	u4691
  9544  1F8C  2F8E               	goto	u4690
  9545  1F8D                     u4691:	
  9546  1F8D  2F96               	goto	l3016
  9547  1F8E                     u4690:	
  9548  1F8E                     l3014:	
  9549  1F8E  3000               	movlw	0
  9550  1F8F  00FA               	movwf	___flge@ff2+3
  9551  1F90  3000               	movlw	0
  9552  1F91  00F9               	movwf	___flge@ff2+2
  9553  1F92  3000               	movlw	0
  9554  1F93  00F8               	movwf	___flge@ff2+1
  9555  1F94  3000               	movlw	0
  9556  1F95  00F7               	movwf	___flge@ff2
  9557  1F96                     l3016:	
  9558  1F96  1FF6               	btfss	___flge@ff1+3,7
  9559  1F97  2F99               	goto	u4701
  9560  1F98  2F9A               	goto	u4700
  9561  1F99                     u4701:	
  9562  1F99  2FBE               	goto	l3020
  9563  1F9A                     u4700:	
  9564  1F9A                     l3018:	
  9565  1F9A  3000               	movlw	0
  9566  1F9B  00A0               	movwf	??___flge
  9567  1F9C  3000               	movlw	0
  9568  1F9D  00A1               	movwf	??___flge+1
  9569  1F9E  3000               	movlw	0
  9570  1F9F  00A2               	movwf	??___flge+2
  9571  1FA0  3080               	movlw	128
  9572  1FA1  00A3               	movwf	??___flge+3
  9573  1FA2  0873               	movf	___flge@ff1,w
  9574  1FA3  02A0               	subwf	??___flge,f
  9575  1FA4  0874               	movf	___flge@ff1+1,w
  9576  1FA5  1C03               	skipc
  9577  1FA6  0F74               	incfsz	___flge@ff1+1,w
  9578  1FA7  2FA9               	goto	u4711
  9579  1FA8  2FAA               	goto	u4712
  9580  1FA9                     u4711:	
  9581  1FA9  02A1               	subwf	??___flge+1,f
  9582  1FAA                     u4712:	
  9583  1FAA  0875               	movf	___flge@ff1+2,w
  9584  1FAB  1C03               	skipc
  9585  1FAC  0F75               	incfsz	___flge@ff1+2,w
  9586  1FAD  2FAF               	goto	u4713
  9587  1FAE  2FB0               	goto	u4714
  9588  1FAF                     u4713:	
  9589  1FAF  02A2               	subwf	??___flge+2,f
  9590  1FB0                     u4714:	
  9591  1FB0  0876               	movf	___flge@ff1+3,w
  9592  1FB1  1C03               	skipc
  9593  1FB2  0F76               	incfsz	___flge@ff1+3,w
  9594  1FB3  2FB5               	goto	u4715
  9595  1FB4  2FB6               	goto	u4716
  9596  1FB5                     u4715:	
  9597  1FB5  02A3               	subwf	??___flge+3,f
  9598  1FB6                     u4716:	
  9599  1FB6  0823               	movf	??___flge+3,w
  9600  1FB7  00F6               	movwf	___flge@ff1+3
  9601  1FB8  0822               	movf	??___flge+2,w
  9602  1FB9  00F5               	movwf	___flge@ff1+2
  9603  1FBA  0821               	movf	??___flge+1,w
  9604  1FBB  00F4               	movwf	___flge@ff1+1
  9605  1FBC  0820               	movf	??___flge,w
  9606  1FBD  00F3               	movwf	___flge@ff1
  9607  1FBE                     l3020:	
  9608  1FBE  1FFA               	btfss	___flge@ff2+3,7
  9609  1FBF  2FC1               	goto	u4721
  9610  1FC0  2FC2               	goto	u4720
  9611  1FC1                     u4721:	
  9612  1FC1  2FE6               	goto	l567
  9613  1FC2                     u4720:	
  9614  1FC2                     l3022:	
  9615  1FC2  3000               	movlw	0
  9616  1FC3  00A0               	movwf	??___flge
  9617  1FC4  3000               	movlw	0
  9618  1FC5  00A1               	movwf	??___flge+1
  9619  1FC6  3000               	movlw	0
  9620  1FC7  00A2               	movwf	??___flge+2
  9621  1FC8  3080               	movlw	128
  9622  1FC9  00A3               	movwf	??___flge+3
  9623  1FCA  0877               	movf	___flge@ff2,w
  9624  1FCB  02A0               	subwf	??___flge,f
  9625  1FCC  0878               	movf	___flge@ff2+1,w
  9626  1FCD  1C03               	skipc
  9627  1FCE  0F78               	incfsz	___flge@ff2+1,w
  9628  1FCF  2FD1               	goto	u4731
  9629  1FD0  2FD2               	goto	u4732
  9630  1FD1                     u4731:	
  9631  1FD1  02A1               	subwf	??___flge+1,f
  9632  1FD2                     u4732:	
  9633  1FD2  0879               	movf	___flge@ff2+2,w
  9634  1FD3  1C03               	skipc
  9635  1FD4  0F79               	incfsz	___flge@ff2+2,w
  9636  1FD5  2FD7               	goto	u4733
  9637  1FD6  2FD8               	goto	u4734
  9638  1FD7                     u4733:	
  9639  1FD7  02A2               	subwf	??___flge+2,f
  9640  1FD8                     u4734:	
  9641  1FD8  087A               	movf	___flge@ff2+3,w
  9642  1FD9  1C03               	skipc
  9643  1FDA  0F7A               	incfsz	___flge@ff2+3,w
  9644  1FDB  2FDD               	goto	u4735
  9645  1FDC  2FDE               	goto	u4736
  9646  1FDD                     u4735:	
  9647  1FDD  02A3               	subwf	??___flge+3,f
  9648  1FDE                     u4736:	
  9649  1FDE  0823               	movf	??___flge+3,w
  9650  1FDF  00FA               	movwf	___flge@ff2+3
  9651  1FE0  0822               	movf	??___flge+2,w
  9652  1FE1  00F9               	movwf	___flge@ff2+2
  9653  1FE2  0821               	movf	??___flge+1,w
  9654  1FE3  00F8               	movwf	___flge@ff2+1
  9655  1FE4  0820               	movf	??___flge,w
  9656  1FE5  00F7               	movwf	___flge@ff2
  9657  1FE6                     l567:	
  9658  1FE6  3080               	movlw	128
  9659  1FE7  06F6               	xorwf	___flge@ff1+3,f
  9660  1FE8  3080               	movlw	128
  9661  1FE9  06FA               	xorwf	___flge@ff2+3,f
  9662  1FEA  087A               	movf	___flge@ff2+3,w
  9663  1FEB  0276               	subwf	___flge@ff1+3,w
  9664  1FEC  1D03               	skipz
  9665  1FED  2FF8               	goto	u4745
  9666  1FEE  0879               	movf	___flge@ff2+2,w
  9667  1FEF  0275               	subwf	___flge@ff1+2,w
  9668  1FF0  1D03               	skipz
  9669  1FF1  2FF8               	goto	u4745
  9670  1FF2  0878               	movf	___flge@ff2+1,w
  9671  1FF3  0274               	subwf	___flge@ff1+1,w
  9672  1FF4  1D03               	skipz
  9673  1FF5  2FF8               	goto	u4745
  9674  1FF6  0877               	movf	___flge@ff2,w
  9675  1FF7  0273               	subwf	___flge@ff1,w
  9676  1FF8                     u4745:	
  9677  1FF8  1803               	skipnc
  9678  1FF9  2FFB               	goto	u4741
  9679  1FFA  2FFC               	goto	u4740
  9680  1FFB                     u4741:	
  9681  1FFB  2FFE               	goto	l3026
  9682  1FFC                     u4740:	
  9683  1FFC                     l3024:	
  9684  1FFC  1003               	clrc
  9685  1FFD  2FFF               	goto	l568
  9686  1FFE                     l3026:	
  9687  1FFE  1403               	setc
  9688  1FFF                     l568:	
  9689  1FFF  0008               	return
  9690  2000                     __end_of___flge:	
  9691                           
  9692                           	psect	text23
  9693  1D2C                     __ptext23:	
  9694 ;; *************** function ___fleq *****************
  9695 ;; Defined at:
  9696 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  ff1             4    3[COMMON] unsigned char 
  9699 ;;  ff2             4    7[COMMON] unsigned char 
  9700 ;; Auto vars:     Size  Location     Type
  9701 ;;		None
  9702 ;; Return value:  Size  Location     Type
  9703 ;;		None               void
  9704 ;; Registers used:
  9705 ;;		wreg, status,2, status,0
  9706 ;; Tracked objects:
  9707 ;;		On entry : 0/0
  9708 ;;		On exit  : 0/0
  9709 ;;		Unchanged: 0/0
  9710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9711 ;;      Params:         8       0       0       0       0
  9712 ;;      Locals:         0       0       0       0       0
  9713 ;;      Temps:          0       4       0       0       0
  9714 ;;      Totals:         8       4       0       0       0
  9715 ;;Total ram usage:       12 bytes
  9716 ;; Hardware stack levels used:    1
  9717 ;; Hardware stack levels required when called:    1
  9718 ;; This function calls:
  9719 ;;		Nothing
  9720 ;; This function is called by:
  9721 ;;		_sprintf
  9722 ;; This function uses a non-reentrant model
  9723 ;;
  9724                           
  9725                           
  9726                           ;psect for function ___fleq
  9727  1D2C                     ___fleq:	
  9728  1D2C                     l2998:	
  9729                           ;incstack = 0
  9730                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9731                           
  9732  1D2C  3000               	movlw	0
  9733  1D2D  0573               	andwf	___fleq@ff1,w
  9734  1D2E  1283               	bcf	3,5	;RP0=0, select bank0
  9735  1D2F  1303               	bcf	3,6	;RP1=0, select bank0
  9736  1D30  00A0               	movwf	??___fleq
  9737  1D31  3000               	movlw	0
  9738  1D32  0574               	andwf	___fleq@ff1+1,w
  9739  1D33  00A1               	movwf	??___fleq+1
  9740  1D34  3080               	movlw	128
  9741  1D35  0575               	andwf	___fleq@ff1+2,w
  9742  1D36  00A2               	movwf	??___fleq+2
  9743  1D37  307F               	movlw	127
  9744  1D38  0576               	andwf	___fleq@ff1+3,w
  9745  1D39  00A3               	movwf	??___fleq+3
  9746  1D3A  0823               	movf	??___fleq+3,w
  9747  1D3B  0422               	iorwf	??___fleq+2,w
  9748  1D3C  0421               	iorwf	??___fleq+1,w
  9749  1D3D  0420               	iorwf	??___fleq,w
  9750  1D3E  1D03               	skipz
  9751  1D3F  2D41               	goto	u4651
  9752  1D40  2D42               	goto	u4650
  9753  1D41                     u4651:	
  9754  1D41  2D4A               	goto	l559
  9755  1D42                     u4650:	
  9756  1D42                     l3000:	
  9757  1D42  3000               	movlw	0
  9758  1D43  00F6               	movwf	___fleq@ff1+3
  9759  1D44  3000               	movlw	0
  9760  1D45  00F5               	movwf	___fleq@ff1+2
  9761  1D46  3000               	movlw	0
  9762  1D47  00F4               	movwf	___fleq@ff1+1
  9763  1D48  3000               	movlw	0
  9764  1D49  00F3               	movwf	___fleq@ff1
  9765  1D4A                     l559:	
  9766  1D4A  3000               	movlw	0
  9767  1D4B  0577               	andwf	___fleq@ff2,w
  9768  1D4C  00A0               	movwf	??___fleq
  9769  1D4D  3000               	movlw	0
  9770  1D4E  0578               	andwf	___fleq@ff2+1,w
  9771  1D4F  00A1               	movwf	??___fleq+1
  9772  1D50  3080               	movlw	128
  9773  1D51  0579               	andwf	___fleq@ff2+2,w
  9774  1D52  00A2               	movwf	??___fleq+2
  9775  1D53  307F               	movlw	127
  9776  1D54  057A               	andwf	___fleq@ff2+3,w
  9777  1D55  00A3               	movwf	??___fleq+3
  9778  1D56  0823               	movf	??___fleq+3,w
  9779  1D57  0422               	iorwf	??___fleq+2,w
  9780  1D58  0421               	iorwf	??___fleq+1,w
  9781  1D59  0420               	iorwf	??___fleq,w
  9782  1D5A  1D03               	skipz
  9783  1D5B  2D5D               	goto	u4661
  9784  1D5C  2D5E               	goto	u4660
  9785  1D5D                     u4661:	
  9786  1D5D  2D66               	goto	l560
  9787  1D5E                     u4660:	
  9788  1D5E                     l3002:	
  9789  1D5E  3000               	movlw	0
  9790  1D5F  00FA               	movwf	___fleq@ff2+3
  9791  1D60  3000               	movlw	0
  9792  1D61  00F9               	movwf	___fleq@ff2+2
  9793  1D62  3000               	movlw	0
  9794  1D63  00F8               	movwf	___fleq@ff2+1
  9795  1D64  3000               	movlw	0
  9796  1D65  00F7               	movwf	___fleq@ff2
  9797  1D66                     l560:	
  9798  1D66  087A               	movf	___fleq@ff2+3,w
  9799  1D67  0676               	xorwf	___fleq@ff1+3,w
  9800  1D68  1D03               	skipz
  9801  1D69  2D74               	goto	u4675
  9802  1D6A  0879               	movf	___fleq@ff2+2,w
  9803  1D6B  0675               	xorwf	___fleq@ff1+2,w
  9804  1D6C  1D03               	skipz
  9805  1D6D  2D74               	goto	u4675
  9806  1D6E  0878               	movf	___fleq@ff2+1,w
  9807  1D6F  0674               	xorwf	___fleq@ff1+1,w
  9808  1D70  1D03               	skipz
  9809  1D71  2D74               	goto	u4675
  9810  1D72  0877               	movf	___fleq@ff2,w
  9811  1D73  0673               	xorwf	___fleq@ff1,w
  9812  1D74                     u4675:	
  9813  1D74  1903               	skipnz
  9814  1D75  2D77               	goto	u4671
  9815  1D76  2D78               	goto	u4670
  9816  1D77                     u4671:	
  9817  1D77  2D7A               	goto	l3006
  9818  1D78                     u4670:	
  9819  1D78                     l3004:	
  9820  1D78  1003               	clrc
  9821  1D79  2D7B               	goto	l561
  9822  1D7A                     l3006:	
  9823  1D7A  1403               	setc
  9824  1D7B                     l561:	
  9825  1D7B  0008               	return
  9826  1D7C                     __end_of___fleq:	
  9827                           
  9828                           	psect	text24
  9829  1B8C                     __ptext24:	
  9830 ;; *************** function _Port_init *****************
  9831 ;; Defined at:
  9832 ;;		line 78 in file "main_lab3.c"
  9833 ;; Parameters:    Size  Location     Type
  9834 ;;		None
  9835 ;; Auto vars:     Size  Location     Type
  9836 ;;		None
  9837 ;; Return value:  Size  Location     Type
  9838 ;;                  1    wreg      void 
  9839 ;; Registers used:
  9840 ;;		wreg, status,2
  9841 ;; Tracked objects:
  9842 ;;		On entry : 0/0
  9843 ;;		On exit  : 0/0
  9844 ;;		Unchanged: 0/0
  9845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9846 ;;      Params:         0       0       0       0       0
  9847 ;;      Locals:         0       0       0       0       0
  9848 ;;      Temps:          0       0       0       0       0
  9849 ;;      Totals:         0       0       0       0       0
  9850 ;;Total ram usage:        0 bytes
  9851 ;; Hardware stack levels used:    1
  9852 ;; Hardware stack levels required when called:    1
  9853 ;; This function calls:
  9854 ;;		Nothing
  9855 ;; This function is called by:
  9856 ;;		_main
  9857 ;; This function uses a non-reentrant model
  9858 ;;
  9859                           
  9860                           
  9861                           ;psect for function _Port_init
  9862  1B8C                     _Port_init:	
  9863  1B8C                     l3192:	
  9864                           ;incstack = 0
  9865                           ; Regs used in _Port_init: [wreg+status,2]
  9866                           
  9867                           
  9868                           ;main_lab3.c: 79:     TRISA = 0x03;
  9869  1B8C  3003               	movlw	3
  9870  1B8D  1683               	bsf	3,5	;RP0=1, select bank1
  9871  1B8E  1303               	bcf	3,6	;RP1=0, select bank1
  9872  1B8F  0085               	movwf	5	;volatile
  9873  1B90                     l3194:	
  9874                           
  9875                           ;main_lab3.c: 80:     ANSEL = 0;
  9876  1B90  1683               	bsf	3,5	;RP0=1, select bank3
  9877  1B91  1703               	bsf	3,6	;RP1=1, select bank3
  9878  1B92  0188               	clrf	8	;volatile
  9879  1B93                     l3196:	
  9880                           
  9881                           ;main_lab3.c: 81:     ANSEL = 0x03;
  9882  1B93  3003               	movlw	3
  9883  1B94  0088               	movwf	8	;volatile
  9884                           
  9885                           ;main_lab3.c: 82:     ANSELH = 0;
  9886  1B95  0189               	clrf	9	;volatile
  9887                           
  9888                           ;main_lab3.c: 83:     TRISB = 0;
  9889  1B96  1683               	bsf	3,5	;RP0=1, select bank1
  9890  1B97  1303               	bcf	3,6	;RP1=0, select bank1
  9891  1B98  0186               	clrf	6	;volatile
  9892                           
  9893                           ;main_lab3.c: 84:     PORTB = 0;
  9894  1B99  1283               	bcf	3,5	;RP0=0, select bank0
  9895  1B9A  1303               	bcf	3,6	;RP1=0, select bank0
  9896  1B9B  0186               	clrf	6	;volatile
  9897                           
  9898                           ;main_lab3.c: 85:     TRISD = 0;
  9899  1B9C  1683               	bsf	3,5	;RP0=1, select bank1
  9900  1B9D  1303               	bcf	3,6	;RP1=0, select bank1
  9901  1B9E  0188               	clrf	8	;volatile
  9902                           
  9903                           ;main_lab3.c: 86:     PORTD = 0;
  9904  1B9F  1283               	bcf	3,5	;RP0=0, select bank0
  9905  1BA0  1303               	bcf	3,6	;RP1=0, select bank0
  9906  1BA1  0188               	clrf	8	;volatile
  9907                           
  9908                           ;main_lab3.c: 87:     PORTA = 0;
  9909  1BA2  0185               	clrf	5	;volatile
  9910  1BA3                     l108:	
  9911  1BA3  0008               	return
  9912  1BA4                     __end_of_Port_init:	
  9913                           
  9914                           	psect	text25
  9915  1CA0                     __ptext25:	
  9916 ;; *************** function _LCD_WRITE_STRING *****************
  9917 ;; Defined at:
  9918 ;;		line 66 in file "LCD_8bits_main.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;  a               2    6[COMMON] PTR unsigned char 
  9921 ;;		 -> STR_3(15), string2(5), string1(5), 
  9922 ;; Auto vars:     Size  Location     Type
  9923 ;;  i               2    0[BANK0 ] int 
  9924 ;; Return value:  Size  Location     Type
  9925 ;;                  1    wreg      void 
  9926 ;; Registers used:
  9927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9928 ;; Tracked objects:
  9929 ;;		On entry : 0/0
  9930 ;;		On exit  : 0/0
  9931 ;;		Unchanged: 0/0
  9932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9933 ;;      Params:         2       0       0       0       0
  9934 ;;      Locals:         0       2       0       0       0
  9935 ;;      Temps:          3       0       0       0       0
  9936 ;;      Totals:         5       2       0       0       0
  9937 ;;Total ram usage:        7 bytes
  9938 ;; Hardware stack levels used:    1
  9939 ;; Hardware stack levels required when called:    2
  9940 ;; This function calls:
  9941 ;;		_LCD_WRITE_CHAR
  9942 ;; This function is called by:
  9943 ;;		_main
  9944 ;; This function uses a non-reentrant model
  9945 ;;
  9946                           
  9947                           
  9948                           ;psect for function _LCD_WRITE_STRING
  9949  1CA0                     _LCD_WRITE_STRING:	
  9950  1CA0                     l3184:	
  9951                           ;incstack = 0
  9952                           ; Regs used in _LCD_WRITE_STRING: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9953                           
  9954                           
  9955                           ;LCD_8bits_main.c: 67:     int i;;LCD_8bits_main.c: 68:     for(i=0; a[i]!='\0'; i++)
  9956  1CA0  1283               	bcf	3,5	;RP0=0, select bank0
  9957  1CA1  1303               	bcf	3,6	;RP1=0, select bank0
  9958  1CA2  01A0               	clrf	LCD_WRITE_STRING@i
  9959  1CA3  01A1               	clrf	LCD_WRITE_STRING@i+1
  9960  1CA4  2CC9               	goto	l3190
  9961  1CA5                     l3186:	
  9962                           
  9963                           ;LCD_8bits_main.c: 69:         LCD_WRITE_CHAR(a[i]);
  9964  1CA5  0820               	movf	LCD_WRITE_STRING@i,w
  9965  1CA6  0776               	addwf	LCD_WRITE_STRING@a,w
  9966  1CA7  00F9               	movwf	??_LCD_WRITE_STRING+1
  9967  1CA8  0877               	movf	LCD_WRITE_STRING@a+1,w
  9968  1CA9  00F8               	movwf	??_LCD_WRITE_STRING
  9969  1CAA  1803               	skipnc
  9970  1CAB  0AF8               	incf	??_LCD_WRITE_STRING,f
  9971  1CAC  1FA0               	btfss	LCD_WRITE_STRING@i,7
  9972  1CAD  2CAF               	goto	u5080
  9973  1CAE  03F8               	decf	??_LCD_WRITE_STRING,f
  9974  1CAF                     u5080:	
  9975  1CAF  0878               	movf	??_LCD_WRITE_STRING,w
  9976  1CB0  00FA               	movwf	??_LCD_WRITE_STRING+2
  9977  1CB1  087A               	movf	??_LCD_WRITE_STRING+2,w
  9978  1CB2  1283               	bcf	3,5	;RP0=0, select bank0
  9979  1CB3  1303               	bcf	3,6	;RP1=0, select bank0
  9980  1CB4  00FF               	movwf	btemp+1
  9981  1CB5  0879               	movf	??_LCD_WRITE_STRING+1,w
  9982  1CB6  0084               	movwf	4
  9983  1CB7  160A  158A  2000  160A  158A  	fcall	stringtab
  9984  1CBC  160A  158A  2375  160A  158A  	fcall	_LCD_WRITE_CHAR
  9985  1CC1                     l3188:	
  9986  1CC1  3001               	movlw	1
  9987  1CC2  1283               	bcf	3,5	;RP0=0, select bank0
  9988  1CC3  1303               	bcf	3,6	;RP1=0, select bank0
  9989  1CC4  07A0               	addwf	LCD_WRITE_STRING@i,f
  9990  1CC5  1803               	skipnc
  9991  1CC6  0AA1               	incf	LCD_WRITE_STRING@i+1,f
  9992  1CC7  3000               	movlw	0
  9993  1CC8  07A1               	addwf	LCD_WRITE_STRING@i+1,f
  9994  1CC9                     l3190:	
  9995  1CC9  0820               	movf	LCD_WRITE_STRING@i,w
  9996  1CCA  0776               	addwf	LCD_WRITE_STRING@a,w
  9997  1CCB  00F9               	movwf	??_LCD_WRITE_STRING+1
  9998  1CCC  0877               	movf	LCD_WRITE_STRING@a+1,w
  9999  1CCD  00F8               	movwf	??_LCD_WRITE_STRING
 10000  1CCE  1803               	skipnc
 10001  1CCF  0AF8               	incf	??_LCD_WRITE_STRING,f
 10002  1CD0  1FA0               	btfss	LCD_WRITE_STRING@i,7
 10003  1CD1  2CD3               	goto	u5090
 10004  1CD2  03F8               	decf	??_LCD_WRITE_STRING,f
 10005  1CD3                     u5090:	
 10006  1CD3  0878               	movf	??_LCD_WRITE_STRING,w
 10007  1CD4  00FA               	movwf	??_LCD_WRITE_STRING+2
 10008  1CD5  087A               	movf	??_LCD_WRITE_STRING+2,w
 10009  1CD6  1283               	bcf	3,5	;RP0=0, select bank0
 10010  1CD7  1303               	bcf	3,6	;RP1=0, select bank0
 10011  1CD8  00FF               	movwf	btemp+1
 10012  1CD9  0879               	movf	??_LCD_WRITE_STRING+1,w
 10013  1CDA  0084               	movwf	4
 10014  1CDB  160A  158A  2000  160A  158A  	fcall	stringtab
 10015  1CE0  3A00               	xorlw	0
 10016  1CE1  1D03               	skipz
 10017  1CE2  2CE4               	goto	u5101
 10018  1CE3  2CE5               	goto	u5100
 10019  1CE4                     u5101:	
 10020  1CE4  2CA5               	goto	l3186
 10021  1CE5                     u5100:	
 10022  1CE5                     l30:	
 10023  1CE5  0008               	return
 10024  1CE6                     __end_of_LCD_WRITE_STRING:	
 10025                           
 10026                           	psect	text26
 10027  1B75                     __ptext26:	
 10028 ;; *************** function _LCD_WRITE_CHAR *****************
 10029 ;; Defined at:
 10030 ;;		line 57 in file "LCD_8bits_main.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;  a               1    wreg     unsigned char 
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;  a               1    5[COMMON] unsigned char 
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  1    wreg      void 
 10037 ;; Registers used:
 10038 ;;		wreg
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10044 ;;      Params:         0       0       0       0       0
 10045 ;;      Locals:         1       0       0       0       0
 10046 ;;      Temps:          2       0       0       0       0
 10047 ;;      Totals:         3       0       0       0       0
 10048 ;;Total ram usage:        3 bytes
 10049 ;; Hardware stack levels used:    1
 10050 ;; Hardware stack levels required when called:    1
 10051 ;; This function calls:
 10052 ;;		Nothing
 10053 ;; This function is called by:
 10054 ;;		_LCD_WRITE_STRING
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           
 10059                           ;psect for function _LCD_WRITE_CHAR
 10060  1B75                     _LCD_WRITE_CHAR:	
 10061                           
 10062                           ;incstack = 0
 10063                           ; Regs used in _LCD_WRITE_CHAR: [wreg]
 10064                           ;LCD_WRITE_CHAR@a stored from wreg
 10065  1B75  00F5               	movwf	LCD_WRITE_CHAR@a
 10066  1B76                     l2778:	
 10067                           
 10068                           ;LCD_8bits_main.c: 58:     PORTDbits.RD5 = 1;
 10069  1B76  1283               	bcf	3,5	;RP0=0, select bank0
 10070  1B77  1303               	bcf	3,6	;RP1=0, select bank0
 10071  1B78  1688               	bsf	8,5	;volatile
 10072  1B79                     l2780:	
 10073                           
 10074                           ;LCD_8bits_main.c: 59:     PORTB = a;
 10075  1B79  0875               	movf	LCD_WRITE_CHAR@a,w
 10076  1B7A  0086               	movwf	6	;volatile
 10077  1B7B                     l2782:	
 10078                           
 10079                           ;LCD_8bits_main.c: 60:     PORTDbits.RD7 = 1;
 10080  1B7B  1788               	bsf	8,7	;volatile
 10081                           
 10082                           ;LCD_8bits_main.c: 61:     _delay((unsigned long)((40)*(4000000/4000000.0)));
 10083  1B7C  300D               	movlw	13
 10084  1B7D  00F3               	movwf	??_LCD_WRITE_CHAR
 10085  1B7E                     u5647:	
 10086  1B7E  0BF3               	decfsz	??_LCD_WRITE_CHAR,f
 10087  1B7F  2B7E               	goto	u5647
 10088  1B80                     l2784:	
 10089                           
 10090                           ;LCD_8bits_main.c: 62:     PORTDbits.RD7 = 0;
 10091  1B80  1283               	bcf	3,5	;RP0=0, select bank0
 10092  1B81  1303               	bcf	3,6	;RP1=0, select bank0
 10093  1B82  1388               	bcf	8,7	;volatile
 10094                           
 10095                           ;LCD_8bits_main.c: 63:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10096  1B83  3007               	movlw	7
 10097  1B84  00F4               	movwf	??_LCD_WRITE_CHAR+1
 10098  1B85  307D               	movlw	125
 10099  1B86  00F3               	movwf	??_LCD_WRITE_CHAR
 10100  1B87                     u5657:	
 10101  1B87  0BF3               	decfsz	??_LCD_WRITE_CHAR,f
 10102  1B88  2B87               	goto	u5657
 10103  1B89  0BF4               	decfsz	??_LCD_WRITE_CHAR+1,f
 10104  1B8A  2B87               	goto	u5657
 10105  1B8B                     l24:	
 10106  1B8B  0008               	return
 10107  1B8C                     __end_of_LCD_WRITE_CHAR:	
 10108                           
 10109                           	psect	text27
 10110  1BA4                     __ptext27:	
 10111 ;; *************** function _LCD_SET_CURSOR *****************
 10112 ;; Defined at:
 10113 ;;		line 25 in file "LCD_8bits_main.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  a               1    wreg     unsigned char 
 10116 ;;  b               1    6[COMMON] unsigned char 
 10117 ;; Auto vars:     Size  Location     Type
 10118 ;;  a               1    8[COMMON] unsigned char 
 10119 ;;  temporal        1    9[COMMON] unsigned char 
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1    wreg      void 
 10122 ;; Registers used:
 10123 ;;		wreg, status,2, status,0, pclath, cstack
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10129 ;;      Params:         1       0       0       0       0
 10130 ;;      Locals:         2       0       0       0       0
 10131 ;;      Temps:          1       0       0       0       0
 10132 ;;      Totals:         4       0       0       0       0
 10133 ;;Total ram usage:        4 bytes
 10134 ;; Hardware stack levels used:    1
 10135 ;; Hardware stack levels required when called:    2
 10136 ;; This function calls:
 10137 ;;		_LCD_CMD
 10138 ;; This function is called by:
 10139 ;;		_main
 10140 ;; This function uses a non-reentrant model
 10141 ;;
 10142                           
 10143                           
 10144                           ;psect for function _LCD_SET_CURSOR
 10145  1BA4                     _LCD_SET_CURSOR:	
 10146                           
 10147                           ;incstack = 0
 10148                           ; Regs used in _LCD_SET_CURSOR: [wreg+status,2+status,0+pclath+cstack]
 10149                           ;LCD_SET_CURSOR@a stored from wreg
 10150  1BA4  00F8               	movwf	LCD_SET_CURSOR@a
 10151  1BA5                     l3144:	
 10152                           
 10153                           ;LCD_8bits_main.c: 26:     uint8_t temporal;;LCD_8bits_main.c: 27:     if (a == 1) {
 10154  1BA5  0378               	decf	LCD_SET_CURSOR@a,w
 10155  1BA6  1D03               	btfss	3,2
 10156  1BA7  2BA9               	goto	u5061
 10157  1BA8  2BAA               	goto	u5060
 10158  1BA9                     u5061:	
 10159  1BA9  2BB6               	goto	l3150
 10160  1BAA                     u5060:	
 10161  1BAA                     l3146:	
 10162                           
 10163                           ;LCD_8bits_main.c: 28:         temporal = 0x80 + b - 1;
 10164  1BAA  0876               	movf	LCD_SET_CURSOR@b,w
 10165  1BAB  3E7F               	addlw	127
 10166  1BAC  00F7               	movwf	??_LCD_SET_CURSOR
 10167  1BAD  0877               	movf	??_LCD_SET_CURSOR,w
 10168  1BAE  00F9               	movwf	LCD_SET_CURSOR@temporal
 10169  1BAF                     l3148:	
 10170                           
 10171                           ;LCD_8bits_main.c: 29:         LCD_CMD(temporal);
 10172  1BAF  0879               	movf	LCD_SET_CURSOR@temporal,w
 10173  1BB0  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10174                           
 10175                           ;LCD_8bits_main.c: 30:     }
 10176  1BB5  2BC7               	goto	l18
 10177  1BB6                     l3150:	
 10178  1BB6  3002               	movlw	2
 10179  1BB7  0678               	xorwf	LCD_SET_CURSOR@a,w
 10180  1BB8  1D03               	btfss	3,2
 10181  1BB9  2BBB               	goto	u5071
 10182  1BBA  2BBC               	goto	u5070
 10183  1BBB                     u5071:	
 10184  1BBB  2BC7               	goto	l18
 10185  1BBC                     u5070:	
 10186  1BBC                     l3152:	
 10187                           
 10188                           ;LCD_8bits_main.c: 32:         temporal = 0xC0 + b - 1;
 10189  1BBC  0876               	movf	LCD_SET_CURSOR@b,w
 10190  1BBD  3EBF               	addlw	191
 10191  1BBE  00F7               	movwf	??_LCD_SET_CURSOR
 10192  1BBF  0877               	movf	??_LCD_SET_CURSOR,w
 10193  1BC0  00F9               	movwf	LCD_SET_CURSOR@temporal
 10194  1BC1                     l3154:	
 10195                           
 10196                           ;LCD_8bits_main.c: 33:         LCD_CMD(temporal);
 10197  1BC1  0879               	movf	LCD_SET_CURSOR@temporal,w
 10198  1BC2  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10199  1BC7                     l18:	
 10200  1BC7  0008               	return
 10201  1BC8                     __end_of_LCD_SET_CURSOR:	
 10202                           
 10203                           	psect	text28
 10204  1DCC                     __ptext28:	
 10205 ;; *************** function _LCD_INIT *****************
 10206 ;; Defined at:
 10207 ;;		line 37 in file "LCD_8bits_main.c"
 10208 ;; Parameters:    Size  Location     Type
 10209 ;;		None
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;		None
 10212 ;; Return value:  Size  Location     Type
 10213 ;;                  1    wreg      void 
 10214 ;; Registers used:
 10215 ;;		wreg, status,2, status,0, pclath, cstack
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10221 ;;      Params:         0       0       0       0       0
 10222 ;;      Locals:         0       0       0       0       0
 10223 ;;      Temps:          2       0       0       0       0
 10224 ;;      Totals:         2       0       0       0       0
 10225 ;;Total ram usage:        2 bytes
 10226 ;; Hardware stack levels used:    1
 10227 ;; Hardware stack levels required when called:    2
 10228 ;; This function calls:
 10229 ;;		_LCD_CMD
 10230 ;; This function is called by:
 10231 ;;		_main
 10232 ;; This function uses a non-reentrant model
 10233 ;;
 10234                           
 10235                           
 10236                           ;psect for function _LCD_INIT
 10237  1DCC                     _LCD_INIT:	
 10238  1DCC                     l3156:	
 10239                           ;incstack = 0
 10240                           ; Regs used in _LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
 10241                           
 10242                           
 10243                           ;LCD_8bits_main.c: 38:     PORTB = 0;
 10244  1DCC  1283               	bcf	3,5	;RP0=0, select bank0
 10245  1DCD  1303               	bcf	3,6	;RP1=0, select bank0
 10246  1DCE  0186               	clrf	6	;volatile
 10247  1DCF                     l3158:	
 10248                           
 10249                           ;LCD_8bits_main.c: 39:     _delay((unsigned long)((15)*(4000000/4000.0)));
 10250  1DCF  3014               	movlw	20
 10251  1DD0  00F7               	movwf	??_LCD_INIT+1
 10252  1DD1  3079               	movlw	121
 10253  1DD2  00F6               	movwf	??_LCD_INIT
 10254  1DD3                     u5667:	
 10255  1DD3  0BF6               	decfsz	??_LCD_INIT,f
 10256  1DD4  2DD3               	goto	u5667
 10257  1DD5  0BF7               	decfsz	??_LCD_INIT+1,f
 10258  1DD6  2DD3               	goto	u5667
 10259  1DD7  2DD8               	nop2
 10260  1DD8                     l3160:	
 10261                           
 10262                           ;LCD_8bits_main.c: 40:     LCD_CMD(0x30);
 10263  1DD8  3030               	movlw	48
 10264  1DD9  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10265  1DDE                     l3162:	
 10266                           
 10267                           ;LCD_8bits_main.c: 41:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10268  1DDE  3007               	movlw	7
 10269  1DDF  00F7               	movwf	??_LCD_INIT+1
 10270  1DE0  307D               	movlw	125
 10271  1DE1  00F6               	movwf	??_LCD_INIT
 10272  1DE2                     u5677:	
 10273  1DE2  0BF6               	decfsz	??_LCD_INIT,f
 10274  1DE3  2DE2               	goto	u5677
 10275  1DE4  0BF7               	decfsz	??_LCD_INIT+1,f
 10276  1DE5  2DE2               	goto	u5677
 10277  1DE6                     l3164:	
 10278                           
 10279                           ;LCD_8bits_main.c: 42:     LCD_CMD(0x30);
 10280  1DE6  3030               	movlw	48
 10281  1DE7  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10282  1DEC                     l3166:	
 10283                           
 10284                           ;LCD_8bits_main.c: 43:     _delay((unsigned long)((160)*(4000000/4000000.0)));
 10285  1DEC  3035               	movlw	53
 10286  1DED  00F6               	movwf	??_LCD_INIT
 10287  1DEE                     u5687:	
 10288  1DEE  0BF6               	decfsz	??_LCD_INIT,f
 10289  1DEF  2DEE               	goto	u5687
 10290  1DF0                     l3168:	
 10291                           
 10292                           ;LCD_8bits_main.c: 44:     LCD_CMD(0x30);
 10293  1DF0  3030               	movlw	48
 10294  1DF1  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10295  1DF6                     l3170:	
 10296                           
 10297                           ;LCD_8bits_main.c: 45:     _delay((unsigned long)((160)*(4000000/4000000.0)));
 10298  1DF6  3035               	movlw	53
 10299  1DF7  00F6               	movwf	??_LCD_INIT
 10300  1DF8                     u5697:	
 10301  1DF8  0BF6               	decfsz	??_LCD_INIT,f
 10302  1DF9  2DF8               	goto	u5697
 10303  1DFA                     l3172:	
 10304                           
 10305                           ;LCD_8bits_main.c: 48:     LCD_CMD(0x02);
 10306  1DFA  3002               	movlw	2
 10307  1DFB  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10308  1E00                     l3174:	
 10309                           
 10310                           ;LCD_8bits_main.c: 49:     LCD_CMD(0x38);
 10311  1E00  3038               	movlw	56
 10312  1E01  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10313  1E06                     l3176:	
 10314                           
 10315                           ;LCD_8bits_main.c: 50:     LCD_CMD(0x08);
 10316  1E06  3008               	movlw	8
 10317  1E07  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10318  1E0C                     l3178:	
 10319                           
 10320                           ;LCD_8bits_main.c: 51:     LCD_CMD(0x01);
 10321  1E0C  3001               	movlw	1
 10322  1E0D  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10323  1E12                     l3180:	
 10324                           
 10325                           ;LCD_8bits_main.c: 52:     LCD_CMD(0x06);
 10326  1E12  3006               	movlw	6
 10327  1E13  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10328  1E18                     l3182:	
 10329                           
 10330                           ;LCD_8bits_main.c: 53:     LCD_CMD(0x0C);
 10331  1E18  300C               	movlw	12
 10332  1E19  160A  158A  235F  160A  158A  	fcall	_LCD_CMD
 10333  1E1E                     l21:	
 10334  1E1E  0008               	return
 10335  1E1F                     __end_of_LCD_INIT:	
 10336                           
 10337                           	psect	text29
 10338  1B5F                     __ptext29:	
 10339 ;; *************** function _LCD_CMD *****************
 10340 ;; Defined at:
 10341 ;;		line 12 in file "LCD_8bits_main.c"
 10342 ;; Parameters:    Size  Location     Type
 10343 ;;  a               1    wreg     unsigned char 
 10344 ;; Auto vars:     Size  Location     Type
 10345 ;;  a               1    5[COMMON] unsigned char 
 10346 ;; Return value:  Size  Location     Type
 10347 ;;                  1    wreg      void 
 10348 ;; Registers used:
 10349 ;;		wreg
 10350 ;; Tracked objects:
 10351 ;;		On entry : 0/0
 10352 ;;		On exit  : 0/0
 10353 ;;		Unchanged: 0/0
 10354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10355 ;;      Params:         0       0       0       0       0
 10356 ;;      Locals:         1       0       0       0       0
 10357 ;;      Temps:          2       0       0       0       0
 10358 ;;      Totals:         3       0       0       0       0
 10359 ;;Total ram usage:        3 bytes
 10360 ;; Hardware stack levels used:    1
 10361 ;; Hardware stack levels required when called:    1
 10362 ;; This function calls:
 10363 ;;		Nothing
 10364 ;; This function is called by:
 10365 ;;		_LCD_SET_CURSOR
 10366 ;;		_LCD_INIT
 10367 ;;		_LCD_CLR
 10368 ;;		_LCD_SHIFT_RIGHT
 10369 ;;		_LCD_SHIFT_LEFT
 10370 ;; This function uses a non-reentrant model
 10371 ;;
 10372                           
 10373                           
 10374                           ;psect for function _LCD_CMD
 10375  1B5F                     _LCD_CMD:	
 10376                           
 10377                           ;incstack = 0
 10378                           ; Regs used in _LCD_CMD: [wreg]
 10379                           ;LCD_CMD@a stored from wreg
 10380  1B5F  00F5               	movwf	LCD_CMD@a
 10381  1B60                     l2768:	
 10382                           
 10383                           ;LCD_8bits_main.c: 13:     PORTDbits.RD5 = 0;
 10384  1B60  1283               	bcf	3,5	;RP0=0, select bank0
 10385  1B61  1303               	bcf	3,6	;RP1=0, select bank0
 10386  1B62  1288               	bcf	8,5	;volatile
 10387  1B63                     l2770:	
 10388                           
 10389                           ;LCD_8bits_main.c: 14:     PORTB = a;
 10390  1B63  0875               	movf	LCD_CMD@a,w
 10391  1B64  0086               	movwf	6	;volatile
 10392  1B65                     l2772:	
 10393                           
 10394                           ;LCD_8bits_main.c: 15:     PORTDbits.RD7 = 1;
 10395  1B65  1788               	bsf	8,7	;volatile
 10396  1B66                     l2774:	
 10397                           
 10398                           ;LCD_8bits_main.c: 16:     _delay((unsigned long)((5)*(4000000/4000000.0)));
 10399  1B66  2B67               	nop2	;2 cycle nop
 10400  1B67  2B68               	nop2	;2 cycle nop
 10401  1B68  0000               	nop
 10402  1B69                     l2776:	
 10403                           
 10404                           ;LCD_8bits_main.c: 17:     PORTDbits.RD7 = 0;
 10405  1B69  1283               	bcf	3,5	;RP0=0, select bank0
 10406  1B6A  1303               	bcf	3,6	;RP1=0, select bank0
 10407  1B6B  1388               	bcf	8,7	;volatile
 10408                           
 10409                           ;LCD_8bits_main.c: 18:     _delay((unsigned long)((5)*(4000000/4000.0)));
 10410  1B6C  3007               	movlw	7
 10411  1B6D  00F4               	movwf	??_LCD_CMD+1
 10412  1B6E  307D               	movlw	125
 10413  1B6F  00F3               	movwf	??_LCD_CMD
 10414  1B70                     u5707:	
 10415  1B70  0BF3               	decfsz	??_LCD_CMD,f
 10416  1B71  2B70               	goto	u5707
 10417  1B72  0BF4               	decfsz	??_LCD_CMD+1,f
 10418  1B73  2B70               	goto	u5707
 10419  1B74                     l9:	
 10420  1B74  0008               	return
 10421  1B75                     __end_of_LCD_CMD:	
 10422                           
 10423                           	psect	text30
 10424  1C14                     __ptext30:	
 10425 ;; *************** function _EUSART_Init *****************
 10426 ;; Defined at:
 10427 ;;		line 5 in file "Lib_EUSART.c"
 10428 ;; Parameters:    Size  Location     Type
 10429 ;;  a               1    wreg     unsigned char 
 10430 ;;  b               1    3[COMMON] unsigned char 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  a               1    4[COMMON] unsigned char 
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  1    wreg      void 
 10435 ;; Registers used:
 10436 ;;		wreg, status,2, status,0
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/0
 10439 ;;		On exit  : 0/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10442 ;;      Params:         1       0       0       0       0
 10443 ;;      Locals:         1       0       0       0       0
 10444 ;;      Temps:          0       0       0       0       0
 10445 ;;      Totals:         2       0       0       0       0
 10446 ;;Total ram usage:        2 bytes
 10447 ;; Hardware stack levels used:    1
 10448 ;; Hardware stack levels required when called:    1
 10449 ;; This function calls:
 10450 ;;		Nothing
 10451 ;; This function is called by:
 10452 ;;		_main
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           
 10457                           ;psect for function _EUSART_Init
 10458  1C14                     _EUSART_Init:	
 10459                           
 10460                           ;incstack = 0
 10461                           ; Regs used in _EUSART_Init: [wreg+status,2+status,0]
 10462                           ;EUSART_Init@a stored from wreg
 10463  1C14  00F4               	movwf	EUSART_Init@a
 10464  1C15                     l3228:	
 10465                           
 10466                           ;Lib_EUSART.c: 7:     BAUDCTLbits.BRG16 = 0;
 10467  1C15  1683               	bsf	3,5	;RP0=1, select bank3
 10468  1C16  1703               	bsf	3,6	;RP1=1, select bank3
 10469  1C17  1187               	bcf	7,3	;volatile
 10470                           
 10471                           ;Lib_EUSART.c: 8:     TXSTAbits.BRGH = 1;
 10472  1C18  1683               	bsf	3,5	;RP0=1, select bank1
 10473  1C19  1303               	bcf	3,6	;RP1=0, select bank1
 10474  1C1A  1518               	bsf	24,2	;volatile
 10475                           
 10476                           ;Lib_EUSART.c: 9:     TXSTAbits.SYNC = 0;
 10477  1C1B  1218               	bcf	24,4	;volatile
 10478                           
 10479                           ;Lib_EUSART.c: 10:     RCSTAbits.SPEN = 1;
 10480  1C1C  1283               	bcf	3,5	;RP0=0, select bank0
 10481  1C1D  1303               	bcf	3,6	;RP1=0, select bank0
 10482  1C1E  1798               	bsf	24,7	;volatile
 10483  1C1F                     l3230:	
 10484                           
 10485                           ;Lib_EUSART.c: 11:     if (a==1){
 10486  1C1F  0374               	decf	EUSART_Init@a,w
 10487  1C20  1D03               	btfss	3,2
 10488  1C21  2C23               	goto	u5121
 10489  1C22  2C24               	goto	u5120
 10490  1C23                     u5121:	
 10491  1C23  2C2C               	goto	l168
 10492  1C24                     u5120:	
 10493  1C24                     l3232:	
 10494                           
 10495                           ;Lib_EUSART.c: 12:         PIE1bits.RCIE = 1;
 10496  1C24  1683               	bsf	3,5	;RP0=1, select bank1
 10497  1C25  1303               	bcf	3,6	;RP1=0, select bank1
 10498  1C26  168C               	bsf	12,5	;volatile
 10499                           
 10500                           ;Lib_EUSART.c: 13:         PIR1bits.RCIF = 0;
 10501  1C27  1283               	bcf	3,5	;RP0=0, select bank0
 10502  1C28  1303               	bcf	3,6	;RP1=0, select bank0
 10503  1C29  128C               	bcf	12,5	;volatile
 10504                           
 10505                           ;Lib_EUSART.c: 14:         INTCONbits.GIE = 1;
 10506  1C2A  178B               	bsf	11,7	;volatile
 10507                           
 10508                           ;Lib_EUSART.c: 15:         INTCONbits.PEIE = 1;
 10509  1C2B  170B               	bsf	11,6	;volatile
 10510  1C2C                     l168:	
 10511                           ;Lib_EUSART.c: 16:     }
 10512                           
 10513                           
 10514                           ;Lib_EUSART.c: 17:     RCSTAbits.RX9D = 0;
 10515  1C2C  1018               	bcf	24,0	;volatile
 10516                           
 10517                           ;Lib_EUSART.c: 18:     RCSTAbits.CREN = 1;
 10518  1C2D  1618               	bsf	24,4	;volatile
 10519                           
 10520                           ;Lib_EUSART.c: 21:     TXSTAbits.TXEN = 1;
 10521  1C2E  1683               	bsf	3,5	;RP0=1, select bank1
 10522  1C2F  1303               	bcf	3,6	;RP1=0, select bank1
 10523  1C30  1698               	bsf	24,5	;volatile
 10524  1C31                     l3234:	
 10525                           
 10526                           ;Lib_EUSART.c: 22:     if(b==1){
 10527  1C31  0373               	decf	EUSART_Init@b,w
 10528  1C32  1D03               	btfss	3,2
 10529  1C33  2C35               	goto	u5131
 10530  1C34  2C36               	goto	u5130
 10531  1C35                     u5131:	
 10532  1C35  2C3C               	goto	l170
 10533  1C36                     u5130:	
 10534  1C36                     l3236:	
 10535                           
 10536                           ;Lib_EUSART.c: 23:         PIE1bits.TXIE = 1;
 10537  1C36  160C               	bsf	12,4	;volatile
 10538                           
 10539                           ;Lib_EUSART.c: 24:         PIR1bits.TXIF = 0;
 10540  1C37  1283               	bcf	3,5	;RP0=0, select bank0
 10541  1C38  1303               	bcf	3,6	;RP1=0, select bank0
 10542  1C39  120C               	bcf	12,4	;volatile
 10543                           
 10544                           ;Lib_EUSART.c: 25:         INTCONbits.GIE = 1;
 10545  1C3A  178B               	bsf	11,7	;volatile
 10546                           
 10547                           ;Lib_EUSART.c: 26:         INTCONbits.PEIE = 1;
 10548  1C3B  170B               	bsf	11,6	;volatile
 10549  1C3C                     l170:	
 10550  1C3C  0008               	return
 10551  1C3D                     __end_of_EUSART_Init:	
 10552                           
 10553                           	psect	text31
 10554  12A7                     __ptext31:	
 10555 ;; *************** function _ADC_init *****************
 10556 ;; Defined at:
 10557 ;;		line 28 in file "../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c"
 10558 ;; Parameters:    Size  Location     Type
 10559 ;;  Fosc            1    wreg     unsigned char 
 10560 ;;  channel         1    3[COMMON] unsigned char 
 10561 ;;  int_on          1    4[COMMON] unsigned char 
 10562 ;;  left_or_righ    1    5[COMMON] unsigned char 
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;  Fosc            1    8[COMMON] unsigned char 
 10565 ;; Return value:  Size  Location     Type
 10566 ;;                  1    wreg      void 
 10567 ;; Registers used:
 10568 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10574 ;;      Params:         3       0       0       0       0
 10575 ;;      Locals:         1       0       0       0       0
 10576 ;;      Temps:          2       0       0       0       0
 10577 ;;      Totals:         6       0       0       0       0
 10578 ;;Total ram usage:        6 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:    1
 10581 ;; This function calls:
 10582 ;;		Nothing
 10583 ;; This function is called by:
 10584 ;;		_main
 10585 ;; This function uses a non-reentrant model
 10586 ;;
 10587                           
 10588                           
 10589                           ;psect for function _ADC_init
 10590  12A7                     _ADC_init:	
 10591                           
 10592                           ;incstack = 0
 10593                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
 10594                           ;ADC_init@Fosc stored from wreg
 10595  12A7  00F8               	movwf	ADC_init@Fosc
 10596  12A8                     l3198:	
 10597                           
 10598                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 29:     switch (Fosc) {
 10599  12A8  2AC2               	goto	l3202
 10600  12A9                     l130:	
 10601                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 30:         case 0:
 10602                           
 10603                           
 10604                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 31:             ADCON0bits
      +                          .ADCS1 = 0;
 10605  12A9  1283               	bcf	3,5	;RP0=0, select bank0
 10606  12AA  1303               	bcf	3,6	;RP1=0, select bank0
 10607  12AB  139F               	bcf	31,7	;volatile
 10608                           
 10609                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 32:             ADCON0bits
      +                          .ADCS0 = 0;
 10610  12AC  131F               	bcf	31,6	;volatile
 10611                           
 10612                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 33:             break;
 10613  12AD  2B1E               	goto	l3206
 10614  12AE                     l132:	
 10615                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 34:         case 1:
 10616                           
 10617                           
 10618                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 35:             ADCON0bits
      +                          .ADCS1 = 0;
 10619  12AE  1283               	bcf	3,5	;RP0=0, select bank0
 10620  12AF  1303               	bcf	3,6	;RP1=0, select bank0
 10621  12B0  139F               	bcf	31,7	;volatile
 10622                           
 10623                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 36:             ADCON0bits
      +                          .ADCS0 = 1;
 10624  12B1  171F               	bsf	31,6	;volatile
 10625                           
 10626                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 37:             break;
 10627  12B2  2B1E               	goto	l3206
 10628  12B3                     l133:	
 10629                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 38:         case 2:
 10630                           
 10631                           
 10632                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 39:             ADCON0bits
      +                          .ADCS1 = 1;
 10633  12B3  1283               	bcf	3,5	;RP0=0, select bank0
 10634  12B4  1303               	bcf	3,6	;RP1=0, select bank0
 10635  12B5  179F               	bsf	31,7	;volatile
 10636                           
 10637                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 40:             ADCON0bits
      +                          .ADCS0 = 0;
 10638  12B6  131F               	bcf	31,6	;volatile
 10639                           
 10640                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 41:             break;
 10641  12B7  2B1E               	goto	l3206
 10642  12B8                     l134:	
 10643                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 42:         case 3:
 10644                           
 10645                           
 10646                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 43:             ADCON0bits
      +                          .ADCS1 = 1;
 10647  12B8  1283               	bcf	3,5	;RP0=0, select bank0
 10648  12B9  1303               	bcf	3,6	;RP1=0, select bank0
 10649  12BA  179F               	bsf	31,7	;volatile
 10650                           
 10651                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 44:             ADCON0bits
      +                          .ADCS0 = 1;
 10652  12BB  171F               	bsf	31,6	;volatile
 10653                           
 10654                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 45:             break;
 10655  12BC  2B1E               	goto	l3206
 10656  12BD                     l135:	
 10657                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 46:         default:
 10658                           
 10659                           
 10660                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 47:             ADCON0bits
      +                          .ADCS1 = 0;
 10661  12BD  1283               	bcf	3,5	;RP0=0, select bank0
 10662  12BE  1303               	bcf	3,6	;RP1=0, select bank0
 10663  12BF  139F               	bcf	31,7	;volatile
 10664                           
 10665                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 48:             ADCON0bits
      +                          .ADCS0 = 1;
 10666  12C0  171F               	bsf	31,6	;volatile
 10667                           
 10668                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 49:             break;
 10669  12C1  2B1E               	goto	l3206
 10670  12C2                     l3202:	
 10671  12C2  0878               	movf	ADC_init@Fosc,w
 10672  12C3  00F6               	movwf	??_ADC_init
 10673  12C4  01F7               	clrf	??_ADC_init+1
 10674                           
 10675                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10676                           ; Switch size 1, requested type "simple"
 10677                           ; Number of cases is 1, Range of values is 0 to 0
 10678                           ; switch strategies available:
 10679                           ; Name         Instructions Cycles
 10680                           ; simple_byte            4     3 (average)
 10681                           ; direct_byte           11     8 (fixed)
 10682                           ; jumptable            260     6 (fixed)
 10683                           ;	Chosen strategy is simple_byte
 10684  12C5  0877               	movf	??_ADC_init+1,w
 10685  12C6  3A00               	xorlw	0	; case 0
 10686  12C7  1903               	skipnz
 10687  12C8  2ACA               	goto	l3624
 10688  12C9  2ABD               	goto	l135
 10689  12CA                     l3624:	
 10690                           
 10691                           ; Switch size 1, requested type "simple"
 10692                           ; Number of cases is 4, Range of values is 0 to 3
 10693                           ; switch strategies available:
 10694                           ; Name         Instructions Cycles
 10695                           ; simple_byte           13     7 (average)
 10696                           ; direct_byte           20     8 (fixed)
 10697                           ; jumptable            260     6 (fixed)
 10698                           ;	Chosen strategy is simple_byte
 10699  12CA  0876               	movf	??_ADC_init,w
 10700  12CB  3A00               	xorlw	0	; case 0
 10701  12CC  1903               	skipnz
 10702  12CD  2AA9               	goto	l130
 10703  12CE  3A01               	xorlw	1	; case 1
 10704  12CF  1903               	skipnz
 10705  12D0  2AAE               	goto	l132
 10706  12D1  3A03               	xorlw	3	; case 2
 10707  12D2  1903               	skipnz
 10708  12D3  2AB3               	goto	l133
 10709  12D4  3A01               	xorlw	1	; case 3
 10710  12D5  1903               	skipnz
 10711  12D6  2AB8               	goto	l134
 10712  12D7  2ABD               	goto	l135
 10713  12D8                     l137:	
 10714                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 53:         case 0:
 10715                           
 10716                           
 10717                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 54:             ADCON0bits
      +                          .CHS0 = 0;
 10718  12D8  111F               	bcf	31,2	;volatile
 10719                           
 10720                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 55:             ADCON0bits
      +                          .CHS1 = 0;
 10721  12D9  119F               	bcf	31,3	;volatile
 10722                           
 10723                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 56:             ADCON0bits
      +                          .CHS2 = 0;
 10724  12DA  121F               	bcf	31,4	;volatile
 10725                           
 10726                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 57:             ADCON0bits
      +                          .CHS3 = 0;
 10727  12DB  129F               	bcf	31,5	;volatile
 10728                           
 10729                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 58:             break;
 10730  12DC  2B52               	goto	l138
 10731  12DD                     l139:	
 10732                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 59:         case 1:
 10733                           
 10734                           
 10735                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 60:             ADCON0bits
      +                          .CHS0 = 1;
 10736  12DD  151F               	bsf	31,2	;volatile
 10737                           
 10738                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 61:             ADCON0bits
      +                          .CHS1 = 0;
 10739  12DE  119F               	bcf	31,3	;volatile
 10740                           
 10741                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 62:             ADCON0bits
      +                          .CHS2 = 0;
 10742  12DF  121F               	bcf	31,4	;volatile
 10743                           
 10744                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 63:             ADCON0bits
      +                          .CHS3 = 0;
 10745  12E0  129F               	bcf	31,5	;volatile
 10746                           
 10747                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 64:             break;
 10748  12E1  2B52               	goto	l138
 10749  12E2                     l140:	
 10750                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 65:         case 2:
 10751                           
 10752                           
 10753                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 66:             ADCON0bits
      +                          .CHS0 = 0;
 10754  12E2  111F               	bcf	31,2	;volatile
 10755                           
 10756                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 67:             ADCON0bits
      +                          .CHS1 = 1;
 10757  12E3  159F               	bsf	31,3	;volatile
 10758                           
 10759                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 68:             ADCON0bits
      +                          .CHS2 = 0;
 10760  12E4  121F               	bcf	31,4	;volatile
 10761                           
 10762                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 69:             ADCON0bits
      +                          .CHS3 = 0;
 10763  12E5  129F               	bcf	31,5	;volatile
 10764                           
 10765                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 70:             break;
 10766  12E6  2B52               	goto	l138
 10767  12E7                     l141:	
 10768                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 71:         case 3:
 10769                           
 10770                           
 10771                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 72:             ADCON0bits
      +                          .CHS0 = 1;
 10772  12E7  151F               	bsf	31,2	;volatile
 10773                           
 10774                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 73:             ADCON0bits
      +                          .CHS1 = 1;
 10775  12E8  159F               	bsf	31,3	;volatile
 10776                           
 10777                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 74:             ADCON0bits
      +                          .CHS2 = 0;
 10778  12E9  121F               	bcf	31,4	;volatile
 10779                           
 10780                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 75:             ADCON0bits
      +                          .CHS3 = 0;
 10781  12EA  129F               	bcf	31,5	;volatile
 10782                           
 10783                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 76:             break;
 10784  12EB  2B52               	goto	l138
 10785  12EC                     l142:	
 10786                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 77:         case 4:
 10787                           
 10788                           
 10789                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 78:             ADCON0bits
      +                          .CHS0 = 0;
 10790  12EC  111F               	bcf	31,2	;volatile
 10791                           
 10792                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 79:             ADCON0bits
      +                          .CHS1 = 0;
 10793  12ED  119F               	bcf	31,3	;volatile
 10794                           
 10795                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 80:             ADCON0bits
      +                          .CHS2 = 1;
 10796  12EE  161F               	bsf	31,4	;volatile
 10797                           
 10798                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 81:             ADCON0bits
      +                          .CHS3 = 0;
 10799  12EF  129F               	bcf	31,5	;volatile
 10800                           
 10801                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 82:             break;
 10802  12F0  2B52               	goto	l138
 10803  12F1                     l143:	
 10804                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 83:         case 5:
 10805                           
 10806                           
 10807                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 84:             ADCON0bits
      +                          .CHS0 = 1;
 10808  12F1  151F               	bsf	31,2	;volatile
 10809                           
 10810                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 85:             ADCON0bits
      +                          .CHS1 = 0;
 10811  12F2  119F               	bcf	31,3	;volatile
 10812                           
 10813                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 86:             ADCON0bits
      +                          .CHS2 = 1;
 10814  12F3  161F               	bsf	31,4	;volatile
 10815                           
 10816                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 87:             ADCON0bits
      +                          .CHS3 = 0;
 10817  12F4  129F               	bcf	31,5	;volatile
 10818                           
 10819                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 88:             break;
 10820  12F5  2B52               	goto	l138
 10821  12F6                     l144:	
 10822                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 89:         case 6:
 10823                           
 10824                           
 10825                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 90:             ADCON0bits
      +                          .CHS0 = 0;
 10826  12F6  111F               	bcf	31,2	;volatile
 10827                           
 10828                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 91:             ADCON0bits
      +                          .CHS1 = 1;
 10829  12F7  159F               	bsf	31,3	;volatile
 10830                           
 10831                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 92:             ADCON0bits
      +                          .CHS2 = 1;
 10832  12F8  161F               	bsf	31,4	;volatile
 10833                           
 10834                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 93:             ADCON0bits
      +                          .CHS3 = 0;
 10835  12F9  129F               	bcf	31,5	;volatile
 10836                           
 10837                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 94:             break;
 10838  12FA  2B52               	goto	l138
 10839  12FB                     l145:	
 10840                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 95:         case 7:
 10841                           
 10842                           
 10843                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 96:             ADCON0bits
      +                          .CHS0 = 1;
 10844  12FB  151F               	bsf	31,2	;volatile
 10845                           
 10846                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 97:             ADCON0bits
      +                          .CHS1 = 1;
 10847  12FC  159F               	bsf	31,3	;volatile
 10848                           
 10849                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 98:             ADCON0bits
      +                          .CHS2 = 1;
 10850  12FD  161F               	bsf	31,4	;volatile
 10851                           
 10852                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 99:             ADCON0bits
      +                          .CHS3 = 0;
 10853  12FE  129F               	bcf	31,5	;volatile
 10854                           
 10855                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 100:             break;
 10856  12FF  2B52               	goto	l138
 10857  1300                     l146:	
 10858                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 101:         case 8:
 10859                           
 10860                           
 10861                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 102:             ADCON0bit
      +                          s.CHS0 = 0;
 10862  1300  111F               	bcf	31,2	;volatile
 10863                           
 10864                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 103:             ADCON0bit
      +                          s.CHS1 = 0;
 10865  1301  119F               	bcf	31,3	;volatile
 10866                           
 10867                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 104:             ADCON0bit
      +                          s.CHS2 = 0;
 10868  1302  121F               	bcf	31,4	;volatile
 10869                           
 10870                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 105:             ADCON0bit
      +                          s.CHS3 = 1;
 10871  1303  169F               	bsf	31,5	;volatile
 10872                           
 10873                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 106:             break;
 10874  1304  2B52               	goto	l138
 10875  1305                     l147:	
 10876                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 107:         case 9:
 10877                           
 10878                           
 10879                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 108:             ADCON0bit
      +                          s.CHS0 = 1;
 10880  1305  151F               	bsf	31,2	;volatile
 10881                           
 10882                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 109:             ADCON0bit
      +                          s.CHS1 = 0;
 10883  1306  119F               	bcf	31,3	;volatile
 10884                           
 10885                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 110:             ADCON0bit
      +                          s.CHS2 = 0;
 10886  1307  121F               	bcf	31,4	;volatile
 10887                           
 10888                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 111:             ADCON0bit
      +                          s.CHS3 = 1;
 10889  1308  169F               	bsf	31,5	;volatile
 10890                           
 10891                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 112:             break;
 10892  1309  2B52               	goto	l138
 10893  130A                     l148:	
 10894                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 113:         case 10:
 10895                           
 10896                           
 10897                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 114:             ADCON0bit
      +                          s.CHS0 = 0;
 10898  130A  111F               	bcf	31,2	;volatile
 10899                           
 10900                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 115:             ADCON0bit
      +                          s.CHS1 = 1;
 10901  130B  159F               	bsf	31,3	;volatile
 10902                           
 10903                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 116:             ADCON0bit
      +                          s.CHS2 = 0;
 10904  130C  121F               	bcf	31,4	;volatile
 10905                           
 10906                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 117:             ADCON0bit
      +                          s.CHS3 = 1;
 10907  130D  169F               	bsf	31,5	;volatile
 10908                           
 10909                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 118:             break;
 10910  130E  2B52               	goto	l138
 10911  130F                     l149:	
 10912                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 119:         case 11:
 10913                           
 10914                           
 10915                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 120:             ADCON0bit
      +                          s.CHS0 = 1;
 10916  130F  151F               	bsf	31,2	;volatile
 10917                           
 10918                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 121:             ADCON0bit
      +                          s.CHS1 = 1;
 10919  1310  159F               	bsf	31,3	;volatile
 10920                           
 10921                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 122:             ADCON0bit
      +                          s.CHS2 = 0;
 10922  1311  121F               	bcf	31,4	;volatile
 10923                           
 10924                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 123:             ADCON0bit
      +                          s.CHS3 = 1;
 10925  1312  169F               	bsf	31,5	;volatile
 10926                           
 10927                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 124:             break;
 10928  1313  2B52               	goto	l138
 10929  1314                     l150:	
 10930                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 125:         case 12:
 10931                           
 10932                           
 10933                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 126:             ADCON0bit
      +                          s.CHS0 = 0;
 10934  1314  111F               	bcf	31,2	;volatile
 10935                           
 10936                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 127:             ADCON0bit
      +                          s.CHS1 = 0;
 10937  1315  119F               	bcf	31,3	;volatile
 10938                           
 10939                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 128:             ADCON0bit
      +                          s.CHS2 = 1;
 10940  1316  161F               	bsf	31,4	;volatile
 10941                           
 10942                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 129:             ADCON0bit
      +                          s.CHS3 = 1;
 10943  1317  169F               	bsf	31,5	;volatile
 10944                           
 10945                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 130:             break;
 10946  1318  2B52               	goto	l138
 10947  1319                     l151:	
 10948                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 131:         case 13:
 10949                           
 10950                           
 10951                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 132:             ADCON0bit
      +                          s.CHS0 = 1;
 10952  1319  151F               	bsf	31,2	;volatile
 10953                           
 10954                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 133:             ADCON0bit
      +                          s.CHS1 = 0;
 10955  131A  119F               	bcf	31,3	;volatile
 10956                           
 10957                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 134:             ADCON0bit
      +                          s.CHS2 = 1;
 10958  131B  161F               	bsf	31,4	;volatile
 10959                           
 10960                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 135:             ADCON0bit
      +                          s.CHS3 = 1;
 10961  131C  169F               	bsf	31,5	;volatile
 10962                           
 10963                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 136:             break;
 10964  131D  2B52               	goto	l138
 10965  131E                     l3206:	
 10966  131E  0873               	movf	ADC_init@channel,w
 10967  131F  00F6               	movwf	??_ADC_init
 10968  1320  01F7               	clrf	??_ADC_init+1
 10969                           
 10970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10971                           ; Switch size 1, requested type "simple"
 10972                           ; Number of cases is 1, Range of values is 0 to 0
 10973                           ; switch strategies available:
 10974                           ; Name         Instructions Cycles
 10975                           ; simple_byte            4     3 (average)
 10976                           ; direct_byte           11     8 (fixed)
 10977                           ; jumptable            260     6 (fixed)
 10978                           ;	Chosen strategy is simple_byte
 10979  1321  0877               	movf	??_ADC_init+1,w
 10980  1322  3A00               	xorlw	0	; case 0
 10981  1323  1903               	skipnz
 10982  1324  2B26               	goto	l3626
 10983  1325  2B52               	goto	l138
 10984  1326                     l3626:	
 10985                           
 10986                           ; Switch size 1, requested type "simple"
 10987                           ; Number of cases is 14, Range of values is 0 to 13
 10988                           ; switch strategies available:
 10989                           ; Name         Instructions Cycles
 10990                           ; simple_byte           43    22 (average)
 10991                           ; direct_byte           50     8 (fixed)
 10992                           ; jumptable            260     6 (fixed)
 10993                           ;	Chosen strategy is simple_byte
 10994  1326  0876               	movf	??_ADC_init,w
 10995  1327  3A00               	xorlw	0	; case 0
 10996  1328  1903               	skipnz
 10997  1329  2AD8               	goto	l137
 10998  132A  3A01               	xorlw	1	; case 1
 10999  132B  1903               	skipnz
 11000  132C  2ADD               	goto	l139
 11001  132D  3A03               	xorlw	3	; case 2
 11002  132E  1903               	skipnz
 11003  132F  2AE2               	goto	l140
 11004  1330  3A01               	xorlw	1	; case 3
 11005  1331  1903               	skipnz
 11006  1332  2AE7               	goto	l141
 11007  1333  3A07               	xorlw	7	; case 4
 11008  1334  1903               	skipnz
 11009  1335  2AEC               	goto	l142
 11010  1336  3A01               	xorlw	1	; case 5
 11011  1337  1903               	skipnz
 11012  1338  2AF1               	goto	l143
 11013  1339  3A03               	xorlw	3	; case 6
 11014  133A  1903               	skipnz
 11015  133B  2AF6               	goto	l144
 11016  133C  3A01               	xorlw	1	; case 7
 11017  133D  1903               	skipnz
 11018  133E  2AFB               	goto	l145
 11019  133F  3A0F               	xorlw	15	; case 8
 11020  1340  1903               	skipnz
 11021  1341  2B00               	goto	l146
 11022  1342  3A01               	xorlw	1	; case 9
 11023  1343  1903               	skipnz
 11024  1344  2B05               	goto	l147
 11025  1345  3A03               	xorlw	3	; case 10
 11026  1346  1903               	skipnz
 11027  1347  2B0A               	goto	l148
 11028  1348  3A01               	xorlw	1	; case 11
 11029  1349  1903               	skipnz
 11030  134A  2B0F               	goto	l149
 11031  134B  3A07               	xorlw	7	; case 12
 11032  134C  1903               	skipnz
 11033  134D  2B14               	goto	l150
 11034  134E  3A01               	xorlw	1	; case 13
 11035  134F  1903               	skipnz
 11036  1350  2B19               	goto	l151
 11037  1351  2B52               	goto	l138
 11038  1352                     l138:	
 11039                           
 11040                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 140:     ADCON0bits.ADON =
      +                           1;
 11041  1352  141F               	bsf	31,0	;volatile
 11042  1353                     l3208:	
 11043                           
 11044                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 141:     if (int_on == 1){
 11045  1353  0374               	decf	ADC_init@int_on,w
 11046  1354  1D03               	btfss	3,2
 11047  1355  2B57               	goto	u5111
 11048  1356  2B58               	goto	u5110
 11049  1357                     u5111:	
 11050  1357  2B5E               	goto	l3212
 11051  1358                     u5110:	
 11052  1358                     l3210:	
 11053                           
 11054                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 142:         PIR1bits.ADIF
      +                           = 0;
 11055  1358  130C               	bcf	12,6	;volatile
 11056                           
 11057                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 143:         PIE1bits.ADIE
      +                           = 1;
 11058  1359  1683               	bsf	3,5	;RP0=1, select bank1
 11059  135A  1303               	bcf	3,6	;RP1=0, select bank1
 11060  135B  170C               	bsf	12,6	;volatile
 11061                           
 11062                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 144:         INTCONbits.PE
      +                          IE = 1;
 11063  135C  170B               	bsf	11,6	;volatile
 11064                           
 11065                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 145:         INTCONbits.GI
      +                          E = 1;
 11066  135D  178B               	bsf	11,7	;volatile
 11067  135E                     l3212:	
 11068                           
 11069                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 147:     ADCON1bits.ADFM =
      +                           left_or_right;
 11070  135E  0C75               	rrf	ADC_init@left_or_right,w
 11071  135F  1683               	bsf	3,5	;RP0=1, select bank1
 11072  1360  1303               	bcf	3,6	;RP1=0, select bank1
 11073  1361  1C03               	skipc
 11074  1362  139F               	bcf	31,7	;volatile
 11075  1363  1803               	skipnc
 11076  1364  179F               	bsf	31,7	;volatile
 11077  1365                     l3214:	
 11078                           
 11079                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 148:     ADCON1bits.VCFG0 
      +                          = 0;
 11080  1365  121F               	bcf	31,4	;volatile
 11081  1366                     l3216:	
 11082                           
 11083                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 149:     ADCON1bits.VCFG1 
      +                          = 0;
 11084  1366  129F               	bcf	31,5	;volatile
 11085  1367                     l3218:	
 11086                           
 11087                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 150:     ADCON0bits.GO_DON
      +                          E = 1;
 11088  1367  1283               	bcf	3,5	;RP0=0, select bank0
 11089  1368  1303               	bcf	3,6	;RP1=0, select bank0
 11090  1369  149F               	bsf	31,1	;volatile
 11091  136A                     l153:	
 11092  136A  0008               	return
 11093  136B                     __end_of_ADC_init:	
 11094                           
 11095                           	psect	text32
 11096  1BED                     __ptext32:	
 11097 ;; *************** function _isr *****************
 11098 ;; Defined at:
 11099 ;;		line 38 in file "main_lab3.c"
 11100 ;; Parameters:    Size  Location     Type
 11101 ;;		None
 11102 ;; Auto vars:     Size  Location     Type
 11103 ;;		None
 11104 ;; Return value:  Size  Location     Type
 11105 ;;                  1    wreg      void 
 11106 ;; Registers used:
 11107 ;;		wreg
 11108 ;; Tracked objects:
 11109 ;;		On entry : 0/0
 11110 ;;		On exit  : 0/0
 11111 ;;		Unchanged: 0/0
 11112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11113 ;;      Params:         0       0       0       0       0
 11114 ;;      Locals:         0       0       0       0       0
 11115 ;;      Temps:          3       0       0       0       0
 11116 ;;      Totals:         3       0       0       0       0
 11117 ;;Total ram usage:        3 bytes
 11118 ;; Hardware stack levels used:    1
 11119 ;; This function calls:
 11120 ;;		Nothing
 11121 ;; This function is called by:
 11122 ;;		Interrupt level 1
 11123 ;; This function uses a non-reentrant model
 11124 ;;
 11125                           
 11126                           
 11127                           ;psect for function _isr
 11128  1BED                     _isr:	
 11129  1BED                     i1l3508:	
 11130                           
 11131                           ;main_lab3.c: 39:     if (PIR1bits.ADIF == 1){
 11132  1BED  1283               	bcf	3,5	;RP0=0, select bank0
 11133  1BEE  1303               	bcf	3,6	;RP1=0, select bank0
 11134  1BEF  1F0C               	btfss	12,6	;volatile
 11135  1BF0  2BF2               	goto	u561_21
 11136  1BF1  2BF3               	goto	u561_20
 11137  1BF2                     u561_21:	
 11138  1BF2  2C0D               	goto	i1l96
 11139  1BF3                     u561_20:	
 11140  1BF3                     i1l3510:	
 11141                           
 11142                           ;main_lab3.c: 40:         PIR1bits.ADIF = 0;
 11143  1BF3  130C               	bcf	12,6	;volatile
 11144                           
 11145                           ;main_lab3.c: 41:         start_another = 1;
 11146  1BF4  1683               	bsf	3,5	;RP0=1, select bank1
 11147  1BF5  1303               	bcf	3,6	;RP1=0, select bank1
 11148  1BF6  01D4               	clrf	_start_another^(0+128)
 11149  1BF7  0AD4               	incf	_start_another^(0+128),f
 11150                           
 11151                           ;main_lab3.c: 42:         if (ADCON0bits.CHS0 == 0){
 11152  1BF8  1283               	bcf	3,5	;RP0=0, select bank0
 11153  1BF9  1303               	bcf	3,6	;RP1=0, select bank0
 11154  1BFA  191F               	btfsc	31,2	;volatile
 11155  1BFB  2BFD               	goto	u562_21
 11156  1BFC  2BFE               	goto	u562_20
 11157  1BFD                     u562_21:	
 11158  1BFD  2C08               	goto	i1l3516
 11159  1BFE                     u562_20:	
 11160  1BFE                     i1l3512:	
 11161                           
 11162                           ;main_lab3.c: 43:             pot2 = ADRESH;
 11163  1BFE  081E               	movf	30,w	;volatile
 11164  1BFF  00F0               	movwf	??_isr
 11165  1C00  0870               	movf	??_isr,w
 11166  1C01  1683               	bsf	3,5	;RP0=1, select bank1
 11167  1C02  1303               	bcf	3,6	;RP1=0, select bank1
 11168  1C03  00D5               	movwf	_pot2^(0+128)
 11169  1C04                     i1l3514:	
 11170                           
 11171                           ;main_lab3.c: 44:             ADCON0bits.CHS0 = 1;
 11172  1C04  1283               	bcf	3,5	;RP0=0, select bank0
 11173  1C05  1303               	bcf	3,6	;RP1=0, select bank0
 11174  1C06  151F               	bsf	31,2	;volatile
 11175                           
 11176                           ;main_lab3.c: 45:         }else{
 11177  1C07  2C0D               	goto	i1l96
 11178  1C08                     i1l3516:	
 11179                           
 11180                           ;main_lab3.c: 46:             pot1 = ADRESH;
 11181  1C08  081E               	movf	30,w	;volatile
 11182  1C09  00F0               	movwf	??_isr
 11183  1C0A  0870               	movf	??_isr,w
 11184  1C0B  00EF               	movwf	_pot1
 11185  1C0C                     i1l3518:	
 11186                           
 11187                           ;main_lab3.c: 47:             ADCON0bits.CHS0 = 0;
 11188  1C0C  111F               	bcf	31,2	;volatile
 11189  1C0D                     i1l96:	
 11190  1C0D  0872               	movf	??_isr+2,w
 11191  1C0E  008A               	movwf	10
 11192  1C0F  0E71               	swapf	(??_isr+1)^(0+4294967168),w
 11193  1C10  0083               	movwf	3
 11194  1C11  0EFE               	swapf	btemp,f
 11195  1C12  0E7E               	swapf	btemp,w
 11196  1C13  0009               	retfie
 11197  1C14                     __end_of_isr:	
 11198  007E                     btemp	set	126	;btemp
 11199  007E                     wtemp0	set	126
 11200                           
 11201                           	psect	intentry
 11202  0004                     __pintentry:	
 11203                           ;incstack = 0
 11204                           ; Regs used in _isr: [wreg]
 11205                           
 11206  0004                     interrupt_function:	
 11207  007E                     saved_w	set	btemp
 11208  0004  00FE               	movwf	btemp
 11209  0005  0E03               	swapf	3,w
 11210  0006  00F1               	movwf	??_isr+1
 11211  0007  080A               	movf	10,w
 11212  0008  00F2               	movwf	??_isr+2
 11213  0009  160A  158A  2BED   	ljmp	_isr


Data Sizes:
    Strings     21
    Constant    144
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     79      80
    BANK1            80     44      64
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> string2(BANK1[5]), string1(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_WRITE_STRING@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), string2(BANK1[5]), string1(BANK1[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_WRITE_STRING
    _main->___xxtofl
    _sprintf->___awdiv
    _sprintf->___fleq
    _sprintf->___flge
    _sprintf->___lldiv
    _sprintf->___llmod
    _sprintf->___xxtofl
    _sprintf->__div_to_l_
    _sprintf->__tdiv_to_l_
    _scale->___awdiv
    ___awdiv->___awmod
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _LCD_WRITE_STRING->_LCD_WRITE_CHAR
    _LCD_SET_CURSOR->_LCD_CMD
    _LCD_INIT->_LCD_CMD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   38698
                                             40 BANK1      4     4      0
                           _ADC_init
                        _EUSART_Init
                           _LCD_INIT
                     _LCD_SET_CURSOR
                   _LCD_WRITE_STRING
                          _Port_init
                            ___flmul
                           ___xxtofl
                            _sprintf
                   _start_conversion
 ---------------------------------------------------------------------------------
 (1) _start_conversion                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32269
                                             74 BANK0      5     0      5
                                              8 BANK1     32    32      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             34 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                             10 COMMON     1     1      0
                                              0 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             34 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              8 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     8     0      8
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              3 COMMON     8     4      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     8     0      8
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             53 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             54 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_WRITE_STRING                                     7     5      2     340
                                              6 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _LCD_WRITE_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_WRITE_CHAR                                       3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_SET_CURSOR                                       4     3      1     384
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             2     2      0      22
                                              6 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          2     1      1     120
                                              3 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _EUSART_Init
   _LCD_INIT
     _LCD_CMD
   _LCD_SET_CURSOR
     _LCD_CMD
   _LCD_WRITE_STRING
     _LCD_WRITE_CHAR
   _Port_init
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _start_conversion

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2C      40       7       80.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9B      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Feb 11 09:29:14 2020

          ?_LCD_WRITE_CHAR 0070                          l9 1B74                          pc 0002  
              __CFG_CP$OFF 0000                         l21 1E1E                         l30 1CE5  
                       l24 1B8B                         l18 1BC7               ___awdiv@sign 0025  
                       fsr 0004        ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022  
        ?_LCD_WRITE_STRING 0076                        l130 12A9                        l140 12E2  
                      l132 12AE                        l108 1BA3                        l141 12E7  
                      l133 12B3                        l150 1314                        l142 12EC  
                      l134 12B8                        l126 1006                        l151 1319  
                      l143 12F1                        l135 12BD                        l144 12F6  
                      l153 136A                        l145 12FB                        l137 12D8  
                      l146 1300                        l138 1352                        l170 1C3C  
                      l147 1305                        l139 12DD                        l148 130A  
                      l308 00FB                        l149 130F                        l168 1C2C  
                      l409 1EDF                        l601 11DB                        l354 06DF  
                      l346 0578                        l339 0534                        l700 15DB  
                      l373 1BD4                        l526 106F                        l286 0FFF  
                      l375 1BEC                        l543 12A6                        l279 1577  
                      l560 1D66                        l704 1682                        l544 120B  
                      l561 1D7B                        l721 174D                        l713 17FF  
                      l369 07A8                        l706 1659                        l554 1299  
                      l802 0C08                        l731 1793                        l547 1269  
                      l539 1E77                        l564 1F7A                        l572 1B4C  
                      l725 1771                        l629 07FE                        l742 17F3  
                      l734 17D1                        l590 11E8                        l559 1D4A  
                      l567 1FE6                        l743 17FF                        l583 1F46  
                      l591 115A                        l568 1FFF                        l576 1F5B  
                      l840 10D9                        l808 0C90                        l746 1DCB  
                      l586 1F5B                        l834 1094                        l594 11AB  
                      l836 112B                        l862 1C53                        l854 1B5E  
                      l847 10F5                        l679 1D2B                        l848 1101  
                      l864 1C65                        l689 1C9F                        l796 0C9C  
             __CFG_CPD$OFF 0000                        _isr 1BED                        fsr0 0004  
       ??_LCD_WRITE_STRING 0078                        indf 0000               ___awmod@sign 0079  
             ___flmul@aexp 003A               ___flmul@bexp 003B   __end_of_start_conversion 1007  
             ___flmul@sign 0035               ___flmul@temp 0040               ___flmul@prod 003C  
          __end_of_LCD_CMD 1B75               ?_EUSART_Init 0073               __CFG_LVP$OFF 0000  
             ___fltol@exp1 005F                       l3000 1D42                       l3002 1D5E  
                     l3010 1F5C                       l3004 1D78                       l3020 1FBE  
                     l3012 1F72                       l3100 1073                       l2300 1C61  
                     l3006 1D7A                       l3022 1FC2                       l3014 1F8E  
                     l3030 1B42                       l3102 1078                       l2310 1013  
                     l3024 1FFC                       l3016 1F96                       l3032 1B4A  
                     l3040 1EED                       l3120 10C2                       l3112 10A5  
                     l3104 107C                       l2400 1D13                       l2320 1024  
                     l2312 1015                       l2304 1007                       l3210 1358  
                     l3202 12C2                       l3026 1FFE                       l3018 1F9A  
                     l3034 1B4C                       l3050 1F14                       l3130 10F9  
                     l3122 10D0                       l3114 10AA                       l3106 108C  
                     l2402 1D19                       l2330 103C                       l2322 102A  
                     l2314 1019                       l2306 100A                       l3212 135E  
                     l2500 160D                       l3060 1F22                       l3052 1F16  
                     l3044 1EF6                       l3140 1123                       l3132 1103  
                     l3124 10E0                       l3116 10B7                       l3108 109C  
                     l2404 1D1A                       l2420 1C7A                       l2412 1C66  
                     l2332 104D                       l2324 102D                       l2340 1061  
                     l2316 101E                       l2308 100E                       l3300 0173  
                     l3214 1365                       l3206 131E                       l3230 1C1F  
                     l3150 1BB6                       l2510 1621                       l2502 1611  
                     l3070 1F4B                       l3054 1F1A                       l3062 1F34  
                     l3046 1F0B                       l3038 1EE0                       l3134 1119  
                     l3126 10EB                       l3118 10BE                       l2406 1D21  
                     l2422 1C7E                       l2414 1C6C                       l2430 1C9B  
                     l2342 1066                       l2334 1053                       l2326 1034  
                     l2318 1022                       l2350 1E20                       l3310 01A5  
                     l3302 0177                       l3216 1366                       l3208 1353  
                     l3232 1C24                       l3160 1DD8                       l3152 1BBC  
                     l3144 1BA5                       l2600 1798                       l2520 1666  
                     l2504 1615                       l2512 1625                       l2440 1589  
                     l3072 1F50                       l3048 1F0C                       l3080 07C3  
                     l3136 111E                       l3128 10EF                       l2408 1D27  
                     l2424 1C88                       l2416 1C6F                       l2344 106B  
                     l2336 1054                       l2328 1038                       l2360 1E34  
                     l2352 1E24                       l3400 0528                       l3320 0204  
                     l3312 01B8                       l3304 017B                       l3240 0022  
                     l3218 1367                       l3234 1C31                       l3170 1DF6  
                     l3162 1DDE                       l3154 1BC1                       l3146 1BAA  
                     l2610 17D6                       l2602 179D                       l2522 1668  
                     l2530 167A                       l2514 1626                       l2506 1619  
                     l2450 159D                       l2442 158A                       l2434 1578  
                     l3082 07C7                       l3090 07F6                       l3074 07A9  
                     l3138 1122                       l2290 1C40                       l2426 1C8E  
                     l2418 1C76                       l2338 105B                       l2370 1E4C  
                     l2362 1E3A                       l2354 1E29                       l3410 055C  
                     l3402 053C                       l3322 024F                       l3314 01DB  
                     l3306 0194                       l3330 0294                       l3250 003D  
                     l3242 0027                       l3236 1C36                       l3228 1C15  
                     l3180 1E12                       l3172 1DFA                       l3164 1DE6  
                     l3156 1DCC                       l3148 1BAF                       l2620 17ED  
                     l2612 17DB                       l2604 17AB                       l2540 16AB  
                     l2532 1686                       l2524 166C                       l2516 163D  
                     l2508 161D                       l2460 15B3                       l2444 158F  
                     l2452 159F                       l2436 157F                       l3068 1F3B  
                     l3084 07D9                       l3076 07B1                       l2292 1C42  
                     l2700 0AFC                       l2428 1C95                       l2380 1E6E  
                     l2372 1E56                       l2364 1E3D                       l2356 1E2B  
                     l2348 1E1F                       l3420 058D                       l3412 056B  
                     l3404 0545                       l3340 033B                       l3332 02A3  
                     l3324 0268                       l3316 01DF                       l3308 019F  
                     l3260 0085                       l3252 004F                       l3244 002D  
                     l3182 1E18                       l3174 1E00                       l3166 1DEC  
                     l3158 1DCF                       l3190 1CC9                       l2622 17EF  
                     l2614 17E3                       l2606 17AF                       l2550 16C2  
                     l2542 16AF                       l2534 168B                       l2526 166D  
                     l2518 165D                       l2470 15C8                       l2462 15B9  
                     l2454 15A7                       l2446 1594                       l2438 1585  
                     l3094 1D7C                       l3086 07E7                       l3078 07B6  
                     l2294 1C49                       l2710 0BB4                       l2702 0B29  
                     l2630 0943                       l2390 1CF0                       l2382 1E73  
                     l2374 1E5C                       l2366 1E44                       l2358 1E2F  
                     l3430 0664                       l3422 0591                       l3414 0572  
                     l3406 0549                       l3350 0394                       l3342 034A  
                     l3334 02EA                       l3326 0271                       l3318 01E5  
                     l3270 00B1                       l3254 0053                       l3262 0095  
                     l3246 0034                       l3238 1003                       l3176 1E06  
                     l3168 1DF0                       l3184 1CA0                       l3192 1B8C  
                     l2624 17FA                       l2616 17E8                       l2608 17CD  
                     l2560 1725                       l2552 16C3                       l2544 16B3  
                     l2528 1676                       l2480 15E5                       l2472 15D0  
                     l2464 15BD                       l2456 15AC                       l2448 159C  
                     l3096 1D80                       l3088 07F0                       l2296 1C4D  
                     l2720 0BD9                       l2712 0BBD                       l2704 0B39  
                     l2640 0958                       l2632 0949                       l2392 1CF3  
                     l2800 1534                       l2376 1E63                       l2368 1E48  
                     l3440 06BE                       l3432 0670                       l3424 05AF  
                     l3416 0581                       l3408 054F                       l3360 0420  
                     l3344 0365                       l3336 02F9                       l3328 028C  
                     l3280 00F9                       l3272 00C6                       l3264 00A3  
                     l3256 0068                       l3248 0039                       l3520 0800  
                     l3178 1E0C                       l3186 1CA5                       l3194 1B90  
                     l2626 17FE                       l2618 17E9                       l2570 175A  
                     l2562 172B                       l2554 16CC                       l2546 16BC  
                     l2538 1694                       l2490 15F9                       l2482 15E9  
                     l2474 15D1                       l2466 15BE                       l2458 15B2  
                     l2298 1C5C                       l2730 0BF1                       l2722 0BE2  
                     l2714 0BCB                       l2706 0B66                       l2650 0975  
                     l2642 0960                       l2634 094D                       l2394 1CFA  
                     l2386 1CE6                       l2378 1E69                       l2810 0CAD  
                     l3450 06EA                       l3442 06C4                       l3426 060A  
                     l3434 06AB                       l3418 0586                       l3362 0422  
                     l3354 03B3                       l3346 036E                       l3338 0314  
                     l3290 012B                       l3274 00DD                       l3266 00A6  
                     l3258 007F                       l3530 0828                       l3522 080A  
                     l3188 1CC1                       l3196 1B93                       l2580 1775  
                     l2564 1730                       l2548 16BE                       l2556 16D1  
                     l2492 15FD                       l2484 15ED                       l2468 15C3  
                     l2476 15D3                       l2740 0C20                       l2732 0C05  
                     l2716 0BD4                       l2724 0BE8                       l2708 0B8C  
                     l2660 098C                       l2652 0979                       l2644 0962  
                     l2636 094E                       l2628 093C                       l2396 1CFE  
                     l2388 1CEA                       l2804 0CA0                       l3460 071D  
                     l3452 06F1                       l3436 06B3                       l3428 0645  
                     l3380 0492                       l3372 045B                       l3348 0376  
                     l3356 03BC                       l3292 012F                       l3444 06CB  
                     l3284 00FD                       l3276 00E3                       l3268 00AC  
                     l3540 0901                       l3532 082B                       l3524 0815  
                     l3198 12A8                       l2582 1778                       l2574 1763  
                     l2558 16E7                       l2566 173F                       l2590 1785  
                     l2494 1601                       l2486 15F1                       l2478 15E1  
                     l2910 11F6                       l2902 11D0                       l2750 0C5B  
                     l2742 0C24                       l2726 0BEC                       l2718 0BD8  
                     l2662 098E                       l2654 097A                       l2646 096A  
                     l2638 0953                       l2398 1D02                       l2822 0E26  
                     l2806 0CA4                       l3470 0742                       l3462 0723  
                     l3454 0700                       l3446 06D1                       l3438 06BA  
                     l3390 04B4                       l3382 0499                       l3374 0465  
                     l3358 03F1                       l3294 013D                       l3622 0113  
                     l3286 011B                       l3278 00F5                       l3550 092F  
                     l3542 0909                       l3534 0871                       l3526 081C  
                     l3624 12CA                       l2592 1786                       l2584 177A  
                     l2576 176C                       l2568 1755                       l2496 1605  
                     l2488 15F5                       l2920 120C                       l2904 11E0  
                     l2760 0C88                       l2752 0C6A                       l2744 0C3D  
                     l2736 0C0D                       l2728 0BED                       l2680 09FF  
                     l2672 09A9                       l2664 0996                       l2656 097F  
                     l2648 096F                       l2840 0FD3                       l2816 0D97  
                     l2808 0CA6                       l3480 076A                       l3472 074D  
                     l3464 0727                       l3456 0709                       l3448 06D9  
                     l3392 04C2                       l3384 04A2                       l3376 0480  
                     l3368 0424                       l3296 0141                       l3288 0127  
                     l3544 0912                       l3536 08B7                       l3528 0823  
                     l3626 1326                       l2770 1B63                       l2594 178A  
                     l2586 177F                       l2578 1770                       l2498 1609  
                     l2930 1239                       l2922 1214                       l2914 11FF  
                     l2762 0C89                       l2754 0C74                       l2738 0C12  
                     l2746 0C43                       l2690 0A7C                       l2682 0A2B  
                     l2674 09B9                       l2666 099B                       l2658 0984  
                     l2850 1B5B                       l2834 0F44                       l2818 0D9E  
                     l2826 0E53                       l3482 076E                       l3474 0759  
                     l3466 0735                       l3458 0711                       l3394 04C9  
                     l3378 0486                       l3298 015A                       l3490 078E  
                     l3546 091A                       l3538 08DB                       l2772 1B65  
                     l2780 1B79                       l2596 1790                       l2588 1781  
                     l2940 126D                       l2932 124B                       l2924 1225  
                     l2908 11E9                       l2764 0C94                       l2756 0C76  
                     l2748 0C50                       l2692 0A99                       l2684 0A47  
                     l2676 09C6                       l2668 09A0                       l2852 1B5D  
                     l2844 1B4E                       l2836 0F4B                       l2828 0E5A  
                     l3484 077A                       l3476 075D                       l3468 073E  
                     l3396 04CE                       l3388 04A7                       l3492 07A4  
                     l3548 0923                       l2774 1B66                       l2782 1B7B  
                     l2934 1259                       l2926 1227                       l2870 1161  
                     l2862 1148                       l2758 0C84                       l2694 0AA9  
                     l2686 0A63                       l2678 09E3                       l2846 1B4F  
                     l3486 0786                       l3478 0763                       l3398 0509  
                     l2776 1B69                       l2768 1B60                       l2784 1B80  
                     l2960 1BC8                       l2936 125A                       l2928 1230  
                     l2880 1192                       l2872 1170                       l2856 112C  
                     l2696 0AC6                       l2688 0A6C                       l2848 1B55  
                     l2778 1B76                       l2970 1BE8                       l2962 1BCA  
                     l2954 128E                       l2946 1275                       l2938 1263  
                     l2882 119C                       l2874 1172                       l2858 113F  
                     l2698 0ADF                       l2794 1483                       l2786 136E  
                     l2980 1E9A                       l2964 1BCE                       l2956 129E  
                     l2948 1287                       l2884 119D                       l2876 117B  
                     l2868 115B                       l2796 1489                       l2788 1374  
                     l2990 1EC8                       l2982 1E9E                       l2974 1E78  
                     l2966 1BDB                       l2894 11B7                       l2886 11A5  
                     l2878 1184                       l2992 1ED1                       l2984 1EA7  
                     l2976 1E8A                       l2968 1BE2                       l2888 11AF  
                     l2896 11C9                       l2986 1EB9                       l2978 1E8D  
                     l2994 1ED7                       l2988 1EC7                       l2998 1D2C  
                     ?_isr 0070                       STR_1 18AF                       STR_2 18AF  
                     STR_3 18A0                       u3000 1E4C                       u3001 1E4B  
                     u3010 1E56                       u3011 1E55                       u3110 1D27  
                     u3030 1E69                       u3111 1D26                       u3031 1E68  
                     u3015 1E52                       u3200 1594                       u4000 0C88  
                     u3120 1C6C                       u3040 1E6E                       u3201 1593  
                     u4001 0C87                       u3105 1D1B                       u3121 1C6B  
                     u3041 1E6D                       u3025 1E5D                       u3210 15B2  
                     u3050 1CF0                       u4010 1374                       u3211 15B1  
                     u3051 1CEF                       u4011 1373                       u3300 165D  
                     u3220 15BD                       u3140 1C7E                       u4100 0CAD  
                     u3301 165C                       u3221 15BC                       u3141 1C7D  
                     u4101 0CAC                       u3310 166C                       u3230 15C3  
                     u3070 1D02                       u3150 1C88                       u3311 166B  
                     u3231 15C2                       u3071 1D01                       u3151 1C87  
                     u3135 1C70                       u3240 15C8                       u5000 10EF  
                     u3241 15C7                       u5001 10EE                       u3065 1CF4  
                     u4025 1391                       u3410 16E7                       u3330 1682  
                     u3250 15E1                       u5010 10F5                       u3090 1D13  
                     u3170 1C9B                       u4050 1489                       u3411 16E6  
                     u3331 1681                       u3251 15E0                       u5011 10F4  
                     u3091 1D12                       u3171 1C9A                       u3155 1C84  
                     u4051 1488                       u4035 13ED                       u4115 0CCF  
                     u5100 1CE5                       u3500 177F                       u3340 1686  
                     u3260 15E5                       u3180 1589                       u5020 10F9  
                     u4220 0F4B                       u4140 0D9E                       u5101 1CE4  
                     u3501 177E                       u3421 16FE                       u3413 16E3  
                     u3405 16C5                       u3341 1685                       u3325 166F  
                     u3261 15E4                       u3181 1588                       u5021 10F8  
                     u3085 1D03                       u3165 1C8F                       u4045 1442  
                     u4221 0F4A                       u4205 0EB8                       u4141 0D9D  
                     u4125 0D0B                       u5110 1358                       u3510 1785  
                     u3430 1712                       u3422 16FF                       u3350 168B  
                     u3270 163D                       u3190 158F                       u5030 110E  
                     u4310 1192                       u5111 1357                       u3511 1784  
                     u3431 1713                       u3423 1704                       u3351 168A  
                     u3271 163C                       u3191 158E                       u4311 1191  
                     u3095 1D0F                       u4215 0F03                       u4135 0D56  
                     u5120 1C24                       u3600 17DB                       u3520 178A  
                     u3440 1730                       u3432 1718                       u3424 1705  
                     u3280 1648                       u5040 111E                       u4400 11E0  
                     u5200 012B                       u5121 1C23                       u3601 17DA  
                     u3521 1789                       u3441 172F                       u3433 1719  
                     u3425 170A                       u3361 169D                       u3281 1646  
                     u5041 111D                       u4401 11DF                       u4305 117D  
                     u4065 14A6                       u5201 012A                       u5130 1C36  
                     u3610 17E8                       u3530 1790                       u3450 1755  
                     u3426 170B                       u3370 16AF                       u3362 16A4  
                     u3290 1649                       u5050 1122                       u4410 11F6  
                     u4330 11AB                       u4090 0CA4                       u5210 015A  
                     u5131 1C35                       u3611 17E7                       u3531 178F  
                     u3451 1754                       u3371 16AE                       u3363 16AB  
                     u3275 1639                       u5051 1121                       u5035 1109  
                     u4411 11F5                       u4331 11AA                       u4315 118E  
                     u4075 14F3                       u4235 0F5E                       u4155 0DB1  
                     u4091 0CA3                       u5211 0159                       u5060 1BAA  
                     u3620 17ED                       u3540 1797                       u3460 175A  
                     u3380 16B3                       u4500 1286                       u4420 120A  
                     u4340 11AF                       u3700 099B                       u4260 1B55  
                     u2900 103C                       u4180 0E5A                       u5300 034A  
                     u5220 0194                       u5140 002D                       u5061 1BA9  
                     u3621 17EC                       u3541 1796                       u3461 1759  
                     u3381 16B2                       u4501 1285                       u4421 1209  
                     u4341 11AE                       u4325 119E                       u3701 099A  
                     u4085 153F                       u4261 1B54                       u2901 103B  
                     u4245 0F9A                       u4181 0E59                       u4165 0DED  
                     u5301 0349                       u5221 0193                       u5141 002C  
                     u5070 1BBC                       u3630 17FE                       u3550 179D  
                     u3390 16C2                       u4510 128D                       u4350 11B6  
                     u2830 1C4D                       u3710 09A0                       u4270 1B5B  
                     u5310 0365                       u5230 01DF                       u5150 004F  
                     u5071 1BBB                       u3631 17FD                       u3551 179C  
                     u3391 16C1                       u4511 128C                       u4351 11B5  
                     u2831 1C4C                       u3711 099F                       u4271 1B5A  
                     u4255 0FD6                       u4175 0E29                       u5311 0364  
                     u5231 01DE                       u5151 004E                       u5080 1CAF  
                     u3560 17AF                       u3480 1770                       u4600 1E9E  
                     u4440 124B                       u4280 113F                       u3640 094D  
                     u2920 104D                       u5400 053B                       u5240 0268  
                     u5160 0095                       u3561 17AE                       u3481 176F  
                     u4601 1E9D                       u4441 124A                       u4281 113E  
                     u3801 0AEE                       u3721 09F1                       u3641 094C  
                     u2921 104C                       u5401 053A                       u5305 0346  
                     u5241 0267                       u5161 0094                       u5090 1CD3  
                     u3570 17BE                       u3490 1775                       u4530 129E  
                     u4370 11C8                       u4290 1159                       u2850 1C61  
                     u3802 0AF5                       u3722 09F8                       u3650 0953  
                     u5410 055C                       u5330 045A                       u5250 028C  
                     u5170 00A3                       u3491 1774                       u3475 1765  
                     u4531 129D                       u4435 1232                       u4371 11C7  
                     u4291 1158                       u2851 1C60                       u3811 0B1B  
                     u3803 0AFC                       u3731 0A0D                       u3723 09FF  
                     u3651 0952                       u2915 103D                       u4195 0E7C  
                     u5411 055B                       u5331 0459                       u5251 028B  
                     u5171 00A2                       u4700 1F9A                       u3580 17CD  
                     u4620 1EB9                       u4540 1BCE                       u4460 1269  
                     u4380 11CF                       u3812 0B22                       u3732 0A14  
                     u3660 0958                       u2940 1061                       u2860 100E  
                     u5500 06EA                       u5420 056B                       u5340 0465  
                     u5260 02A3                       u5180 00F4                       u4701 1F99  
                     u3581 17CC                       u4621 1EB8                       u4541 1BCD  
                     u4525 1290                       u4461 1268                       u4445 1247  
                     u4381 11CE                       u4365 11B8                       u2845 1C54  
                     u3821 0B48                       u3813 0B29                       u3741 0A39  
                     u3733 0A1B                       u3661 0957                       u2941 1060  
                     u2925 1049                       u2861 100D                       u5501 06E9  
                     u5421 056A                       u5341 0464                       u5325 0427  
                     u5261 02A2                       u5181 00F3                       u3590 17D6  
                     u4470 126D                       u3910 0BEC                       u3830 0B72  
                     u3822 0B4F                       u3742 0A40                       u3670 0979  
                     u2950 1066                       u2870 1019                       u5510 0700  
                     u5430 0586                       u5350 0480                       u5270 02F9  
                     u5190 0127                       u4711 1FA9                       u3591 17D5  
                     u3575 17B9                       u4615 1EA0                       u4471 126C  
                     u4455 125C                       u3911 0BEB                       u3823 0B56  
                     u3751 0A55                       u3743 0A47                       u3671 0978  
                     u2951 1065                       u2935 1055                       u2871 1018  
                     u5511 06FF                       u5431 0585                       u5415 0558  
                     u5351 047F                       u5335 0456                       u5271 02F8  
                     u5191 0126                       u4720 1FC2                       u4712 1FAA  
                     u4640 1ED7                       u4480 1274                       u3920 0BF1  
                     u3752 0A5C                       u3680 097F                       u2880 102A  
                     u2960 1E24                       u5600 07A4                       u5520 0711  
                     u5360 0492                       u5280 0314                       u4721 1FC1  
                     u4713 1FAF                       u4641 1ED6                       u4625 1EB5  
                     u4481 1273                       u3921 0BF0                       u3905 0BDB  
                     u3841 0B7E                       u3753 0A63                       u3681 097E  
                     u2881 1029                       u2961 1E23                       u5601 07A3  
                     u5521 0710                       u5505 06E6                       u5425 0567  
                     u5361 0491                       u5281 0313                       u5265 029F  
                     u4650 1D42                       u4714 1FB0                       u4810 1F33  
                     u4570 1BE8                       u3930 0C05                       u3850 0B9A  
                     u3842 0B85                       u3690 0984                       u2970 1E2F  
                     u5530 071D                       u5370 04B4                       u5290 033B  
                     u4651 1D41                       u4731 1FD1                       u4715 1FB5  
                     u4811 1F32                       u4635 1EC9                       u4571 1BE7  
                     u4555 1BD5                       u4395 11D2                       u3931 0C04  
                     u3843 0B8C                       u3835 0B6D                       u3771 0A8B  
                     u3691 0983                       u2971 1E2E                       u5531 071C  
                     u5515 06FC                       u5371 04B3                       u5291 033A  
                     u5275 02F5                       u4660 1D5E                       u4740 1FFC  
                     u4732 1FD2                       u4716 1FB6                       u4820 1F3A  
                     u4580 1E8A                       u3940 0C0C                       u3772 0A92  
                     u2980 1E3A                       u5540 0727                       u5460 06B2  
                     u5380 04C2                       u4661 1D5D                       u4741 1FFB  
                     u4733 1FD7                       u4821 1F39                       u4805 1F23  
                     u4581 1E89                       u4565 1BDC                       u3941 0C0B  
                     u3861 0BA6                       u3781 0AB8                       u3773 0A99  
                     u3765 0A65                       u2981 1E39                       u5541 0726  
                     u5461 06B1                       u5445 060D                       u5381 04C1  
                     u4670 1D78                       u4734 1FD8                       u4750 1B4A  
                     u4910 07F6                       u3950 0C12                       u3862 0BAD  
                     u3782 0ABF                       u5550 0735                       u5470 06CA  
                     u5630 0823                       u4671 1D77                       u4735 1FDD  
                     u4751 1B49                       u4911 07F5                       u4495 1276  
                     u3951 0C11                       u3863 0BB4                       u3855 0B95  
                     u3783 0AC6                       u2895 102E                       u5551 0734  
                     u5471 06C9                       u5455 0673                       u5375 04B0  
                     u5631 0822                       u4736 1FDE                       u4680 1F72  
                     u4840 1F4B                       u4760 1EED                       u4920 1078  
                     u3960 0C24                       u5560 074D                       u5480 06D1  
                     u4745 1FF8                       u4681 1F71                       u4841 1F4A  
                     u4761 1EEC                       u4905 07E8                       u4921 1077  
                     u3961 0C23                       u5561 074C                       u5481 06D0  
                     u4690 1F8E                       u4850 1F50                       u4770 1F04  
                     u4930 107C                       u3970 0C33                       u3890 0BD8  
                     u5570 0763                       u5490 06D9                       u5707 1B70  
                     u4675 1D74                       u4691 1F8D                       u4851 1F4F  
                     u4835 1F3D                       u4595 1E8F                       u4931 107B  
                     u3891 0BD7                       u3875 0BB6                       u3795 0AC8  
                     u2995 1E3E                       u5571 0762                       u5555 0731  
                     u5491 06D8                       u5395 04D1                       u4780 1F1A  
                     u4860 07B1                       u4940 109C                       u3980 0C50  
                     u5580 077A                       u4781 1F19                       u4861 07B0  
                     u4941 109B                       u3981 0C4F                       u3885 0BCD  
                     u5581 0779                       u5565 0749                       u4790 1F21  
                     u3990 0C6A                       u5590 0786                       u5647 1B7E  
                     u4791 1F20                       u4775 1EFF                       u3991 0C69  
                     u3975 0C2E                       u5591 0785                       i1l96 1C0D  
                     u4880 07C7                       u4960 10BD                       u5657 1B87  
                     u4881 07C6                       u4961 10BC                       u3985 0C4C  
                     u4890 07D9                       u5667 1DD3                       u4891 07D8  
                     u4875 07B8                       u4955 10AF                       u3995 0C66  
                     u4980 10DF                       u5677 1DE2                       u4981 10DE  
                     u5687 1DEE                       u4895 07D5                       u4975 10D1  
                     u5697 1DF8                       u4995 10E4               __CFG_WRT$OFF 0000  
                     _main 0800                       _pot1 006F                       _pot2 00D5  
                     btemp 007E                       start 000C           __end_of_ADC_init 136B  
            __CFG_IESO$OFF 0000               _sprintf$1211 00AD           __end_of_LCD_INIT 1E1F  
                    ??_isr 0070              ___fltol@sign1 005E            __end_of___fladd 1800  
                    ?_main 0070            __end_of___awdiv 1070            __end_of___flneg 1B4D  
            __CFG_WDTE$OFF 0000            __end_of___awmod 1E78            __end_of___flmul 0C9D  
          __end_of___flsub 1DCC            __end_of___fltol 1F5C                      _ANSEL 0188  
          __end_of___lldiv 1EE0            ___awdiv@divisor 0020            __end_of___llmod 07FF  
          __end_of___lwdiv 1D2C            __end_of___lwmod 1CA0            ___awdiv@counter 0024  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
            _start_another 00D4             __CFG_FCMEN$OFF 0000            __end_of_dpowers 18A0  
                    _scale 0C9D            __end_of_isdigit 1B5F                      _volt1 00D0  
                    _volt2 00CC             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07A9  
           __CFG_MCLRE$OFF 0000            __initialization 000F               __end_of_main 093C  
           ADC_init@int_on 0074                     ??_main 00C8                  ??_LCD_CMD 0073  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0077                     ?_scale 0042  
                   _ADRESH 001E           ___awdiv@dividend 0022                     _ANSELH 0189  
                   i1l3510 1BF3                     i1l3512 1BFE                     i1l3514 1C04  
                   i1l3516 1C08                     i1l3508 1BED                     i1l3518 1C0C  
                   u561_20 1BF3                     u561_21 1BF2                     u562_20 1BFE  
                   u562_21 1BFD           __end_of___xxtofl 112C             __CFG_PWRTE$OFF 0000  
         ??_LCD_SET_CURSOR 0077           __end_of__powers_ 1844                     ___flge 1F5C  
                   ___fleq 1D2C                  ??___fladd 005E                     ___wmul 1BC8  
                ??___awdiv 007A                  ??___flneg 0077                  ??___awmod 0077  
                ??___flmul 0030                  ??___flsub 007B                  ??___fltol 0059  
                ??___lldiv 0020                  ??___llmod 0020                  ??___lwdiv 0079  
                ??___lwmod 0077                     _fround 136B           ___awdiv@quotient 0026  
          ___awmod@divisor 0073            ___awmod@counter 0078               EUSART_Init@a 0074  
             EUSART_Init@b 0073                  ??_isdigit 0073         __size_of__Umul8_16 0029  
                   saved_w 007E         __size_of_Port_init 0018                  ?_ADC_init 0073  
                ??_sprintf 00A8                 ___flge@ff1 0073                 ___flge@ff2 0077  
             ___xxtofl@arg 0022       __size_of_EUSART_Init 0029                  ?_LCD_INIT 0070  
             ___xxtofl@exp 0021               ___xxtofl@val 0073                 ___fleq@ff1 0073  
               ___fleq@ff2 0077    __end_of__initialization 001B                 ___flneg@f1 0073  
         ??_LCD_WRITE_CHAR 0073                 ___fltol@f1 0055             __pcstackCOMMON 0070  
            __end_of_scale 1000            ADC_init@channel 0073                 __div_to_l_ 11E9  
               ??_ADC_init 0076          ?_start_conversion 0070            __div_to_l_@exp1 0026  
          __div_to_l_@cntr 0025                    ??_scale 0046            __div_to_l_@quot 0021  
             sprintf@width 00B8         ??_start_conversion 0073                 __pbssBANK0 006F  
               __pbssBANK1 00CC                 ??_LCD_INIT 0076  __size_of_LCD_WRITE_STRING 0046  
            __div_to_l_@f1 0073              __div_to_l_@f2 0077          __end_of__Umul8_16 1C66  
        __end_of_Port_init 1BA4                 __pmaintext 0800                    ?___flge 0073  
                  ?___fleq 0073                    ?___wmul 0073                 __pintentry 0004  
                  ?_fround 0042                    _LCD_CMD 1B5F                  ?___xxtofl 0073  
          LCD_SET_CURSOR@a 0078            LCD_SET_CURSOR@b 0076                 __stringtab 1800  
        LCD_WRITE_STRING@a 0076          LCD_WRITE_STRING@i 0020          __end_of__npowers_ 1878  
               _scale$1210 0050            __size_of___flge 00A4            __size_of___fleq 0050  
                  ___fladd 1578      ADC_init@left_or_right 0075                    ___awdiv 1007  
                  ___flneg 1B42                    ___awmod 1E1F                    ___flmul 093C  
                  ___flsub 1D7C                    ___fltol 1EE0                    ___lldiv 1E78  
          __size_of___wmul 0025                    ___llmod 07A9                    ___lwdiv 1CE6  
                  ___lwmod 1C66            __size_of_fround 020D                    __ptext1 1003  
                  __ptext2 001F                    __ptext3 0C9D                    __ptext4 1E1F  
                  __ptext5 1007                    __ptext6 1B4D                    __ptext7 136B  
                  __ptext8 1C66                    __ptext9 1CE6                ?__div_to_l_ 0073  
                  _dpowers 1878                    _isdigit 1B4D               __size_of_isr 0027  
               ??___xxtofl 0077           ___awmod@dividend 0075                    _sprintf 001F  
                  clrloop0 1B3B                    _string1 00DB                    _string2 00D6  
     end_of_initialization 001B            ___lldiv@divisor 0073            ___lldiv@counter 0025  
                _RCSTAbits 0018             __tdiv_to_l_@f1 0073             __tdiv_to_l_@f2 0077  
            ??__tdiv_to_l_ 0020                  _PORTDbits 0008                ___fladd@grs 0069  
            ___xxtofl@sign 0020          __size_of_ADC_init 00C4           _LCD_WRITE_STRING 1CA0  
              ___flmul@grs 0036                  _TXSTAbits 0098          __size_of_LCD_INIT 0053  
      __size_of__div_to_l_ 00BE               ADC_init@Fosc 0078             __end_of___flge 2000  
           __end_of___fleq 1D7C             __end_of___wmul 1BED                _BAUDCTLbits 0187  
           __end_of_fround 1578        start_initialization 000F        __end_of__tdiv_to_l_ 11E9  
              __end_of_isr 1C14              ??_EUSART_Init 0074            LCD_WRITE_CHAR@a 0075  
          ___llmod@divisor 0073            ___llmod@counter 0021   __CFG_FOSC$INTRC_NOCLKOUT 0000  
__size_of_start_conversion 0004                   ??___flge 0020                   ??___fleq 0020  
                 ??___wmul 0077                  __Umul8_16 1C3D                  _Port_init 1B8C  
                 ??_fround 0046              sprintf@tmpval 00BA                  ___fladd@a 005A  
                ___fladd@b 0056                   LCD_CMD@a 0075                   ?_LCD_CMD 0070  
               fround@prec 0055    __size_of_LCD_SET_CURSOR 0024                  ___flmul@a 002C  
                ___flmul@b 0028                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC               _isdigit$1009 0073                sprintf@flag 00B6  
              sprintf@eexp 00BE                sprintf@fval 00C0                sprintf@prec 00C5  
      __end_of_EUSART_Init 1C3D           ___lwdiv@dividend 0022                   ?___fladd 0056  
                 ?___awdiv 0020                   ?___flneg 0073                   ?___awmod 0073  
                 ?___flmul 0028                   ?___flsub 00A0                   ?___fltol 0055  
                 ?___lldiv 0073                   ?___llmod 0073                  __npowers_ 1844  
               ?__Umul8_16 0073                   ?___lwdiv 0020                   ?___lwmod 0073  
  __size_of_LCD_WRITE_CHAR 0017                 ?_Port_init 0070                  __pstrings 1800  
              __tdiv_to_l_ 112C               ??__div_to_l_ 0020                   ?_isdigit 0070  
                 _ADC_init 12A7           ___lwdiv@quotient 0024                   ?_sprintf 006A  
           __size_of_scale 0363     LCD_SET_CURSOR@temporal 0079                   _LCD_INIT 1DCC  
        interrupt_function 0004             ___wmul@product 0077                  clear_ram0 1B3A  
                 _PIE1bits 008C                   _PIR1bits 000C         __end_of__div_to_l_ 12A7  
 __end_of_LCD_WRITE_STRING 1CE6                 _ADCON0bits 001F                __stringbase 180F  
               _ADCON1bits 009F          ___wmul@multiplier 0073           __size_of_LCD_CMD 0016  
              _EUSART_Init 1C14           _start_conversion 1003                ??__Umul8_16 0075  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059                ??_Port_init 0073           __size_of___flmul 0361  
         __size_of___flsub 0050           __size_of___fltol 007C           __size_of___lldiv 0068  
         __size_of___llmod 0056           __size_of___lwdiv 0046           __size_of___lwmod 003A  
              _fround$1208 0051                _fround$1209 004D         __end_of__stringtab 1810  
           _LCD_SET_CURSOR 1BA4                 sprintf@val 00B2                   ___xxtofl 1070  
         __size_of_isdigit 0012            ___lwdiv@divisor 0020            ___lwdiv@counter 0026  
                 __ptext10 093C                   __ptext11 1C3D                   __ptext20 1578  
                 __ptext12 112C                   __ptext21 1B42                   __ptext13 11E9  
                 __ptext30 1C14                   __ptext22 1F5C                   __ptext14 1070  
                 __ptext31 12A7                   __ptext23 1D2C                   __ptext15 1BC8  
                 __ptext32 1BED                   __ptext24 1B8C                   __ptext16 07A9  
                 __ptext25 1CA0                   __ptext17 1E78                   __ptext26 1B75  
                 __ptext18 1EE0                   __ptext27 1BA4                   __ptext19 1D7C  
                 __ptext28 1DCC                   __ptext29 1B5F          __CFG_BOR4V$BOR40V 0000  
                 __powers_ 1810           __size_of_sprintf 078A              __size_of_main 013C  
           _LCD_WRITE_CHAR 1B75     __end_of_LCD_SET_CURSOR 1BC8                 _INTCONbits 000B  
                 isdigit@c 0074                   scale@scl 0054                   intlevel1 0000  
                sprintf@ap 00B1           __tdiv_to_l_@exp1 0029           __tdiv_to_l_@cntr 0028  
                sprintf@sp 00C4           __tdiv_to_l_@quot 0024           ___lwmod@dividend 0075  
         ___lldiv@dividend 0077                  stringcode 180A     __end_of_LCD_WRITE_CHAR 1B8C  
          ?_LCD_SET_CURSOR 0076               ?__tdiv_to_l_ 0073     __Umul8_16@multiplicand 0073  
                 sprintf@c 00C7                   sprintf@f 006A           ___lldiv@quotient 0021  
          ___lwmod@divisor 0073            ___lwmod@counter 0078                   stringdir 180A  
                 stringtab 1800              ___fladd@signs 0066               ___fladd@aexp 0067  
             ___fladd@bexp 0068       __Umul8_16@multiplier 0024          __Umul8_16@product 0020  



Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Feb 12 09:21:41 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	intentry,global,class=CODE,delta=2
    45                           	psect	text2_split_1,local,class=CODE,merge=1,delta=2
    46                           	dabs	1,0x7E,2
    47  0000                     
    48                           ; Version 2.10
    49                           ; Generated 31/07/2019 GMT
    50                           ; 
    51                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC16F887 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     	;# 
    83  0001                     	;# 
    84  0002                     	;# 
    85  0003                     	;# 
    86  0004                     	;# 
    87  0005                     	;# 
    88  0006                     	;# 
    89  0007                     	;# 
    90  0008                     	;# 
    91  0009                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000D                     	;# 
    96  000E                     	;# 
    97  000E                     	;# 
    98  000F                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0014                     	;# 
   104  0015                     	;# 
   105  0015                     	;# 
   106  0016                     	;# 
   107  0017                     	;# 
   108  0018                     	;# 
   109  0019                     	;# 
   110  001A                     	;# 
   111  001B                     	;# 
   112  001B                     	;# 
   113  001C                     	;# 
   114  001D                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  0088                     	;# 
   122  0089                     	;# 
   123  008C                     	;# 
   124  008D                     	;# 
   125  008E                     	;# 
   126  008F                     	;# 
   127  0090                     	;# 
   128  0091                     	;# 
   129  0092                     	;# 
   130  0093                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0094                     	;# 
   134  0095                     	;# 
   135  0096                     	;# 
   136  0097                     	;# 
   137  0098                     	;# 
   138  0099                     	;# 
   139  009A                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  0105                     	;# 
   146  0107                     	;# 
   147  0108                     	;# 
   148  0109                     	;# 
   149  010C                     	;# 
   150  010C                     	;# 
   151  010D                     	;# 
   152  010E                     	;# 
   153  010F                     	;# 
   154  0185                     	;# 
   155  0187                     	;# 
   156  0188                     	;# 
   157  0189                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  0000                     	;# 
   161  0001                     	;# 
   162  0002                     	;# 
   163  0003                     	;# 
   164  0004                     	;# 
   165  0005                     	;# 
   166  0006                     	;# 
   167  0007                     	;# 
   168  0008                     	;# 
   169  0009                     	;# 
   170  000A                     	;# 
   171  000B                     	;# 
   172  000C                     	;# 
   173  000D                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0013                     	;# 
   181  0014                     	;# 
   182  0015                     	;# 
   183  0015                     	;# 
   184  0016                     	;# 
   185  0017                     	;# 
   186  0018                     	;# 
   187  0019                     	;# 
   188  001A                     	;# 
   189  001B                     	;# 
   190  001B                     	;# 
   191  001C                     	;# 
   192  001D                     	;# 
   193  001E                     	;# 
   194  001F                     	;# 
   195  0081                     	;# 
   196  0085                     	;# 
   197  0086                     	;# 
   198  0087                     	;# 
   199  0088                     	;# 
   200  0089                     	;# 
   201  008C                     	;# 
   202  008D                     	;# 
   203  008E                     	;# 
   204  008F                     	;# 
   205  0090                     	;# 
   206  0091                     	;# 
   207  0092                     	;# 
   208  0093                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0094                     	;# 
   212  0095                     	;# 
   213  0096                     	;# 
   214  0097                     	;# 
   215  0098                     	;# 
   216  0099                     	;# 
   217  009A                     	;# 
   218  009B                     	;# 
   219  009C                     	;# 
   220  009D                     	;# 
   221  009E                     	;# 
   222  009F                     	;# 
   223  0105                     	;# 
   224  0107                     	;# 
   225  0108                     	;# 
   226  0109                     	;# 
   227  010C                     	;# 
   228  010C                     	;# 
   229  010D                     	;# 
   230  010E                     	;# 
   231  010F                     	;# 
   232  0185                     	;# 
   233  0187                     	;# 
   234  0188                     	;# 
   235  0189                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  000E                     	;# 
   253  000E                     	;# 
   254  000F                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001D                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  0081                     	;# 
   274  0085                     	;# 
   275  0086                     	;# 
   276  0087                     	;# 
   277  0088                     	;# 
   278  0089                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  008F                     	;# 
   283  0090                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0094                     	;# 
   290  0095                     	;# 
   291  0096                     	;# 
   292  0097                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009A                     	;# 
   296  009B                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  0105                     	;# 
   302  0107                     	;# 
   303  0108                     	;# 
   304  0109                     	;# 
   305  010C                     	;# 
   306  010C                     	;# 
   307  010D                     	;# 
   308  010E                     	;# 
   309  010F                     	;# 
   310  0185                     	;# 
   311  0187                     	;# 
   312  0188                     	;# 
   313  0189                     	;# 
   314  018C                     	;# 
   315  018D                     	;# 
   316  0000                     	;# 
   317  0001                     	;# 
   318  0002                     	;# 
   319  0003                     	;# 
   320  0004                     	;# 
   321  0005                     	;# 
   322  0006                     	;# 
   323  0007                     	;# 
   324  0008                     	;# 
   325  0009                     	;# 
   326  000A                     	;# 
   327  000B                     	;# 
   328  000C                     	;# 
   329  000D                     	;# 
   330  000E                     	;# 
   331  000E                     	;# 
   332  000F                     	;# 
   333  0010                     	;# 
   334  0011                     	;# 
   335  0012                     	;# 
   336  0013                     	;# 
   337  0014                     	;# 
   338  0015                     	;# 
   339  0015                     	;# 
   340  0016                     	;# 
   341  0017                     	;# 
   342  0018                     	;# 
   343  0019                     	;# 
   344  001A                     	;# 
   345  001B                     	;# 
   346  001B                     	;# 
   347  001C                     	;# 
   348  001D                     	;# 
   349  001E                     	;# 
   350  001F                     	;# 
   351  0081                     	;# 
   352  0085                     	;# 
   353  0086                     	;# 
   354  0087                     	;# 
   355  0088                     	;# 
   356  0089                     	;# 
   357  008C                     	;# 
   358  008D                     	;# 
   359  008E                     	;# 
   360  008F                     	;# 
   361  0090                     	;# 
   362  0091                     	;# 
   363  0092                     	;# 
   364  0093                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0094                     	;# 
   368  0095                     	;# 
   369  0096                     	;# 
   370  0097                     	;# 
   371  0098                     	;# 
   372  0099                     	;# 
   373  009A                     	;# 
   374  009B                     	;# 
   375  009C                     	;# 
   376  009D                     	;# 
   377  009E                     	;# 
   378  009F                     	;# 
   379  0105                     	;# 
   380  0107                     	;# 
   381  0108                     	;# 
   382  0109                     	;# 
   383  010C                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  010F                     	;# 
   388  0185                     	;# 
   389  0187                     	;# 
   390  0188                     	;# 
   391  0189                     	;# 
   392  018C                     	;# 
   393  018D                     	;# 
   394  0000                     	;# 
   395  0001                     	;# 
   396  0002                     	;# 
   397  0003                     	;# 
   398  0004                     	;# 
   399  0005                     	;# 
   400  0006                     	;# 
   401  0007                     	;# 
   402  0008                     	;# 
   403  0009                     	;# 
   404  000A                     	;# 
   405  000B                     	;# 
   406  000C                     	;# 
   407  000D                     	;# 
   408  000E                     	;# 
   409  000E                     	;# 
   410  000F                     	;# 
   411  0010                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0014                     	;# 
   416  0015                     	;# 
   417  0015                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001B                     	;# 
   425  001C                     	;# 
   426  001D                     	;# 
   427  001E                     	;# 
   428  001F                     	;# 
   429  0081                     	;# 
   430  0085                     	;# 
   431  0086                     	;# 
   432  0087                     	;# 
   433  0088                     	;# 
   434  0089                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  008E                     	;# 
   438  008F                     	;# 
   439  0090                     	;# 
   440  0091                     	;# 
   441  0092                     	;# 
   442  0093                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0094                     	;# 
   446  0095                     	;# 
   447  0096                     	;# 
   448  0097                     	;# 
   449  0098                     	;# 
   450  0099                     	;# 
   451  009A                     	;# 
   452  009B                     	;# 
   453  009C                     	;# 
   454  009D                     	;# 
   455  009E                     	;# 
   456  009F                     	;# 
   457  0105                     	;# 
   458  0107                     	;# 
   459  0108                     	;# 
   460  0109                     	;# 
   461  010C                     	;# 
   462  010C                     	;# 
   463  010D                     	;# 
   464  010E                     	;# 
   465  010F                     	;# 
   466  0185                     	;# 
   467  0187                     	;# 
   468  0188                     	;# 
   469  0189                     	;# 
   470  018C                     	;# 
   471  018D                     	;# 
   472                           
   473                           	psect	strings
   474  1800                     __pstrings:	
   475  1800                     stringtab:	
   476  1800                     __stringtab:	
   477                           
   478                           ;	String table - string pointers are 1 byte each
   479  1800  1BFF               	btfsc	btemp+1,7
   480  1801  280A               	ljmp	stringcode
   481  1802  1383               	bcf	3,7
   482  1803  187F               	btfsc	btemp+1,0
   483  1804  1783               	bsf	3,7
   484  1805  0800               	movf	0,w
   485  1806  0A84               	incf	4,f
   486  1807  1903               	skipnz
   487  1808  0AFF               	incf	btemp+1,f
   488  1809  0008               	return
   489  180A                     stringcode:	
   490  180A                     stringdir:	
   491  180A  3018               	movlw	high stringdir
   492  180B  008A               	movwf	10
   493  180C  0804               	movf	4,w
   494  180D  0A84               	incf	4,f
   495  180E  0782               	addwf	2,f
   496  180F                     __stringbase:	
   497  180F  3400               	retlw	0
   498  1810                     __end_of__stringtab:	
   499  1810                     __powers_:	
   500  1810  3400               	retlw	0
   501  1811  3400               	retlw	0
   502  1812  3480               	retlw	128
   503  1813  343F               	retlw	63
   504  1814  3400               	retlw	0
   505  1815  3400               	retlw	0
   506  1816  3420               	retlw	32
   507  1817  3441               	retlw	65
   508  1818  3400               	retlw	0
   509  1819  3400               	retlw	0
   510  181A  34C8               	retlw	200
   511  181B  3442               	retlw	66
   512  181C  3400               	retlw	0
   513  181D  3400               	retlw	0
   514  181E  347A               	retlw	122
   515  181F  3444               	retlw	68
   516  1820  3400               	retlw	0
   517  1821  3440               	retlw	64
   518  1822  341C               	retlw	28
   519  1823  3446               	retlw	70
   520  1824  3400               	retlw	0
   521  1825  3450               	retlw	80
   522  1826  34C3               	retlw	195
   523  1827  3447               	retlw	71
   524  1828  3400               	retlw	0
   525  1829  3424               	retlw	36
   526  182A  3474               	retlw	116
   527  182B  3449               	retlw	73
   528  182C  3480               	retlw	128
   529  182D  3496               	retlw	150
   530  182E  3418               	retlw	24
   531  182F  344B               	retlw	75
   532  1830  3420               	retlw	32
   533  1831  34BC               	retlw	188
   534  1832  34BE               	retlw	190
   535  1833  344C               	retlw	76
   536  1834  3428               	retlw	40
   537  1835  346B               	retlw	107
   538  1836  346E               	retlw	110
   539  1837  344E               	retlw	78
   540  1838  34F9               	retlw	249
   541  1839  3402               	retlw	2
   542  183A  3415               	retlw	21
   543  183B  3450               	retlw	80
   544  183C  34EC               	retlw	236
   545  183D  3478               	retlw	120
   546  183E  34AD               	retlw	173
   547  183F  3460               	retlw	96
   548  1840  34CA               	retlw	202
   549  1841  34F2               	retlw	242
   550  1842  3449               	retlw	73
   551  1843  3471               	retlw	113
   552  1844                     __end_of__powers_:	
   553  1844                     __npowers_:	
   554  1844  3400               	retlw	0
   555  1845  3400               	retlw	0
   556  1846  3480               	retlw	128
   557  1847  343F               	retlw	63
   558  1848  34CD               	retlw	205
   559  1849  34CC               	retlw	204
   560  184A  34CC               	retlw	204
   561  184B  343D               	retlw	61
   562  184C  340A               	retlw	10
   563  184D  34D7               	retlw	215
   564  184E  3423               	retlw	35
   565  184F  343C               	retlw	60
   566  1850  346F               	retlw	111
   567  1851  3412               	retlw	18
   568  1852  3483               	retlw	131
   569  1853  343A               	retlw	58
   570  1854  3417               	retlw	23
   571  1855  34B7               	retlw	183
   572  1856  34D1               	retlw	209
   573  1857  3438               	retlw	56
   574  1858  34AC               	retlw	172
   575  1859  34C5               	retlw	197
   576  185A  3427               	retlw	39
   577  185B  3437               	retlw	55
   578  185C  34BD               	retlw	189
   579  185D  3437               	retlw	55
   580  185E  3486               	retlw	134
   581  185F  3435               	retlw	53
   582  1860  3495               	retlw	149
   583  1861  34BF               	retlw	191
   584  1862  34D6               	retlw	214
   585  1863  3433               	retlw	51
   586  1864  3477               	retlw	119
   587  1865  34CC               	retlw	204
   588  1866  342B               	retlw	43
   589  1867  3432               	retlw	50
   590  1868  345F               	retlw	95
   591  1869  3470               	retlw	112
   592  186A  3489               	retlw	137
   593  186B  3430               	retlw	48
   594  186C  34FF               	retlw	255
   595  186D  34E6               	retlw	230
   596  186E  34DB               	retlw	219
   597  186F  342E               	retlw	46
   598  1870  3408               	retlw	8
   599  1871  34E5               	retlw	229
   600  1872  343C               	retlw	60
   601  1873  341E               	retlw	30
   602  1874  3460               	retlw	96
   603  1875  3442               	retlw	66
   604  1876  34A2               	retlw	162
   605  1877  340D               	retlw	13
   606  1878                     __end_of__npowers_:	
   607  1878                     _dpowers:	
   608  1878  3401               	retlw	1
   609  1879  3400               	retlw	0
   610  187A  3400               	retlw	0
   611  187B  3400               	retlw	0
   612  187C  340A               	retlw	10
   613  187D  3400               	retlw	0
   614  187E  3400               	retlw	0
   615  187F  3400               	retlw	0
   616  1880  3464               	retlw	100
   617  1881  3400               	retlw	0
   618  1882  3400               	retlw	0
   619  1883  3400               	retlw	0
   620  1884  34E8               	retlw	232
   621  1885  3403               	retlw	3
   622  1886  3400               	retlw	0
   623  1887  3400               	retlw	0
   624  1888  3410               	retlw	16
   625  1889  3427               	retlw	39
   626  188A  3400               	retlw	0
   627  188B  3400               	retlw	0
   628  188C  34A0               	retlw	160
   629  188D  3486               	retlw	134
   630  188E  3401               	retlw	1
   631  188F  3400               	retlw	0
   632  1890  3440               	retlw	64
   633  1891  3442               	retlw	66
   634  1892  340F               	retlw	15
   635  1893  3400               	retlw	0
   636  1894  3480               	retlw	128
   637  1895  3496               	retlw	150
   638  1896  3498               	retlw	152
   639  1897  3400               	retlw	0
   640  1898  3400               	retlw	0
   641  1899  34E1               	retlw	225
   642  189A  34F5               	retlw	245
   643  189B  3405               	retlw	5
   644  189C  3400               	retlw	0
   645  189D  34CA               	retlw	202
   646  189E  349A               	retlw	154
   647  189F  343B               	retlw	59
   648  18A0                     __end_of_dpowers:	
   649  0018                     _RCSTAbits	set	24
   650  000B                     _INTCONbits	set	11
   651  0005                     _PORTA	set	5
   652  0008                     _PORTD	set	8
   653  001E                     _ADRESH	set	30
   654  001F                     _ADCON0bits	set	31
   655  000C                     _PIR1bits	set	12
   656  0006                     _PORTB	set	6
   657  0008                     _PORTDbits	set	8
   658  0098                     _TXSTAbits	set	152
   659  009F                     _ADCON1bits	set	159
   660  008C                     _PIE1bits	set	140
   661  0088                     _TRISD	set	136
   662  0086                     _TRISB	set	134
   663  0085                     _TRISA	set	133
   664  0187                     _BAUDCTLbits	set	391
   665  0189                     _ANSELH	set	393
   666  0188                     _ANSEL	set	392
   667  18A0                     STR_3:	
   668  18A0  3456               	retlw	86	;'V'
   669  18A1  3431               	retlw	49	;'1'
   670  18A2  3420               	retlw	32	;' '
   671  18A3  3420               	retlw	32	;' '
   672  18A4  3420               	retlw	32	;' '
   673  18A5  3456               	retlw	86	;'V'
   674  18A6  3432               	retlw	50	;'2'
   675  18A7  3420               	retlw	32	;' '
   676  18A8  3420               	retlw	32	;' '
   677  18A9  3443               	retlw	67	;'C'
   678  18AA  346F               	retlw	111	;'o'
   679  18AB  346E               	retlw	110	;'n'
   680  18AC  3474               	retlw	116	;'t'
   681  18AD  342E               	retlw	46	;'.'
   682  18AE  3400               	retlw	0
   683  18AF                     STR_1:	
   684  18AF  3425               	retlw	37	;'%'
   685  18B0  3431               	retlw	49	;'1'
   686  18B1  342E               	retlw	46	;'.'
   687  18B2  3432               	retlw	50	;'2'
   688  18B3  3466               	retlw	102	;'f'
   689  18B4  3400               	retlw	0
   690  18AF                     
   691                           ; #config settings
   692  0000                     
   693                           	psect	cinit
   694  07F3                     start_initialization:	
   695  07F3                     __initialization:	
   696                           
   697                           ; Clear objects allocated to BANK1
   698  07F3  1383               	bcf	3,7	;select IRP bank0
   699  07F4  30CD               	movlw	low __pbssBANK1
   700  07F5  0084               	movwf	4
   701  07F6  30E2               	movlw	low (__pbssBANK1+21)
   702  07F7  160A  118A  2000  120A  118A  	fcall	clear_ram0
   703  07FC                     end_of_initialization:	
   704                           ;End of C runtime variable initialization code
   705                           
   706  07FC                     __end_of__initialization:	
   707  07FC  0183               	clrf	3
   708  07FD  120A  158A  281A   	ljmp	_main	;jump to C main() function
   709                           
   710                           	psect	bssBANK1
   711  00CD                     __pbssBANK1:	
   712  00CD                     _volt2:	
   713  00CD                     	ds	4
   714  00D1                     _volt1:	
   715  00D1                     	ds	4
   716  00D5                     _start_another:	
   717  00D5                     	ds	1
   718  00D6                     _pot2:	
   719  00D6                     	ds	1
   720  00D7                     _pot1:	
   721  00D7                     	ds	1
   722  00D8                     _string2:	
   723  00D8                     	ds	5
   724  00DD                     _string1:	
   725  00DD                     	ds	5
   726                           
   727                           	psect	clrtext
   728  1000                     clear_ram0:	
   729                           ;	Called with FSR containing the base address, and
   730                           ;	W with the last address+1
   731                           
   732  1000  0064               	clrwdt	;clear the watchdog before getting into this loop
   733  1001                     clrloop0:	
   734  1001  0180               	clrf	0	;clear RAM location pointed to by FSR
   735  1002  0A84               	incf	4,f	;increment pointer
   736  1003  0604               	xorwf	4,w	;XOR with final address
   737  1004  1903               	btfsc	3,2	;have we reached the end yet?
   738  1005  3400               	retlw	0	;all done for this memory range, return
   739  1006  0604               	xorwf	4,w	;XOR again to restore value
   740  1007  2801               	goto	clrloop0	;do the next byte
   741                           
   742                           	psect	cstackBANK1
   743  00A0                     __pcstackBANK1:	
   744  00A0                     ?___flsub:	
   745  00A0                     ___flsub@a:	
   746                           ; 4 bytes @ 0x0
   747                           
   748                           
   749                           ; 4 bytes @ 0x0
   750  00A0                     	ds	4
   751  00A4                     ___flsub@b:	
   752                           
   753                           ; 4 bytes @ 0x4
   754  00A4                     	ds	4
   755  00A8                     ?_sprintf:	
   756  00A8                     sprintf@f:	
   757                           ; 2 bytes @ 0x8
   758                           
   759                           
   760                           ; 1 bytes @ 0x8
   761  00A8                     	ds	5
   762  00AD                     ??_sprintf:	
   763                           
   764                           ; 1 bytes @ 0xD
   765  00AD                     	ds	5
   766  00B2                     _sprintf$1211:	
   767                           
   768                           ; 4 bytes @ 0x12
   769  00B2                     	ds	4
   770  00B6                     sprintf@ap:	
   771                           
   772                           ; 1 bytes @ 0x16
   773  00B6                     	ds	1
   774  00B7                     sprintf@val:	
   775                           
   776                           ; 4 bytes @ 0x17
   777  00B7                     	ds	4
   778  00BB                     sprintf@flag:	
   779                           
   780                           ; 2 bytes @ 0x1B
   781  00BB                     	ds	2
   782  00BD                     sprintf@width:	
   783                           
   784                           ; 2 bytes @ 0x1D
   785  00BD                     	ds	2
   786  00BF                     sprintf@tmpval:	
   787                           
   788                           ; 4 bytes @ 0x1F
   789  00BF                     	ds	4
   790  00C3                     sprintf@eexp:	
   791                           
   792                           ; 2 bytes @ 0x23
   793  00C3                     	ds	2
   794  00C5                     sprintf@fval:	
   795                           
   796                           ; 4 bytes @ 0x25
   797  00C5                     	ds	4
   798  00C9                     sprintf@sp:	
   799                           
   800                           ; 1 bytes @ 0x29
   801  00C9                     	ds	1
   802  00CA                     sprintf@prec:	
   803                           
   804                           ; 2 bytes @ 0x2A
   805  00CA                     	ds	2
   806  00CC                     sprintf@c:	
   807                           
   808                           ; 1 bytes @ 0x2C
   809  00CC                     	ds	1
   810                           
   811                           	psect	cstackCOMMON
   812  0071                     __pcstackCOMMON:	
   813  0071                     ?_isdigit:	
   814  0071                     ?_Port_init:	
   815                           ; 1 bit 
   816                           
   817  0071                     ?_start_conversion:	
   818                           ; 1 bytes @ 0x0
   819                           
   820  0071                     ?_LCD_CMD:	
   821                           ; 1 bytes @ 0x0
   822                           
   823  0071                     ?_LCD_INIT:	
   824                           ; 1 bytes @ 0x0
   825                           
   826  0071                     ?_LCD_WRITE_CHAR:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0071                     ?_isr:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0071                     ??_isr:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0071                     ?_main:	
   836                           ; 1 bytes @ 0x0
   837                           
   838                           
   839                           ; 1 bytes @ 0x0
   840  0071                     	ds	3
   841  0074                     ??_Port_init:	
   842  0074                     ?_ADC_init:	
   843                           ; 1 bytes @ 0x3
   844                           
   845  0074                     ?_EUSART_Init:	
   846                           ; 1 bytes @ 0x3
   847                           
   848  0074                     ??_start_conversion:	
   849                           ; 1 bytes @ 0x3
   850                           
   851  0074                     ??_isdigit:	
   852                           ; 1 bytes @ 0x3
   853                           
   854  0074                     ??__tdiv_to_l_:	
   855                           ; 1 bytes @ 0x3
   856                           
   857  0074                     ??__div_to_l_:	
   858                           ; 1 bytes @ 0x3
   859                           
   860  0074                     ??_LCD_CMD:	
   861                           ; 1 bytes @ 0x3
   862                           
   863  0074                     ??_LCD_WRITE_CHAR:	
   864                           ; 1 bytes @ 0x3
   865                           
   866  0074                     ??___lldiv:	
   867                           ; 1 bytes @ 0x3
   868                           
   869  0074                     ??___fleq:	
   870                           ; 1 bytes @ 0x3
   871                           
   872  0074                     ??___flge:	
   873                           ; 1 bytes @ 0x3
   874                           
   875  0074                     ??___llmod:	
   876                           ; 1 bytes @ 0x3
   877                           
   878  0074                     ?__Umul8_16:	
   879                           ; 1 bytes @ 0x3
   880                           
   881  0074                     ?___wmul:	
   882                           ; 2 bytes @ 0x3
   883                           
   884  0074                     ?___awmod:	
   885                           ; 2 bytes @ 0x3
   886                           
   887  0074                     ?___lwmod:	
   888                           ; 2 bytes @ 0x3
   889                           
   890  0074                     ?___flneg:	
   891                           ; 2 bytes @ 0x3
   892                           
   893  0074                     ?___xxtofl:	
   894                           ; 4 bytes @ 0x3
   895                           
   896  0074                     ADC_init@channel:	
   897                           ; 4 bytes @ 0x3
   898                           
   899  0074                     EUSART_Init@b:	
   900                           ; 1 bytes @ 0x3
   901                           
   902  0074                     _isdigit$1009:	
   903                           ; 1 bytes @ 0x3
   904                           
   905  0074                     __Umul8_16@multiplicand:	
   906                           ; 1 bytes @ 0x3
   907                           
   908  0074                     ___wmul@multiplier:	
   909                           ; 1 bytes @ 0x3
   910                           
   911  0074                     ___awmod@divisor:	
   912                           ; 2 bytes @ 0x3
   913                           
   914  0074                     ___lwmod@divisor:	
   915                           ; 2 bytes @ 0x3
   916                           
   917  0074                     ___flneg@f1:	
   918                           ; 2 bytes @ 0x3
   919                           
   920  0074                     ___xxtofl@val:	
   921                           ; 4 bytes @ 0x3
   922                           
   923                           
   924                           ; 4 bytes @ 0x3
   925  0074                     	ds	1
   926  0075                     ??_EUSART_Init:	
   927  0075                     ADC_init@int_on:	
   928                           ; 1 bytes @ 0x4
   929                           
   930  0075                     EUSART_Init@a:	
   931                           ; 1 bytes @ 0x4
   932                           
   933  0075                     ___llmod@counter:	
   934                           ; 1 bytes @ 0x4
   935                           
   936  0075                     isdigit@c:	
   937                           ; 1 bytes @ 0x4
   938                           
   939  0075                     ___lldiv@quotient:	
   940                           ; 1 bytes @ 0x4
   941                           
   942  0075                     __div_to_l_@quot:	
   943                           ; 4 bytes @ 0x4
   944                           
   945                           
   946                           ; 4 bytes @ 0x4
   947  0075                     	ds	1
   948  0076                     ??__Umul8_16:	
   949  0076                     LCD_CMD@a:	
   950                           ; 1 bytes @ 0x5
   951                           
   952  0076                     LCD_WRITE_CHAR@a:	
   953                           ; 1 bytes @ 0x5
   954                           
   955  0076                     ADC_init@left_or_right:	
   956                           ; 1 bytes @ 0x5
   957                           
   958  0076                     ___wmul@multiplicand:	
   959                           ; 1 bytes @ 0x5
   960                           
   961  0076                     ___awmod@dividend:	
   962                           ; 2 bytes @ 0x5
   963                           
   964  0076                     ___lwmod@dividend:	
   965                           ; 2 bytes @ 0x5
   966                           
   967                           
   968                           ; 2 bytes @ 0x5
   969  0076                     	ds	1
   970  0077                     ??_ADC_init:	
   971  0077                     ?_LCD_SET_CURSOR:	
   972                           ; 1 bytes @ 0x6
   973                           
   974  0077                     ??_LCD_INIT:	
   975                           ; 1 bytes @ 0x6
   976                           
   977  0077                     ?_LCD_WRITE_STRING:	
   978                           ; 1 bytes @ 0x6
   979                           
   980  0077                     LCD_SET_CURSOR@b:	
   981                           ; 1 bytes @ 0x6
   982                           
   983  0077                     LCD_WRITE_STRING@a:	
   984                           ; 1 bytes @ 0x6
   985                           
   986                           
   987                           ; 2 bytes @ 0x6
   988  0077                     	ds	1
   989  0078                     ??_LCD_SET_CURSOR:	
   990  0078                     ??___wmul:	
   991                           ; 1 bytes @ 0x7
   992                           
   993  0078                     ??___awmod:	
   994                           ; 1 bytes @ 0x7
   995                           
   996  0078                     ??___flneg:	
   997                           ; 1 bytes @ 0x7
   998                           
   999  0078                     ??___lwmod:	
  1000                           ; 1 bytes @ 0x7
  1001                           
  1002  0078                     ___wmul@product:	
  1003                           ; 1 bytes @ 0x7
  1004                           
  1005                           
  1006                           ; 2 bytes @ 0x7
  1007  0078                     	ds	1
  1008  0079                     LCD_SET_CURSOR@a:	
  1009  0079                     ADC_init@Fosc:	
  1010                           ; 1 bytes @ 0x8
  1011                           
  1012  0079                     ___lldiv@counter:	
  1013                           ; 1 bytes @ 0x8
  1014                           
  1015  0079                     ___awmod@counter:	
  1016                           ; 1 bytes @ 0x8
  1017                           
  1018  0079                     __div_to_l_@cntr:	
  1019                           ; 1 bytes @ 0x8
  1020                           
  1021  0079                     ___lwmod@counter:	
  1022                           ; 1 bytes @ 0x8
  1023                           
  1024  0079                     LCD_WRITE_STRING@i:	
  1025                           ; 1 bytes @ 0x8
  1026                           
  1027                           
  1028                           ; 2 bytes @ 0x8
  1029  0079                     	ds	1
  1030  007A                     ??___lwdiv:	
  1031  007A                     LCD_SET_CURSOR@temporal:	
  1032                           ; 1 bytes @ 0x9
  1033                           
  1034  007A                     ___awmod@sign:	
  1035                           ; 1 bytes @ 0x9
  1036                           
  1037  007A                     __div_to_l_@exp1:	
  1038                           ; 1 bytes @ 0x9
  1039                           
  1040                           
  1041                           ; 1 bytes @ 0x9
  1042  007A                     	ds	1
  1043  007B                     ??___flsub:	
  1044                           
  1045                           	psect	cstackBANK0
  1046  0020                     __pcstackBANK0:	
  1047                           ; 1 bytes @ 0xA
  1048                           
  1049  0020                     ?___fleq:	
  1050  0020                     ?___flge:	
  1051                           ; 1 bit 
  1052                           
  1053  0020                     ??_LCD_WRITE_STRING:	
  1054                           ; 1 bit 
  1055                           
  1056  0020                     ??___xxtofl:	
  1057                           ; 1 bytes @ 0x0
  1058                           
  1059  0020                     ?___awdiv:	
  1060                           ; 1 bytes @ 0x0
  1061                           
  1062  0020                     ?___lwdiv:	
  1063                           ; 2 bytes @ 0x0
  1064                           
  1065  0020                     ?__tdiv_to_l_:	
  1066                           ; 2 bytes @ 0x0
  1067                           
  1068  0020                     ?__div_to_l_:	
  1069                           ; 4 bytes @ 0x0
  1070                           
  1071  0020                     ?___lldiv:	
  1072                           ; 4 bytes @ 0x0
  1073                           
  1074  0020                     ?___llmod:	
  1075                           ; 4 bytes @ 0x0
  1076                           
  1077  0020                     ___awdiv@divisor:	
  1078                           ; 4 bytes @ 0x0
  1079                           
  1080  0020                     ___lwdiv@divisor:	
  1081                           ; 2 bytes @ 0x0
  1082                           
  1083  0020                     __Umul8_16@product:	
  1084                           ; 2 bytes @ 0x0
  1085                           
  1086  0020                     ___lldiv@divisor:	
  1087                           ; 2 bytes @ 0x0
  1088                           
  1089  0020                     __div_to_l_@f1:	
  1090                           ; 4 bytes @ 0x0
  1091                           
  1092  0020                     ___fleq@ff1:	
  1093                           ; 4 bytes @ 0x0
  1094                           
  1095  0020                     ___flge@ff1:	
  1096                           ; 4 bytes @ 0x0
  1097                           
  1098  0020                     __tdiv_to_l_@f1:	
  1099                           ; 4 bytes @ 0x0
  1100                           
  1101  0020                     ___llmod@divisor:	
  1102                           ; 4 bytes @ 0x0
  1103                           
  1104                           
  1105                           ; 4 bytes @ 0x0
  1106  0020                     	ds	2
  1107  0022                     ___awdiv@dividend:	
  1108  0022                     ___lwdiv@dividend:	
  1109                           ; 2 bytes @ 0x2
  1110                           
  1111  0022                     __Umul8_16@word_mpld:	
  1112                           ; 2 bytes @ 0x2
  1113                           
  1114                           
  1115                           ; 2 bytes @ 0x2
  1116  0022                     	ds	2
  1117  0024                     ??___awdiv:	
  1118  0024                     ___xxtofl@sign:	
  1119                           ; 1 bytes @ 0x4
  1120                           
  1121  0024                     __Umul8_16@multiplier:	
  1122                           ; 1 bytes @ 0x4
  1123                           
  1124  0024                     ___lwdiv@quotient:	
  1125                           ; 1 bytes @ 0x4
  1126                           
  1127  0024                     ___lldiv@dividend:	
  1128                           ; 2 bytes @ 0x4
  1129                           
  1130  0024                     __div_to_l_@f2:	
  1131                           ; 4 bytes @ 0x4
  1132                           
  1133  0024                     ___fleq@ff2:	
  1134                           ; 4 bytes @ 0x4
  1135                           
  1136  0024                     ___flge@ff2:	
  1137                           ; 4 bytes @ 0x4
  1138                           
  1139  0024                     __tdiv_to_l_@f2:	
  1140                           ; 4 bytes @ 0x4
  1141                           
  1142  0024                     ___llmod@dividend:	
  1143                           ; 4 bytes @ 0x4
  1144                           
  1145                           
  1146                           ; 4 bytes @ 0x4
  1147  0024                     	ds	1
  1148  0025                     ___awdiv@counter:	
  1149  0025                     ___xxtofl@exp:	
  1150                           ; 1 bytes @ 0x5
  1151                           
  1152                           
  1153                           ; 1 bytes @ 0x5
  1154  0025                     	ds	1
  1155  0026                     ___awdiv@sign:	
  1156  0026                     ___lwdiv@counter:	
  1157                           ; 1 bytes @ 0x6
  1158                           
  1159  0026                     ___xxtofl@arg:	
  1160                           ; 1 bytes @ 0x6
  1161                           
  1162                           
  1163                           ; 4 bytes @ 0x6
  1164  0026                     	ds	1
  1165  0027                     ___awdiv@quotient:	
  1166                           
  1167                           ; 2 bytes @ 0x7
  1168  0027                     	ds	1
  1169  0028                     __tdiv_to_l_@quot:	
  1170                           
  1171                           ; 4 bytes @ 0x8
  1172  0028                     	ds	2
  1173  002A                     ?___flmul:	
  1174  002A                     ___flmul@b:	
  1175                           ; 4 bytes @ 0xA
  1176                           
  1177                           
  1178                           ; 4 bytes @ 0xA
  1179  002A                     	ds	2
  1180  002C                     __tdiv_to_l_@cntr:	
  1181                           
  1182                           ; 1 bytes @ 0xC
  1183  002C                     	ds	1
  1184  002D                     __tdiv_to_l_@exp1:	
  1185                           
  1186                           ; 1 bytes @ 0xD
  1187  002D                     	ds	1
  1188  002E                     ___flmul@a:	
  1189                           
  1190                           ; 4 bytes @ 0xE
  1191  002E                     	ds	4
  1192  0032                     ??___flmul:	
  1193                           
  1194                           ; 1 bytes @ 0x12
  1195  0032                     	ds	5
  1196  0037                     ___flmul@sign:	
  1197                           
  1198                           ; 1 bytes @ 0x17
  1199  0037                     	ds	1
  1200  0038                     ___flmul@grs:	
  1201                           
  1202                           ; 4 bytes @ 0x18
  1203  0038                     	ds	4
  1204  003C                     ___flmul@aexp:	
  1205                           
  1206                           ; 1 bytes @ 0x1C
  1207  003C                     	ds	1
  1208  003D                     ___flmul@bexp:	
  1209                           
  1210                           ; 1 bytes @ 0x1D
  1211  003D                     	ds	1
  1212  003E                     ___flmul@prod:	
  1213                           
  1214                           ; 4 bytes @ 0x1E
  1215  003E                     	ds	4
  1216  0042                     ___flmul@temp:	
  1217                           
  1218                           ; 2 bytes @ 0x22
  1219  0042                     	ds	2
  1220  0044                     ?_fround:	
  1221  0044                     ?_scale:	
  1222                           ; 4 bytes @ 0x24
  1223                           
  1224                           
  1225                           ; 4 bytes @ 0x24
  1226  0044                     	ds	4
  1227  0048                     ??_fround:	
  1228  0048                     ??_scale:	
  1229                           ; 1 bytes @ 0x28
  1230                           
  1231                           
  1232                           ; 1 bytes @ 0x28
  1233  0048                     	ds	7
  1234  004F                     _fround$1209:	
  1235                           
  1236                           ; 4 bytes @ 0x2F
  1237  004F                     	ds	3
  1238  0052                     _scale$1210:	
  1239                           
  1240                           ; 4 bytes @ 0x32
  1241  0052                     	ds	1
  1242  0053                     _fround$1208:	
  1243                           
  1244                           ; 4 bytes @ 0x33
  1245  0053                     	ds	3
  1246  0056                     scale@scl:	
  1247                           
  1248                           ; 1 bytes @ 0x36
  1249  0056                     	ds	1
  1250  0057                     ?___fltol:	
  1251  0057                     fround@prec:	
  1252                           ; 4 bytes @ 0x37
  1253                           
  1254  0057                     ___fltol@f1:	
  1255                           ; 1 bytes @ 0x37
  1256                           
  1257                           
  1258                           ; 4 bytes @ 0x37
  1259  0057                     	ds	1
  1260  0058                     ?___fladd:	
  1261  0058                     ___fladd@b:	
  1262                           ; 4 bytes @ 0x38
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0x38
  1266  0058                     	ds	3
  1267  005B                     ??___fltol:	
  1268                           
  1269                           ; 1 bytes @ 0x3B
  1270  005B                     	ds	1
  1271  005C                     ___fladd@a:	
  1272                           
  1273                           ; 4 bytes @ 0x3C
  1274  005C                     	ds	4
  1275  0060                     ??___fladd:	
  1276  0060                     ___fltol@sign1:	
  1277                           ; 1 bytes @ 0x40
  1278                           
  1279                           
  1280                           ; 1 bytes @ 0x40
  1281  0060                     	ds	1
  1282  0061                     ___fltol@exp1:	
  1283                           
  1284                           ; 1 bytes @ 0x41
  1285  0061                     	ds	7
  1286  0068                     ___fladd@signs:	
  1287                           
  1288                           ; 1 bytes @ 0x48
  1289  0068                     	ds	1
  1290  0069                     ___fladd@aexp:	
  1291                           
  1292                           ; 1 bytes @ 0x49
  1293  0069                     	ds	1
  1294  006A                     ___fladd@bexp:	
  1295                           
  1296                           ; 1 bytes @ 0x4A
  1297  006A                     	ds	1
  1298  006B                     ___fladd@grs:	
  1299                           
  1300                           ; 1 bytes @ 0x4B
  1301  006B                     	ds	1
  1302  006C                     ??_main:	
  1303                           
  1304                           ; 1 bytes @ 0x4C
  1305  006C                     	ds	4
  1306                           
  1307                           	psect	maintext
  1308  081A                     __pmaintext:	
  1309 ;;
  1310 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1311 ;;
  1312 ;; *************** function _main *****************
  1313 ;; Defined at:
  1314 ;;		line 52 in file "main_lab3.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;                  1    wreg      void 
  1321 ;; Registers used:
  1322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : B00/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1328 ;;      Params:         0       0       0       0       0
  1329 ;;      Locals:         0       0       0       0       0
  1330 ;;      Temps:          0       4       0       0       0
  1331 ;;      Totals:         0       4       0       0       0
  1332 ;;Total ram usage:        4 bytes
  1333 ;; Hardware stack levels required when called:    5
  1334 ;; This function calls:
  1335 ;;		_ADC_init
  1336 ;;		_EUSART_Init
  1337 ;;		_LCD_INIT
  1338 ;;		_LCD_SET_CURSOR
  1339 ;;		_LCD_WRITE_STRING
  1340 ;;		_Port_init
  1341 ;;		___flmul
  1342 ;;		___xxtofl
  1343 ;;		_sprintf
  1344 ;;		_start_conversion
  1345 ;; This function is called by:
  1346 ;;		Startup code after reset
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _main
  1352  081A                     _main:	
  1353  081A                     l3520:	
  1354                           ;incstack = 0
  1355                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1356                           
  1357                           
  1358                           ;main_lab3.c: 53:     Port_init();
  1359  081A  120A  158A  2002  120A  158A  	fcall	_Port_init
  1360                           
  1361                           ;main_lab3.c: 54:     LCD_INIT();
  1362  081F  160A  158A  2351  120A  158A  	fcall	_LCD_INIT
  1363  0824                     l3522:	
  1364                           
  1365                           ;main_lab3.c: 55:     ADC_init(1,1,1,0);
  1366  0824  01F4               	clrf	ADC_init@channel
  1367  0825  0AF4               	incf	ADC_init@channel,f
  1368  0826  01F5               	clrf	ADC_init@int_on
  1369  0827  0AF5               	incf	ADC_init@int_on,f
  1370  0828  01F6               	clrf	ADC_init@left_or_right
  1371  0829  3001               	movlw	1
  1372  082A  160A  118A  21B0  120A  158A  	fcall	_ADC_init
  1373  082F                     l3524:	
  1374                           
  1375                           ;main_lab3.c: 56:     EUSART_Init(1, 0);
  1376  082F  01F4               	clrf	EUSART_Init@b
  1377  0830  3001               	movlw	1
  1378  0831  160A  158A  21D5  120A  158A  	fcall	_EUSART_Init
  1379  0836                     l3526:	
  1380                           
  1381                           ;main_lab3.c: 58:         if (start_another == 1){
  1382  0836  1683               	bsf	3,5	;RP0=1, select bank1
  1383  0837  1303               	bcf	3,6	;RP1=0, select bank1
  1384  0838  0355               	decf	_start_another^(0+128),w
  1385  0839  1D03               	btfss	3,2
  1386  083A  283C               	goto	u5631
  1387  083B  283D               	goto	u5630
  1388  083C                     u5631:	
  1389  083C  2845               	goto	l3532
  1390  083D                     u5630:	
  1391  083D                     l3528:	
  1392                           
  1393                           ;main_lab3.c: 59:             start_conversion();
  1394  083D  120A  118A  2010  120A  158A  	fcall	_start_conversion
  1395  0842                     l3530:	
  1396                           
  1397                           ;main_lab3.c: 60:             start_another = 0;
  1398  0842  1683               	bsf	3,5	;RP0=1, select bank1
  1399  0843  1303               	bcf	3,6	;RP1=0, select bank1
  1400  0844  01D5               	clrf	_start_another^(0+128)
  1401  0845                     l3532:	
  1402                           
  1403                           ;main_lab3.c: 64:         volt1 = pot1*(5.0/255);
  1404  0845  303C               	movlw	60
  1405  0846  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0847  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0848  00AD               	movwf	___flmul@b+3
  1408  0849  30A0               	movlw	160
  1409  084A  00AC               	movwf	___flmul@b+2
  1410  084B  30A0               	movlw	160
  1411  084C  00AB               	movwf	___flmul@b+1
  1412  084D  30A1               	movlw	161
  1413  084E  00AA               	movwf	___flmul@b
  1414  084F  1683               	bsf	3,5	;RP0=1, select bank1
  1415  0850  1303               	bcf	3,6	;RP1=0, select bank1
  1416  0851  0857               	movf	_pot1^(0+128),w
  1417  0852  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0853  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0854  00EC               	movwf	??_main
  1420  0855  01ED               	clrf	??_main+1
  1421  0856  01EE               	clrf	??_main+2
  1422  0857  01EF               	clrf	??_main+3
  1423  0858  086F               	movf	??_main+3,w
  1424  0859  00F7               	movwf	___xxtofl@val+3
  1425  085A  086E               	movf	??_main+2,w
  1426  085B  00F6               	movwf	___xxtofl@val+2
  1427  085C  086D               	movf	??_main+1,w
  1428  085D  00F5               	movwf	___xxtofl@val+1
  1429  085E  086C               	movf	??_main,w
  1430  085F  00F4               	movwf	___xxtofl@val
  1431  0860  3001               	movlw	1
  1432  0861  160A  158A  2644  120A  158A  	fcall	___xxtofl
  1433  0866  0877               	movf	?___xxtofl+3,w
  1434  0867  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0868  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0869  00B1               	movwf	___flmul@a+3
  1437  086A  0876               	movf	?___xxtofl+2,w
  1438  086B  00B0               	movwf	___flmul@a+2
  1439  086C  0875               	movf	?___xxtofl+1,w
  1440  086D  00AF               	movwf	___flmul@a+1
  1441  086E  0874               	movf	?___xxtofl,w
  1442  086F  00AE               	movwf	___flmul@a
  1443  0870  120A  158A  213C  120A  158A  	fcall	___flmul
  1444  0875  1283               	bcf	3,5	;RP0=0, select bank0
  1445  0876  1303               	bcf	3,6	;RP1=0, select bank0
  1446  0877  082D               	movf	?___flmul+3,w
  1447  0878  1683               	bsf	3,5	;RP0=1, select bank1
  1448  0879  1303               	bcf	3,6	;RP1=0, select bank1
  1449  087A  00D4               	movwf	(_volt1+3)^(0+128)
  1450  087B  1283               	bcf	3,5	;RP0=0, select bank0
  1451  087C  1303               	bcf	3,6	;RP1=0, select bank0
  1452  087D  082C               	movf	?___flmul+2,w
  1453  087E  1683               	bsf	3,5	;RP0=1, select bank1
  1454  087F  1303               	bcf	3,6	;RP1=0, select bank1
  1455  0880  00D3               	movwf	(_volt1+2)^(0+128)
  1456  0881  1283               	bcf	3,5	;RP0=0, select bank0
  1457  0882  1303               	bcf	3,6	;RP1=0, select bank0
  1458  0883  082B               	movf	?___flmul+1,w
  1459  0884  1683               	bsf	3,5	;RP0=1, select bank1
  1460  0885  1303               	bcf	3,6	;RP1=0, select bank1
  1461  0886  00D2               	movwf	(_volt1+1)^(0+128)
  1462  0887  1283               	bcf	3,5	;RP0=0, select bank0
  1463  0888  1303               	bcf	3,6	;RP1=0, select bank0
  1464  0889  082A               	movf	?___flmul,w
  1465  088A  1683               	bsf	3,5	;RP0=1, select bank1
  1466  088B  1303               	bcf	3,6	;RP1=0, select bank1
  1467  088C  00D1               	movwf	_volt1^(0+128)
  1468  088D                     l3534:	
  1469                           
  1470                           ;main_lab3.c: 65:         volt2 = pot2*(5.0/255);
  1471  088D  303C               	movlw	60
  1472  088E  1283               	bcf	3,5	;RP0=0, select bank0
  1473  088F  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0890  00AD               	movwf	___flmul@b+3
  1475  0891  30A0               	movlw	160
  1476  0892  00AC               	movwf	___flmul@b+2
  1477  0893  30A0               	movlw	160
  1478  0894  00AB               	movwf	___flmul@b+1
  1479  0895  30A1               	movlw	161
  1480  0896  00AA               	movwf	___flmul@b
  1481  0897  1683               	bsf	3,5	;RP0=1, select bank1
  1482  0898  1303               	bcf	3,6	;RP1=0, select bank1
  1483  0899  0856               	movf	_pot2^(0+128),w
  1484  089A  1283               	bcf	3,5	;RP0=0, select bank0
  1485  089B  1303               	bcf	3,6	;RP1=0, select bank0
  1486  089C  00EC               	movwf	??_main
  1487  089D  01ED               	clrf	??_main+1
  1488  089E  01EE               	clrf	??_main+2
  1489  089F  01EF               	clrf	??_main+3
  1490  08A0  086F               	movf	??_main+3,w
  1491  08A1  00F7               	movwf	___xxtofl@val+3
  1492  08A2  086E               	movf	??_main+2,w
  1493  08A3  00F6               	movwf	___xxtofl@val+2
  1494  08A4  086D               	movf	??_main+1,w
  1495  08A5  00F5               	movwf	___xxtofl@val+1
  1496  08A6  086C               	movf	??_main,w
  1497  08A7  00F4               	movwf	___xxtofl@val
  1498  08A8  3001               	movlw	1
  1499  08A9  160A  158A  2644  120A  158A  	fcall	___xxtofl
  1500  08AE  0877               	movf	?___xxtofl+3,w
  1501  08AF  1283               	bcf	3,5	;RP0=0, select bank0
  1502  08B0  1303               	bcf	3,6	;RP1=0, select bank0
  1503  08B1  00B1               	movwf	___flmul@a+3
  1504  08B2  0876               	movf	?___xxtofl+2,w
  1505  08B3  00B0               	movwf	___flmul@a+2
  1506  08B4  0875               	movf	?___xxtofl+1,w
  1507  08B5  00AF               	movwf	___flmul@a+1
  1508  08B6  0874               	movf	?___xxtofl,w
  1509  08B7  00AE               	movwf	___flmul@a
  1510  08B8  120A  158A  213C  120A  158A  	fcall	___flmul
  1511  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  1512  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  1513  08BF  082D               	movf	?___flmul+3,w
  1514  08C0  1683               	bsf	3,5	;RP0=1, select bank1
  1515  08C1  1303               	bcf	3,6	;RP1=0, select bank1
  1516  08C2  00D0               	movwf	(_volt2+3)^(0+128)
  1517  08C3  1283               	bcf	3,5	;RP0=0, select bank0
  1518  08C4  1303               	bcf	3,6	;RP1=0, select bank0
  1519  08C5  082C               	movf	?___flmul+2,w
  1520  08C6  1683               	bsf	3,5	;RP0=1, select bank1
  1521  08C7  1303               	bcf	3,6	;RP1=0, select bank1
  1522  08C8  00CF               	movwf	(_volt2+2)^(0+128)
  1523  08C9  1283               	bcf	3,5	;RP0=0, select bank0
  1524  08CA  1303               	bcf	3,6	;RP1=0, select bank0
  1525  08CB  082B               	movf	?___flmul+1,w
  1526  08CC  1683               	bsf	3,5	;RP0=1, select bank1
  1527  08CD  1303               	bcf	3,6	;RP1=0, select bank1
  1528  08CE  00CE               	movwf	(_volt2+1)^(0+128)
  1529  08CF  1283               	bcf	3,5	;RP0=0, select bank0
  1530  08D0  1303               	bcf	3,6	;RP1=0, select bank0
  1531  08D1  082A               	movf	?___flmul,w
  1532  08D2  1683               	bsf	3,5	;RP0=1, select bank1
  1533  08D3  1303               	bcf	3,6	;RP1=0, select bank1
  1534  08D4  00CD               	movwf	_volt2^(0+128)
  1535  08D5                     l3536:	
  1536                           
  1537                           ;main_lab3.c: 66:         sprintf(string1,"%1.2f", volt1);
  1538  08D5  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1539  08D6  1283               	bcf	3,5	;RP0=0, select bank0
  1540  08D7  1303               	bcf	3,6	;RP1=0, select bank0
  1541  08D8  00EC               	movwf	??_main
  1542  08D9  086C               	movf	??_main,w
  1543  08DA  1683               	bsf	3,5	;RP0=1, select bank1
  1544  08DB  1303               	bcf	3,6	;RP1=0, select bank1
  1545  08DC  00A8               	movwf	sprintf@f^(0+128)
  1546  08DD  0854               	movf	(_volt1+3)^(0+128),w
  1547  08DE  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1548  08DF  0853               	movf	(_volt1+2)^(0+128),w
  1549  08E0  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1550  08E1  0852               	movf	(_volt1+1)^(0+128),w
  1551  08E2  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1552  08E3  0851               	movf	_volt1^(0+128),w
  1553  08E4  00A9               	movwf	(?_sprintf^(0+128)+1)
  1554  08E5  30DD               	movlw	(low (_string1| 0))& (0+255)
  1555  08E6  160A  118A  24FC  120A  158A  	fcall	_sprintf
  1556  08EB                     l3538:	
  1557                           
  1558                           ;main_lab3.c: 67:         sprintf(string2, "%1.2f", volt2);
  1559  08EB  30A0               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1560  08EC  1283               	bcf	3,5	;RP0=0, select bank0
  1561  08ED  1303               	bcf	3,6	;RP1=0, select bank0
  1562  08EE  00EC               	movwf	??_main
  1563  08EF  086C               	movf	??_main,w
  1564  08F0  1683               	bsf	3,5	;RP0=1, select bank1
  1565  08F1  1303               	bcf	3,6	;RP1=0, select bank1
  1566  08F2  00A8               	movwf	sprintf@f^(0+128)
  1567  08F3  0850               	movf	(_volt2+3)^(0+128),w
  1568  08F4  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1569  08F5  084F               	movf	(_volt2+2)^(0+128),w
  1570  08F6  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1571  08F7  084E               	movf	(_volt2+1)^(0+128),w
  1572  08F8  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1573  08F9  084D               	movf	_volt2^(0+128),w
  1574  08FA  00A9               	movwf	(?_sprintf^(0+128)+1)
  1575  08FB  30D8               	movlw	(low (_string2| 0))& (0+255)
  1576  08FC  160A  118A  24FC  120A  158A  	fcall	_sprintf
  1577  0901                     l3540:	
  1578                           
  1579                           ;main_lab3.c: 68:         LCD_SET_CURSOR(1,1);
  1580  0901  01F7               	clrf	LCD_SET_CURSOR@b
  1581  0902  0AF7               	incf	LCD_SET_CURSOR@b,f
  1582  0903  3001               	movlw	1
  1583  0904  160A  158A  218C  120A  158A  	fcall	_LCD_SET_CURSOR
  1584  0909                     l3542:	
  1585                           
  1586                           ;main_lab3.c: 69:         LCD_WRITE_STRING("V1   V2  Cont.");
  1587  0909  3091               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1588  090A  00F7               	movwf	LCD_WRITE_STRING@a
  1589  090B  3080               	movlw	128
  1590  090C  00F8               	movwf	LCD_WRITE_STRING@a+1
  1591  090D  160A  158A  2227  120A  158A  	fcall	_LCD_WRITE_STRING
  1592  0912                     l3544:	
  1593                           
  1594                           ;main_lab3.c: 70:         LCD_SET_CURSOR(2,1);
  1595  0912  01F7               	clrf	LCD_SET_CURSOR@b
  1596  0913  0AF7               	incf	LCD_SET_CURSOR@b,f
  1597  0914  3002               	movlw	2
  1598  0915  160A  158A  218C  120A  158A  	fcall	_LCD_SET_CURSOR
  1599  091A                     l3546:	
  1600                           
  1601                           ;main_lab3.c: 71:         LCD_WRITE_STRING(string1);
  1602  091A  30DD               	movlw	(low (_string1| 0))& (0+255)
  1603  091B  00F7               	movwf	LCD_WRITE_STRING@a
  1604  091C  3000               	movlw	0
  1605  091D  00F8               	movwf	LCD_WRITE_STRING@a+1
  1606  091E  160A  158A  2227  120A  158A  	fcall	_LCD_WRITE_STRING
  1607  0923                     l3548:	
  1608                           
  1609                           ;main_lab3.c: 72:         LCD_SET_CURSOR(2,6);
  1610  0923  3006               	movlw	6
  1611  0924  1283               	bcf	3,5	;RP0=0, select bank0
  1612  0925  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0926  00EC               	movwf	??_main
  1614  0927  086C               	movf	??_main,w
  1615  0928  00F7               	movwf	LCD_SET_CURSOR@b
  1616  0929  3002               	movlw	2
  1617  092A  160A  158A  218C  120A  158A  	fcall	_LCD_SET_CURSOR
  1618  092F                     l3550:	
  1619                           
  1620                           ;main_lab3.c: 73:         LCD_WRITE_STRING(string2);
  1621  092F  30D8               	movlw	(low (_string2| 0))& (0+255)
  1622  0930  00F7               	movwf	LCD_WRITE_STRING@a
  1623  0931  3000               	movlw	0
  1624  0932  00F8               	movwf	LCD_WRITE_STRING@a+1
  1625  0933  160A  158A  2227  120A  158A  	fcall	_LCD_WRITE_STRING
  1626  0938  2836               	goto	l3526
  1627  0939  120A  118A  280C   	ljmp	start
  1628  093C                     __end_of_main:	
  1629                           
  1630                           	psect	text1
  1631  0010                     __ptext1:	
  1632 ;; *************** function _start_conversion *****************
  1633 ;; Defined at:
  1634 ;;		line 24 in file "../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;		None
  1637 ;; Auto vars:     Size  Location     Type
  1638 ;;		None
  1639 ;; Return value:  Size  Location     Type
  1640 ;;                  1    wreg      void 
  1641 ;; Registers used:
  1642 ;;		None
  1643 ;; Tracked objects:
  1644 ;;		On entry : 0/0
  1645 ;;		On exit  : 0/0
  1646 ;;		Unchanged: 0/0
  1647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1648 ;;      Params:         0       0       0       0       0
  1649 ;;      Locals:         0       0       0       0       0
  1650 ;;      Temps:          0       0       0       0       0
  1651 ;;      Totals:         0       0       0       0       0
  1652 ;;Total ram usage:        0 bytes
  1653 ;; Hardware stack levels used:    1
  1654 ;; Hardware stack levels required when called:    1
  1655 ;; This function calls:
  1656 ;;		Nothing
  1657 ;; This function is called by:
  1658 ;;		_main
  1659 ;; This function uses a non-reentrant model
  1660 ;;
  1661                           
  1662                           
  1663                           ;psect for function _start_conversion
  1664  0010                     _start_conversion:	
  1665  0010                     l3238:	
  1666                           ;incstack = 0
  1667                           ; Regs used in _start_conversion: []
  1668                           
  1669                           
  1670                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 25:     ADCON0bits.GO_DONE
      +                           = 1;
  1671  0010  1283               	bcf	3,5	;RP0=0, select bank0
  1672  0011  1303               	bcf	3,6	;RP1=0, select bank0
  1673  0012  149F               	bsf	31,1	;volatile
  1674  0013                     l126:	
  1675  0013  0008               	return
  1676  0014                     __end_of_start_conversion:	
  1677                           
  1678                           	psect	text2
  1679  14FC                     __ptext2:	
  1680 ;; *************** function _sprintf *****************
  1681 ;; Defined at:
  1682 ;;		line 505 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  sp              1    wreg     PTR unsigned char 
  1685 ;;		 -> string2(5), string1(5), 
  1686 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1687 ;;		 -> STR_2(6), STR_1(6), 
  1688 ;; Auto vars:     Size  Location     Type
  1689 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1690 ;;		 -> string2(5), string1(5), 
  1691 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1692 ;;  tmpval          4   31[BANK1 ] struct .
  1693 ;;  val             4   23[BANK1 ] unsigned long 
  1694 ;;  prec            2   42[BANK1 ] int 
  1695 ;;  eexp            2   35[BANK1 ] int 
  1696 ;;  width           2   29[BANK1 ] int 
  1697 ;;  flag            2   27[BANK1 ] unsigned short 
  1698 ;;  cp              2    0        PTR const unsigned char 
  1699 ;;  len             2    0        unsigned int 
  1700 ;;  c               1   44[BANK1 ] unsigned char 
  1701 ;;  ap              1   22[BANK1 ] PTR void [1]
  1702 ;;		 -> ?_sprintf(2), 
  1703 ;;  d               1    0        unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  2    8[BANK1 ] int 
  1706 ;; Registers used:
  1707 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1713 ;;      Params:         0       0       5       0       0
  1714 ;;      Locals:         0       0      27       0       0
  1715 ;;      Temps:          0       0       5       0       0
  1716 ;;      Totals:         0       0      37       0       0
  1717 ;;Total ram usage:       37 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:    4
  1720 ;; This function calls:
  1721 ;;		___awdiv
  1722 ;;		___fladd
  1723 ;;		___fleq
  1724 ;;		___flge
  1725 ;;		___flmul
  1726 ;;		___flneg
  1727 ;;		___flsub
  1728 ;;		___fltol
  1729 ;;		___lldiv
  1730 ;;		___llmod
  1731 ;;		___wmul
  1732 ;;		___xxtofl
  1733 ;;		__div_to_l_
  1734 ;;		__tdiv_to_l_
  1735 ;;		_fround
  1736 ;;		_isdigit
  1737 ;;		_scale
  1738 ;; This function is called by:
  1739 ;;		_main
  1740 ;; This function uses a non-reentrant model
  1741 ;;
  1742                           
  1743                           
  1744                           ;psect for function _sprintf
  1745  14FC                     _sprintf:	
  1746                           
  1747                           ;incstack = 0
  1748                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1749                           ;sprintf@sp stored from wreg
  1750  14FC  1683               	bsf	3,5	;RP0=1, select bank1
  1751  14FD  1303               	bcf	3,6	;RP1=0, select bank1
  1752  14FE  00C9               	movwf	sprintf@sp^(0+128)
  1753  14FF                     l3240:	
  1754                           
  1755                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 505: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources
      +                          \c90\common\doprnt.c: 506: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\
      +                          common\doprnt.c: 507:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\source
      +                          s\c90\common\doprnt.c: 512:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sour
      +                          ces\c90\common\doprnt.c: 514:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.10\pic
      +                          \sources\c90\common\doprnt.c: 517:  int prec;
  1756  14FF  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1757  1500  00AD               	movwf	??_sprintf^(0+128)
  1758  1501  082D               	movf	??_sprintf^(0+128),w
  1759  1502  00B6               	movwf	sprintf@ap^(0+128)
  1760  1503                     L1:	
  1761                           
  1762                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
  1763  1503  120A  118A  2FDA   	goto	l3490
  1764  1506                     l3242:	
  1765                           
  1766                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 555:   if(c
      +                           != '%')
  1767  1506  3025               	movlw	37
  1768  1507  064C               	xorwf	sprintf@c^(0+128),w
  1769  1508  1903               	btfsc	3,2
  1770  1509  2D0B               	goto	u5141
  1771  150A  2D0C               	goto	u5140
  1772  150B                     u5141:	
  1773  150B  2D18               	goto	l3248
  1774  150C                     u5140:	
  1775  150C                     l3244:	
  1776                           
  1777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 557:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 558:    ((*sp+
      +                          + = (c)));
  1778  150C  084C               	movf	sprintf@c^(0+128),w
  1779  150D  00AD               	movwf	??_sprintf^(0+128)
  1780  150E  0849               	movf	sprintf@sp^(0+128),w
  1781  150F  0084               	movwf	4
  1782  1510  082D               	movf	??_sprintf^(0+128),w
  1783  1511  1383               	bcf	3,7	;select IRP bank0
  1784  1512  0080               	movwf	0
  1785  1513                     l3246:	
  1786  1513  3001               	movlw	1
  1787  1514  00AD               	movwf	??_sprintf^(0+128)
  1788  1515  082D               	movf	??_sprintf^(0+128),w
  1789  1516  07C9               	addwf	sprintf@sp^(0+128),f
  1790                           
  1791                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 559:    con
      +                          tinue;
  1792  1517  2D03               	goto	L1
  1793  1518                     l3248:	
  1794                           
  1795                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 563:   widt
      +                          h = 0;
  1796  1518  01BD               	clrf	sprintf@width^(0+128)
  1797  1519  01BE               	clrf	(sprintf@width+1)^(0+128)
  1798                           
  1799                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 565:   flag
      +                           = 0;
  1800  151A  01BB               	clrf	sprintf@flag^(0+128)
  1801  151B  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1802  151C                     l3250:	
  1803                           
  1804                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 614:   if(i
      +                          sdigit((unsigned)*f)) {
  1805  151C  0828               	movf	sprintf@f^(0+128),w
  1806  151D  0084               	movwf	4
  1807  151E  160A  158A  200A  160A  118A  	fcall	stringdir
  1808  1523  160A  158A  214D  160A  118A  	fcall	_isdigit
  1809  1528  1C03               	btfss	3,0
  1810  1529  2D2B               	goto	u5151
  1811  152A  2D2C               	goto	u5150
  1812  152B                     u5151:	
  1813  152B  2D6C               	goto	l3262
  1814  152C                     u5150:	
  1815  152C                     l3252:	
  1816                           
  1817                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 615:    wid
      +                          th = 0;
  1818  152C  1683               	bsf	3,5	;RP0=1, select bank1
  1819  152D  1303               	bcf	3,6	;RP1=0, select bank1
  1820  152E  01BD               	clrf	sprintf@width^(0+128)
  1821  152F  01BE               	clrf	(sprintf@width+1)^(0+128)
  1822  1530                     l3254:	
  1823                           
  1824                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 617:     wi
      +                          dth *= 10;
  1825  1530  300A               	movlw	10
  1826  1531  00F4               	movwf	___wmul@multiplier
  1827  1532  3000               	movlw	0
  1828  1533  00F5               	movwf	___wmul@multiplier+1
  1829  1534  1683               	bsf	3,5	;RP0=1, select bank1
  1830  1535  1303               	bcf	3,6	;RP1=0, select bank1
  1831  1536  083E               	movf	(sprintf@width+1)^(0+128),w
  1832  1537  00F7               	movwf	___wmul@multiplicand+1
  1833  1538  083D               	movf	sprintf@width^(0+128),w
  1834  1539  00F6               	movwf	___wmul@multiplicand
  1835  153A  160A  158A  21B0  160A  118A  	fcall	___wmul
  1836  153F  0875               	movf	?___wmul+1,w
  1837  1540  1683               	bsf	3,5	;RP0=1, select bank1
  1838  1541  1303               	bcf	3,6	;RP1=0, select bank1
  1839  1542  00BE               	movwf	(sprintf@width+1)^(0+128)
  1840  1543  0874               	movf	?___wmul,w
  1841  1544  00BD               	movwf	sprintf@width^(0+128)
  1842  1545                     l3256:	
  1843                           
  1844                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 618:       
      +                           width += *f++ - '0';
  1845  1545  0828               	movf	sprintf@f^(0+128),w
  1846  1546  0084               	movwf	4
  1847  1547  160A  158A  200A  160A  118A  	fcall	stringdir
  1848  154C  3ED0               	addlw	208
  1849  154D  00AD               	movwf	??_sprintf^(0+128)
  1850  154E  30FF               	movlw	255
  1851  154F  1803               	skipnc
  1852  1550  3000               	movlw	0
  1853  1551  00AE               	movwf	(??_sprintf^(0+128)+1)
  1854  1552  082D               	movf	??_sprintf^(0+128),w
  1855  1553  07BD               	addwf	sprintf@width^(0+128),f
  1856  1554  1803               	skipnc
  1857  1555  0ABE               	incf	(sprintf@width+1)^(0+128),f
  1858  1556  082E               	movf	(??_sprintf+1)^(0+128),w
  1859  1557  07BE               	addwf	(sprintf@width+1)^(0+128),f
  1860  1558                     l3258:	
  1861  1558  3001               	movlw	1
  1862  1559  00AD               	movwf	??_sprintf^(0+128)
  1863  155A  082D               	movf	??_sprintf^(0+128),w
  1864  155B  07A8               	addwf	sprintf@f^(0+128),f
  1865  155C                     l3260:	
  1866                           
  1867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 619:    } w
      +                          hile(isdigit((unsigned)*f));
  1868  155C  0828               	movf	sprintf@f^(0+128),w
  1869  155D  0084               	movwf	4
  1870  155E  160A  158A  200A  160A  118A  	fcall	stringdir
  1871  1563  160A  158A  214D  160A  118A  	fcall	_isdigit
  1872  1568  1803               	btfsc	3,0
  1873  1569  2D6B               	goto	u5161
  1874  156A  2D6C               	goto	u5160
  1875  156B                     u5161:	
  1876  156B  2D30               	goto	l3254
  1877  156C                     u5160:	
  1878  156C                     l3262:	
  1879                           
  1880                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 628:   if(*
      +                          f == '.') {
  1881  156C  1683               	bsf	3,5	;RP0=1, select bank1
  1882  156D  1303               	bcf	3,6	;RP1=0, select bank1
  1883  156E  0828               	movf	sprintf@f^(0+128),w
  1884  156F  0084               	movwf	4
  1885  1570  160A  158A  200A  160A  118A  	fcall	stringdir
  1886  1575  3A2E               	xorlw	46
  1887  1576  1D03               	skipz
  1888  1577  2D79               	goto	u5171
  1889  1578  2D7A               	goto	u5170
  1890  1579                     u5171:	
  1891  1579  2DBF               	goto	l3278
  1892  157A                     u5170:	
  1893  157A                     l3264:	
  1894                           
  1895                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 629:    fla
      +                          g |= 0x4000;
  1896  157A  173C               	bsf	(sprintf@flag^(0+128)+1),6
  1897  157B                     l3266:	
  1898                           
  1899                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 630:    f++
      +                          ;
  1900  157B  3001               	movlw	1
  1901  157C  00AD               	movwf	??_sprintf^(0+128)
  1902  157D  082D               	movf	??_sprintf^(0+128),w
  1903  157E  07A8               	addwf	sprintf@f^(0+128),f
  1904  157F                     l3268:	
  1905                           
  1906                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 644:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 645:     prec
      +                           = 0;
  1907  157F  01CA               	clrf	sprintf@prec^(0+128)
  1908  1580  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1909                           
  1910                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1911  1581  2DAE               	goto	l3276
  1912  1582                     l3270:	
  1913                           
  1914                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 647:      p
      +                          rec *= 10;
  1915  1582  300A               	movlw	10
  1916  1583  00F4               	movwf	___wmul@multiplier
  1917  1584  3000               	movlw	0
  1918  1585  00F5               	movwf	___wmul@multiplier+1
  1919  1586  1683               	bsf	3,5	;RP0=1, select bank1
  1920  1587  1303               	bcf	3,6	;RP1=0, select bank1
  1921  1588  084B               	movf	(sprintf@prec+1)^(0+128),w
  1922  1589  00F7               	movwf	___wmul@multiplicand+1
  1923  158A  084A               	movf	sprintf@prec^(0+128),w
  1924  158B  00F6               	movwf	___wmul@multiplicand
  1925  158C  160A  158A  21B0  160A  118A  	fcall	___wmul
  1926  1591  0875               	movf	?___wmul+1,w
  1927  1592  1683               	bsf	3,5	;RP0=1, select bank1
  1928  1593  1303               	bcf	3,6	;RP1=0, select bank1
  1929  1594  00CB               	movwf	(sprintf@prec+1)^(0+128)
  1930  1595  0874               	movf	?___wmul,w
  1931  1596  00CA               	movwf	sprintf@prec^(0+128)
  1932  1597                     l3272:	
  1933                           
  1934                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 648:       
      +                            prec += *f++ - '0';
  1935  1597  0828               	movf	sprintf@f^(0+128),w
  1936  1598  0084               	movwf	4
  1937  1599  160A  158A  200A  160A  118A  	fcall	stringdir
  1938  159E  3ED0               	addlw	208
  1939  159F  00AD               	movwf	??_sprintf^(0+128)
  1940  15A0  30FF               	movlw	255
  1941  15A1  1803               	skipnc
  1942  15A2  3000               	movlw	0
  1943  15A3  00AE               	movwf	(??_sprintf^(0+128)+1)
  1944  15A4  082D               	movf	??_sprintf^(0+128),w
  1945  15A5  07CA               	addwf	sprintf@prec^(0+128),f
  1946  15A6  1803               	skipnc
  1947  15A7  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  1948  15A8  082E               	movf	(??_sprintf+1)^(0+128),w
  1949  15A9  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  1950  15AA                     l3274:	
  1951  15AA  3001               	movlw	1
  1952  15AB  00AD               	movwf	??_sprintf^(0+128)
  1953  15AC  082D               	movf	??_sprintf^(0+128),w
  1954  15AD  07A8               	addwf	sprintf@f^(0+128),f
  1955  15AE                     l3276:	
  1956                           
  1957                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 646:     wh
      +                          ile(isdigit((unsigned)*f)) {
  1958  15AE  0828               	movf	sprintf@f^(0+128),w
  1959  15AF  0084               	movwf	4
  1960  15B0  160A  158A  200A  160A  118A  	fcall	stringdir
  1961  15B5  160A  158A  214D  160A  118A  	fcall	_isdigit
  1962  15BA  1803               	btfsc	3,0
  1963  15BB  2DBD               	goto	u5181
  1964  15BC  2DBE               	goto	u5180
  1965  15BD                     u5181:	
  1966  15BD  2D82               	goto	l3270
  1967  15BE                     u5180:	
  1968  15BE  2DC5               	goto	l3284
  1969  15BF                     l3278:	
  1970                           
  1971                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 652:    pre
      +                          c = 0;
  1972  15BF  01CA               	clrf	sprintf@prec^(0+128)
  1973  15C0  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1974  15C1                     l3280:	
  1975                           
  1976                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 654:    fla
      +                          g |= 0x1000;
  1977  15C1  163C               	bsf	(sprintf@flag^(0+128)+1),4
  1978  15C2  2DC5               	goto	l3284
  1979  15C3                     l308:	
  1980                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 688:   case
      +                           'f':
  1981                           
  1982                           
  1983                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 689:    fla
      +                          g |= 0x400;
  1984  15C3  153C               	bsf	(sprintf@flag^(0+128)+1),2
  1985                           
  1986                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 690:    bre
      +                          ak;
  1987  15C4  2DE1               	goto	l3286
  1988  15C5                     l3284:	
  1989  15C5  3001               	movlw	1
  1990  15C6  1683               	bsf	3,5	;RP0=1, select bank1
  1991  15C7  1303               	bcf	3,6	;RP1=0, select bank1
  1992  15C8  07A8               	addwf	sprintf@f^(0+128),f
  1993  15C9  30FF               	movlw	-1
  1994  15CA  0728               	addwf	sprintf@f^(0+128),w
  1995  15CB  0084               	movwf	4
  1996  15CC  160A  158A  200A  160A  118A  	fcall	stringdir
  1997  15D1  00CC               	movwf	sprintf@c^(0+128)
  1998  15D2  00AD               	movwf	??_sprintf^(0+128)
  1999  15D3  01AE               	clrf	(??_sprintf^(0+128)+1)
  2000                           
  2001                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2002                           ; Switch size 1, requested type "simple"
  2003                           ; Number of cases is 1, Range of values is 0 to 0
  2004                           ; switch strategies available:
  2005                           ; Name         Instructions Cycles
  2006                           ; simple_byte            4     3 (average)
  2007                           ; direct_byte           11     8 (fixed)
  2008                           ; jumptable            260     6 (fixed)
  2009                           ;	Chosen strategy is simple_byte
  2010  15D4  082E               	movf	(??_sprintf+1)^(0+128),w
  2011  15D5  3A00               	xorlw	0	; case 0
  2012  15D6  1903               	skipnz
  2013  15D7  2DD9               	goto	l3622
  2014  15D8  2D03               	goto	L1
  2015  15D9                     l3622:	
  2016                           
  2017                           ; Switch size 1, requested type "simple"
  2018                           ; Number of cases is 2, Range of values is 0 to 102
  2019                           ; switch strategies available:
  2020                           ; Name         Instructions Cycles
  2021                           ; simple_byte            7     4 (average)
  2022                           ; jumptable            260     6 (fixed)
  2023                           ;	Chosen strategy is simple_byte
  2024  15D9  082D               	movf	??_sprintf^(0+128),w
  2025  15DA  3A00               	xorlw	0	; case 0
  2026  15DB  1903               	skipnz
  2027  15DC  2FFD               	goto	L3
  2028  15DD  3A66               	xorlw	102	; case 102
  2029  15DE  1903               	skipnz
  2030  15DF  2DC3               	goto	l308
  2031  15E0  2D03               	goto	L1
  2032  15E1                     l3286:	
  2033                           
  2034                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 851:   if(f
      +                          lag & (0x700)) {
  2035  15E1  3000               	movlw	0
  2036  15E2  053B               	andwf	sprintf@flag^(0+128),w
  2037  15E3  00AD               	movwf	??_sprintf^(0+128)
  2038  15E4  3007               	movlw	7
  2039  15E5  053C               	andwf	(sprintf@flag+1)^(0+128),w
  2040  15E6  00AE               	movwf	(??_sprintf+1)^(0+128)
  2041  15E7  082D               	movf	??_sprintf^(0+128),w
  2042  15E8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2043  15E9  1903               	btfsc	3,2
  2044  15EA  2DEC               	goto	u5191
  2045  15EB  2DEF               	goto	u5190
  2046  15EC                     u5191:	
  2047  15EC  120A  118A  2F15   	goto	l3444
  2048  15EF                     u5190:	
  2049  15EF                     l3288:	
  2050                           
  2051                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 853:    if(
      +                          flag & 0x1000)
  2052  15EF  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  2053  15F0  2DF2               	goto	u5201
  2054  15F1  2DF3               	goto	u5200
  2055  15F2                     u5201:	
  2056  15F2  2DF7               	goto	l3292
  2057  15F3                     u5200:	
  2058  15F3                     l3290:	
  2059                           
  2060                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 855:     pr
      +                          ec = 6;
  2061  15F3  3006               	movlw	6
  2062  15F4  00CA               	movwf	sprintf@prec^(0+128)
  2063  15F5  3000               	movlw	0
  2064  15F6  00CB               	movwf	(sprintf@prec^(0+128)+1)
  2065  15F7                     l3292:	
  2066                           
  2067                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 856:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2068  15F7  0836               	movf	sprintf@ap^(0+128),w
  2069  15F8  0084               	movwf	4
  2070  15F9  1383               	bcf	3,7	;select IRP bank0
  2071  15FA  0800               	movf	0,w
  2072  15FB  00C5               	movwf	sprintf@fval^(0+128)
  2073  15FC  0A84               	incf	4,f
  2074  15FD  0800               	movf	0,w
  2075  15FE  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2076  15FF  0A84               	incf	4,f
  2077  1600  0800               	movf	0,w
  2078  1601  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2079  1602  0A84               	incf	4,f
  2080  1603  0800               	movf	0,w
  2081  1604  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2082  1605                     l3294:	
  2083  1605  3004               	movlw	4
  2084  1606  00AD               	movwf	??_sprintf^(0+128)
  2085  1607  082D               	movf	??_sprintf^(0+128),w
  2086  1608  07B6               	addwf	sprintf@ap^(0+128),f
  2087  1609                     l3296:	
  2088                           
  2089                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 857:    if(
      +                          fval < 0.0) {
  2090  1609  0848               	movf	(sprintf@fval+3)^(0+128),w
  2091  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2092  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2093  160C  00A3               	movwf	___flge@ff1+3
  2094  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2095  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2096  160F  0847               	movf	(sprintf@fval+2)^(0+128),w
  2097  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2098  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2099  1612  00A2               	movwf	___flge@ff1+2
  2100  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2101  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2102  1615  0846               	movf	(sprintf@fval+1)^(0+128),w
  2103  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2104  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2105  1618  00A1               	movwf	___flge@ff1+1
  2106  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2107  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2108  161B  0845               	movf	sprintf@fval^(0+128),w
  2109  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2110  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2111  161E  00A0               	movwf	___flge@ff1
  2112  161F  3000               	movlw	0
  2113  1620  00A7               	movwf	___flge@ff2+3
  2114  1621  3000               	movlw	0
  2115  1622  00A6               	movwf	___flge@ff2+2
  2116  1623  3000               	movlw	0
  2117  1624  00A5               	movwf	___flge@ff2+1
  2118  1625  3000               	movlw	0
  2119  1626  00A4               	movwf	___flge@ff2
  2120  1627  160A  158A  25A0  160A  118A  	fcall	___flge
  2121  162C  1803               	btfsc	3,0
  2122  162D  2E2F               	goto	u5211
  2123  162E  2E30               	goto	u5210
  2124  162F                     u5211:	
  2125  162F  2E4D               	goto	l3302
  2126  1630                     u5210:	
  2127  1630                     l3298:	
  2128                           
  2129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 858:     fv
      +                          al = -fval;
  2130  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2131  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2132  1632  0848               	movf	(sprintf@fval+3)^(0+128),w
  2133  1633  00F7               	movwf	___flneg@f1+3
  2134  1634  0847               	movf	(sprintf@fval+2)^(0+128),w
  2135  1635  00F6               	movwf	___flneg@f1+2
  2136  1636  0846               	movf	(sprintf@fval+1)^(0+128),w
  2137  1637  00F5               	movwf	___flneg@f1+1
  2138  1638  0845               	movf	sprintf@fval^(0+128),w
  2139  1639  00F4               	movwf	___flneg@f1
  2140  163A  160A  158A  2142  160A  118A  	fcall	___flneg
  2141  163F  0877               	movf	?___flneg+3,w
  2142  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2143  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2144  1642  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2145  1643  0876               	movf	?___flneg+2,w
  2146  1644  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2147  1645  0875               	movf	?___flneg+1,w
  2148  1646  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2149  1647  0874               	movf	?___flneg,w
  2150  1648  00C5               	movwf	sprintf@fval^(0+128)
  2151  1649                     l3300:	
  2152                           
  2153                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 859:     fl
      +                          ag |= 0x03;
  2154  1649  3003               	movlw	3
  2155  164A  04BB               	iorwf	sprintf@flag^(0+128),f
  2156  164B  3000               	movlw	0
  2157  164C  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2158  164D                     l3302:	
  2159                           
  2160                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 861:    eex
      +                          p = 0;
  2161  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2162  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2163  164F  01C3               	clrf	sprintf@eexp^(0+128)
  2164  1650  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2165  1651                     l3304:	
  2166                           
  2167                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 862:    if(
      +                           fval!=0) {
  2168  1651  0848               	movf	(sprintf@fval+3)^(0+128),w
  2169  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2170  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2171  1654  00A3               	movwf	___fleq@ff1+3
  2172  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2173  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2174  1657  0847               	movf	(sprintf@fval+2)^(0+128),w
  2175  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2176  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2177  165A  00A2               	movwf	___fleq@ff1+2
  2178  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2179  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2180  165D  0846               	movf	(sprintf@fval+1)^(0+128),w
  2181  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2182  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2183  1660  00A1               	movwf	___fleq@ff1+1
  2184  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2185  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2186  1663  0845               	movf	sprintf@fval^(0+128),w
  2187  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2188  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2189  1666  00A0               	movwf	___fleq@ff1
  2190  1667  3000               	movlw	0
  2191  1668  00A7               	movwf	___fleq@ff2+3
  2192  1669  3000               	movlw	0
  2193  166A  00A6               	movwf	___fleq@ff2+2
  2194  166B  3000               	movlw	0
  2195  166C  00A5               	movwf	___fleq@ff2+1
  2196  166D  3000               	movlw	0
  2197  166E  00A4               	movwf	___fleq@ff2
  2198  166F  160A  158A  22B1  160A  118A  	fcall	___fleq
  2199  1674  1803               	btfsc	3,0
  2200  1675  2E77               	goto	u5221
  2201  1676  2E78               	goto	u5220
  2202  1677                     u5221:	
  2203  1677  2F94               	goto	l3330
  2204  1678                     u5220:	
  2205  1678                     l3306:	
  2206                           
  2207                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 863:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2208  1678  1003               	clrc
  2209  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2210  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2211  167B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2212  167C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2213  167D  3E82               	addlw	130
  2214  167E  00C3               	movwf	sprintf@eexp^(0+128)
  2215  167F  30FF               	movlw	255
  2216  1680  1803               	skipnc
  2217  1681  3000               	movlw	0
  2218  1682  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2219  1683                     l3308:	
  2220                           
  2221                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 864:     ee
      +                          xp--;
  2222  1683  30FF               	movlw	255
  2223  1684  07C3               	addwf	sprintf@eexp^(0+128),f
  2224  1685  1803               	skipnc
  2225  1686  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2226  1687  30FF               	movlw	255
  2227  1688  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2228  1689                     l3310:	
  2229                           
  2230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 865:     ee
      +                          xp *= 3;
  2231  1689  3003               	movlw	3
  2232  168A  00F4               	movwf	___wmul@multiplier
  2233  168B  3000               	movlw	0
  2234  168C  00F5               	movwf	___wmul@multiplier+1
  2235  168D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2236  168E  00F7               	movwf	___wmul@multiplicand+1
  2237  168F  0843               	movf	sprintf@eexp^(0+128),w
  2238  1690  00F6               	movwf	___wmul@multiplicand
  2239  1691  160A  158A  21B0  160A  118A  	fcall	___wmul
  2240  1696  0875               	movf	?___wmul+1,w
  2241  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2242  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2243  1699  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2244  169A  0874               	movf	?___wmul,w
  2245  169B  00C3               	movwf	sprintf@eexp^(0+128)
  2246  169C                     l3312:	
  2247                           
  2248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 866:     ee
      +                          xp /= 10;
  2249  169C  300A               	movlw	10
  2250  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2251  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2252  169F  00A0               	movwf	___awdiv@divisor
  2253  16A0  3000               	movlw	0
  2254  16A1  00A1               	movwf	___awdiv@divisor+1
  2255  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2256  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2257  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2258  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2259  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2260  16A7  00A3               	movwf	___awdiv@dividend+1
  2261  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2262  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2263  16AA  0843               	movf	sprintf@eexp^(0+128),w
  2264  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2265  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2266  16AD  00A2               	movwf	___awdiv@dividend
  2267  16AE  160A  158A  24BB  160A  118A  	fcall	___awdiv
  2268  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2269  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2270  16B5  0821               	movf	?___awdiv+1,w
  2271  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2272  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2273  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2274  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2275  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2276  16BB  0820               	movf	?___awdiv,w
  2277  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2278  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2279  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  2280  16BF                     l3314:	
  2281                           
  2282                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (eexp < 0)
  2283  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2284  16C0  2EC2               	goto	u5231
  2285  16C1  2EC3               	goto	u5230
  2286  16C2                     u5231:	
  2287  16C2  2EC9               	goto	l3318
  2288  16C3                     u5230:	
  2289  16C3                     l3316:	
  2290                           
  2291                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2292  16C3  30FF               	movlw	255
  2293  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  2294  16C5  1803               	skipnc
  2295  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2296  16C7  30FF               	movlw	255
  2297  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2298  16C9                     l3318:	
  2299                           
  2300                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 872:     tm
      +                          pval.integ = scale(-eexp);
  2301  16C9  0343               	decf	sprintf@eexp^(0+128),w
  2302  16CA  3AFF               	xorlw	255
  2303  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2304  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2305  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2306  16D2  0847               	movf	?_scale+3,w
  2307  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2308  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2309  16D5  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2310  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2311  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2312  16D8  0846               	movf	?_scale+2,w
  2313  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2314  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2315  16DB  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2316  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2317  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2318  16DE  0845               	movf	?_scale+1,w
  2319  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2320  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2321  16E1  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2322  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2323  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2324  16E4  0844               	movf	?_scale,w
  2325  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2326  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2327  16E7  00BF               	movwf	sprintf@tmpval^(0+128)
  2328  16E8                     l3320:	
  2329                           
  2330                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 873:     tm
      +                          pval.integ *= fval;
  2331  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2332  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2333  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2334  16EB  00AD               	movwf	___flmul@b+3
  2335  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2336  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2337  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  2338  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2339  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2340  16F1  00AC               	movwf	___flmul@b+2
  2341  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2342  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2343  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  2344  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2345  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2346  16F7  00AB               	movwf	___flmul@b+1
  2347  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2348  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2349  16FA  0845               	movf	sprintf@fval^(0+128),w
  2350  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2351  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2352  16FD  00AA               	movwf	___flmul@b
  2353  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2354  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2355  1700  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2356  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2357  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2358  1703  00B1               	movwf	___flmul@a+3
  2359  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2360  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2361  1706  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2362  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2363  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2364  1709  00B0               	movwf	___flmul@a+2
  2365  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2366  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2367  170C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2368  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2369  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2370  170F  00AF               	movwf	___flmul@a+1
  2371  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2372  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2373  1712  083F               	movf	sprintf@tmpval^(0+128),w
  2374  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2375  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2376  1715  00AE               	movwf	___flmul@a
  2377  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2378  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2379  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2380  171D  082D               	movf	?___flmul+3,w
  2381  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2382  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2383  1720  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2384  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2385  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2386  1723  082C               	movf	?___flmul+2,w
  2387  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2388  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2389  1726  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2390  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2391  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2392  1729  082B               	movf	?___flmul+1,w
  2393  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2394  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2395  172C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2396  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2397  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2398  172F  082A               	movf	?___flmul,w
  2399  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2400  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2401  1732  00BF               	movwf	sprintf@tmpval^(0+128)
  2402  1733                     l3322:	
  2403                           
  2404                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 874:     if
      +                          (tmpval.integ < 1.0)
  2405  1733  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2406  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2407  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2408  1736  00A3               	movwf	___flge@ff1+3
  2409  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2410  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2411  1739  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2412  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2413  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2414  173C  00A2               	movwf	___flge@ff1+2
  2415  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2416  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2417  173F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2418  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2419  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2420  1742  00A1               	movwf	___flge@ff1+1
  2421  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2422  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2423  1745  083F               	movf	sprintf@tmpval^(0+128),w
  2424  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2425  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2426  1748  00A0               	movwf	___flge@ff1
  2427  1749  303F               	movlw	63
  2428  174A  00A7               	movwf	___flge@ff2+3
  2429  174B  3080               	movlw	128
  2430  174C  00A6               	movwf	___flge@ff2+2
  2431  174D  3000               	movlw	0
  2432  174E  00A5               	movwf	___flge@ff2+1
  2433  174F  3000               	movlw	0
  2434  1750  00A4               	movwf	___flge@ff2
  2435  1751  160A  158A  25A0  160A  118A  	fcall	___flge
  2436  1756  1803               	btfsc	3,0
  2437  1757  2F59               	goto	u5241
  2438  1758  2F5A               	goto	u5240
  2439  1759                     u5241:	
  2440  1759  2F63               	goto	l3326
  2441  175A                     u5240:	
  2442  175A                     l3324:	
  2443                           
  2444                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 875:      e
      +                          exp--;
  2445  175A  30FF               	movlw	255
  2446  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2447  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2448  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2449  175E  1803               	skipnc
  2450  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2451  1760  30FF               	movlw	255
  2452  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2453  1762  2F94               	goto	l3330
  2454  1763                     l3326:	
  2455  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2456  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2457  1765  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2458  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2459  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2460  1768  00A3               	movwf	___flge@ff1+3
  2461  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2462  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2463  176B  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2464  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2465  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2466  176E  00A2               	movwf	___flge@ff1+2
  2467  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2468  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2469  1771  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2470  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2471  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2472  1774  00A1               	movwf	___flge@ff1+1
  2473  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2474  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2475  1777  083F               	movf	sprintf@tmpval^(0+128),w
  2476  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2477  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2478  177A  00A0               	movwf	___flge@ff1
  2479  177B  3041               	movlw	65
  2480  177C  00A7               	movwf	___flge@ff2+3
  2481  177D  3020               	movlw	32
  2482  177E  00A6               	movwf	___flge@ff2+2
  2483  177F  3000               	movlw	0
  2484  1780  00A5               	movwf	___flge@ff2+1
  2485  1781  3000               	movlw	0
  2486  1782  00A4               	movwf	___flge@ff2
  2487  1783  160A  158A  25A0  160A  118A  	fcall	___flge
  2488  1788  1C03               	btfss	3,0
  2489  1789  2F8B               	goto	u5251
  2490  178A  2F8C               	goto	u5250
  2491  178B                     u5251:	
  2492  178B  2F94               	goto	l3330
  2493  178C                     u5250:	
  2494  178C                     l3328:	
  2495                           
  2496                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 877:      e
      +                          exp++;
  2497  178C  3001               	movlw	1
  2498  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2499  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2500  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2501  1790  1803               	skipnc
  2502  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2503  1792  3000               	movlw	0
  2504  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2505  1794                     l3330:	
  2506                           
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1138:      
      +                          if(prec <= 12)
  2508  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2509  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2510  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2511  1797  3A80               	xorlw	128
  2512  1798  00FF               	movwf	btemp+1
  2513  1799  3080               	movlw	128
  2514  179A  027F               	subwf	btemp+1,w
  2515  179B  1D03               	skipz
  2516  179C  2F9F               	goto	u5265
  2517  179D  300D               	movlw	13
  2518  179E  024A               	subwf	sprintf@prec^(0+128),w
  2519  179F                     u5265:	
  2520  179F  1803               	skipnc
  2521  17A0  2FA2               	goto	u5261
  2522  17A1  2FA3               	goto	u5260
  2523  17A2                     u5261:	
  2524  17A2  2FEA               	goto	l3334
  2525  17A3                     u5260:	
  2526  17A3                     l3332:	
  2527                           
  2528                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1139:      
      +                           fval += fround((unsigned int)prec);
  2529  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2530  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2531  17A5  084A               	movf	sprintf@prec^(0+128),w
  2532  17A6  120A  118A  204E  160A  118A  	fcall	_fround
  2533  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2534  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2535  17AD  0847               	movf	?_fround+3,w
  2536  17AE  00DB               	movwf	___fladd@b+3
  2537  17AF  0846               	movf	?_fround+2,w
  2538  17B0  00DA               	movwf	___fladd@b+2
  2539  17B1  0845               	movf	?_fround+1,w
  2540  17B2  00D9               	movwf	___fladd@b+1
  2541  17B3  0844               	movf	?_fround,w
  2542  17B4  00D8               	movwf	___fladd@b
  2543  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2544  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2545  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2546  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2547  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2548  17BA  00DF               	movwf	___fladd@a+3
  2549  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2550  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2551  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2552  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2553  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2554  17C0  00DE               	movwf	___fladd@a+2
  2555  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2556  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2557  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2558  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2559  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2560  17C6  00DD               	movwf	___fladd@a+1
  2561  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2562  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2563  17C9  0845               	movf	sprintf@fval^(0+128),w
  2564  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2565  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2566  17CC  00DC               	movwf	___fladd@a
  2567  17CD  160A  118A  2274  160A  118A  	fcall	___fladd
  2568  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2569  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2570  17D4  085B               	movf	?___fladd+3,w
  2571  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2572  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2573  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2574  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2575  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2576  17DA  085A               	movf	?___fladd+2,w
  2577  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2578  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2579  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2580  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2581  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2582  17E0  0859               	movf	?___fladd+1,w
  2583  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2584  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2585  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2586  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2587  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2588  17E6  0858               	movf	?___fladd,w
  2589  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2590  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2591  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2592  17EA                     l3334:	
  2593                           
  2594                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1142:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2595  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2596  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2597  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2598  17ED  3A80               	xorlw	128
  2599  17EE  00FF               	movwf	btemp+1
  2600  17EF  3080               	movlw	128
  2601  17F0  027F               	subwf	btemp+1,w
  2602  17F1  1D03               	skipz
  2603  17F2  2FF5               	goto	u5275
  2604  17F3  300A               	movlw	10
  2605  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2606  17F5                     u5275:	
  2607  17F5  1803               	skipnc
  2608  17F6  2FFA               	goto	u5271
  2609  17F7  120A  118A  2A5B   	goto	u5270
  2610  17FA                     u5271:	
  2611  17FA  120A  118A  2ABA   	goto	l3342
  2612  17FD                     L3:	
  2613  17FD                     L2:	
  2614  17FD  120A  118A  2FEE   	ljmp	l3492
  2615                           
  2616                           	psect	text3
  2617  0C9D                     __ptext3:	
  2618 ;; *************** function _scale *****************
  2619 ;; Defined at:
  2620 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;  scl             1    wreg     char 
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;  scl             1   54[BANK0 ] char 
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  4   36[BANK0 ] char 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2634 ;;      Params:         0       4       0       0       0
  2635 ;;      Locals:         0       5       0       0       0
  2636 ;;      Temps:          0      10       0       0       0
  2637 ;;      Totals:         0      19       0       0       0
  2638 ;;Total ram usage:       19 bytes
  2639 ;; Hardware stack levels used:    1
  2640 ;; Hardware stack levels required when called:    3
  2641 ;; This function calls:
  2642 ;;		___awdiv
  2643 ;;		___awmod
  2644 ;;		___flmul
  2645 ;; This function is called by:
  2646 ;;		_sprintf
  2647 ;; This function uses a non-reentrant model
  2648 ;;
  2649                           
  2650                           
  2651                           ;psect for function _scale
  2652  0C9D                     _scale:	
  2653                           
  2654                           ;incstack = 0
  2655                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2656                           ;scale@scl stored from wreg
  2657  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2658  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2659  0C9F  00D6               	movwf	scale@scl
  2660  0CA0                     l2804:	
  2661                           
  2662                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  2663  0CA0  1FD6               	btfss	scale@scl,7
  2664  0CA1  2CA3               	goto	u4091
  2665  0CA2  2CA4               	goto	u4090
  2666  0CA3                     u4091:	
  2667  0CA3  2E53               	goto	l2826
  2668  0CA4                     u4090:	
  2669  0CA4                     l2806:	
  2670                           
  2671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  2672  0CA4  09D6               	comf	scale@scl,f
  2673  0CA5  0AD6               	incf	scale@scl,f
  2674  0CA6                     l2808:	
  2675                           
  2676                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  2677  0CA6  0856               	movf	scale@scl,w
  2678  0CA7  3A80               	xorlw	128
  2679  0CA8  3E12               	addlw	-238
  2680  0CA9  1C03               	skipc
  2681  0CAA  2CAC               	goto	u4101
  2682  0CAB  2CAD               	goto	u4100
  2683  0CAC                     u4101:	
  2684  0CAC  2D97               	goto	l2816
  2685  0CAD                     u4100:	
  2686  0CAD                     l2810:	
  2687                           
  2688                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2689  0CAD  300A               	movlw	10
  2690  0CAE  00A0               	movwf	___awdiv@divisor
  2691  0CAF  3000               	movlw	0
  2692  0CB0  00A1               	movwf	___awdiv@divisor+1
  2693  0CB1  0856               	movf	scale@scl,w
  2694  0CB2  00F6               	movwf	___awmod@dividend
  2695  0CB3  01F7               	clrf	___awmod@dividend+1
  2696  0CB4  1BF6               	btfsc	___awmod@dividend,7
  2697  0CB5  03F7               	decf	___awmod@dividend+1,f
  2698  0CB6  3064               	movlw	100
  2699  0CB7  00F4               	movwf	___awmod@divisor
  2700  0CB8  3000               	movlw	0
  2701  0CB9  00F5               	movwf	___awmod@divisor+1
  2702  0CBA  160A  158A  23FA  120A  158A  	fcall	___awmod
  2703  0CBF  0875               	movf	?___awmod+1,w
  2704  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2705  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2706  0CC2  00A3               	movwf	___awdiv@dividend+1
  2707  0CC3  0874               	movf	?___awmod,w
  2708  0CC4  00A2               	movwf	___awdiv@dividend
  2709  0CC5  160A  158A  24BB  120A  158A  	fcall	___awdiv
  2710  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0CCC  0820               	movf	?___awdiv,w
  2713  0CCD  00C8               	movwf	??_scale
  2714  0CCE  3001               	movlw	1
  2715  0CCF                     u4115:	
  2716  0CCF  1003               	clrc
  2717  0CD0  0DC8               	rlf	??_scale,f
  2718  0CD1  3EFF               	addlw	-1
  2719  0CD2  1D03               	skipz
  2720  0CD3  2CCF               	goto	u4115
  2721  0CD4  1003               	clrc
  2722  0CD5  0D48               	rlf	??_scale,w
  2723  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2724  0CD7  0084               	movwf	4
  2725  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  2726  0CDD  00C9               	movwf	??_scale+1
  2727  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  2728  0CE3  00CA               	movwf	??_scale+2
  2729  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  2730  0CE9  00CB               	movwf	??_scale+3
  2731  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  2732  0CEF  00CC               	movwf	??_scale+4
  2733  0CF0  084C               	movf	??_scale+4,w
  2734  0CF1  00AD               	movwf	___flmul@b+3
  2735  0CF2  084B               	movf	??_scale+3,w
  2736  0CF3  00AC               	movwf	___flmul@b+2
  2737  0CF4  084A               	movf	??_scale+2,w
  2738  0CF5  00AB               	movwf	___flmul@b+1
  2739  0CF6  0849               	movf	??_scale+1,w
  2740  0CF7  00AA               	movwf	___flmul@b
  2741  0CF8  3064               	movlw	100
  2742  0CF9  00A0               	movwf	___awdiv@divisor
  2743  0CFA  3000               	movlw	0
  2744  0CFB  00A1               	movwf	___awdiv@divisor+1
  2745  0CFC  0856               	movf	scale@scl,w
  2746  0CFD  00A2               	movwf	___awdiv@dividend
  2747  0CFE  01A3               	clrf	___awdiv@dividend+1
  2748  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2749  0D00  03A3               	decf	___awdiv@dividend+1,f
  2750  0D01  160A  158A  24BB  120A  158A  	fcall	___awdiv
  2751  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2753  0D08  0820               	movf	?___awdiv,w
  2754  0D09  00CD               	movwf	??_scale+5
  2755  0D0A  3001               	movlw	1
  2756  0D0B                     u4125:	
  2757  0D0B  1003               	clrc
  2758  0D0C  0DCD               	rlf	??_scale+5,f
  2759  0D0D  3EFF               	addlw	-1
  2760  0D0E  1D03               	skipz
  2761  0D0F  2D0B               	goto	u4125
  2762  0D10  1003               	clrc
  2763  0D11  0D4D               	rlf	??_scale+5,w
  2764  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2765  0D13  0084               	movwf	4
  2766  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  2767  0D19  00CE               	movwf	??_scale+6
  2768  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  2769  0D1F  00CF               	movwf	??_scale+7
  2770  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  2771  0D25  00D0               	movwf	??_scale+8
  2772  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  2773  0D2B  00D1               	movwf	??_scale+9
  2774  0D2C  0851               	movf	??_scale+9,w
  2775  0D2D  00B1               	movwf	___flmul@a+3
  2776  0D2E  0850               	movf	??_scale+8,w
  2777  0D2F  00B0               	movwf	___flmul@a+2
  2778  0D30  084F               	movf	??_scale+7,w
  2779  0D31  00AF               	movwf	___flmul@a+1
  2780  0D32  084E               	movf	??_scale+6,w
  2781  0D33  00AE               	movwf	___flmul@a
  2782  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2783  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2785  0D3B  082D               	movf	?___flmul+3,w
  2786  0D3C  00D5               	movwf	_scale$1210+3
  2787  0D3D  082C               	movf	?___flmul+2,w
  2788  0D3E  00D4               	movwf	_scale$1210+2
  2789  0D3F  082B               	movf	?___flmul+1,w
  2790  0D40  00D3               	movwf	_scale$1210+1
  2791  0D41  082A               	movf	?___flmul,w
  2792  0D42  00D2               	movwf	_scale$1210
  2793                           
  2794                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2795  0D43  300A               	movlw	10
  2796  0D44  00F4               	movwf	___awmod@divisor
  2797  0D45  3000               	movlw	0
  2798  0D46  00F5               	movwf	___awmod@divisor+1
  2799  0D47  0856               	movf	scale@scl,w
  2800  0D48  00F6               	movwf	___awmod@dividend
  2801  0D49  01F7               	clrf	___awmod@dividend+1
  2802  0D4A  1BF6               	btfsc	___awmod@dividend,7
  2803  0D4B  03F7               	decf	___awmod@dividend+1,f
  2804  0D4C  160A  158A  23FA  120A  158A  	fcall	___awmod
  2805  0D51  0874               	movf	?___awmod,w
  2806  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2807  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2808  0D54  00C8               	movwf	??_scale
  2809  0D55  3001               	movlw	1
  2810  0D56                     u4135:	
  2811  0D56  1003               	clrc
  2812  0D57  0DC8               	rlf	??_scale,f
  2813  0D58  3EFF               	addlw	-1
  2814  0D59  1D03               	skipz
  2815  0D5A  2D56               	goto	u4135
  2816  0D5B  1003               	clrc
  2817  0D5C  0D48               	rlf	??_scale,w
  2818  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2819  0D5E  0084               	movwf	4
  2820  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  2821  0D64  00C9               	movwf	??_scale+1
  2822  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  2823  0D6A  00CA               	movwf	??_scale+2
  2824  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  2825  0D70  00CB               	movwf	??_scale+3
  2826  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  2827  0D76  00CC               	movwf	??_scale+4
  2828  0D77  084C               	movf	??_scale+4,w
  2829  0D78  00AD               	movwf	___flmul@b+3
  2830  0D79  084B               	movf	??_scale+3,w
  2831  0D7A  00AC               	movwf	___flmul@b+2
  2832  0D7B  084A               	movf	??_scale+2,w
  2833  0D7C  00AB               	movwf	___flmul@b+1
  2834  0D7D  0849               	movf	??_scale+1,w
  2835  0D7E  00AA               	movwf	___flmul@b
  2836  0D7F  0855               	movf	_scale$1210+3,w
  2837  0D80  00B1               	movwf	___flmul@a+3
  2838  0D81  0854               	movf	_scale$1210+2,w
  2839  0D82  00B0               	movwf	___flmul@a+2
  2840  0D83  0853               	movf	_scale$1210+1,w
  2841  0D84  00AF               	movwf	___flmul@a+1
  2842  0D85  0852               	movf	_scale$1210,w
  2843  0D86  00AE               	movwf	___flmul@a
  2844  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2845  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2846  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2847  0D8E  082D               	movf	?___flmul+3,w
  2848  0D8F  00C7               	movwf	?_scale+3
  2849  0D90  082C               	movf	?___flmul+2,w
  2850  0D91  00C6               	movwf	?_scale+2
  2851  0D92  082B               	movf	?___flmul+1,w
  2852  0D93  00C5               	movwf	?_scale+1
  2853  0D94  082A               	movf	?___flmul,w
  2854  0D95  00C4               	movwf	?_scale
  2855  0D96  2FFF               	goto	l286
  2856  0D97                     l2816:	
  2857  0D97  0856               	movf	scale@scl,w
  2858  0D98  3A80               	xorlw	128
  2859  0D99  3E75               	addlw	-139
  2860  0D9A  1C03               	skipc
  2861  0D9B  2D9D               	goto	u4141
  2862  0D9C  2D9E               	goto	u4140
  2863  0D9D                     u4141:	
  2864  0D9D  2E26               	goto	l2822
  2865  0D9E                     u4140:	
  2866  0D9E                     l2818:	
  2867                           
  2868                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2869  0D9E  300A               	movlw	10
  2870  0D9F  00F4               	movwf	___awmod@divisor
  2871  0DA0  3000               	movlw	0
  2872  0DA1  00F5               	movwf	___awmod@divisor+1
  2873  0DA2  0856               	movf	scale@scl,w
  2874  0DA3  00F6               	movwf	___awmod@dividend
  2875  0DA4  01F7               	clrf	___awmod@dividend+1
  2876  0DA5  1BF6               	btfsc	___awmod@dividend,7
  2877  0DA6  03F7               	decf	___awmod@dividend+1,f
  2878  0DA7  160A  158A  23FA  120A  158A  	fcall	___awmod
  2879  0DAC  0874               	movf	?___awmod,w
  2880  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2881  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2882  0DAF  00C8               	movwf	??_scale
  2883  0DB0  3001               	movlw	1
  2884  0DB1                     u4155:	
  2885  0DB1  1003               	clrc
  2886  0DB2  0DC8               	rlf	??_scale,f
  2887  0DB3  3EFF               	addlw	-1
  2888  0DB4  1D03               	skipz
  2889  0DB5  2DB1               	goto	u4155
  2890  0DB6  1003               	clrc
  2891  0DB7  0D48               	rlf	??_scale,w
  2892  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2893  0DB9  0084               	movwf	4
  2894  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  2895  0DBF  00C9               	movwf	??_scale+1
  2896  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  2897  0DC5  00CA               	movwf	??_scale+2
  2898  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  2899  0DCB  00CB               	movwf	??_scale+3
  2900  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  2901  0DD1  00CC               	movwf	??_scale+4
  2902  0DD2  084C               	movf	??_scale+4,w
  2903  0DD3  00AD               	movwf	___flmul@b+3
  2904  0DD4  084B               	movf	??_scale+3,w
  2905  0DD5  00AC               	movwf	___flmul@b+2
  2906  0DD6  084A               	movf	??_scale+2,w
  2907  0DD7  00AB               	movwf	___flmul@b+1
  2908  0DD8  0849               	movf	??_scale+1,w
  2909  0DD9  00AA               	movwf	___flmul@b
  2910  0DDA  300A               	movlw	10
  2911  0DDB  00A0               	movwf	___awdiv@divisor
  2912  0DDC  3000               	movlw	0
  2913  0DDD  00A1               	movwf	___awdiv@divisor+1
  2914  0DDE  0856               	movf	scale@scl,w
  2915  0DDF  00A2               	movwf	___awdiv@dividend
  2916  0DE0  01A3               	clrf	___awdiv@dividend+1
  2917  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2918  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2919  0DE3  160A  158A  24BB  120A  158A  	fcall	___awdiv
  2920  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0DEA  0820               	movf	?___awdiv,w
  2923  0DEB  00CD               	movwf	??_scale+5
  2924  0DEC  3001               	movlw	1
  2925  0DED                     u4165:	
  2926  0DED  1003               	clrc
  2927  0DEE  0DCD               	rlf	??_scale+5,f
  2928  0DEF  3EFF               	addlw	-1
  2929  0DF0  1D03               	skipz
  2930  0DF1  2DED               	goto	u4165
  2931  0DF2  1003               	clrc
  2932  0DF3  0D4D               	rlf	??_scale+5,w
  2933  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2934  0DF5  0084               	movwf	4
  2935  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  2936  0DFB  00CE               	movwf	??_scale+6
  2937  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  2938  0E01  00CF               	movwf	??_scale+7
  2939  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  2940  0E07  00D0               	movwf	??_scale+8
  2941  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  2942  0E0D  00D1               	movwf	??_scale+9
  2943  0E0E  0851               	movf	??_scale+9,w
  2944  0E0F  00B1               	movwf	___flmul@a+3
  2945  0E10  0850               	movf	??_scale+8,w
  2946  0E11  00B0               	movwf	___flmul@a+2
  2947  0E12  084F               	movf	??_scale+7,w
  2948  0E13  00AF               	movwf	___flmul@a+1
  2949  0E14  084E               	movf	??_scale+6,w
  2950  0E15  00AE               	movwf	___flmul@a
  2951  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2952  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0E1D  082D               	movf	?___flmul+3,w
  2955  0E1E  00C7               	movwf	?_scale+3
  2956  0E1F  082C               	movf	?___flmul+2,w
  2957  0E20  00C6               	movwf	?_scale+2
  2958  0E21  082B               	movf	?___flmul+1,w
  2959  0E22  00C5               	movwf	?_scale+1
  2960  0E23  082A               	movf	?___flmul,w
  2961  0E24  00C4               	movwf	?_scale
  2962  0E25  2FFF               	goto	l286
  2963  0E26                     l2822:	
  2964                           
  2965                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  2966  0E26  0856               	movf	scale@scl,w
  2967  0E27  00C8               	movwf	??_scale
  2968  0E28  3001               	movlw	1
  2969  0E29                     u4175:	
  2970  0E29  1003               	clrc
  2971  0E2A  0DC8               	rlf	??_scale,f
  2972  0E2B  3EFF               	addlw	-1
  2973  0E2C  1D03               	skipz
  2974  0E2D  2E29               	goto	u4175
  2975  0E2E  1003               	clrc
  2976  0E2F  0D48               	rlf	??_scale,w
  2977  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2978  0E31  0084               	movwf	4
  2979  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  2980  0E37  00C9               	movwf	??_scale+1
  2981  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  2982  0E3D  00CA               	movwf	??_scale+2
  2983  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  2984  0E43  00CB               	movwf	??_scale+3
  2985  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  2986  0E49  00CC               	movwf	??_scale+4
  2987  0E4A  084C               	movf	??_scale+4,w
  2988  0E4B  00C7               	movwf	?_scale+3
  2989  0E4C  084B               	movf	??_scale+3,w
  2990  0E4D  00C6               	movwf	?_scale+2
  2991  0E4E  084A               	movf	??_scale+2,w
  2992  0E4F  00C5               	movwf	?_scale+1
  2993  0E50  0849               	movf	??_scale+1,w
  2994  0E51  00C4               	movwf	?_scale
  2995  0E52  2FFF               	goto	l286
  2996  0E53                     l2826:	
  2997                           
  2998                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  2999  0E53  0856               	movf	scale@scl,w
  3000  0E54  3A80               	xorlw	128
  3001  0E55  3E12               	addlw	-238
  3002  0E56  1C03               	skipc
  3003  0E57  2E59               	goto	u4181
  3004  0E58  2E5A               	goto	u4180
  3005  0E59                     u4181:	
  3006  0E59  2F44               	goto	l2834
  3007  0E5A                     u4180:	
  3008  0E5A                     l2828:	
  3009                           
  3010                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3011  0E5A  300A               	movlw	10
  3012  0E5B  00A0               	movwf	___awdiv@divisor
  3013  0E5C  3000               	movlw	0
  3014  0E5D  00A1               	movwf	___awdiv@divisor+1
  3015  0E5E  0856               	movf	scale@scl,w
  3016  0E5F  00F6               	movwf	___awmod@dividend
  3017  0E60  01F7               	clrf	___awmod@dividend+1
  3018  0E61  1BF6               	btfsc	___awmod@dividend,7
  3019  0E62  03F7               	decf	___awmod@dividend+1,f
  3020  0E63  3064               	movlw	100
  3021  0E64  00F4               	movwf	___awmod@divisor
  3022  0E65  3000               	movlw	0
  3023  0E66  00F5               	movwf	___awmod@divisor+1
  3024  0E67  160A  158A  23FA  120A  158A  	fcall	___awmod
  3025  0E6C  0875               	movf	?___awmod+1,w
  3026  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3027  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3028  0E6F  00A3               	movwf	___awdiv@dividend+1
  3029  0E70  0874               	movf	?___awmod,w
  3030  0E71  00A2               	movwf	___awdiv@dividend
  3031  0E72  160A  158A  24BB  120A  158A  	fcall	___awdiv
  3032  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3033  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3034  0E79  0820               	movf	?___awdiv,w
  3035  0E7A  00C8               	movwf	??_scale
  3036  0E7B  3001               	movlw	1
  3037  0E7C                     u4195:	
  3038  0E7C  1003               	clrc
  3039  0E7D  0DC8               	rlf	??_scale,f
  3040  0E7E  3EFF               	addlw	-1
  3041  0E7F  1D03               	skipz
  3042  0E80  2E7C               	goto	u4195
  3043  0E81  1003               	clrc
  3044  0E82  0D48               	rlf	??_scale,w
  3045  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3046  0E84  0084               	movwf	4
  3047  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  3048  0E8A  00C9               	movwf	??_scale+1
  3049  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  3050  0E90  00CA               	movwf	??_scale+2
  3051  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  3052  0E96  00CB               	movwf	??_scale+3
  3053  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  3054  0E9C  00CC               	movwf	??_scale+4
  3055  0E9D  084C               	movf	??_scale+4,w
  3056  0E9E  00AD               	movwf	___flmul@b+3
  3057  0E9F  084B               	movf	??_scale+3,w
  3058  0EA0  00AC               	movwf	___flmul@b+2
  3059  0EA1  084A               	movf	??_scale+2,w
  3060  0EA2  00AB               	movwf	___flmul@b+1
  3061  0EA3  0849               	movf	??_scale+1,w
  3062  0EA4  00AA               	movwf	___flmul@b
  3063  0EA5  3064               	movlw	100
  3064  0EA6  00A0               	movwf	___awdiv@divisor
  3065  0EA7  3000               	movlw	0
  3066  0EA8  00A1               	movwf	___awdiv@divisor+1
  3067  0EA9  0856               	movf	scale@scl,w
  3068  0EAA  00A2               	movwf	___awdiv@dividend
  3069  0EAB  01A3               	clrf	___awdiv@dividend+1
  3070  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3071  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3072  0EAE  160A  158A  24BB  120A  158A  	fcall	___awdiv
  3073  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3074  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3075  0EB5  0820               	movf	?___awdiv,w
  3076  0EB6  00CD               	movwf	??_scale+5
  3077  0EB7  3001               	movlw	1
  3078  0EB8                     u4205:	
  3079  0EB8  1003               	clrc
  3080  0EB9  0DCD               	rlf	??_scale+5,f
  3081  0EBA  3EFF               	addlw	-1
  3082  0EBB  1D03               	skipz
  3083  0EBC  2EB8               	goto	u4205
  3084  0EBD  1003               	clrc
  3085  0EBE  0D4D               	rlf	??_scale+5,w
  3086  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3087  0EC0  0084               	movwf	4
  3088  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  3089  0EC6  00CE               	movwf	??_scale+6
  3090  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  3091  0ECC  00CF               	movwf	??_scale+7
  3092  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  3093  0ED2  00D0               	movwf	??_scale+8
  3094  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  3095  0ED8  00D1               	movwf	??_scale+9
  3096  0ED9  0851               	movf	??_scale+9,w
  3097  0EDA  00B1               	movwf	___flmul@a+3
  3098  0EDB  0850               	movf	??_scale+8,w
  3099  0EDC  00B0               	movwf	___flmul@a+2
  3100  0EDD  084F               	movf	??_scale+7,w
  3101  0EDE  00AF               	movwf	___flmul@a+1
  3102  0EDF  084E               	movf	??_scale+6,w
  3103  0EE0  00AE               	movwf	___flmul@a
  3104  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3105  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3106  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3107  0EE8  082D               	movf	?___flmul+3,w
  3108  0EE9  00D5               	movwf	_scale$1210+3
  3109  0EEA  082C               	movf	?___flmul+2,w
  3110  0EEB  00D4               	movwf	_scale$1210+2
  3111  0EEC  082B               	movf	?___flmul+1,w
  3112  0EED  00D3               	movwf	_scale$1210+1
  3113  0EEE  082A               	movf	?___flmul,w
  3114  0EEF  00D2               	movwf	_scale$1210
  3115                           
  3116                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3117  0EF0  300A               	movlw	10
  3118  0EF1  00F4               	movwf	___awmod@divisor
  3119  0EF2  3000               	movlw	0
  3120  0EF3  00F5               	movwf	___awmod@divisor+1
  3121  0EF4  0856               	movf	scale@scl,w
  3122  0EF5  00F6               	movwf	___awmod@dividend
  3123  0EF6  01F7               	clrf	___awmod@dividend+1
  3124  0EF7  1BF6               	btfsc	___awmod@dividend,7
  3125  0EF8  03F7               	decf	___awmod@dividend+1,f
  3126  0EF9  160A  158A  23FA  120A  158A  	fcall	___awmod
  3127  0EFE  0874               	movf	?___awmod,w
  3128  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0F01  00C8               	movwf	??_scale
  3131  0F02  3001               	movlw	1
  3132  0F03                     u4215:	
  3133  0F03  1003               	clrc
  3134  0F04  0DC8               	rlf	??_scale,f
  3135  0F05  3EFF               	addlw	-1
  3136  0F06  1D03               	skipz
  3137  0F07  2F03               	goto	u4215
  3138  0F08  1003               	clrc
  3139  0F09  0D48               	rlf	??_scale,w
  3140  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3141  0F0B  0084               	movwf	4
  3142  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3143  0F11  00C9               	movwf	??_scale+1
  3144  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3145  0F17  00CA               	movwf	??_scale+2
  3146  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3147  0F1D  00CB               	movwf	??_scale+3
  3148  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3149  0F23  00CC               	movwf	??_scale+4
  3150  0F24  084C               	movf	??_scale+4,w
  3151  0F25  00AD               	movwf	___flmul@b+3
  3152  0F26  084B               	movf	??_scale+3,w
  3153  0F27  00AC               	movwf	___flmul@b+2
  3154  0F28  084A               	movf	??_scale+2,w
  3155  0F29  00AB               	movwf	___flmul@b+1
  3156  0F2A  0849               	movf	??_scale+1,w
  3157  0F2B  00AA               	movwf	___flmul@b
  3158  0F2C  0855               	movf	_scale$1210+3,w
  3159  0F2D  00B1               	movwf	___flmul@a+3
  3160  0F2E  0854               	movf	_scale$1210+2,w
  3161  0F2F  00B0               	movwf	___flmul@a+2
  3162  0F30  0853               	movf	_scale$1210+1,w
  3163  0F31  00AF               	movwf	___flmul@a+1
  3164  0F32  0852               	movf	_scale$1210,w
  3165  0F33  00AE               	movwf	___flmul@a
  3166  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3167  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3168  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3169  0F3B  082D               	movf	?___flmul+3,w
  3170  0F3C  00C7               	movwf	?_scale+3
  3171  0F3D  082C               	movf	?___flmul+2,w
  3172  0F3E  00C6               	movwf	?_scale+2
  3173  0F3F  082B               	movf	?___flmul+1,w
  3174  0F40  00C5               	movwf	?_scale+1
  3175  0F41  082A               	movf	?___flmul,w
  3176  0F42  00C4               	movwf	?_scale
  3177  0F43  2FFF               	goto	l286
  3178  0F44                     l2834:	
  3179  0F44  0856               	movf	scale@scl,w
  3180  0F45  3A80               	xorlw	128
  3181  0F46  3E75               	addlw	-139
  3182  0F47  1C03               	skipc
  3183  0F48  2F4A               	goto	u4221
  3184  0F49  2F4B               	goto	u4220
  3185  0F4A                     u4221:	
  3186  0F4A  2FD3               	goto	l2840
  3187  0F4B                     u4220:	
  3188  0F4B                     l2836:	
  3189                           
  3190                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3191  0F4B  300A               	movlw	10
  3192  0F4C  00F4               	movwf	___awmod@divisor
  3193  0F4D  3000               	movlw	0
  3194  0F4E  00F5               	movwf	___awmod@divisor+1
  3195  0F4F  0856               	movf	scale@scl,w
  3196  0F50  00F6               	movwf	___awmod@dividend
  3197  0F51  01F7               	clrf	___awmod@dividend+1
  3198  0F52  1BF6               	btfsc	___awmod@dividend,7
  3199  0F53  03F7               	decf	___awmod@dividend+1,f
  3200  0F54  160A  158A  23FA  120A  158A  	fcall	___awmod
  3201  0F59  0874               	movf	?___awmod,w
  3202  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3203  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3204  0F5C  00C8               	movwf	??_scale
  3205  0F5D  3001               	movlw	1
  3206  0F5E                     u4235:	
  3207  0F5E  1003               	clrc
  3208  0F5F  0DC8               	rlf	??_scale,f
  3209  0F60  3EFF               	addlw	-1
  3210  0F61  1D03               	skipz
  3211  0F62  2F5E               	goto	u4235
  3212  0F63  1003               	clrc
  3213  0F64  0D48               	rlf	??_scale,w
  3214  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3215  0F66  0084               	movwf	4
  3216  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  3217  0F6C  00C9               	movwf	??_scale+1
  3218  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3219  0F72  00CA               	movwf	??_scale+2
  3220  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  3221  0F78  00CB               	movwf	??_scale+3
  3222  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  3223  0F7E  00CC               	movwf	??_scale+4
  3224  0F7F  084C               	movf	??_scale+4,w
  3225  0F80  00AD               	movwf	___flmul@b+3
  3226  0F81  084B               	movf	??_scale+3,w
  3227  0F82  00AC               	movwf	___flmul@b+2
  3228  0F83  084A               	movf	??_scale+2,w
  3229  0F84  00AB               	movwf	___flmul@b+1
  3230  0F85  0849               	movf	??_scale+1,w
  3231  0F86  00AA               	movwf	___flmul@b
  3232  0F87  300A               	movlw	10
  3233  0F88  00A0               	movwf	___awdiv@divisor
  3234  0F89  3000               	movlw	0
  3235  0F8A  00A1               	movwf	___awdiv@divisor+1
  3236  0F8B  0856               	movf	scale@scl,w
  3237  0F8C  00A2               	movwf	___awdiv@dividend
  3238  0F8D  01A3               	clrf	___awdiv@dividend+1
  3239  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3240  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3241  0F90  160A  158A  24BB  120A  158A  	fcall	___awdiv
  3242  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3244  0F97  0820               	movf	?___awdiv,w
  3245  0F98  00CD               	movwf	??_scale+5
  3246  0F99  3001               	movlw	1
  3247  0F9A                     u4245:	
  3248  0F9A  1003               	clrc
  3249  0F9B  0DCD               	rlf	??_scale+5,f
  3250  0F9C  3EFF               	addlw	-1
  3251  0F9D  1D03               	skipz
  3252  0F9E  2F9A               	goto	u4245
  3253  0F9F  1003               	clrc
  3254  0FA0  0D4D               	rlf	??_scale+5,w
  3255  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3256  0FA2  0084               	movwf	4
  3257  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3258  0FA8  00CE               	movwf	??_scale+6
  3259  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3260  0FAE  00CF               	movwf	??_scale+7
  3261  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  3262  0FB4  00D0               	movwf	??_scale+8
  3263  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  3264  0FBA  00D1               	movwf	??_scale+9
  3265  0FBB  0851               	movf	??_scale+9,w
  3266  0FBC  00B1               	movwf	___flmul@a+3
  3267  0FBD  0850               	movf	??_scale+8,w
  3268  0FBE  00B0               	movwf	___flmul@a+2
  3269  0FBF  084F               	movf	??_scale+7,w
  3270  0FC0  00AF               	movwf	___flmul@a+1
  3271  0FC1  084E               	movf	??_scale+6,w
  3272  0FC2  00AE               	movwf	___flmul@a
  3273  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3274  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3276  0FCA  082D               	movf	?___flmul+3,w
  3277  0FCB  00C7               	movwf	?_scale+3
  3278  0FCC  082C               	movf	?___flmul+2,w
  3279  0FCD  00C6               	movwf	?_scale+2
  3280  0FCE  082B               	movf	?___flmul+1,w
  3281  0FCF  00C5               	movwf	?_scale+1
  3282  0FD0  082A               	movf	?___flmul,w
  3283  0FD1  00C4               	movwf	?_scale
  3284  0FD2  2FFF               	goto	l286
  3285  0FD3                     l2840:	
  3286                           
  3287                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3288  0FD3  0856               	movf	scale@scl,w
  3289  0FD4  00C8               	movwf	??_scale
  3290  0FD5  3001               	movlw	1
  3291  0FD6                     u4255:	
  3292  0FD6  1003               	clrc
  3293  0FD7  0DC8               	rlf	??_scale,f
  3294  0FD8  3EFF               	addlw	-1
  3295  0FD9  1D03               	skipz
  3296  0FDA  2FD6               	goto	u4255
  3297  0FDB  1003               	clrc
  3298  0FDC  0D48               	rlf	??_scale,w
  3299  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3300  0FDE  0084               	movwf	4
  3301  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  3302  0FE4  00C9               	movwf	??_scale+1
  3303  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  3304  0FEA  00CA               	movwf	??_scale+2
  3305  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  3306  0FF0  00CB               	movwf	??_scale+3
  3307  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  3308  0FF6  00CC               	movwf	??_scale+4
  3309  0FF7  084C               	movf	??_scale+4,w
  3310  0FF8  00C7               	movwf	?_scale+3
  3311  0FF9  084B               	movf	??_scale+3,w
  3312  0FFA  00C6               	movwf	?_scale+2
  3313  0FFB  084A               	movf	??_scale+2,w
  3314  0FFC  00C5               	movwf	?_scale+1
  3315  0FFD  0849               	movf	??_scale+1,w
  3316  0FFE  00C4               	movwf	?_scale
  3317  0FFF                     l286:	
  3318  0FFF  0008               	return
  3319  1000                     __end_of_scale:	
  3320                           
  3321                           	psect	text4
  3322  1BFA                     __ptext4:	
  3323 ;; *************** function ___awmod *****************
  3324 ;; Defined at:
  3325 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  divisor         2    3[COMMON] int 
  3328 ;;  dividend        2    5[COMMON] int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  sign            1    9[COMMON] unsigned char 
  3331 ;;  counter         1    8[COMMON] unsigned char 
  3332 ;; Return value:  Size  Location     Type
  3333 ;;                  2    3[COMMON] int 
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3341 ;;      Params:         4       0       0       0       0
  3342 ;;      Locals:         2       0       0       0       0
  3343 ;;      Temps:          1       0       0       0       0
  3344 ;;      Totals:         7       0       0       0       0
  3345 ;;Total ram usage:        7 bytes
  3346 ;; Hardware stack levels used:    1
  3347 ;; Hardware stack levels required when called:    1
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_scale
  3352 ;; This function uses a non-reentrant model
  3353 ;;
  3354                           
  3355                           
  3356                           ;psect for function ___awmod
  3357  1BFA                     ___awmod:	
  3358  1BFA                     l2348:	
  3359                           ;incstack = 0
  3360                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3361                           
  3362  1BFA  01FA               	clrf	___awmod@sign
  3363  1BFB                     l2350:	
  3364  1BFB  1FF7               	btfss	___awmod@dividend+1,7
  3365  1BFC  2BFE               	goto	u2961
  3366  1BFD  2BFF               	goto	u2960
  3367  1BFE                     u2961:	
  3368  1BFE  2C06               	goto	l2356
  3369  1BFF                     u2960:	
  3370  1BFF                     l2352:	
  3371  1BFF  09F6               	comf	___awmod@dividend,f
  3372  1C00  09F7               	comf	___awmod@dividend+1,f
  3373  1C01  0AF6               	incf	___awmod@dividend,f
  3374  1C02  1903               	skipnz
  3375  1C03  0AF7               	incf	___awmod@dividend+1,f
  3376  1C04                     l2354:	
  3377  1C04  01FA               	clrf	___awmod@sign
  3378  1C05  0AFA               	incf	___awmod@sign,f
  3379  1C06                     l2356:	
  3380  1C06  1FF5               	btfss	___awmod@divisor+1,7
  3381  1C07  2C09               	goto	u2971
  3382  1C08  2C0A               	goto	u2970
  3383  1C09                     u2971:	
  3384  1C09  2C0F               	goto	l2360
  3385  1C0A                     u2970:	
  3386  1C0A                     l2358:	
  3387  1C0A  09F4               	comf	___awmod@divisor,f
  3388  1C0B  09F5               	comf	___awmod@divisor+1,f
  3389  1C0C  0AF4               	incf	___awmod@divisor,f
  3390  1C0D  1903               	skipnz
  3391  1C0E  0AF5               	incf	___awmod@divisor+1,f
  3392  1C0F                     l2360:	
  3393  1C0F  0874               	movf	___awmod@divisor,w
  3394  1C10  0475               	iorwf	___awmod@divisor+1,w
  3395  1C11  1903               	btfsc	3,2
  3396  1C12  2C14               	goto	u2981
  3397  1C13  2C15               	goto	u2980
  3398  1C14                     u2981:	
  3399  1C14  2C44               	goto	l2378
  3400  1C15                     u2980:	
  3401  1C15                     l2362:	
  3402  1C15  01F9               	clrf	___awmod@counter
  3403  1C16  0AF9               	incf	___awmod@counter,f
  3404  1C17  2C23               	goto	l2368
  3405  1C18                     l2364:	
  3406  1C18  3001               	movlw	1
  3407  1C19                     u2995:	
  3408  1C19  1003               	clrc
  3409  1C1A  0DF4               	rlf	___awmod@divisor,f
  3410  1C1B  0DF5               	rlf	___awmod@divisor+1,f
  3411  1C1C  3EFF               	addlw	-1
  3412  1C1D  1D03               	skipz
  3413  1C1E  2C19               	goto	u2995
  3414  1C1F                     l2366:	
  3415  1C1F  3001               	movlw	1
  3416  1C20  00F8               	movwf	??___awmod
  3417  1C21  0878               	movf	??___awmod,w
  3418  1C22  07F9               	addwf	___awmod@counter,f
  3419  1C23                     l2368:	
  3420  1C23  1FF5               	btfss	___awmod@divisor+1,7
  3421  1C24  2C26               	goto	u3001
  3422  1C25  2C27               	goto	u3000
  3423  1C26                     u3001:	
  3424  1C26  2C18               	goto	l2364
  3425  1C27                     u3000:	
  3426  1C27                     l2370:	
  3427  1C27  0875               	movf	___awmod@divisor+1,w
  3428  1C28  0277               	subwf	___awmod@dividend+1,w
  3429  1C29  1D03               	skipz
  3430  1C2A  2C2D               	goto	u3015
  3431  1C2B  0874               	movf	___awmod@divisor,w
  3432  1C2C  0276               	subwf	___awmod@dividend,w
  3433  1C2D                     u3015:	
  3434  1C2D  1C03               	skipc
  3435  1C2E  2C30               	goto	u3011
  3436  1C2F  2C31               	goto	u3010
  3437  1C30                     u3011:	
  3438  1C30  2C37               	goto	l2374
  3439  1C31                     u3010:	
  3440  1C31                     l2372:	
  3441  1C31  0874               	movf	___awmod@divisor,w
  3442  1C32  02F6               	subwf	___awmod@dividend,f
  3443  1C33  0875               	movf	___awmod@divisor+1,w
  3444  1C34  1C03               	skipc
  3445  1C35  03F7               	decf	___awmod@dividend+1,f
  3446  1C36  02F7               	subwf	___awmod@dividend+1,f
  3447  1C37                     l2374:	
  3448  1C37  3001               	movlw	1
  3449  1C38                     u3025:	
  3450  1C38  1003               	clrc
  3451  1C39  0CF5               	rrf	___awmod@divisor+1,f
  3452  1C3A  0CF4               	rrf	___awmod@divisor,f
  3453  1C3B  3EFF               	addlw	-1
  3454  1C3C  1D03               	skipz
  3455  1C3D  2C38               	goto	u3025
  3456  1C3E                     l2376:	
  3457  1C3E  3001               	movlw	1
  3458  1C3F  02F9               	subwf	___awmod@counter,f
  3459  1C40  1D03               	btfss	3,2
  3460  1C41  2C43               	goto	u3031
  3461  1C42  2C44               	goto	u3030
  3462  1C43                     u3031:	
  3463  1C43  2C27               	goto	l2370
  3464  1C44                     u3030:	
  3465  1C44                     l2378:	
  3466  1C44  087A               	movf	___awmod@sign,w
  3467  1C45  1903               	btfsc	3,2
  3468  1C46  2C48               	goto	u3041
  3469  1C47  2C49               	goto	u3040
  3470  1C48                     u3041:	
  3471  1C48  2C4E               	goto	l2382
  3472  1C49                     u3040:	
  3473  1C49                     l2380:	
  3474  1C49  09F6               	comf	___awmod@dividend,f
  3475  1C4A  09F7               	comf	___awmod@dividend+1,f
  3476  1C4B  0AF6               	incf	___awmod@dividend,f
  3477  1C4C  1903               	skipnz
  3478  1C4D  0AF7               	incf	___awmod@dividend+1,f
  3479  1C4E                     l2382:	
  3480  1C4E  0877               	movf	___awmod@dividend+1,w
  3481  1C4F  00F5               	movwf	?___awmod+1
  3482  1C50  0876               	movf	___awmod@dividend,w
  3483  1C51  00F4               	movwf	?___awmod
  3484  1C52                     l539:	
  3485  1C52  0008               	return
  3486  1C53                     __end_of___awmod:	
  3487                           
  3488                           	psect	text5
  3489  1CBB                     __ptext5:	
  3490 ;; *************** function ___awdiv *****************
  3491 ;; Defined at:
  3492 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  divisor         2    0[BANK0 ] int 
  3495 ;;  dividend        2    2[BANK0 ] int 
  3496 ;; Auto vars:     Size  Location     Type
  3497 ;;  quotient        2    7[BANK0 ] int 
  3498 ;;  sign            1    6[BANK0 ] unsigned char 
  3499 ;;  counter         1    5[BANK0 ] unsigned char 
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  2    0[BANK0 ] int 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2, status,0
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3509 ;;      Params:         0       4       0       0       0
  3510 ;;      Locals:         0       4       0       0       0
  3511 ;;      Temps:          0       1       0       0       0
  3512 ;;      Totals:         0       9       0       0       0
  3513 ;;Total ram usage:        9 bytes
  3514 ;; Hardware stack levels used:    1
  3515 ;; Hardware stack levels required when called:    1
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_scale
  3520 ;;		_sprintf
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function ___awdiv
  3526  1CBB                     ___awdiv:	
  3527  1CBB                     l2304:	
  3528                           ;incstack = 0
  3529                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3530                           
  3531  1CBB  1283               	bcf	3,5	;RP0=0, select bank0
  3532  1CBC  1303               	bcf	3,6	;RP1=0, select bank0
  3533  1CBD  01A6               	clrf	___awdiv@sign
  3534  1CBE                     l2306:	
  3535  1CBE  1FA1               	btfss	___awdiv@divisor+1,7
  3536  1CBF  2CC1               	goto	u2861
  3537  1CC0  2CC2               	goto	u2860
  3538  1CC1                     u2861:	
  3539  1CC1  2CC9               	goto	l2312
  3540  1CC2                     u2860:	
  3541  1CC2                     l2308:	
  3542  1CC2  09A0               	comf	___awdiv@divisor,f
  3543  1CC3  09A1               	comf	___awdiv@divisor+1,f
  3544  1CC4  0AA0               	incf	___awdiv@divisor,f
  3545  1CC5  1903               	skipnz
  3546  1CC6  0AA1               	incf	___awdiv@divisor+1,f
  3547  1CC7                     l2310:	
  3548  1CC7  01A6               	clrf	___awdiv@sign
  3549  1CC8  0AA6               	incf	___awdiv@sign,f
  3550  1CC9                     l2312:	
  3551  1CC9  1FA3               	btfss	___awdiv@dividend+1,7
  3552  1CCA  2CCC               	goto	u2871
  3553  1CCB  2CCD               	goto	u2870
  3554  1CCC                     u2871:	
  3555  1CCC  2CD6               	goto	l2318
  3556  1CCD                     u2870:	
  3557  1CCD                     l2314:	
  3558  1CCD  09A2               	comf	___awdiv@dividend,f
  3559  1CCE  09A3               	comf	___awdiv@dividend+1,f
  3560  1CCF  0AA2               	incf	___awdiv@dividend,f
  3561  1CD0  1903               	skipnz
  3562  1CD1  0AA3               	incf	___awdiv@dividend+1,f
  3563  1CD2                     l2316:	
  3564  1CD2  3001               	movlw	1
  3565  1CD3  00A4               	movwf	??___awdiv
  3566  1CD4  0824               	movf	??___awdiv,w
  3567  1CD5  06A6               	xorwf	___awdiv@sign,f
  3568  1CD6                     l2318:	
  3569  1CD6  01A7               	clrf	___awdiv@quotient
  3570  1CD7  01A8               	clrf	___awdiv@quotient+1
  3571  1CD8                     l2320:	
  3572  1CD8  0820               	movf	___awdiv@divisor,w
  3573  1CD9  0421               	iorwf	___awdiv@divisor+1,w
  3574  1CDA  1903               	btfsc	3,2
  3575  1CDB  2CDD               	goto	u2881
  3576  1CDC  2CDE               	goto	u2880
  3577  1CDD                     u2881:	
  3578  1CDD  2D15               	goto	l2340
  3579  1CDE                     u2880:	
  3580  1CDE                     l2322:	
  3581  1CDE  01A5               	clrf	___awdiv@counter
  3582  1CDF  0AA5               	incf	___awdiv@counter,f
  3583  1CE0  2CEC               	goto	l2328
  3584  1CE1                     l2324:	
  3585  1CE1  3001               	movlw	1
  3586  1CE2                     u2895:	
  3587  1CE2  1003               	clrc
  3588  1CE3  0DA0               	rlf	___awdiv@divisor,f
  3589  1CE4  0DA1               	rlf	___awdiv@divisor+1,f
  3590  1CE5  3EFF               	addlw	-1
  3591  1CE6  1D03               	skipz
  3592  1CE7  2CE2               	goto	u2895
  3593  1CE8                     l2326:	
  3594  1CE8  3001               	movlw	1
  3595  1CE9  00A4               	movwf	??___awdiv
  3596  1CEA  0824               	movf	??___awdiv,w
  3597  1CEB  07A5               	addwf	___awdiv@counter,f
  3598  1CEC                     l2328:	
  3599  1CEC  1FA1               	btfss	___awdiv@divisor+1,7
  3600  1CED  2CEF               	goto	u2901
  3601  1CEE  2CF0               	goto	u2900
  3602  1CEF                     u2901:	
  3603  1CEF  2CE1               	goto	l2324
  3604  1CF0                     u2900:	
  3605  1CF0                     l2330:	
  3606  1CF0  3001               	movlw	1
  3607  1CF1                     u2915:	
  3608  1CF1  1003               	clrc
  3609  1CF2  0DA7               	rlf	___awdiv@quotient,f
  3610  1CF3  0DA8               	rlf	___awdiv@quotient+1,f
  3611  1CF4  3EFF               	addlw	-1
  3612  1CF5  1D03               	skipz
  3613  1CF6  2CF1               	goto	u2915
  3614  1CF7  0821               	movf	___awdiv@divisor+1,w
  3615  1CF8  0223               	subwf	___awdiv@dividend+1,w
  3616  1CF9  1D03               	skipz
  3617  1CFA  2CFD               	goto	u2925
  3618  1CFB  0820               	movf	___awdiv@divisor,w
  3619  1CFC  0222               	subwf	___awdiv@dividend,w
  3620  1CFD                     u2925:	
  3621  1CFD  1C03               	skipc
  3622  1CFE  2D00               	goto	u2921
  3623  1CFF  2D01               	goto	u2920
  3624  1D00                     u2921:	
  3625  1D00  2D08               	goto	l2336
  3626  1D01                     u2920:	
  3627  1D01                     l2332:	
  3628  1D01  0820               	movf	___awdiv@divisor,w
  3629  1D02  02A2               	subwf	___awdiv@dividend,f
  3630  1D03  0821               	movf	___awdiv@divisor+1,w
  3631  1D04  1C03               	skipc
  3632  1D05  03A3               	decf	___awdiv@dividend+1,f
  3633  1D06  02A3               	subwf	___awdiv@dividend+1,f
  3634  1D07                     l2334:	
  3635  1D07  1427               	bsf	___awdiv@quotient,0
  3636  1D08                     l2336:	
  3637  1D08  3001               	movlw	1
  3638  1D09                     u2935:	
  3639  1D09  1003               	clrc
  3640  1D0A  0CA1               	rrf	___awdiv@divisor+1,f
  3641  1D0B  0CA0               	rrf	___awdiv@divisor,f
  3642  1D0C  3EFF               	addlw	-1
  3643  1D0D  1D03               	skipz
  3644  1D0E  2D09               	goto	u2935
  3645  1D0F                     l2338:	
  3646  1D0F  3001               	movlw	1
  3647  1D10  02A5               	subwf	___awdiv@counter,f
  3648  1D11  1D03               	btfss	3,2
  3649  1D12  2D14               	goto	u2941
  3650  1D13  2D15               	goto	u2940
  3651  1D14                     u2941:	
  3652  1D14  2CF0               	goto	l2330
  3653  1D15                     u2940:	
  3654  1D15                     l2340:	
  3655  1D15  0826               	movf	___awdiv@sign,w
  3656  1D16  1903               	btfsc	3,2
  3657  1D17  2D19               	goto	u2951
  3658  1D18  2D1A               	goto	u2950
  3659  1D19                     u2951:	
  3660  1D19  2D1F               	goto	l2344
  3661  1D1A                     u2950:	
  3662  1D1A                     l2342:	
  3663  1D1A  09A7               	comf	___awdiv@quotient,f
  3664  1D1B  09A8               	comf	___awdiv@quotient+1,f
  3665  1D1C  0AA7               	incf	___awdiv@quotient,f
  3666  1D1D  1903               	skipnz
  3667  1D1E  0AA8               	incf	___awdiv@quotient+1,f
  3668  1D1F                     l2344:	
  3669  1D1F  0828               	movf	___awdiv@quotient+1,w
  3670  1D20  00A1               	movwf	?___awdiv+1
  3671  1D21  0827               	movf	___awdiv@quotient,w
  3672  1D22  00A0               	movwf	?___awdiv
  3673  1D23                     l526:	
  3674  1D23  0008               	return
  3675  1D24                     __end_of___awdiv:	
  3676                           
  3677                           	psect	text6
  3678  194D                     __ptext6:	
  3679 ;; *************** function _isdigit *****************
  3680 ;; Defined at:
  3681 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\isdigit.c"
  3682 ;; Parameters:    Size  Location     Type
  3683 ;;  c               1    wreg     unsigned char 
  3684 ;; Auto vars:     Size  Location     Type
  3685 ;;  c               1    4[COMMON] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;		None               void
  3688 ;; Registers used:
  3689 ;;		wreg, status,2, status,0
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3695 ;;      Params:         0       0       0       0       0
  3696 ;;      Locals:         2       0       0       0       0
  3697 ;;      Temps:          0       0       0       0       0
  3698 ;;      Totals:         2       0       0       0       0
  3699 ;;Total ram usage:        2 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:    1
  3702 ;; This function calls:
  3703 ;;		Nothing
  3704 ;; This function is called by:
  3705 ;;		_sprintf
  3706 ;; This function uses a non-reentrant model
  3707 ;;
  3708                           
  3709                           
  3710                           ;psect for function _isdigit
  3711  194D                     _isdigit:	
  3712                           
  3713                           ;incstack = 0
  3714                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3715                           ;isdigit@c stored from wreg
  3716  194D  00F5               	movwf	isdigit@c
  3717  194E                     l2844:	
  3718  194E  01F4               	clrf	_isdigit$1009
  3719  194F                     l2846:	
  3720  194F  303A               	movlw	58
  3721  1950  0275               	subwf	isdigit@c,w
  3722  1951  1803               	skipnc
  3723  1952  2954               	goto	u4261
  3724  1953  2955               	goto	u4260
  3725  1954                     u4261:	
  3726  1954  295D               	goto	l2852
  3727  1955                     u4260:	
  3728  1955                     l2848:	
  3729  1955  3030               	movlw	48
  3730  1956  0275               	subwf	isdigit@c,w
  3731  1957  1C03               	skipc
  3732  1958  295A               	goto	u4271
  3733  1959  295B               	goto	u4270
  3734  195A                     u4271:	
  3735  195A  295D               	goto	l2852
  3736  195B                     u4270:	
  3737  195B                     l2850:	
  3738  195B  01F4               	clrf	_isdigit$1009
  3739  195C  0AF4               	incf	_isdigit$1009,f
  3740  195D                     l2852:	
  3741  195D  0C74               	rrf	_isdigit$1009,w
  3742  195E                     l854:	
  3743  195E  0008               	return
  3744  195F                     __end_of_isdigit:	
  3745                           
  3746                           	psect	text7
  3747  004E                     __ptext7:	
  3748 ;; *************** function _fround *****************
  3749 ;; Defined at:
  3750 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  prec            1    wreg     unsigned char 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  prec            1   55[BANK0 ] unsigned char 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  4   36[BANK0 ] unsigned char 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3764 ;;      Params:         0       4       0       0       0
  3765 ;;      Locals:         0       9       0       0       0
  3766 ;;      Temps:          0       7       0       0       0
  3767 ;;      Totals:         0      20       0       0       0
  3768 ;;Total ram usage:       20 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    3
  3771 ;; This function calls:
  3772 ;;		___flmul
  3773 ;;		___lwdiv
  3774 ;;		___lwmod
  3775 ;; This function is called by:
  3776 ;;		_sprintf
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           
  3781                           ;psect for function _fround
  3782  004E                     _fround:	
  3783                           
  3784                           ;incstack = 0
  3785                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3786                           ;fround@prec stored from wreg
  3787  004E  1283               	bcf	3,5	;RP0=0, select bank0
  3788  004F  1303               	bcf	3,6	;RP1=0, select bank0
  3789  0050  00D7               	movwf	fround@prec
  3790  0051                     l2786:	
  3791                           
  3792                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  3793  0051  306E               	movlw	110
  3794  0052  0257               	subwf	fround@prec,w
  3795  0053  1C03               	skipc
  3796  0054  2856               	goto	u4011
  3797  0055  2857               	goto	u4010
  3798  0056                     u4011:	
  3799  0056  2966               	goto	l2794
  3800  0057                     u4010:	
  3801  0057                     l2788:	
  3802                           
  3803                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3804  0057  303F               	movlw	63
  3805  0058  00AD               	movwf	___flmul@b+3
  3806  0059  3000               	movlw	0
  3807  005A  00AC               	movwf	___flmul@b+2
  3808  005B  3000               	movlw	0
  3809  005C  00AB               	movwf	___flmul@b+1
  3810  005D  3000               	movlw	0
  3811  005E  00AA               	movwf	___flmul@b
  3812  005F  3064               	movlw	100
  3813  0060  00A0               	movwf	___lwdiv@divisor
  3814  0061  3000               	movlw	0
  3815  0062  00A1               	movwf	___lwdiv@divisor+1
  3816  0063  0857               	movf	fround@prec,w
  3817  0064  00C8               	movwf	??_fround
  3818  0065  01C9               	clrf	??_fround+1
  3819  0066  0848               	movf	??_fround,w
  3820  0067  00A2               	movwf	___lwdiv@dividend
  3821  0068  0849               	movf	??_fround+1,w
  3822  0069  00A3               	movwf	___lwdiv@dividend+1
  3823  006A  160A  158A  226B  120A  118A  	fcall	___lwdiv
  3824  006F  1283               	bcf	3,5	;RP0=0, select bank0
  3825  0070  1303               	bcf	3,6	;RP1=0, select bank0
  3826  0071  0820               	movf	?___lwdiv,w
  3827  0072  00CA               	movwf	??_fround+2
  3828  0073  3001               	movlw	1
  3829  0074                     u4025:	
  3830  0074  1003               	clrc
  3831  0075  0DCA               	rlf	??_fround+2,f
  3832  0076  3EFF               	addlw	-1
  3833  0077  1D03               	skipz
  3834  0078  2874               	goto	u4025
  3835  0079  1003               	clrc
  3836  007A  0D4A               	rlf	??_fround+2,w
  3837  007B  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3838  007C  0084               	movwf	4
  3839  007D  160A  158A  200A  120A  118A  	fcall	stringdir
  3840  0082  00CB               	movwf	??_fround+3
  3841  0083  160A  158A  200A  120A  118A  	fcall	stringdir
  3842  0088  00CC               	movwf	??_fround+4
  3843  0089  160A  158A  200A  120A  118A  	fcall	stringdir
  3844  008E  00CD               	movwf	??_fround+5
  3845  008F  160A  158A  200A  120A  118A  	fcall	stringdir
  3846  0094  00CE               	movwf	??_fround+6
  3847  0095  084E               	movf	??_fround+6,w
  3848  0096  00B1               	movwf	___flmul@a+3
  3849  0097  084D               	movf	??_fround+5,w
  3850  0098  00B0               	movwf	___flmul@a+2
  3851  0099  084C               	movf	??_fround+4,w
  3852  009A  00AF               	movwf	___flmul@a+1
  3853  009B  084B               	movf	??_fround+3,w
  3854  009C  00AE               	movwf	___flmul@a
  3855  009D  120A  158A  213C  120A  118A  	fcall	___flmul
  3856  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  3857  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  3858  00A4  082D               	movf	?___flmul+3,w
  3859  00A5  00D6               	movwf	_fround$1208+3
  3860  00A6  082C               	movf	?___flmul+2,w
  3861  00A7  00D5               	movwf	_fround$1208+2
  3862  00A8  082B               	movf	?___flmul+1,w
  3863  00A9  00D4               	movwf	_fround$1208+1
  3864  00AA  082A               	movf	?___flmul,w
  3865  00AB  00D3               	movwf	_fround$1208
  3866                           
  3867                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3868  00AC  300A               	movlw	10
  3869  00AD  00A0               	movwf	___lwdiv@divisor
  3870  00AE  3000               	movlw	0
  3871  00AF  00A1               	movwf	___lwdiv@divisor+1
  3872  00B0  0857               	movf	fround@prec,w
  3873  00B1  00C8               	movwf	??_fround
  3874  00B2  01C9               	clrf	??_fround+1
  3875  00B3  0848               	movf	??_fround,w
  3876  00B4  00F6               	movwf	___lwmod@dividend
  3877  00B5  0849               	movf	??_fround+1,w
  3878  00B6  00F7               	movwf	___lwmod@dividend+1
  3879  00B7  3064               	movlw	100
  3880  00B8  00F4               	movwf	___lwmod@divisor
  3881  00B9  3000               	movlw	0
  3882  00BA  00F5               	movwf	___lwmod@divisor+1
  3883  00BB  120A  118A  2014  120A  118A  	fcall	___lwmod
  3884  00C0  0875               	movf	?___lwmod+1,w
  3885  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  3886  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  3887  00C3  00A3               	movwf	___lwdiv@dividend+1
  3888  00C4  0874               	movf	?___lwmod,w
  3889  00C5  00A2               	movwf	___lwdiv@dividend
  3890  00C6  160A  158A  226B  120A  118A  	fcall	___lwdiv
  3891  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  3892  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  3893  00CD  0820               	movf	?___lwdiv,w
  3894  00CE  00CA               	movwf	??_fround+2
  3895  00CF  3001               	movlw	1
  3896  00D0                     u4035:	
  3897  00D0  1003               	clrc
  3898  00D1  0DCA               	rlf	??_fround+2,f
  3899  00D2  3EFF               	addlw	-1
  3900  00D3  1D03               	skipz
  3901  00D4  28D0               	goto	u4035
  3902  00D5  1003               	clrc
  3903  00D6  0D4A               	rlf	??_fround+2,w
  3904  00D7  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3905  00D8  0084               	movwf	4
  3906  00D9  160A  158A  200A  120A  118A  	fcall	stringdir
  3907  00DE  00CB               	movwf	??_fround+3
  3908  00DF  160A  158A  200A  120A  118A  	fcall	stringdir
  3909  00E4  00CC               	movwf	??_fround+4
  3910  00E5  160A  158A  200A  120A  118A  	fcall	stringdir
  3911  00EA  00CD               	movwf	??_fround+5
  3912  00EB  160A  158A  200A  120A  118A  	fcall	stringdir
  3913  00F0  00CE               	movwf	??_fround+6
  3914  00F1  084E               	movf	??_fround+6,w
  3915  00F2  00AD               	movwf	___flmul@b+3
  3916  00F3  084D               	movf	??_fround+5,w
  3917  00F4  00AC               	movwf	___flmul@b+2
  3918  00F5  084C               	movf	??_fround+4,w
  3919  00F6  00AB               	movwf	___flmul@b+1
  3920  00F7  084B               	movf	??_fround+3,w
  3921  00F8  00AA               	movwf	___flmul@b
  3922  00F9  0856               	movf	_fround$1208+3,w
  3923  00FA  00B1               	movwf	___flmul@a+3
  3924  00FB  0855               	movf	_fround$1208+2,w
  3925  00FC  00B0               	movwf	___flmul@a+2
  3926  00FD  0854               	movf	_fround$1208+1,w
  3927  00FE  00AF               	movwf	___flmul@a+1
  3928  00FF  0853               	movf	_fround$1208,w
  3929  0100  00AE               	movwf	___flmul@a
  3930  0101  120A  158A  213C  120A  118A  	fcall	___flmul
  3931  0106  1283               	bcf	3,5	;RP0=0, select bank0
  3932  0107  1303               	bcf	3,6	;RP1=0, select bank0
  3933  0108  082D               	movf	?___flmul+3,w
  3934  0109  00D2               	movwf	_fround$1209+3
  3935  010A  082C               	movf	?___flmul+2,w
  3936  010B  00D1               	movwf	_fround$1209+2
  3937  010C  082B               	movf	?___flmul+1,w
  3938  010D  00D0               	movwf	_fround$1209+1
  3939  010E  082A               	movf	?___flmul,w
  3940  010F  00CF               	movwf	_fround$1209
  3941                           
  3942                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3943  0110  300A               	movlw	10
  3944  0111  00F4               	movwf	___lwmod@divisor
  3945  0112  3000               	movlw	0
  3946  0113  00F5               	movwf	___lwmod@divisor+1
  3947  0114  0857               	movf	fround@prec,w
  3948  0115  00C8               	movwf	??_fround
  3949  0116  01C9               	clrf	??_fround+1
  3950  0117  0848               	movf	??_fround,w
  3951  0118  00F6               	movwf	___lwmod@dividend
  3952  0119  0849               	movf	??_fround+1,w
  3953  011A  00F7               	movwf	___lwmod@dividend+1
  3954  011B  120A  118A  2014  120A  118A  	fcall	___lwmod
  3955  0120  0874               	movf	?___lwmod,w
  3956  0121  1283               	bcf	3,5	;RP0=0, select bank0
  3957  0122  1303               	bcf	3,6	;RP1=0, select bank0
  3958  0123  00CA               	movwf	??_fround+2
  3959  0124  3001               	movlw	1
  3960  0125                     u4045:	
  3961  0125  1003               	clrc
  3962  0126  0DCA               	rlf	??_fround+2,f
  3963  0127  3EFF               	addlw	-1
  3964  0128  1D03               	skipz
  3965  0129  2925               	goto	u4045
  3966  012A  1003               	clrc
  3967  012B  0D4A               	rlf	??_fround+2,w
  3968  012C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3969  012D  0084               	movwf	4
  3970  012E  160A  158A  200A  120A  118A  	fcall	stringdir
  3971  0133  00CB               	movwf	??_fround+3
  3972  0134  160A  158A  200A  120A  118A  	fcall	stringdir
  3973  0139  00CC               	movwf	??_fround+4
  3974  013A  160A  158A  200A  120A  118A  	fcall	stringdir
  3975  013F  00CD               	movwf	??_fround+5
  3976  0140  160A  158A  200A  120A  118A  	fcall	stringdir
  3977  0145  00CE               	movwf	??_fround+6
  3978  0146  084E               	movf	??_fround+6,w
  3979  0147  00AD               	movwf	___flmul@b+3
  3980  0148  084D               	movf	??_fround+5,w
  3981  0149  00AC               	movwf	___flmul@b+2
  3982  014A  084C               	movf	??_fround+4,w
  3983  014B  00AB               	movwf	___flmul@b+1
  3984  014C  084B               	movf	??_fround+3,w
  3985  014D  00AA               	movwf	___flmul@b
  3986  014E  0852               	movf	_fround$1209+3,w
  3987  014F  00B1               	movwf	___flmul@a+3
  3988  0150  0851               	movf	_fround$1209+2,w
  3989  0151  00B0               	movwf	___flmul@a+2
  3990  0152  0850               	movf	_fround$1209+1,w
  3991  0153  00AF               	movwf	___flmul@a+1
  3992  0154  084F               	movf	_fround$1209,w
  3993  0155  00AE               	movwf	___flmul@a
  3994  0156  120A  158A  213C  120A  118A  	fcall	___flmul
  3995  015B  1283               	bcf	3,5	;RP0=0, select bank0
  3996  015C  1303               	bcf	3,6	;RP1=0, select bank0
  3997  015D  082D               	movf	?___flmul+3,w
  3998  015E  00C7               	movwf	?_fround+3
  3999  015F  082C               	movf	?___flmul+2,w
  4000  0160  00C6               	movwf	?_fround+2
  4001  0161  082B               	movf	?___flmul+1,w
  4002  0162  00C5               	movwf	?_fround+1
  4003  0163  082A               	movf	?___flmul,w
  4004  0164  00C4               	movwf	?_fround
  4005  0165  2A5A               	goto	l279
  4006  0166                     l2794:	
  4007  0166  300B               	movlw	11
  4008  0167  0257               	subwf	fround@prec,w
  4009  0168  1C03               	skipc
  4010  0169  296B               	goto	u4051
  4011  016A  296C               	goto	u4050
  4012  016B                     u4051:	
  4013  016B  2A17               	goto	l2800
  4014  016C                     u4050:	
  4015  016C                     l2796:	
  4016                           
  4017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4018  016C  303F               	movlw	63
  4019  016D  00AD               	movwf	___flmul@b+3
  4020  016E  3000               	movlw	0
  4021  016F  00AC               	movwf	___flmul@b+2
  4022  0170  3000               	movlw	0
  4023  0171  00AB               	movwf	___flmul@b+1
  4024  0172  3000               	movlw	0
  4025  0173  00AA               	movwf	___flmul@b
  4026  0174  300A               	movlw	10
  4027  0175  00A0               	movwf	___lwdiv@divisor
  4028  0176  3000               	movlw	0
  4029  0177  00A1               	movwf	___lwdiv@divisor+1
  4030  0178  0857               	movf	fround@prec,w
  4031  0179  00C8               	movwf	??_fround
  4032  017A  01C9               	clrf	??_fround+1
  4033  017B  0848               	movf	??_fround,w
  4034  017C  00A2               	movwf	___lwdiv@dividend
  4035  017D  0849               	movf	??_fround+1,w
  4036  017E  00A3               	movwf	___lwdiv@dividend+1
  4037  017F  160A  158A  226B  120A  118A  	fcall	___lwdiv
  4038  0184  1283               	bcf	3,5	;RP0=0, select bank0
  4039  0185  1303               	bcf	3,6	;RP1=0, select bank0
  4040  0186  0820               	movf	?___lwdiv,w
  4041  0187  00CA               	movwf	??_fround+2
  4042  0188  3001               	movlw	1
  4043  0189                     u4065:	
  4044  0189  1003               	clrc
  4045  018A  0DCA               	rlf	??_fround+2,f
  4046  018B  3EFF               	addlw	-1
  4047  018C  1D03               	skipz
  4048  018D  2989               	goto	u4065
  4049  018E  1003               	clrc
  4050  018F  0D4A               	rlf	??_fround+2,w
  4051  0190  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4052  0191  0084               	movwf	4
  4053  0192  160A  158A  200A  120A  118A  	fcall	stringdir
  4054  0197  00CB               	movwf	??_fround+3
  4055  0198  160A  158A  200A  120A  118A  	fcall	stringdir
  4056  019D  00CC               	movwf	??_fround+4
  4057  019E  160A  158A  200A  120A  118A  	fcall	stringdir
  4058  01A3  00CD               	movwf	??_fround+5
  4059  01A4  160A  158A  200A  120A  118A  	fcall	stringdir
  4060  01A9  00CE               	movwf	??_fround+6
  4061  01AA  084E               	movf	??_fround+6,w
  4062  01AB  00B1               	movwf	___flmul@a+3
  4063  01AC  084D               	movf	??_fround+5,w
  4064  01AD  00B0               	movwf	___flmul@a+2
  4065  01AE  084C               	movf	??_fround+4,w
  4066  01AF  00AF               	movwf	___flmul@a+1
  4067  01B0  084B               	movf	??_fround+3,w
  4068  01B1  00AE               	movwf	___flmul@a
  4069  01B2  120A  158A  213C  120A  118A  	fcall	___flmul
  4070  01B7  1283               	bcf	3,5	;RP0=0, select bank0
  4071  01B8  1303               	bcf	3,6	;RP1=0, select bank0
  4072  01B9  082D               	movf	?___flmul+3,w
  4073  01BA  00D6               	movwf	_fround$1208+3
  4074  01BB  082C               	movf	?___flmul+2,w
  4075  01BC  00D5               	movwf	_fround$1208+2
  4076  01BD  082B               	movf	?___flmul+1,w
  4077  01BE  00D4               	movwf	_fround$1208+1
  4078  01BF  082A               	movf	?___flmul,w
  4079  01C0  00D3               	movwf	_fround$1208
  4080                           
  4081                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4082  01C1  300A               	movlw	10
  4083  01C2  00F4               	movwf	___lwmod@divisor
  4084  01C3  3000               	movlw	0
  4085  01C4  00F5               	movwf	___lwmod@divisor+1
  4086  01C5  0857               	movf	fround@prec,w
  4087  01C6  00C8               	movwf	??_fround
  4088  01C7  01C9               	clrf	??_fround+1
  4089  01C8  0848               	movf	??_fround,w
  4090  01C9  00F6               	movwf	___lwmod@dividend
  4091  01CA  0849               	movf	??_fround+1,w
  4092  01CB  00F7               	movwf	___lwmod@dividend+1
  4093  01CC  120A  118A  2014  120A  118A  	fcall	___lwmod
  4094  01D1  0874               	movf	?___lwmod,w
  4095  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  4096  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  4097  01D4  00CA               	movwf	??_fround+2
  4098  01D5  3001               	movlw	1
  4099  01D6                     u4075:	
  4100  01D6  1003               	clrc
  4101  01D7  0DCA               	rlf	??_fround+2,f
  4102  01D8  3EFF               	addlw	-1
  4103  01D9  1D03               	skipz
  4104  01DA  29D6               	goto	u4075
  4105  01DB  1003               	clrc
  4106  01DC  0D4A               	rlf	??_fround+2,w
  4107  01DD  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4108  01DE  0084               	movwf	4
  4109  01DF  160A  158A  200A  120A  118A  	fcall	stringdir
  4110  01E4  00CB               	movwf	??_fround+3
  4111  01E5  160A  158A  200A  120A  118A  	fcall	stringdir
  4112  01EA  00CC               	movwf	??_fround+4
  4113  01EB  160A  158A  200A  120A  118A  	fcall	stringdir
  4114  01F0  00CD               	movwf	??_fround+5
  4115  01F1  160A  158A  200A  120A  118A  	fcall	stringdir
  4116  01F6  00CE               	movwf	??_fround+6
  4117  01F7  084E               	movf	??_fround+6,w
  4118  01F8  00AD               	movwf	___flmul@b+3
  4119  01F9  084D               	movf	??_fround+5,w
  4120  01FA  00AC               	movwf	___flmul@b+2
  4121  01FB  084C               	movf	??_fround+4,w
  4122  01FC  00AB               	movwf	___flmul@b+1
  4123  01FD  084B               	movf	??_fround+3,w
  4124  01FE  00AA               	movwf	___flmul@b
  4125  01FF  0856               	movf	_fround$1208+3,w
  4126  0200  00B1               	movwf	___flmul@a+3
  4127  0201  0855               	movf	_fround$1208+2,w
  4128  0202  00B0               	movwf	___flmul@a+2
  4129  0203  0854               	movf	_fround$1208+1,w
  4130  0204  00AF               	movwf	___flmul@a+1
  4131  0205  0853               	movf	_fround$1208,w
  4132  0206  00AE               	movwf	___flmul@a
  4133  0207  120A  158A  213C  120A  118A  	fcall	___flmul
  4134  020C  1283               	bcf	3,5	;RP0=0, select bank0
  4135  020D  1303               	bcf	3,6	;RP1=0, select bank0
  4136  020E  082D               	movf	?___flmul+3,w
  4137  020F  00C7               	movwf	?_fround+3
  4138  0210  082C               	movf	?___flmul+2,w
  4139  0211  00C6               	movwf	?_fround+2
  4140  0212  082B               	movf	?___flmul+1,w
  4141  0213  00C5               	movwf	?_fround+1
  4142  0214  082A               	movf	?___flmul,w
  4143  0215  00C4               	movwf	?_fround
  4144  0216  2A5A               	goto	l279
  4145  0217                     l2800:	
  4146                           
  4147                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4148  0217  303F               	movlw	63
  4149  0218  00AD               	movwf	___flmul@b+3
  4150  0219  3000               	movlw	0
  4151  021A  00AC               	movwf	___flmul@b+2
  4152  021B  3000               	movlw	0
  4153  021C  00AB               	movwf	___flmul@b+1
  4154  021D  3000               	movlw	0
  4155  021E  00AA               	movwf	___flmul@b
  4156  021F  0857               	movf	fround@prec,w
  4157  0220  00C8               	movwf	??_fround
  4158  0221  3001               	movlw	1
  4159  0222                     u4085:	
  4160  0222  1003               	clrc
  4161  0223  0DC8               	rlf	??_fround,f
  4162  0224  3EFF               	addlw	-1
  4163  0225  1D03               	skipz
  4164  0226  2A22               	goto	u4085
  4165  0227  1003               	clrc
  4166  0228  0D48               	rlf	??_fround,w
  4167  0229  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4168  022A  0084               	movwf	4
  4169  022B  160A  158A  200A  120A  118A  	fcall	stringdir
  4170  0230  00C9               	movwf	??_fround+1
  4171  0231  160A  158A  200A  120A  118A  	fcall	stringdir
  4172  0236  00CA               	movwf	??_fround+2
  4173  0237  160A  158A  200A  120A  118A  	fcall	stringdir
  4174  023C  00CB               	movwf	??_fround+3
  4175  023D  160A  158A  200A  120A  118A  	fcall	stringdir
  4176  0242  00CC               	movwf	??_fround+4
  4177  0243  084C               	movf	??_fround+4,w
  4178  0244  00B1               	movwf	___flmul@a+3
  4179  0245  084B               	movf	??_fround+3,w
  4180  0246  00B0               	movwf	___flmul@a+2
  4181  0247  084A               	movf	??_fround+2,w
  4182  0248  00AF               	movwf	___flmul@a+1
  4183  0249  0849               	movf	??_fround+1,w
  4184  024A  00AE               	movwf	___flmul@a
  4185  024B  120A  158A  213C  120A  118A  	fcall	___flmul
  4186  0250  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0251  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0252  082D               	movf	?___flmul+3,w
  4189  0253  00C7               	movwf	?_fround+3
  4190  0254  082C               	movf	?___flmul+2,w
  4191  0255  00C6               	movwf	?_fround+2
  4192  0256  082B               	movf	?___flmul+1,w
  4193  0257  00C5               	movwf	?_fround+1
  4194  0258  082A               	movf	?___flmul,w
  4195  0259  00C4               	movwf	?_fround
  4196  025A                     l279:	
  4197  025A  0008               	return
  4198  025B                     __end_of_fround:	
  4199                           
  4200                           	psect	text8
  4201  0014                     __ptext8:	
  4202 ;; *************** function ___lwmod *****************
  4203 ;; Defined at:
  4204 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;  divisor         2    3[COMMON] unsigned int 
  4207 ;;  dividend        2    5[COMMON] unsigned int 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  counter         1    8[COMMON] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  2    3[COMMON] unsigned int 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4219 ;;      Params:         4       0       0       0       0
  4220 ;;      Locals:         1       0       0       0       0
  4221 ;;      Temps:          1       0       0       0       0
  4222 ;;      Totals:         6       0       0       0       0
  4223 ;;Total ram usage:        6 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:    1
  4226 ;; This function calls:
  4227 ;;		Nothing
  4228 ;; This function is called by:
  4229 ;;		_fround
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           
  4234                           ;psect for function ___lwmod
  4235  0014                     ___lwmod:	
  4236  0014                     l2412:	
  4237                           ;incstack = 0
  4238                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4239                           
  4240  0014  0874               	movf	___lwmod@divisor,w
  4241  0015  0475               	iorwf	___lwmod@divisor+1,w
  4242  0016  1903               	btfsc	3,2
  4243  0017  2819               	goto	u3121
  4244  0018  281A               	goto	u3120
  4245  0019                     u3121:	
  4246  0019  2849               	goto	l2430
  4247  001A                     u3120:	
  4248  001A                     l2414:	
  4249  001A  01F9               	clrf	___lwmod@counter
  4250  001B  0AF9               	incf	___lwmod@counter,f
  4251  001C  2828               	goto	l2420
  4252  001D                     l2416:	
  4253  001D  3001               	movlw	1
  4254  001E                     u3135:	
  4255  001E  1003               	clrc
  4256  001F  0DF4               	rlf	___lwmod@divisor,f
  4257  0020  0DF5               	rlf	___lwmod@divisor+1,f
  4258  0021  3EFF               	addlw	-1
  4259  0022  1D03               	skipz
  4260  0023  281E               	goto	u3135
  4261  0024                     l2418:	
  4262  0024  3001               	movlw	1
  4263  0025  00F8               	movwf	??___lwmod
  4264  0026  0878               	movf	??___lwmod,w
  4265  0027  07F9               	addwf	___lwmod@counter,f
  4266  0028                     l2420:	
  4267  0028  1FF5               	btfss	___lwmod@divisor+1,7
  4268  0029  282B               	goto	u3141
  4269  002A  282C               	goto	u3140
  4270  002B                     u3141:	
  4271  002B  281D               	goto	l2416
  4272  002C                     u3140:	
  4273  002C                     l2422:	
  4274  002C  0875               	movf	___lwmod@divisor+1,w
  4275  002D  0277               	subwf	___lwmod@dividend+1,w
  4276  002E  1D03               	skipz
  4277  002F  2832               	goto	u3155
  4278  0030  0874               	movf	___lwmod@divisor,w
  4279  0031  0276               	subwf	___lwmod@dividend,w
  4280  0032                     u3155:	
  4281  0032  1C03               	skipc
  4282  0033  2835               	goto	u3151
  4283  0034  2836               	goto	u3150
  4284  0035                     u3151:	
  4285  0035  283C               	goto	l2426
  4286  0036                     u3150:	
  4287  0036                     l2424:	
  4288  0036  0874               	movf	___lwmod@divisor,w
  4289  0037  02F6               	subwf	___lwmod@dividend,f
  4290  0038  0875               	movf	___lwmod@divisor+1,w
  4291  0039  1C03               	skipc
  4292  003A  03F7               	decf	___lwmod@dividend+1,f
  4293  003B  02F7               	subwf	___lwmod@dividend+1,f
  4294  003C                     l2426:	
  4295  003C  3001               	movlw	1
  4296  003D                     u3165:	
  4297  003D  1003               	clrc
  4298  003E  0CF5               	rrf	___lwmod@divisor+1,f
  4299  003F  0CF4               	rrf	___lwmod@divisor,f
  4300  0040  3EFF               	addlw	-1
  4301  0041  1D03               	skipz
  4302  0042  283D               	goto	u3165
  4303  0043                     l2428:	
  4304  0043  3001               	movlw	1
  4305  0044  02F9               	subwf	___lwmod@counter,f
  4306  0045  1D03               	btfss	3,2
  4307  0046  2848               	goto	u3171
  4308  0047  2849               	goto	u3170
  4309  0048                     u3171:	
  4310  0048  282C               	goto	l2422
  4311  0049                     u3170:	
  4312  0049                     l2430:	
  4313  0049  0877               	movf	___lwmod@dividend+1,w
  4314  004A  00F5               	movwf	?___lwmod+1
  4315  004B  0876               	movf	___lwmod@dividend,w
  4316  004C  00F4               	movwf	?___lwmod
  4317  004D                     l689:	
  4318  004D  0008               	return
  4319  004E                     __end_of___lwmod:	
  4320                           
  4321                           	psect	text9
  4322  1A6B                     __ptext9:	
  4323 ;; *************** function ___lwdiv *****************
  4324 ;; Defined at:
  4325 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  divisor         2    0[BANK0 ] unsigned int 
  4328 ;;  dividend        2    2[BANK0 ] unsigned int 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  quotient        2    4[BANK0 ] unsigned int 
  4331 ;;  counter         1    6[BANK0 ] unsigned char 
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  2    0[BANK0 ] unsigned int 
  4334 ;; Registers used:
  4335 ;;		wreg, status,2, status,0
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4341 ;;      Params:         0       4       0       0       0
  4342 ;;      Locals:         0       3       0       0       0
  4343 ;;      Temps:          1       0       0       0       0
  4344 ;;      Totals:         1       7       0       0       0
  4345 ;;Total ram usage:        8 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    1
  4348 ;; This function calls:
  4349 ;;		Nothing
  4350 ;; This function is called by:
  4351 ;;		_fround
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           
  4355                           
  4356                           ;psect for function ___lwdiv
  4357  1A6B                     ___lwdiv:	
  4358  1A6B                     l2386:	
  4359                           ;incstack = 0
  4360                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4361                           
  4362  1A6B  1283               	bcf	3,5	;RP0=0, select bank0
  4363  1A6C  1303               	bcf	3,6	;RP1=0, select bank0
  4364  1A6D  01A4               	clrf	___lwdiv@quotient
  4365  1A6E  01A5               	clrf	___lwdiv@quotient+1
  4366  1A6F                     l2388:	
  4367  1A6F  0820               	movf	___lwdiv@divisor,w
  4368  1A70  0421               	iorwf	___lwdiv@divisor+1,w
  4369  1A71  1903               	btfsc	3,2
  4370  1A72  2A74               	goto	u3051
  4371  1A73  2A75               	goto	u3050
  4372  1A74                     u3051:	
  4373  1A74  2AAC               	goto	l2408
  4374  1A75                     u3050:	
  4375  1A75                     l2390:	
  4376  1A75  01A6               	clrf	___lwdiv@counter
  4377  1A76  0AA6               	incf	___lwdiv@counter,f
  4378  1A77  2A83               	goto	l2396
  4379  1A78                     l2392:	
  4380  1A78  3001               	movlw	1
  4381  1A79                     u3065:	
  4382  1A79  1003               	clrc
  4383  1A7A  0DA0               	rlf	___lwdiv@divisor,f
  4384  1A7B  0DA1               	rlf	___lwdiv@divisor+1,f
  4385  1A7C  3EFF               	addlw	-1
  4386  1A7D  1D03               	skipz
  4387  1A7E  2A79               	goto	u3065
  4388  1A7F                     l2394:	
  4389  1A7F  3001               	movlw	1
  4390  1A80  00FA               	movwf	??___lwdiv
  4391  1A81  087A               	movf	??___lwdiv,w
  4392  1A82  07A6               	addwf	___lwdiv@counter,f
  4393  1A83                     l2396:	
  4394  1A83  1FA1               	btfss	___lwdiv@divisor+1,7
  4395  1A84  2A86               	goto	u3071
  4396  1A85  2A87               	goto	u3070
  4397  1A86                     u3071:	
  4398  1A86  2A78               	goto	l2392
  4399  1A87                     u3070:	
  4400  1A87                     l2398:	
  4401  1A87  3001               	movlw	1
  4402  1A88                     u3085:	
  4403  1A88  1003               	clrc
  4404  1A89  0DA4               	rlf	___lwdiv@quotient,f
  4405  1A8A  0DA5               	rlf	___lwdiv@quotient+1,f
  4406  1A8B  3EFF               	addlw	-1
  4407  1A8C  1D03               	skipz
  4408  1A8D  2A88               	goto	u3085
  4409  1A8E  0821               	movf	___lwdiv@divisor+1,w
  4410  1A8F  0223               	subwf	___lwdiv@dividend+1,w
  4411  1A90  1D03               	skipz
  4412  1A91  2A94               	goto	u3095
  4413  1A92  0820               	movf	___lwdiv@divisor,w
  4414  1A93  0222               	subwf	___lwdiv@dividend,w
  4415  1A94                     u3095:	
  4416  1A94  1C03               	skipc
  4417  1A95  2A97               	goto	u3091
  4418  1A96  2A98               	goto	u3090
  4419  1A97                     u3091:	
  4420  1A97  2A9F               	goto	l2404
  4421  1A98                     u3090:	
  4422  1A98                     l2400:	
  4423  1A98  0820               	movf	___lwdiv@divisor,w
  4424  1A99  02A2               	subwf	___lwdiv@dividend,f
  4425  1A9A  0821               	movf	___lwdiv@divisor+1,w
  4426  1A9B  1C03               	skipc
  4427  1A9C  03A3               	decf	___lwdiv@dividend+1,f
  4428  1A9D  02A3               	subwf	___lwdiv@dividend+1,f
  4429  1A9E                     l2402:	
  4430  1A9E  1424               	bsf	___lwdiv@quotient,0
  4431  1A9F                     l2404:	
  4432  1A9F  3001               	movlw	1
  4433  1AA0                     u3105:	
  4434  1AA0  1003               	clrc
  4435  1AA1  0CA1               	rrf	___lwdiv@divisor+1,f
  4436  1AA2  0CA0               	rrf	___lwdiv@divisor,f
  4437  1AA3  3EFF               	addlw	-1
  4438  1AA4  1D03               	skipz
  4439  1AA5  2AA0               	goto	u3105
  4440  1AA6                     l2406:	
  4441  1AA6  3001               	movlw	1
  4442  1AA7  02A6               	subwf	___lwdiv@counter,f
  4443  1AA8  1D03               	btfss	3,2
  4444  1AA9  2AAB               	goto	u3111
  4445  1AAA  2AAC               	goto	u3110
  4446  1AAB                     u3111:	
  4447  1AAB  2A87               	goto	l2398
  4448  1AAC                     u3110:	
  4449  1AAC                     l2408:	
  4450  1AAC  0825               	movf	___lwdiv@quotient+1,w
  4451  1AAD  00A1               	movwf	?___lwdiv+1
  4452  1AAE  0824               	movf	___lwdiv@quotient,w
  4453  1AAF  00A0               	movwf	?___lwdiv
  4454  1AB0                     l679:	
  4455  1AB0  0008               	return
  4456  1AB1                     __end_of___lwdiv:	
  4457                           
  4458                           	psect	text10
  4459  093C                     __ptext10:	
  4460 ;; *************** function ___flmul *****************
  4461 ;; Defined at:
  4462 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcmul.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;  b               4   10[BANK0 ] unsigned int 
  4465 ;;  a               4   14[BANK0 ] unsigned int 
  4466 ;; Auto vars:     Size  Location     Type
  4467 ;;  prod            4   30[BANK0 ] struct .
  4468 ;;  grs             4   24[BANK0 ] unsigned long 
  4469 ;;  temp            2   34[BANK0 ] struct .
  4470 ;;  bexp            1   29[BANK0 ] unsigned char 
  4471 ;;  aexp            1   28[BANK0 ] unsigned char 
  4472 ;;  sign            1   23[BANK0 ] unsigned char 
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  4   10[BANK0 ] unsigned char 
  4475 ;; Registers used:
  4476 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4482 ;;      Params:         0       8       0       0       0
  4483 ;;      Locals:         0      13       0       0       0
  4484 ;;      Temps:          0       5       0       0       0
  4485 ;;      Totals:         0      26       0       0       0
  4486 ;;Total ram usage:       26 bytes
  4487 ;; Hardware stack levels used:    1
  4488 ;; Hardware stack levels required when called:    2
  4489 ;; This function calls:
  4490 ;;		__Umul8_16
  4491 ;; This function is called by:
  4492 ;;		_main
  4493 ;;		_fround
  4494 ;;		_scale
  4495 ;;		_sprintf
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function ___flmul
  4501  093C                     ___flmul:	
  4502  093C                     l2628:	
  4503                           ;incstack = 0
  4504                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4505                           
  4506  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4507  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4508  093E  082D               	movf	___flmul@b+3,w
  4509  093F  3980               	andlw	128
  4510  0940  00B2               	movwf	??___flmul
  4511  0941  0832               	movf	??___flmul,w
  4512  0942  00B7               	movwf	___flmul@sign
  4513  0943                     l2630:	
  4514  0943  082D               	movf	___flmul@b+3,w
  4515  0944  00B2               	movwf	??___flmul
  4516  0945  0732               	addwf	??___flmul,w
  4517  0946  00B3               	movwf	??___flmul+1
  4518  0947  0833               	movf	??___flmul+1,w
  4519  0948  00BD               	movwf	___flmul@bexp
  4520  0949                     l2632:	
  4521  0949  1FAC               	btfss	___flmul@b+2,7
  4522  094A  294C               	goto	u3641
  4523  094B  294D               	goto	u3640
  4524  094C                     u3641:	
  4525  094C  294E               	goto	l2636
  4526  094D                     u3640:	
  4527  094D                     l2634:	
  4528  094D  143D               	bsf	___flmul@bexp,0
  4529  094E                     l2636:	
  4530  094E  083D               	movf	___flmul@bexp,w
  4531  094F  1903               	btfsc	3,2
  4532  0950  2952               	goto	u3651
  4533  0951  2953               	goto	u3650
  4534  0952                     u3651:	
  4535  0952  2962               	goto	l2644
  4536  0953                     u3650:	
  4537  0953                     l2638:	
  4538  0953  0A3D               	incf	___flmul@bexp,w
  4539  0954  1D03               	btfss	3,2
  4540  0955  2957               	goto	u3661
  4541  0956  2958               	goto	u3660
  4542  0957                     u3661:	
  4543  0957  2960               	goto	l2642
  4544  0958                     u3660:	
  4545  0958                     l2640:	
  4546  0958  3000               	movlw	0
  4547  0959  00AD               	movwf	___flmul@b+3
  4548  095A  3000               	movlw	0
  4549  095B  00AC               	movwf	___flmul@b+2
  4550  095C  3000               	movlw	0
  4551  095D  00AB               	movwf	___flmul@b+1
  4552  095E  3000               	movlw	0
  4553  095F  00AA               	movwf	___flmul@b
  4554  0960                     l2642:	
  4555  0960  17AC               	bsf	___flmul@b+2,7
  4556  0961  296A               	goto	l2646
  4557  0962                     l2644:	
  4558  0962  3000               	movlw	0
  4559  0963  00AD               	movwf	___flmul@b+3
  4560  0964  3000               	movlw	0
  4561  0965  00AC               	movwf	___flmul@b+2
  4562  0966  3000               	movlw	0
  4563  0967  00AB               	movwf	___flmul@b+1
  4564  0968  3000               	movlw	0
  4565  0969  00AA               	movwf	___flmul@b
  4566  096A                     l2646:	
  4567  096A  0831               	movf	___flmul@a+3,w
  4568  096B  3980               	andlw	128
  4569  096C  00B2               	movwf	??___flmul
  4570  096D  0832               	movf	??___flmul,w
  4571  096E  06B7               	xorwf	___flmul@sign,f
  4572  096F                     l2648:	
  4573  096F  0831               	movf	___flmul@a+3,w
  4574  0970  00B2               	movwf	??___flmul
  4575  0971  0732               	addwf	??___flmul,w
  4576  0972  00B3               	movwf	??___flmul+1
  4577  0973  0833               	movf	??___flmul+1,w
  4578  0974  00BC               	movwf	___flmul@aexp
  4579  0975                     l2650:	
  4580  0975  1FB0               	btfss	___flmul@a+2,7
  4581  0976  2978               	goto	u3671
  4582  0977  2979               	goto	u3670
  4583  0978                     u3671:	
  4584  0978  297A               	goto	l2654
  4585  0979                     u3670:	
  4586  0979                     l2652:	
  4587  0979  143C               	bsf	___flmul@aexp,0
  4588  097A                     l2654:	
  4589  097A  083C               	movf	___flmul@aexp,w
  4590  097B  1903               	btfsc	3,2
  4591  097C  297E               	goto	u3681
  4592  097D  297F               	goto	u3680
  4593  097E                     u3681:	
  4594  097E  298E               	goto	l2662
  4595  097F                     u3680:	
  4596  097F                     l2656:	
  4597  097F  0A3C               	incf	___flmul@aexp,w
  4598  0980  1D03               	btfss	3,2
  4599  0981  2983               	goto	u3691
  4600  0982  2984               	goto	u3690
  4601  0983                     u3691:	
  4602  0983  298C               	goto	l2660
  4603  0984                     u3690:	
  4604  0984                     l2658:	
  4605  0984  3000               	movlw	0
  4606  0985  00B1               	movwf	___flmul@a+3
  4607  0986  3000               	movlw	0
  4608  0987  00B0               	movwf	___flmul@a+2
  4609  0988  3000               	movlw	0
  4610  0989  00AF               	movwf	___flmul@a+1
  4611  098A  3000               	movlw	0
  4612  098B  00AE               	movwf	___flmul@a
  4613  098C                     l2660:	
  4614  098C  17B0               	bsf	___flmul@a+2,7
  4615  098D  2996               	goto	l2664
  4616  098E                     l2662:	
  4617  098E  3000               	movlw	0
  4618  098F  00B1               	movwf	___flmul@a+3
  4619  0990  3000               	movlw	0
  4620  0991  00B0               	movwf	___flmul@a+2
  4621  0992  3000               	movlw	0
  4622  0993  00AF               	movwf	___flmul@a+1
  4623  0994  3000               	movlw	0
  4624  0995  00AE               	movwf	___flmul@a
  4625  0996                     l2664:	
  4626  0996  083C               	movf	___flmul@aexp,w
  4627  0997  1903               	btfsc	3,2
  4628  0998  299A               	goto	u3701
  4629  0999  299B               	goto	u3700
  4630  099A                     u3701:	
  4631  099A  29A0               	goto	l2668
  4632  099B                     u3700:	
  4633  099B                     l2666:	
  4634  099B  083D               	movf	___flmul@bexp,w
  4635  099C  1D03               	btfss	3,2
  4636  099D  299F               	goto	u3711
  4637  099E  29A0               	goto	u3710
  4638  099F                     u3711:	
  4639  099F  29A9               	goto	l2672
  4640  09A0                     u3710:	
  4641  09A0                     l2668:	
  4642  09A0  3000               	movlw	0
  4643  09A1  00AD               	movwf	?___flmul+3
  4644  09A2  3000               	movlw	0
  4645  09A3  00AC               	movwf	?___flmul+2
  4646  09A4  3000               	movlw	0
  4647  09A5  00AB               	movwf	?___flmul+1
  4648  09A6  3000               	movlw	0
  4649  09A7  00AA               	movwf	?___flmul
  4650  09A8  2C9C               	goto	l796
  4651  09A9                     l2672:	
  4652  09A9  082A               	movf	___flmul@b,w
  4653  09AA  00B2               	movwf	??___flmul
  4654  09AB  0832               	movf	??___flmul,w
  4655  09AC  00F4               	movwf	__Umul8_16@multiplicand
  4656  09AD  0830               	movf	___flmul@a+2,w
  4657  09AE  160A  158A  21FE  120A  158A  	fcall	__Umul8_16
  4658  09B3  0875               	movf	?__Umul8_16+1,w
  4659  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4660  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4661  09B6  00C3               	movwf	___flmul@temp+1
  4662  09B7  0874               	movf	?__Umul8_16,w
  4663  09B8  00C2               	movwf	___flmul@temp
  4664  09B9                     l2674:	
  4665  09B9  0842               	movf	___flmul@temp,w
  4666  09BA  00B2               	movwf	??___flmul
  4667  09BB  01B3               	clrf	??___flmul+1
  4668  09BC  01B4               	clrf	??___flmul+2
  4669  09BD  01B5               	clrf	??___flmul+3
  4670  09BE  0835               	movf	??___flmul+3,w
  4671  09BF  00BB               	movwf	___flmul@grs+3
  4672  09C0  0834               	movf	??___flmul+2,w
  4673  09C1  00BA               	movwf	___flmul@grs+2
  4674  09C2  0833               	movf	??___flmul+1,w
  4675  09C3  00B9               	movwf	___flmul@grs+1
  4676  09C4  0832               	movf	??___flmul,w
  4677  09C5  00B8               	movwf	___flmul@grs
  4678  09C6                     l2676:	
  4679  09C6  0843               	movf	___flmul@temp+1,w
  4680  09C7  00B2               	movwf	??___flmul
  4681  09C8  01B3               	clrf	??___flmul+1
  4682  09C9  01B4               	clrf	??___flmul+2
  4683  09CA  01B5               	clrf	??___flmul+3
  4684  09CB  0835               	movf	??___flmul+3,w
  4685  09CC  00C1               	movwf	___flmul@prod+3
  4686  09CD  0834               	movf	??___flmul+2,w
  4687  09CE  00C0               	movwf	___flmul@prod+2
  4688  09CF  0833               	movf	??___flmul+1,w
  4689  09D0  00BF               	movwf	___flmul@prod+1
  4690  09D1  0832               	movf	??___flmul,w
  4691  09D2  00BE               	movwf	___flmul@prod
  4692  09D3  082B               	movf	___flmul@b+1,w
  4693  09D4  00B2               	movwf	??___flmul
  4694  09D5  0832               	movf	??___flmul,w
  4695  09D6  00F4               	movwf	__Umul8_16@multiplicand
  4696  09D7  082F               	movf	___flmul@a+1,w
  4697  09D8  160A  158A  21FE  120A  158A  	fcall	__Umul8_16
  4698  09DD  0875               	movf	?__Umul8_16+1,w
  4699  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4700  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4701  09E0  00C3               	movwf	___flmul@temp+1
  4702  09E1  0874               	movf	?__Umul8_16,w
  4703  09E2  00C2               	movwf	___flmul@temp
  4704  09E3                     l2678:	
  4705  09E3  0842               	movf	___flmul@temp,w
  4706  09E4  00B2               	movwf	??___flmul
  4707  09E5  01B3               	clrf	??___flmul+1
  4708  09E6  01B4               	clrf	??___flmul+2
  4709  09E7  01B5               	clrf	??___flmul+3
  4710  09E8  0832               	movf	??___flmul,w
  4711  09E9  07B8               	addwf	___flmul@grs,f
  4712  09EA  0833               	movf	??___flmul+1,w
  4713  09EB  1103               	clrz
  4714  09EC  1803               	skipnc
  4715  09ED  3E01               	addlw	1
  4716  09EE  1903               	skipnz
  4717  09EF  29F1               	goto	u3721
  4718  09F0  07B9               	addwf	___flmul@grs+1,f
  4719  09F1                     u3721:	
  4720  09F1  0834               	movf	??___flmul+2,w
  4721  09F2  1103               	clrz
  4722  09F3  1803               	skipnc
  4723  09F4  3E01               	addlw	1
  4724  09F5  1903               	skipnz
  4725  09F6  29F8               	goto	u3722
  4726  09F7  07BA               	addwf	___flmul@grs+2,f
  4727  09F8                     u3722:	
  4728  09F8  0835               	movf	??___flmul+3,w
  4729  09F9  1103               	clrz
  4730  09FA  1803               	skipnc
  4731  09FB  3E01               	addlw	1
  4732  09FC  1903               	skipnz
  4733  09FD  29FF               	goto	u3723
  4734  09FE  07BB               	addwf	___flmul@grs+3,f
  4735  09FF                     u3723:	
  4736  09FF                     l2680:	
  4737  09FF  0843               	movf	___flmul@temp+1,w
  4738  0A00  00B2               	movwf	??___flmul
  4739  0A01  01B3               	clrf	??___flmul+1
  4740  0A02  01B4               	clrf	??___flmul+2
  4741  0A03  01B5               	clrf	??___flmul+3
  4742  0A04  0832               	movf	??___flmul,w
  4743  0A05  07BE               	addwf	___flmul@prod,f
  4744  0A06  0833               	movf	??___flmul+1,w
  4745  0A07  1103               	clrz
  4746  0A08  1803               	skipnc
  4747  0A09  3E01               	addlw	1
  4748  0A0A  1903               	skipnz
  4749  0A0B  2A0D               	goto	u3731
  4750  0A0C  07BF               	addwf	___flmul@prod+1,f
  4751  0A0D                     u3731:	
  4752  0A0D  0834               	movf	??___flmul+2,w
  4753  0A0E  1103               	clrz
  4754  0A0F  1803               	skipnc
  4755  0A10  3E01               	addlw	1
  4756  0A11  1903               	skipnz
  4757  0A12  2A14               	goto	u3732
  4758  0A13  07C0               	addwf	___flmul@prod+2,f
  4759  0A14                     u3732:	
  4760  0A14  0835               	movf	??___flmul+3,w
  4761  0A15  1103               	clrz
  4762  0A16  1803               	skipnc
  4763  0A17  3E01               	addlw	1
  4764  0A18  1903               	skipnz
  4765  0A19  2A1B               	goto	u3733
  4766  0A1A  07C1               	addwf	___flmul@prod+3,f
  4767  0A1B                     u3733:	
  4768  0A1B  082C               	movf	___flmul@b+2,w
  4769  0A1C  00B2               	movwf	??___flmul
  4770  0A1D  0832               	movf	??___flmul,w
  4771  0A1E  00F4               	movwf	__Umul8_16@multiplicand
  4772  0A1F  082E               	movf	___flmul@a,w
  4773  0A20  160A  158A  21FE  120A  158A  	fcall	__Umul8_16
  4774  0A25  0875               	movf	?__Umul8_16+1,w
  4775  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4776  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4777  0A28  00C3               	movwf	___flmul@temp+1
  4778  0A29  0874               	movf	?__Umul8_16,w
  4779  0A2A  00C2               	movwf	___flmul@temp
  4780  0A2B                     l2682:	
  4781  0A2B  0842               	movf	___flmul@temp,w
  4782  0A2C  00B2               	movwf	??___flmul
  4783  0A2D  01B3               	clrf	??___flmul+1
  4784  0A2E  01B4               	clrf	??___flmul+2
  4785  0A2F  01B5               	clrf	??___flmul+3
  4786  0A30  0832               	movf	??___flmul,w
  4787  0A31  07B8               	addwf	___flmul@grs,f
  4788  0A32  0833               	movf	??___flmul+1,w
  4789  0A33  1103               	clrz
  4790  0A34  1803               	skipnc
  4791  0A35  3E01               	addlw	1
  4792  0A36  1903               	skipnz
  4793  0A37  2A39               	goto	u3741
  4794  0A38  07B9               	addwf	___flmul@grs+1,f
  4795  0A39                     u3741:	
  4796  0A39  0834               	movf	??___flmul+2,w
  4797  0A3A  1103               	clrz
  4798  0A3B  1803               	skipnc
  4799  0A3C  3E01               	addlw	1
  4800  0A3D  1903               	skipnz
  4801  0A3E  2A40               	goto	u3742
  4802  0A3F  07BA               	addwf	___flmul@grs+2,f
  4803  0A40                     u3742:	
  4804  0A40  0835               	movf	??___flmul+3,w
  4805  0A41  1103               	clrz
  4806  0A42  1803               	skipnc
  4807  0A43  3E01               	addlw	1
  4808  0A44  1903               	skipnz
  4809  0A45  2A47               	goto	u3743
  4810  0A46  07BB               	addwf	___flmul@grs+3,f
  4811  0A47                     u3743:	
  4812  0A47                     l2684:	
  4813  0A47  0843               	movf	___flmul@temp+1,w
  4814  0A48  00B2               	movwf	??___flmul
  4815  0A49  01B3               	clrf	??___flmul+1
  4816  0A4A  01B4               	clrf	??___flmul+2
  4817  0A4B  01B5               	clrf	??___flmul+3
  4818  0A4C  0832               	movf	??___flmul,w
  4819  0A4D  07BE               	addwf	___flmul@prod,f
  4820  0A4E  0833               	movf	??___flmul+1,w
  4821  0A4F  1103               	clrz
  4822  0A50  1803               	skipnc
  4823  0A51  3E01               	addlw	1
  4824  0A52  1903               	skipnz
  4825  0A53  2A55               	goto	u3751
  4826  0A54  07BF               	addwf	___flmul@prod+1,f
  4827  0A55                     u3751:	
  4828  0A55  0834               	movf	??___flmul+2,w
  4829  0A56  1103               	clrz
  4830  0A57  1803               	skipnc
  4831  0A58  3E01               	addlw	1
  4832  0A59  1903               	skipnz
  4833  0A5A  2A5C               	goto	u3752
  4834  0A5B  07C0               	addwf	___flmul@prod+2,f
  4835  0A5C                     u3752:	
  4836  0A5C  0835               	movf	??___flmul+3,w
  4837  0A5D  1103               	clrz
  4838  0A5E  1803               	skipnc
  4839  0A5F  3E01               	addlw	1
  4840  0A60  1903               	skipnz
  4841  0A61  2A63               	goto	u3753
  4842  0A62  07C1               	addwf	___flmul@prod+3,f
  4843  0A63                     u3753:	
  4844  0A63                     l2686:	
  4845  0A63  3008               	movlw	8
  4846  0A64  00B2               	movwf	??___flmul
  4847  0A65                     u3765:	
  4848  0A65  1003               	clrc
  4849  0A66  0DB8               	rlf	___flmul@grs,f
  4850  0A67  0DB9               	rlf	___flmul@grs+1,f
  4851  0A68  0DBA               	rlf	___flmul@grs+2,f
  4852  0A69  0DBB               	rlf	___flmul@grs+3,f
  4853  0A6A  0BB2               	decfsz	??___flmul,f
  4854  0A6B  2A65               	goto	u3765
  4855  0A6C                     l2688:	
  4856  0A6C  082B               	movf	___flmul@b+1,w
  4857  0A6D  00B2               	movwf	??___flmul
  4858  0A6E  0832               	movf	??___flmul,w
  4859  0A6F  00F4               	movwf	__Umul8_16@multiplicand
  4860  0A70  082E               	movf	___flmul@a,w
  4861  0A71  160A  158A  21FE  120A  158A  	fcall	__Umul8_16
  4862  0A76  0875               	movf	?__Umul8_16+1,w
  4863  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4864  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4865  0A79  00C3               	movwf	___flmul@temp+1
  4866  0A7A  0874               	movf	?__Umul8_16,w
  4867  0A7B  00C2               	movwf	___flmul@temp
  4868  0A7C                     l2690:	
  4869  0A7C  0842               	movf	___flmul@temp,w
  4870  0A7D  00B2               	movwf	??___flmul
  4871  0A7E  0843               	movf	___flmul@temp+1,w
  4872  0A7F  00B3               	movwf	??___flmul+1
  4873  0A80  01B4               	clrf	??___flmul+2
  4874  0A81  01B5               	clrf	??___flmul+3
  4875  0A82  0832               	movf	??___flmul,w
  4876  0A83  07B8               	addwf	___flmul@grs,f
  4877  0A84  0833               	movf	??___flmul+1,w
  4878  0A85  1103               	clrz
  4879  0A86  1803               	skipnc
  4880  0A87  3E01               	addlw	1
  4881  0A88  1903               	skipnz
  4882  0A89  2A8B               	goto	u3771
  4883  0A8A  07B9               	addwf	___flmul@grs+1,f
  4884  0A8B                     u3771:	
  4885  0A8B  0834               	movf	??___flmul+2,w
  4886  0A8C  1103               	clrz
  4887  0A8D  1803               	skipnc
  4888  0A8E  3E01               	addlw	1
  4889  0A8F  1903               	skipnz
  4890  0A90  2A92               	goto	u3772
  4891  0A91  07BA               	addwf	___flmul@grs+2,f
  4892  0A92                     u3772:	
  4893  0A92  0835               	movf	??___flmul+3,w
  4894  0A93  1103               	clrz
  4895  0A94  1803               	skipnc
  4896  0A95  3E01               	addlw	1
  4897  0A96  1903               	skipnz
  4898  0A97  2A99               	goto	u3773
  4899  0A98  07BB               	addwf	___flmul@grs+3,f
  4900  0A99                     u3773:	
  4901  0A99                     l2692:	
  4902  0A99  082A               	movf	___flmul@b,w
  4903  0A9A  00B2               	movwf	??___flmul
  4904  0A9B  0832               	movf	??___flmul,w
  4905  0A9C  00F4               	movwf	__Umul8_16@multiplicand
  4906  0A9D  082F               	movf	___flmul@a+1,w
  4907  0A9E  160A  158A  21FE  120A  158A  	fcall	__Umul8_16
  4908  0AA3  0875               	movf	?__Umul8_16+1,w
  4909  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4910  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4911  0AA6  00C3               	movwf	___flmul@temp+1
  4912  0AA7  0874               	movf	?__Umul8_16,w
  4913  0AA8  00C2               	movwf	___flmul@temp
  4914  0AA9                     l2694:	
  4915  0AA9  0842               	movf	___flmul@temp,w
  4916  0AAA  00B2               	movwf	??___flmul
  4917  0AAB  0843               	movf	___flmul@temp+1,w
  4918  0AAC  00B3               	movwf	??___flmul+1
  4919  0AAD  01B4               	clrf	??___flmul+2
  4920  0AAE  01B5               	clrf	??___flmul+3
  4921  0AAF  0832               	movf	??___flmul,w
  4922  0AB0  07B8               	addwf	___flmul@grs,f
  4923  0AB1  0833               	movf	??___flmul+1,w
  4924  0AB2  1103               	clrz
  4925  0AB3  1803               	skipnc
  4926  0AB4  3E01               	addlw	1
  4927  0AB5  1903               	skipnz
  4928  0AB6  2AB8               	goto	u3781
  4929  0AB7  07B9               	addwf	___flmul@grs+1,f
  4930  0AB8                     u3781:	
  4931  0AB8  0834               	movf	??___flmul+2,w
  4932  0AB9  1103               	clrz
  4933  0ABA  1803               	skipnc
  4934  0ABB  3E01               	addlw	1
  4935  0ABC  1903               	skipnz
  4936  0ABD  2ABF               	goto	u3782
  4937  0ABE  07BA               	addwf	___flmul@grs+2,f
  4938  0ABF                     u3782:	
  4939  0ABF  0835               	movf	??___flmul+3,w
  4940  0AC0  1103               	clrz
  4941  0AC1  1803               	skipnc
  4942  0AC2  3E01               	addlw	1
  4943  0AC3  1903               	skipnz
  4944  0AC4  2AC6               	goto	u3783
  4945  0AC5  07BB               	addwf	___flmul@grs+3,f
  4946  0AC6                     u3783:	
  4947  0AC6                     l2696:	
  4948  0AC6  3008               	movlw	8
  4949  0AC7  00B2               	movwf	??___flmul
  4950  0AC8                     u3795:	
  4951  0AC8  1003               	clrc
  4952  0AC9  0DB8               	rlf	___flmul@grs,f
  4953  0ACA  0DB9               	rlf	___flmul@grs+1,f
  4954  0ACB  0DBA               	rlf	___flmul@grs+2,f
  4955  0ACC  0DBB               	rlf	___flmul@grs+3,f
  4956  0ACD  0BB2               	decfsz	??___flmul,f
  4957  0ACE  2AC8               	goto	u3795
  4958  0ACF  082A               	movf	___flmul@b,w
  4959  0AD0  00B2               	movwf	??___flmul
  4960  0AD1  0832               	movf	??___flmul,w
  4961  0AD2  00F4               	movwf	__Umul8_16@multiplicand
  4962  0AD3  082E               	movf	___flmul@a,w
  4963  0AD4  160A  158A  21FE  120A  158A  	fcall	__Umul8_16
  4964  0AD9  0875               	movf	?__Umul8_16+1,w
  4965  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4966  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4967  0ADC  00C3               	movwf	___flmul@temp+1
  4968  0ADD  0874               	movf	?__Umul8_16,w
  4969  0ADE  00C2               	movwf	___flmul@temp
  4970  0ADF                     l2698:	
  4971  0ADF  0842               	movf	___flmul@temp,w
  4972  0AE0  00B2               	movwf	??___flmul
  4973  0AE1  0843               	movf	___flmul@temp+1,w
  4974  0AE2  00B3               	movwf	??___flmul+1
  4975  0AE3  01B4               	clrf	??___flmul+2
  4976  0AE4  01B5               	clrf	??___flmul+3
  4977  0AE5  0832               	movf	??___flmul,w
  4978  0AE6  07B8               	addwf	___flmul@grs,f
  4979  0AE7  0833               	movf	??___flmul+1,w
  4980  0AE8  1103               	clrz
  4981  0AE9  1803               	skipnc
  4982  0AEA  3E01               	addlw	1
  4983  0AEB  1903               	skipnz
  4984  0AEC  2AEE               	goto	u3801
  4985  0AED  07B9               	addwf	___flmul@grs+1,f
  4986  0AEE                     u3801:	
  4987  0AEE  0834               	movf	??___flmul+2,w
  4988  0AEF  1103               	clrz
  4989  0AF0  1803               	skipnc
  4990  0AF1  3E01               	addlw	1
  4991  0AF2  1903               	skipnz
  4992  0AF3  2AF5               	goto	u3802
  4993  0AF4  07BA               	addwf	___flmul@grs+2,f
  4994  0AF5                     u3802:	
  4995  0AF5  0835               	movf	??___flmul+3,w
  4996  0AF6  1103               	clrz
  4997  0AF7  1803               	skipnc
  4998  0AF8  3E01               	addlw	1
  4999  0AF9  1903               	skipnz
  5000  0AFA  2AFC               	goto	u3803
  5001  0AFB  07BB               	addwf	___flmul@grs+3,f
  5002  0AFC                     u3803:	
  5003  0AFC                     l2700:	
  5004  0AFC  082B               	movf	___flmul@b+1,w
  5005  0AFD  00B2               	movwf	??___flmul
  5006  0AFE  0832               	movf	??___flmul,w
  5007  0AFF  00F4               	movwf	__Umul8_16@multiplicand
  5008  0B00  0830               	movf	___flmul@a+2,w
  5009  0B01  160A  158A  21FE  120A  158A  	fcall	__Umul8_16
  5010  0B06  0875               	movf	?__Umul8_16+1,w
  5011  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5012  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5013  0B09  00C3               	movwf	___flmul@temp+1
  5014  0B0A  0874               	movf	?__Umul8_16,w
  5015  0B0B  00C2               	movwf	___flmul@temp
  5016  0B0C  0842               	movf	___flmul@temp,w
  5017  0B0D  00B2               	movwf	??___flmul
  5018  0B0E  0843               	movf	___flmul@temp+1,w
  5019  0B0F  00B3               	movwf	??___flmul+1
  5020  0B10  01B4               	clrf	??___flmul+2
  5021  0B11  01B5               	clrf	??___flmul+3
  5022  0B12  0832               	movf	??___flmul,w
  5023  0B13  07BE               	addwf	___flmul@prod,f
  5024  0B14  0833               	movf	??___flmul+1,w
  5025  0B15  1103               	clrz
  5026  0B16  1803               	skipnc
  5027  0B17  3E01               	addlw	1
  5028  0B18  1903               	skipnz
  5029  0B19  2B1B               	goto	u3811
  5030  0B1A  07BF               	addwf	___flmul@prod+1,f
  5031  0B1B                     u3811:	
  5032  0B1B  0834               	movf	??___flmul+2,w
  5033  0B1C  1103               	clrz
  5034  0B1D  1803               	skipnc
  5035  0B1E  3E01               	addlw	1
  5036  0B1F  1903               	skipnz
  5037  0B20  2B22               	goto	u3812
  5038  0B21  07C0               	addwf	___flmul@prod+2,f
  5039  0B22                     u3812:	
  5040  0B22  0835               	movf	??___flmul+3,w
  5041  0B23  1103               	clrz
  5042  0B24  1803               	skipnc
  5043  0B25  3E01               	addlw	1
  5044  0B26  1903               	skipnz
  5045  0B27  2B29               	goto	u3813
  5046  0B28  07C1               	addwf	___flmul@prod+3,f
  5047  0B29                     u3813:	
  5048  0B29                     l2702:	
  5049  0B29  082C               	movf	___flmul@b+2,w
  5050  0B2A  00B2               	movwf	??___flmul
  5051  0B2B  0832               	movf	??___flmul,w
  5052  0B2C  00F4               	movwf	__Umul8_16@multiplicand
  5053  0B2D  082F               	movf	___flmul@a+1,w
  5054  0B2E  160A  158A  21FE  120A  158A  	fcall	__Umul8_16
  5055  0B33  0875               	movf	?__Umul8_16+1,w
  5056  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5057  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5058  0B36  00C3               	movwf	___flmul@temp+1
  5059  0B37  0874               	movf	?__Umul8_16,w
  5060  0B38  00C2               	movwf	___flmul@temp
  5061  0B39                     l2704:	
  5062  0B39  0842               	movf	___flmul@temp,w
  5063  0B3A  00B2               	movwf	??___flmul
  5064  0B3B  0843               	movf	___flmul@temp+1,w
  5065  0B3C  00B3               	movwf	??___flmul+1
  5066  0B3D  01B4               	clrf	??___flmul+2
  5067  0B3E  01B5               	clrf	??___flmul+3
  5068  0B3F  0832               	movf	??___flmul,w
  5069  0B40  07BE               	addwf	___flmul@prod,f
  5070  0B41  0833               	movf	??___flmul+1,w
  5071  0B42  1103               	clrz
  5072  0B43  1803               	skipnc
  5073  0B44  3E01               	addlw	1
  5074  0B45  1903               	skipnz
  5075  0B46  2B48               	goto	u3821
  5076  0B47  07BF               	addwf	___flmul@prod+1,f
  5077  0B48                     u3821:	
  5078  0B48  0834               	movf	??___flmul+2,w
  5079  0B49  1103               	clrz
  5080  0B4A  1803               	skipnc
  5081  0B4B  3E01               	addlw	1
  5082  0B4C  1903               	skipnz
  5083  0B4D  2B4F               	goto	u3822
  5084  0B4E  07C0               	addwf	___flmul@prod+2,f
  5085  0B4F                     u3822:	
  5086  0B4F  0835               	movf	??___flmul+3,w
  5087  0B50  1103               	clrz
  5088  0B51  1803               	skipnc
  5089  0B52  3E01               	addlw	1
  5090  0B53  1903               	skipnz
  5091  0B54  2B56               	goto	u3823
  5092  0B55  07C1               	addwf	___flmul@prod+3,f
  5093  0B56                     u3823:	
  5094  0B56  082C               	movf	___flmul@b+2,w
  5095  0B57  00B2               	movwf	??___flmul
  5096  0B58  0832               	movf	??___flmul,w
  5097  0B59  00F4               	movwf	__Umul8_16@multiplicand
  5098  0B5A  0830               	movf	___flmul@a+2,w
  5099  0B5B  160A  158A  21FE  120A  158A  	fcall	__Umul8_16
  5100  0B60  0875               	movf	?__Umul8_16+1,w
  5101  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5102  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  5103  0B63  00C3               	movwf	___flmul@temp+1
  5104  0B64  0874               	movf	?__Umul8_16,w
  5105  0B65  00C2               	movwf	___flmul@temp
  5106  0B66                     l2706:	
  5107  0B66  0842               	movf	___flmul@temp,w
  5108  0B67  00B2               	movwf	??___flmul
  5109  0B68  0843               	movf	___flmul@temp+1,w
  5110  0B69  00B3               	movwf	??___flmul+1
  5111  0B6A  01B4               	clrf	??___flmul+2
  5112  0B6B  01B5               	clrf	??___flmul+3
  5113  0B6C  3008               	movlw	8
  5114  0B6D                     u3835:	
  5115  0B6D  1003               	clrc
  5116  0B6E  0DB2               	rlf	??___flmul,f
  5117  0B6F  0DB3               	rlf	??___flmul+1,f
  5118  0B70  0DB4               	rlf	??___flmul+2,f
  5119  0B71  0DB5               	rlf	??___flmul+3,f
  5120  0B72                     u3830:	
  5121  0B72  3EFF               	addlw	-1
  5122  0B73  1D03               	skipz
  5123  0B74  2B6D               	goto	u3835
  5124  0B75  0832               	movf	??___flmul,w
  5125  0B76  07BE               	addwf	___flmul@prod,f
  5126  0B77  0833               	movf	??___flmul+1,w
  5127  0B78  1103               	clrz
  5128  0B79  1803               	skipnc
  5129  0B7A  3E01               	addlw	1
  5130  0B7B  1903               	skipnz
  5131  0B7C  2B7E               	goto	u3841
  5132  0B7D  07BF               	addwf	___flmul@prod+1,f
  5133  0B7E                     u3841:	
  5134  0B7E  0834               	movf	??___flmul+2,w
  5135  0B7F  1103               	clrz
  5136  0B80  1803               	skipnc
  5137  0B81  3E01               	addlw	1
  5138  0B82  1903               	skipnz
  5139  0B83  2B85               	goto	u3842
  5140  0B84  07C0               	addwf	___flmul@prod+2,f
  5141  0B85                     u3842:	
  5142  0B85  0835               	movf	??___flmul+3,w
  5143  0B86  1103               	clrz
  5144  0B87  1803               	skipnc
  5145  0B88  3E01               	addlw	1
  5146  0B89  1903               	skipnz
  5147  0B8A  2B8C               	goto	u3843
  5148  0B8B  07C1               	addwf	___flmul@prod+3,f
  5149  0B8C                     u3843:	
  5150  0B8C                     l2708:	
  5151  0B8C  0838               	movf	___flmul@grs,w
  5152  0B8D  00B2               	movwf	??___flmul
  5153  0B8E  0839               	movf	___flmul@grs+1,w
  5154  0B8F  00B3               	movwf	??___flmul+1
  5155  0B90  083A               	movf	___flmul@grs+2,w
  5156  0B91  00B4               	movwf	??___flmul+2
  5157  0B92  083B               	movf	___flmul@grs+3,w
  5158  0B93  00B5               	movwf	??___flmul+3
  5159  0B94  3018               	movlw	24
  5160  0B95                     u3855:	
  5161  0B95  1003               	clrc
  5162  0B96  0CB5               	rrf	??___flmul+3,f
  5163  0B97  0CB4               	rrf	??___flmul+2,f
  5164  0B98  0CB3               	rrf	??___flmul+1,f
  5165  0B99  0CB2               	rrf	??___flmul,f
  5166  0B9A                     u3850:	
  5167  0B9A  3EFF               	addlw	-1
  5168  0B9B  1D03               	skipz
  5169  0B9C  2B95               	goto	u3855
  5170  0B9D  0832               	movf	??___flmul,w
  5171  0B9E  07BE               	addwf	___flmul@prod,f
  5172  0B9F  0833               	movf	??___flmul+1,w
  5173  0BA0  1103               	clrz
  5174  0BA1  1803               	skipnc
  5175  0BA2  3E01               	addlw	1
  5176  0BA3  1903               	skipnz
  5177  0BA4  2BA6               	goto	u3861
  5178  0BA5  07BF               	addwf	___flmul@prod+1,f
  5179  0BA6                     u3861:	
  5180  0BA6  0834               	movf	??___flmul+2,w
  5181  0BA7  1103               	clrz
  5182  0BA8  1803               	skipnc
  5183  0BA9  3E01               	addlw	1
  5184  0BAA  1903               	skipnz
  5185  0BAB  2BAD               	goto	u3862
  5186  0BAC  07C0               	addwf	___flmul@prod+2,f
  5187  0BAD                     u3862:	
  5188  0BAD  0835               	movf	??___flmul+3,w
  5189  0BAE  1103               	clrz
  5190  0BAF  1803               	skipnc
  5191  0BB0  3E01               	addlw	1
  5192  0BB1  1903               	skipnz
  5193  0BB2  2BB4               	goto	u3863
  5194  0BB3  07C1               	addwf	___flmul@prod+3,f
  5195  0BB4                     u3863:	
  5196  0BB4                     l2710:	
  5197  0BB4  3008               	movlw	8
  5198  0BB5  00B2               	movwf	??___flmul
  5199  0BB6                     u3875:	
  5200  0BB6  1003               	clrc
  5201  0BB7  0DB8               	rlf	___flmul@grs,f
  5202  0BB8  0DB9               	rlf	___flmul@grs+1,f
  5203  0BB9  0DBA               	rlf	___flmul@grs+2,f
  5204  0BBA  0DBB               	rlf	___flmul@grs+3,f
  5205  0BBB  0BB2               	decfsz	??___flmul,f
  5206  0BBC  2BB6               	goto	u3875
  5207  0BBD                     l2712:	
  5208  0BBD  083D               	movf	___flmul@bexp,w
  5209  0BBE  073C               	addwf	___flmul@aexp,w
  5210  0BBF  00B2               	movwf	??___flmul
  5211  0BC0  01B3               	clrf	??___flmul+1
  5212  0BC1  0DB3               	rlf	??___flmul+1,f
  5213  0BC2  0832               	movf	??___flmul,w
  5214  0BC3  3E82               	addlw	130
  5215  0BC4  00C2               	movwf	___flmul@temp
  5216  0BC5  0833               	movf	??___flmul+1,w
  5217  0BC6  1803               	skipnc
  5218  0BC7  3E01               	addlw	1
  5219  0BC8  3EFF               	addlw	255
  5220  0BC9  00C3               	movwf	___flmul@temp+1
  5221  0BCA  2BE8               	goto	l2724
  5222  0BCB                     l2714:	
  5223  0BCB  3001               	movlw	1
  5224  0BCC  00B2               	movwf	??___flmul
  5225  0BCD                     u3885:	
  5226  0BCD  1003               	clrc
  5227  0BCE  0DBE               	rlf	___flmul@prod,f
  5228  0BCF  0DBF               	rlf	___flmul@prod+1,f
  5229  0BD0  0DC0               	rlf	___flmul@prod+2,f
  5230  0BD1  0DC1               	rlf	___flmul@prod+3,f
  5231  0BD2  0BB2               	decfsz	??___flmul,f
  5232  0BD3  2BCD               	goto	u3885
  5233  0BD4                     l2716:	
  5234  0BD4  1FBB               	btfss	___flmul@grs+3,7
  5235  0BD5  2BD7               	goto	u3891
  5236  0BD6  2BD8               	goto	u3890
  5237  0BD7                     u3891:	
  5238  0BD7  2BD9               	goto	l2720
  5239  0BD8                     u3890:	
  5240  0BD8                     l2718:	
  5241  0BD8  143E               	bsf	___flmul@prod,0
  5242  0BD9                     l2720:	
  5243  0BD9  3001               	movlw	1
  5244  0BDA  00B2               	movwf	??___flmul
  5245  0BDB                     u3905:	
  5246  0BDB  1003               	clrc
  5247  0BDC  0DB8               	rlf	___flmul@grs,f
  5248  0BDD  0DB9               	rlf	___flmul@grs+1,f
  5249  0BDE  0DBA               	rlf	___flmul@grs+2,f
  5250  0BDF  0DBB               	rlf	___flmul@grs+3,f
  5251  0BE0  0BB2               	decfsz	??___flmul,f
  5252  0BE1  2BDB               	goto	u3905
  5253  0BE2                     l2722:	
  5254  0BE2  30FF               	movlw	255
  5255  0BE3  07C2               	addwf	___flmul@temp,f
  5256  0BE4  1803               	skipnc
  5257  0BE5  0AC3               	incf	___flmul@temp+1,f
  5258  0BE6  30FF               	movlw	255
  5259  0BE7  07C3               	addwf	___flmul@temp+1,f
  5260  0BE8                     l2724:	
  5261  0BE8  1FC0               	btfss	___flmul@prod+2,7
  5262  0BE9  2BEB               	goto	u3911
  5263  0BEA  2BEC               	goto	u3910
  5264  0BEB                     u3911:	
  5265  0BEB  2BCB               	goto	l2714
  5266  0BEC                     u3910:	
  5267  0BEC                     l2726:	
  5268  0BEC  01BC               	clrf	___flmul@aexp
  5269  0BED                     l2728:	
  5270  0BED  1FBB               	btfss	___flmul@grs+3,7
  5271  0BEE  2BF0               	goto	u3921
  5272  0BEF  2BF1               	goto	u3920
  5273  0BF0                     u3921:	
  5274  0BF0  2C0D               	goto	l2736
  5275  0BF1                     u3920:	
  5276  0BF1                     l2730:	
  5277  0BF1  30FF               	movlw	255
  5278  0BF2  0538               	andwf	___flmul@grs,w
  5279  0BF3  00B2               	movwf	??___flmul
  5280  0BF4  30FF               	movlw	255
  5281  0BF5  0539               	andwf	___flmul@grs+1,w
  5282  0BF6  00B3               	movwf	??___flmul+1
  5283  0BF7  30FF               	movlw	255
  5284  0BF8  053A               	andwf	___flmul@grs+2,w
  5285  0BF9  00B4               	movwf	??___flmul+2
  5286  0BFA  307F               	movlw	127
  5287  0BFB  053B               	andwf	___flmul@grs+3,w
  5288  0BFC  00B5               	movwf	??___flmul+3
  5289  0BFD  0835               	movf	??___flmul+3,w
  5290  0BFE  0434               	iorwf	??___flmul+2,w
  5291  0BFF  0433               	iorwf	??___flmul+1,w
  5292  0C00  0432               	iorwf	??___flmul,w
  5293  0C01  1903               	skipnz
  5294  0C02  2C04               	goto	u3931
  5295  0C03  2C05               	goto	u3930
  5296  0C04                     u3931:	
  5297  0C04  2C08               	goto	l802
  5298  0C05                     u3930:	
  5299  0C05                     l2732:	
  5300  0C05  01BC               	clrf	___flmul@aexp
  5301  0C06  0ABC               	incf	___flmul@aexp,f
  5302  0C07  2C0D               	goto	l2736
  5303  0C08                     l802:	
  5304  0C08  1C3E               	btfss	___flmul@prod,0
  5305  0C09  2C0B               	goto	u3941
  5306  0C0A  2C0C               	goto	u3940
  5307  0C0B                     u3941:	
  5308  0C0B  2C0D               	goto	l2736
  5309  0C0C                     u3940:	
  5310  0C0C  2C05               	goto	l2732
  5311  0C0D                     l2736:	
  5312  0C0D  083C               	movf	___flmul@aexp,w
  5313  0C0E  1903               	btfsc	3,2
  5314  0C0F  2C11               	goto	u3951
  5315  0C10  2C12               	goto	u3950
  5316  0C11                     u3951:	
  5317  0C11  2C43               	goto	l2746
  5318  0C12                     u3950:	
  5319  0C12                     l2738:	
  5320  0C12  3001               	movlw	1
  5321  0C13  07BE               	addwf	___flmul@prod,f
  5322  0C14  3000               	movlw	0
  5323  0C15  1803               	skipnc
  5324  0C16  3001               	movlw	1
  5325  0C17  07BF               	addwf	___flmul@prod+1,f
  5326  0C18  3000               	movlw	0
  5327  0C19  1803               	skipnc
  5328  0C1A  3001               	movlw	1
  5329  0C1B  07C0               	addwf	___flmul@prod+2,f
  5330  0C1C  3000               	movlw	0
  5331  0C1D  1803               	skipnc
  5332  0C1E  3001               	movlw	1
  5333  0C1F  07C1               	addwf	___flmul@prod+3,f
  5334  0C20                     l2740:	
  5335  0C20  1C41               	btfss	___flmul@prod+3,0
  5336  0C21  2C23               	goto	u3961
  5337  0C22  2C24               	goto	u3960
  5338  0C23                     u3961:	
  5339  0C23  2C43               	goto	l2746
  5340  0C24                     u3960:	
  5341  0C24                     l2742:	
  5342  0C24  083E               	movf	___flmul@prod,w
  5343  0C25  00B2               	movwf	??___flmul
  5344  0C26  083F               	movf	___flmul@prod+1,w
  5345  0C27  00B3               	movwf	??___flmul+1
  5346  0C28  0840               	movf	___flmul@prod+2,w
  5347  0C29  00B4               	movwf	??___flmul+2
  5348  0C2A  0841               	movf	___flmul@prod+3,w
  5349  0C2B  00B5               	movwf	??___flmul+3
  5350  0C2C  3001               	movlw	1
  5351  0C2D  00B6               	movwf	??___flmul+4
  5352  0C2E                     u3975:	
  5353  0C2E  0D35               	rlf	??___flmul+3,w
  5354  0C2F  0CB5               	rrf	??___flmul+3,f
  5355  0C30  0CB4               	rrf	??___flmul+2,f
  5356  0C31  0CB3               	rrf	??___flmul+1,f
  5357  0C32  0CB2               	rrf	??___flmul,f
  5358  0C33                     u3970:	
  5359  0C33  0BB6               	decfsz	??___flmul+4,f
  5360  0C34  2C2E               	goto	u3975
  5361  0C35  0835               	movf	??___flmul+3,w
  5362  0C36  00C1               	movwf	___flmul@prod+3
  5363  0C37  0834               	movf	??___flmul+2,w
  5364  0C38  00C0               	movwf	___flmul@prod+2
  5365  0C39  0833               	movf	??___flmul+1,w
  5366  0C3A  00BF               	movwf	___flmul@prod+1
  5367  0C3B  0832               	movf	??___flmul,w
  5368  0C3C  00BE               	movwf	___flmul@prod
  5369  0C3D                     l2744:	
  5370  0C3D  3001               	movlw	1
  5371  0C3E  07C2               	addwf	___flmul@temp,f
  5372  0C3F  1803               	skipnc
  5373  0C40  0AC3               	incf	___flmul@temp+1,f
  5374  0C41  3000               	movlw	0
  5375  0C42  07C3               	addwf	___flmul@temp+1,f
  5376  0C43                     l2746:	
  5377  0C43  0843               	movf	___flmul@temp+1,w
  5378  0C44  3A80               	xorlw	128
  5379  0C45  00FF               	movwf	btemp+1
  5380  0C46  3080               	movlw	128
  5381  0C47  027F               	subwf	btemp+1,w
  5382  0C48  1D03               	skipz
  5383  0C49  2C4C               	goto	u3985
  5384  0C4A  30FF               	movlw	255
  5385  0C4B  0242               	subwf	___flmul@temp,w
  5386  0C4C                     u3985:	
  5387  0C4C  1C03               	skipc
  5388  0C4D  2C4F               	goto	u3981
  5389  0C4E  2C50               	goto	u3980
  5390  0C4F                     u3981:	
  5391  0C4F  2C5B               	goto	l2750
  5392  0C50                     u3980:	
  5393  0C50                     l2748:	
  5394  0C50  307F               	movlw	127
  5395  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5396  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5397  0C53  00C1               	movwf	___flmul@prod+3
  5398  0C54  3080               	movlw	128
  5399  0C55  00C0               	movwf	___flmul@prod+2
  5400  0C56  3000               	movlw	0
  5401  0C57  00BF               	movwf	___flmul@prod+1
  5402  0C58  3000               	movlw	0
  5403  0C59  00BE               	movwf	___flmul@prod
  5404  0C5A  2C90               	goto	l808
  5405  0C5B                     l2750:	
  5406  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5407  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5408  0C5D  0843               	movf	___flmul@temp+1,w
  5409  0C5E  3A80               	xorlw	128
  5410  0C5F  00FF               	movwf	btemp+1
  5411  0C60  3080               	movlw	128
  5412  0C61  027F               	subwf	btemp+1,w
  5413  0C62  1D03               	skipz
  5414  0C63  2C66               	goto	u3995
  5415  0C64  3001               	movlw	1
  5416  0C65  0242               	subwf	___flmul@temp,w
  5417  0C66                     u3995:	
  5418  0C66  1803               	skipnc
  5419  0C67  2C69               	goto	u3991
  5420  0C68  2C6A               	goto	u3990
  5421  0C69                     u3991:	
  5422  0C69  2C76               	goto	l2756
  5423  0C6A                     u3990:	
  5424  0C6A                     l2752:	
  5425  0C6A  3000               	movlw	0
  5426  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5427  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5428  0C6D  00C1               	movwf	___flmul@prod+3
  5429  0C6E  3000               	movlw	0
  5430  0C6F  00C0               	movwf	___flmul@prod+2
  5431  0C70  3000               	movlw	0
  5432  0C71  00BF               	movwf	___flmul@prod+1
  5433  0C72  3000               	movlw	0
  5434  0C73  00BE               	movwf	___flmul@prod
  5435  0C74                     l2754:	
  5436  0C74  01B7               	clrf	___flmul@sign
  5437  0C75  2C90               	goto	l808
  5438  0C76                     l2756:	
  5439  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5440  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5441  0C78  0842               	movf	___flmul@temp,w
  5442  0C79  00B2               	movwf	??___flmul
  5443  0C7A  0832               	movf	??___flmul,w
  5444  0C7B  00BD               	movwf	___flmul@bexp
  5445  0C7C  30FF               	movlw	255
  5446  0C7D  05BE               	andwf	___flmul@prod,f
  5447  0C7E  30FF               	movlw	255
  5448  0C7F  05BF               	andwf	___flmul@prod+1,f
  5449  0C80  307F               	movlw	127
  5450  0C81  05C0               	andwf	___flmul@prod+2,f
  5451  0C82  3000               	movlw	0
  5452  0C83  05C1               	andwf	___flmul@prod+3,f
  5453  0C84                     l2758:	
  5454  0C84  1C3D               	btfss	___flmul@bexp,0
  5455  0C85  2C87               	goto	u4001
  5456  0C86  2C88               	goto	u4000
  5457  0C87                     u4001:	
  5458  0C87  2C89               	goto	l2762
  5459  0C88                     u4000:	
  5460  0C88                     l2760:	
  5461  0C88  17C0               	bsf	___flmul@prod+2,7
  5462  0C89                     l2762:	
  5463  0C89  083D               	movf	___flmul@bexp,w
  5464  0C8A  00B2               	movwf	??___flmul
  5465  0C8B  1003               	clrc
  5466  0C8C  0C32               	rrf	??___flmul,w
  5467  0C8D  00B3               	movwf	??___flmul+1
  5468  0C8E  0833               	movf	??___flmul+1,w
  5469  0C8F  00C1               	movwf	___flmul@prod+3
  5470  0C90                     l808:	
  5471  0C90  0837               	movf	___flmul@sign,w
  5472  0C91  00B2               	movwf	??___flmul
  5473  0C92  0832               	movf	??___flmul,w
  5474  0C93  04C1               	iorwf	___flmul@prod+3,f
  5475  0C94                     l2764:	
  5476  0C94  0841               	movf	___flmul@prod+3,w
  5477  0C95  00AD               	movwf	?___flmul+3
  5478  0C96  0840               	movf	___flmul@prod+2,w
  5479  0C97  00AC               	movwf	?___flmul+2
  5480  0C98  083F               	movf	___flmul@prod+1,w
  5481  0C99  00AB               	movwf	?___flmul+1
  5482  0C9A  083E               	movf	___flmul@prod,w
  5483  0C9B  00AA               	movwf	?___flmul
  5484  0C9C                     l796:	
  5485  0C9C  0008               	return
  5486  0C9D                     __end_of___flmul:	
  5487                           
  5488                           	psect	text11
  5489  19FE                     __ptext11:	
  5490 ;; *************** function __Umul8_16 *****************
  5491 ;; Defined at:
  5492 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8_16.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  multiplier      1    wreg     unsigned char 
  5495 ;;  multiplicand    1    3[COMMON] unsigned char 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5498 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5499 ;;  product         2    0[BANK0 ] unsigned int 
  5500 ;; Return value:  Size  Location     Type
  5501 ;;                  2    3[COMMON] unsigned int 
  5502 ;; Registers used:
  5503 ;;		wreg, status,2, status,0
  5504 ;; Tracked objects:
  5505 ;;		On entry : 0/0
  5506 ;;		On exit  : 0/0
  5507 ;;		Unchanged: 0/0
  5508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5509 ;;      Params:         2       0       0       0       0
  5510 ;;      Locals:         0       5       0       0       0
  5511 ;;      Temps:          2       0       0       0       0
  5512 ;;      Totals:         4       5       0       0       0
  5513 ;;Total ram usage:        9 bytes
  5514 ;; Hardware stack levels used:    1
  5515 ;; Hardware stack levels required when called:    1
  5516 ;; This function calls:
  5517 ;;		Nothing
  5518 ;; This function is called by:
  5519 ;;		___flmul
  5520 ;; This function uses a non-reentrant model
  5521 ;;
  5522                           
  5523                           
  5524                           ;psect for function __Umul8_16
  5525  19FE                     __Umul8_16:	
  5526                           
  5527                           ;incstack = 0
  5528                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5529                           ;__Umul8_16@multiplier stored from wreg
  5530  19FE  1283               	bcf	3,5	;RP0=0, select bank0
  5531  19FF  1303               	bcf	3,6	;RP1=0, select bank0
  5532  1A00  00A4               	movwf	__Umul8_16@multiplier
  5533  1A01                     l2290:	
  5534  1A01  01A0               	clrf	__Umul8_16@product
  5535  1A02  01A1               	clrf	__Umul8_16@product+1
  5536  1A03                     l2292:	
  5537  1A03  0874               	movf	__Umul8_16@multiplicand,w
  5538  1A04  00F6               	movwf	??__Umul8_16
  5539  1A05  01F7               	clrf	??__Umul8_16+1
  5540  1A06  0876               	movf	??__Umul8_16,w
  5541  1A07  00A2               	movwf	__Umul8_16@word_mpld
  5542  1A08  0877               	movf	??__Umul8_16+1,w
  5543  1A09  00A3               	movwf	__Umul8_16@word_mpld+1
  5544  1A0A                     l2294:	
  5545  1A0A  1C24               	btfss	__Umul8_16@multiplier,0
  5546  1A0B  2A0D               	goto	u2831
  5547  1A0C  2A0E               	goto	u2830
  5548  1A0D                     u2831:	
  5549  1A0D  2A14               	goto	l862
  5550  1A0E                     u2830:	
  5551  1A0E                     l2296:	
  5552  1A0E  0822               	movf	__Umul8_16@word_mpld,w
  5553  1A0F  07A0               	addwf	__Umul8_16@product,f
  5554  1A10  1803               	skipnc
  5555  1A11  0AA1               	incf	__Umul8_16@product+1,f
  5556  1A12  0823               	movf	__Umul8_16@word_mpld+1,w
  5557  1A13  07A1               	addwf	__Umul8_16@product+1,f
  5558  1A14                     l862:	
  5559  1A14  3001               	movlw	1
  5560  1A15                     u2845:	
  5561  1A15  1003               	clrc
  5562  1A16  0DA2               	rlf	__Umul8_16@word_mpld,f
  5563  1A17  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5564  1A18  3EFF               	addlw	-1
  5565  1A19  1D03               	skipz
  5566  1A1A  2A15               	goto	u2845
  5567  1A1B  1003               	clrc
  5568  1A1C  0CA4               	rrf	__Umul8_16@multiplier,f
  5569  1A1D                     l2298:	
  5570  1A1D  0824               	movf	__Umul8_16@multiplier,w
  5571  1A1E  1D03               	btfss	3,2
  5572  1A1F  2A21               	goto	u2851
  5573  1A20  2A22               	goto	u2850
  5574  1A21                     u2851:	
  5575  1A21  2A0A               	goto	l2294
  5576  1A22                     u2850:	
  5577  1A22                     l2300:	
  5578  1A22  0821               	movf	__Umul8_16@product+1,w
  5579  1A23  00F5               	movwf	?__Umul8_16+1
  5580  1A24  0820               	movf	__Umul8_16@product,w
  5581  1A25  00F4               	movwf	?__Umul8_16
  5582  1A26                     l864:	
  5583  1A26  0008               	return
  5584  1A27                     __end_of__Umul8_16:	
  5585                           
  5586                           	psect	text12
  5587  1033                     __ptext12:	
  5588 ;; *************** function __tdiv_to_l_ *****************
  5589 ;; Defined at:
  5590 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\ftdivl.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  f1              4    0[BANK0 ] float 
  5593 ;;  f2              4    4[BANK0 ] float 
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;  quot            4    8[BANK0 ] unsigned long 
  5596 ;;  exp1            1   13[BANK0 ] unsigned char 
  5597 ;;  cntr            1   12[BANK0 ] unsigned char 
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  4    0[BANK0 ] unsigned long 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5607 ;;      Params:         0       8       0       0       0
  5608 ;;      Locals:         0       6       0       0       0
  5609 ;;      Temps:          4       0       0       0       0
  5610 ;;      Totals:         4      14       0       0       0
  5611 ;;Total ram usage:       18 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    1
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_sprintf
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           
  5622                           ;psect for function __tdiv_to_l_
  5623  1033                     __tdiv_to_l_:	
  5624  1033                     l2856:	
  5625                           ;incstack = 0
  5626                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5627                           
  5628  1033  1283               	bcf	3,5	;RP0=0, select bank0
  5629  1034  1303               	bcf	3,6	;RP1=0, select bank0
  5630  1035  0820               	movf	__tdiv_to_l_@f1,w
  5631  1036  00F4               	movwf	??__tdiv_to_l_
  5632  1037  0821               	movf	__tdiv_to_l_@f1+1,w
  5633  1038  00F5               	movwf	??__tdiv_to_l_+1
  5634  1039  0822               	movf	__tdiv_to_l_@f1+2,w
  5635  103A  00F6               	movwf	??__tdiv_to_l_+2
  5636  103B  1003               	clrc
  5637  103C  0D75               	rlf	??__tdiv_to_l_+1,w
  5638  103D  0D76               	rlf	??__tdiv_to_l_+2,w
  5639  103E  00F7               	movwf	??__tdiv_to_l_+3
  5640  103F  0877               	movf	??__tdiv_to_l_+3,w
  5641  1040  00AD               	movwf	__tdiv_to_l_@exp1
  5642  1041  082D               	movf	__tdiv_to_l_@exp1,w
  5643  1042  1D03               	btfss	3,2
  5644  1043  2845               	goto	u4281
  5645  1044  2846               	goto	u4280
  5646  1045                     u4281:	
  5647  1045  284F               	goto	l2862
  5648  1046                     u4280:	
  5649  1046                     l2858:	
  5650  1046  3000               	movlw	0
  5651  1047  00A3               	movwf	?__tdiv_to_l_+3
  5652  1048  3000               	movlw	0
  5653  1049  00A2               	movwf	?__tdiv_to_l_+2
  5654  104A  3000               	movlw	0
  5655  104B  00A1               	movwf	?__tdiv_to_l_+1
  5656  104C  3000               	movlw	0
  5657  104D  00A0               	movwf	?__tdiv_to_l_
  5658  104E  28EF               	goto	l590
  5659  104F                     l2862:	
  5660  104F  0824               	movf	__tdiv_to_l_@f2,w
  5661  1050  00F4               	movwf	??__tdiv_to_l_
  5662  1051  0825               	movf	__tdiv_to_l_@f2+1,w
  5663  1052  00F5               	movwf	??__tdiv_to_l_+1
  5664  1053  0826               	movf	__tdiv_to_l_@f2+2,w
  5665  1054  00F6               	movwf	??__tdiv_to_l_+2
  5666  1055  1003               	clrc
  5667  1056  0D75               	rlf	??__tdiv_to_l_+1,w
  5668  1057  0D76               	rlf	??__tdiv_to_l_+2,w
  5669  1058  00F7               	movwf	??__tdiv_to_l_+3
  5670  1059  0877               	movf	??__tdiv_to_l_+3,w
  5671  105A  00AC               	movwf	__tdiv_to_l_@cntr
  5672  105B  082C               	movf	__tdiv_to_l_@cntr,w
  5673  105C  1D03               	btfss	3,2
  5674  105D  285F               	goto	u4291
  5675  105E  2860               	goto	u4290
  5676  105F                     u4291:	
  5677  105F  2861               	goto	l591
  5678  1060                     u4290:	
  5679  1060  2846               	goto	l2858
  5680  1061                     l591:	
  5681  1061  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5682  1062                     l2868:	
  5683  1062  30FF               	movlw	255
  5684  1063  05A0               	andwf	__tdiv_to_l_@f1,f
  5685  1064  30FF               	movlw	255
  5686  1065  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5687  1066  3000               	movlw	0
  5688  1067  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5689  1068                     l2870:	
  5690  1068  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5691  1069  30FF               	movlw	255
  5692  106A  05A4               	andwf	__tdiv_to_l_@f2,f
  5693  106B  30FF               	movlw	255
  5694  106C  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5695  106D  3000               	movlw	0
  5696  106E  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5697  106F  3000               	movlw	0
  5698  1070  00AB               	movwf	__tdiv_to_l_@quot+3
  5699  1071  3000               	movlw	0
  5700  1072  00AA               	movwf	__tdiv_to_l_@quot+2
  5701  1073  3000               	movlw	0
  5702  1074  00A9               	movwf	__tdiv_to_l_@quot+1
  5703  1075  3000               	movlw	0
  5704  1076  00A8               	movwf	__tdiv_to_l_@quot
  5705  1077                     l2872:	
  5706  1077  307F               	movlw	127
  5707  1078  02AD               	subwf	__tdiv_to_l_@exp1,f
  5708  1079                     l2874:	
  5709  1079  3098               	movlw	152
  5710  107A  072C               	addwf	__tdiv_to_l_@cntr,w
  5711  107B  00F4               	movwf	??__tdiv_to_l_
  5712  107C  0874               	movf	??__tdiv_to_l_,w
  5713  107D  02AD               	subwf	__tdiv_to_l_@exp1,f
  5714  107E  3018               	movlw	24
  5715  107F  00F4               	movwf	??__tdiv_to_l_
  5716  1080  0874               	movf	??__tdiv_to_l_,w
  5717  1081  00AC               	movwf	__tdiv_to_l_@cntr
  5718  1082                     l2876:	
  5719  1082  3001               	movlw	1
  5720  1083  00F4               	movwf	??__tdiv_to_l_
  5721  1084                     u4305:	
  5722  1084  1003               	clrc
  5723  1085  0DA8               	rlf	__tdiv_to_l_@quot,f
  5724  1086  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5725  1087  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5726  1088  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5727  1089  0BF4               	decfsz	??__tdiv_to_l_,f
  5728  108A  2884               	goto	u4305
  5729  108B                     l2878:	
  5730  108B  0826               	movf	__tdiv_to_l_@f2+2,w
  5731  108C  0222               	subwf	__tdiv_to_l_@f1+2,w
  5732  108D  1D03               	skipz
  5733  108E  2895               	goto	u4315
  5734  108F  0825               	movf	__tdiv_to_l_@f2+1,w
  5735  1090  0221               	subwf	__tdiv_to_l_@f1+1,w
  5736  1091  1D03               	skipz
  5737  1092  2895               	goto	u4315
  5738  1093  0824               	movf	__tdiv_to_l_@f2,w
  5739  1094  0220               	subwf	__tdiv_to_l_@f1,w
  5740  1095                     u4315:	
  5741  1095  1C03               	skipc
  5742  1096  2898               	goto	u4311
  5743  1097  2899               	goto	u4310
  5744  1098                     u4311:	
  5745  1098  28A4               	goto	l2884
  5746  1099                     u4310:	
  5747  1099                     l2880:	
  5748  1099  0824               	movf	__tdiv_to_l_@f2,w
  5749  109A  02A0               	subwf	__tdiv_to_l_@f1,f
  5750  109B  0825               	movf	__tdiv_to_l_@f2+1,w
  5751  109C  1C03               	skipc
  5752  109D  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  5753  109E  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5754  109F  0826               	movf	__tdiv_to_l_@f2+2,w
  5755  10A0  1C03               	skipc
  5756  10A1  0A26               	incf	__tdiv_to_l_@f2+2,w
  5757  10A2  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5758  10A3                     l2882:	
  5759  10A3  1428               	bsf	__tdiv_to_l_@quot,0
  5760  10A4                     l2884:	
  5761  10A4  3001               	movlw	1
  5762  10A5                     u4325:	
  5763  10A5  1003               	clrc
  5764  10A6  0DA0               	rlf	__tdiv_to_l_@f1,f
  5765  10A7  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5766  10A8  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5767  10A9  3EFF               	addlw	-1
  5768  10AA  1D03               	skipz
  5769  10AB  28A5               	goto	u4325
  5770  10AC                     l2886:	
  5771  10AC  3001               	movlw	1
  5772  10AD  02AC               	subwf	__tdiv_to_l_@cntr,f
  5773  10AE  1D03               	btfss	3,2
  5774  10AF  28B1               	goto	u4331
  5775  10B0  28B2               	goto	u4330
  5776  10B1                     u4331:	
  5777  10B1  2882               	goto	l2876
  5778  10B2                     u4330:	
  5779  10B2                     l594:	
  5780  10B2  1FAD               	btfss	__tdiv_to_l_@exp1,7
  5781  10B3  28B5               	goto	u4341
  5782  10B4  28B6               	goto	u4340
  5783  10B5                     u4341:	
  5784  10B5  28D0               	goto	l2896
  5785  10B6                     u4340:	
  5786  10B6                     l2888:	
  5787  10B6  082D               	movf	__tdiv_to_l_@exp1,w
  5788  10B7  3A80               	xorlw	128
  5789  10B8  3E97               	addlw	151
  5790  10B9  1803               	skipnc
  5791  10BA  28BC               	goto	u4351
  5792  10BB  28BD               	goto	u4350
  5793  10BC                     u4351:	
  5794  10BC  28BE               	goto	l2894
  5795  10BD                     u4350:	
  5796  10BD  2846               	goto	l2858
  5797  10BE                     l2894:	
  5798  10BE  3001               	movlw	1
  5799  10BF                     u4365:	
  5800  10BF  1003               	clrc
  5801  10C0  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  5802  10C1  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  5803  10C2  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  5804  10C3  0CA8               	rrf	__tdiv_to_l_@quot,f
  5805  10C4  3EFF               	addlw	-1
  5806  10C5  1D03               	skipz
  5807  10C6  28BF               	goto	u4365
  5808  10C7  3001               	movlw	1
  5809  10C8  00F4               	movwf	??__tdiv_to_l_
  5810  10C9  0874               	movf	??__tdiv_to_l_,w
  5811  10CA  07AD               	addwf	__tdiv_to_l_@exp1,f
  5812  10CB  1D03               	btfss	3,2
  5813  10CC  28CE               	goto	u4371
  5814  10CD  28CF               	goto	u4370
  5815  10CE                     u4371:	
  5816  10CE  28BE               	goto	l2894
  5817  10CF                     u4370:	
  5818  10CF  28E7               	goto	l2904
  5819  10D0                     l2896:	
  5820  10D0  3018               	movlw	24
  5821  10D1  022D               	subwf	__tdiv_to_l_@exp1,w
  5822  10D2  1C03               	skipc
  5823  10D3  28D5               	goto	u4381
  5824  10D4  28D6               	goto	u4380
  5825  10D5                     u4381:	
  5826  10D5  28E2               	goto	l601
  5827  10D6                     u4380:	
  5828  10D6  2846               	goto	l2858
  5829  10D7                     l2902:	
  5830  10D7  3001               	movlw	1
  5831  10D8  00F4               	movwf	??__tdiv_to_l_
  5832  10D9                     u4395:	
  5833  10D9  1003               	clrc
  5834  10DA  0DA8               	rlf	__tdiv_to_l_@quot,f
  5835  10DB  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5836  10DC  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5837  10DD  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5838  10DE  0BF4               	decfsz	??__tdiv_to_l_,f
  5839  10DF  28D9               	goto	u4395
  5840  10E0  3001               	movlw	1
  5841  10E1  02AD               	subwf	__tdiv_to_l_@exp1,f
  5842  10E2                     l601:	
  5843  10E2  082D               	movf	__tdiv_to_l_@exp1,w
  5844  10E3  1D03               	btfss	3,2
  5845  10E4  28E6               	goto	u4401
  5846  10E5  28E7               	goto	u4400
  5847  10E6                     u4401:	
  5848  10E6  28D7               	goto	l2902
  5849  10E7                     u4400:	
  5850  10E7                     l2904:	
  5851  10E7  082B               	movf	__tdiv_to_l_@quot+3,w
  5852  10E8  00A3               	movwf	?__tdiv_to_l_+3
  5853  10E9  082A               	movf	__tdiv_to_l_@quot+2,w
  5854  10EA  00A2               	movwf	?__tdiv_to_l_+2
  5855  10EB  0829               	movf	__tdiv_to_l_@quot+1,w
  5856  10EC  00A1               	movwf	?__tdiv_to_l_+1
  5857  10ED  0828               	movf	__tdiv_to_l_@quot,w
  5858  10EE  00A0               	movwf	?__tdiv_to_l_
  5859  10EF                     l590:	
  5860  10EF  0008               	return
  5861  10F0                     __end_of__tdiv_to_l_:	
  5862                           
  5863                           	psect	text13
  5864  10F0                     __ptext13:	
  5865 ;; *************** function __div_to_l_ *****************
  5866 ;; Defined at:
  5867 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fldivl.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  f1              4    0[BANK0 ] unsigned long 
  5870 ;;  f2              4    4[BANK0 ] unsigned long 
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;  quot            4    4[COMMON] unsigned long 
  5873 ;;  exp1            1    9[COMMON] unsigned char 
  5874 ;;  cntr            1    8[COMMON] unsigned char 
  5875 ;; Return value:  Size  Location     Type
  5876 ;;                  4    0[BANK0 ] unsigned long 
  5877 ;; Registers used:
  5878 ;;		wreg, status,2, status,0
  5879 ;; Tracked objects:
  5880 ;;		On entry : 0/0
  5881 ;;		On exit  : 0/0
  5882 ;;		Unchanged: 0/0
  5883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5884 ;;      Params:         0       8       0       0       0
  5885 ;;      Locals:         6       0       0       0       0
  5886 ;;      Temps:          1       0       0       0       0
  5887 ;;      Totals:         7       8       0       0       0
  5888 ;;Total ram usage:       15 bytes
  5889 ;; Hardware stack levels used:    1
  5890 ;; Hardware stack levels required when called:    1
  5891 ;; This function calls:
  5892 ;;		Nothing
  5893 ;; This function is called by:
  5894 ;;		_sprintf
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           
  5899                           ;psect for function __div_to_l_
  5900  10F0                     __div_to_l_:	
  5901  10F0                     l2908:	
  5902                           ;incstack = 0
  5903                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5904                           
  5905  10F0  1003               	clrc
  5906  10F1  1283               	bcf	3,5	;RP0=0, select bank0
  5907  10F2  1303               	bcf	3,6	;RP1=0, select bank0
  5908  10F3  0D22               	rlf	__div_to_l_@f1+2,w
  5909  10F4  0D23               	rlf	__div_to_l_@f1+3,w
  5910  10F5  00F4               	movwf	??__div_to_l_
  5911  10F6  0874               	movf	??__div_to_l_,w
  5912  10F7  00FA               	movwf	__div_to_l_@exp1
  5913  10F8  087A               	movf	__div_to_l_@exp1,w
  5914  10F9  1D03               	btfss	3,2
  5915  10FA  28FC               	goto	u4411
  5916  10FB  28FD               	goto	u4410
  5917  10FC                     u4411:	
  5918  10FC  2906               	goto	l2914
  5919  10FD                     u4410:	
  5920  10FD                     l2910:	
  5921  10FD  3000               	movlw	0
  5922  10FE  00A3               	movwf	?__div_to_l_+3
  5923  10FF  3000               	movlw	0
  5924  1100  00A2               	movwf	?__div_to_l_+2
  5925  1101  3000               	movlw	0
  5926  1102  00A1               	movwf	?__div_to_l_+1
  5927  1103  3000               	movlw	0
  5928  1104  00A0               	movwf	?__div_to_l_
  5929  1105  29AF               	goto	l543
  5930  1106                     l2914:	
  5931  1106  1003               	clrc
  5932  1107  0D26               	rlf	__div_to_l_@f2+2,w
  5933  1108  0D27               	rlf	__div_to_l_@f2+3,w
  5934  1109  00F4               	movwf	??__div_to_l_
  5935  110A  0874               	movf	??__div_to_l_,w
  5936  110B  00F9               	movwf	__div_to_l_@cntr
  5937  110C  0879               	movf	__div_to_l_@cntr,w
  5938  110D  1D03               	btfss	3,2
  5939  110E  2910               	goto	u4421
  5940  110F  2911               	goto	u4420
  5941  1110                     u4421:	
  5942  1110  2912               	goto	l544
  5943  1111                     u4420:	
  5944  1111  28FD               	goto	l2910
  5945  1112                     l544:	
  5946  1112  17A2               	bsf	__div_to_l_@f1+2,7
  5947  1113                     l2920:	
  5948  1113  30FF               	movlw	255
  5949  1114  05A0               	andwf	__div_to_l_@f1,f
  5950  1115  30FF               	movlw	255
  5951  1116  05A1               	andwf	__div_to_l_@f1+1,f
  5952  1117  30FF               	movlw	255
  5953  1118  05A2               	andwf	__div_to_l_@f1+2,f
  5954  1119  3000               	movlw	0
  5955  111A  05A3               	andwf	__div_to_l_@f1+3,f
  5956  111B                     l2922:	
  5957  111B  17A6               	bsf	__div_to_l_@f2+2,7
  5958  111C  30FF               	movlw	255
  5959  111D  05A4               	andwf	__div_to_l_@f2,f
  5960  111E  30FF               	movlw	255
  5961  111F  05A5               	andwf	__div_to_l_@f2+1,f
  5962  1120  30FF               	movlw	255
  5963  1121  05A6               	andwf	__div_to_l_@f2+2,f
  5964  1122  3000               	movlw	0
  5965  1123  05A7               	andwf	__div_to_l_@f2+3,f
  5966  1124  3000               	movlw	0
  5967  1125  00F8               	movwf	__div_to_l_@quot+3
  5968  1126  3000               	movlw	0
  5969  1127  00F7               	movwf	__div_to_l_@quot+2
  5970  1128  3000               	movlw	0
  5971  1129  00F6               	movwf	__div_to_l_@quot+1
  5972  112A  3000               	movlw	0
  5973  112B  00F5               	movwf	__div_to_l_@quot
  5974  112C                     l2924:	
  5975  112C  307F               	movlw	127
  5976  112D  02FA               	subwf	__div_to_l_@exp1,f
  5977  112E                     l2926:	
  5978  112E  30A0               	movlw	160
  5979  112F  0779               	addwf	__div_to_l_@cntr,w
  5980  1130  00F4               	movwf	??__div_to_l_
  5981  1131  0874               	movf	??__div_to_l_,w
  5982  1132  02FA               	subwf	__div_to_l_@exp1,f
  5983  1133  3020               	movlw	32
  5984  1134  00F4               	movwf	??__div_to_l_
  5985  1135  0874               	movf	??__div_to_l_,w
  5986  1136  00F9               	movwf	__div_to_l_@cntr
  5987  1137                     l2928:	
  5988  1137  3001               	movlw	1
  5989  1138  00F4               	movwf	??__div_to_l_
  5990  1139                     u4435:	
  5991  1139  1003               	clrc
  5992  113A  0DF5               	rlf	__div_to_l_@quot,f
  5993  113B  0DF6               	rlf	__div_to_l_@quot+1,f
  5994  113C  0DF7               	rlf	__div_to_l_@quot+2,f
  5995  113D  0DF8               	rlf	__div_to_l_@quot+3,f
  5996  113E  0BF4               	decfsz	??__div_to_l_,f
  5997  113F  2939               	goto	u4435
  5998  1140                     l2930:	
  5999  1140  0827               	movf	__div_to_l_@f2+3,w
  6000  1141  0223               	subwf	__div_to_l_@f1+3,w
  6001  1142  1D03               	skipz
  6002  1143  294E               	goto	u4445
  6003  1144  0826               	movf	__div_to_l_@f2+2,w
  6004  1145  0222               	subwf	__div_to_l_@f1+2,w
  6005  1146  1D03               	skipz
  6006  1147  294E               	goto	u4445
  6007  1148  0825               	movf	__div_to_l_@f2+1,w
  6008  1149  0221               	subwf	__div_to_l_@f1+1,w
  6009  114A  1D03               	skipz
  6010  114B  294E               	goto	u4445
  6011  114C  0824               	movf	__div_to_l_@f2,w
  6012  114D  0220               	subwf	__div_to_l_@f1,w
  6013  114E                     u4445:	
  6014  114E  1C03               	skipc
  6015  114F  2951               	goto	u4441
  6016  1150  2952               	goto	u4440
  6017  1151                     u4441:	
  6018  1151  2961               	goto	l2936
  6019  1152                     u4440:	
  6020  1152                     l2932:	
  6021  1152  0824               	movf	__div_to_l_@f2,w
  6022  1153  02A0               	subwf	__div_to_l_@f1,f
  6023  1154  0825               	movf	__div_to_l_@f2+1,w
  6024  1155  1C03               	skipc
  6025  1156  0F25               	incfsz	__div_to_l_@f2+1,w
  6026  1157  02A1               	subwf	__div_to_l_@f1+1,f
  6027  1158  0826               	movf	__div_to_l_@f2+2,w
  6028  1159  1C03               	skipc
  6029  115A  0F26               	incfsz	__div_to_l_@f2+2,w
  6030  115B  02A2               	subwf	__div_to_l_@f1+2,f
  6031  115C  0827               	movf	__div_to_l_@f2+3,w
  6032  115D  1C03               	skipc
  6033  115E  0F27               	incfsz	__div_to_l_@f2+3,w
  6034  115F  02A3               	subwf	__div_to_l_@f1+3,f
  6035  1160                     l2934:	
  6036  1160  1475               	bsf	__div_to_l_@quot,0
  6037  1161                     l2936:	
  6038  1161  3001               	movlw	1
  6039  1162  00F4               	movwf	??__div_to_l_
  6040  1163                     u4455:	
  6041  1163  1003               	clrc
  6042  1164  0DA0               	rlf	__div_to_l_@f1,f
  6043  1165  0DA1               	rlf	__div_to_l_@f1+1,f
  6044  1166  0DA2               	rlf	__div_to_l_@f1+2,f
  6045  1167  0DA3               	rlf	__div_to_l_@f1+3,f
  6046  1168  0BF4               	decfsz	??__div_to_l_,f
  6047  1169  2963               	goto	u4455
  6048  116A                     l2938:	
  6049  116A  3001               	movlw	1
  6050  116B  02F9               	subwf	__div_to_l_@cntr,f
  6051  116C  1D03               	btfss	3,2
  6052  116D  296F               	goto	u4461
  6053  116E  2970               	goto	u4460
  6054  116F                     u4461:	
  6055  116F  2937               	goto	l2928
  6056  1170                     u4460:	
  6057  1170                     l547:	
  6058  1170  1FFA               	btfss	__div_to_l_@exp1,7
  6059  1171  2973               	goto	u4471
  6060  1172  2974               	goto	u4470
  6061  1173                     u4471:	
  6062  1173  298E               	goto	l2948
  6063  1174                     u4470:	
  6064  1174                     l2940:	
  6065  1174  087A               	movf	__div_to_l_@exp1,w
  6066  1175  3A80               	xorlw	128
  6067  1176  3E9F               	addlw	159
  6068  1177  1803               	skipnc
  6069  1178  297A               	goto	u4481
  6070  1179  297B               	goto	u4480
  6071  117A                     u4481:	
  6072  117A  297C               	goto	l2946
  6073  117B                     u4480:	
  6074  117B  28FD               	goto	l2910
  6075  117C                     l2946:	
  6076  117C  3001               	movlw	1
  6077  117D                     u4495:	
  6078  117D  1003               	clrc
  6079  117E  0CF8               	rrf	__div_to_l_@quot+3,f
  6080  117F  0CF7               	rrf	__div_to_l_@quot+2,f
  6081  1180  0CF6               	rrf	__div_to_l_@quot+1,f
  6082  1181  0CF5               	rrf	__div_to_l_@quot,f
  6083  1182  3EFF               	addlw	-1
  6084  1183  1D03               	skipz
  6085  1184  297D               	goto	u4495
  6086  1185  3001               	movlw	1
  6087  1186  00F4               	movwf	??__div_to_l_
  6088  1187  0874               	movf	??__div_to_l_,w
  6089  1188  07FA               	addwf	__div_to_l_@exp1,f
  6090  1189  1D03               	btfss	3,2
  6091  118A  298C               	goto	u4501
  6092  118B  298D               	goto	u4500
  6093  118C                     u4501:	
  6094  118C  297C               	goto	l2946
  6095  118D                     u4500:	
  6096  118D  29A5               	goto	l2956
  6097  118E                     l2948:	
  6098  118E  3020               	movlw	32
  6099  118F  027A               	subwf	__div_to_l_@exp1,w
  6100  1190  1C03               	skipc
  6101  1191  2993               	goto	u4511
  6102  1192  2994               	goto	u4510
  6103  1193                     u4511:	
  6104  1193  29A0               	goto	l554
  6105  1194                     u4510:	
  6106  1194  28FD               	goto	l2910
  6107  1195                     l2954:	
  6108  1195  3001               	movlw	1
  6109  1196  00F4               	movwf	??__div_to_l_
  6110  1197                     u4525:	
  6111  1197  1003               	clrc
  6112  1198  0DF5               	rlf	__div_to_l_@quot,f
  6113  1199  0DF6               	rlf	__div_to_l_@quot+1,f
  6114  119A  0DF7               	rlf	__div_to_l_@quot+2,f
  6115  119B  0DF8               	rlf	__div_to_l_@quot+3,f
  6116  119C  0BF4               	decfsz	??__div_to_l_,f
  6117  119D  2997               	goto	u4525
  6118  119E  3001               	movlw	1
  6119  119F  02FA               	subwf	__div_to_l_@exp1,f
  6120  11A0                     l554:	
  6121  11A0  087A               	movf	__div_to_l_@exp1,w
  6122  11A1  1D03               	btfss	3,2
  6123  11A2  29A4               	goto	u4531
  6124  11A3  29A5               	goto	u4530
  6125  11A4                     u4531:	
  6126  11A4  2995               	goto	l2954
  6127  11A5                     u4530:	
  6128  11A5                     l2956:	
  6129  11A5  0878               	movf	__div_to_l_@quot+3,w
  6130  11A6  1283               	bcf	3,5	;RP0=0, select bank0
  6131  11A7  1303               	bcf	3,6	;RP1=0, select bank0
  6132  11A8  00A3               	movwf	?__div_to_l_+3
  6133  11A9  0877               	movf	__div_to_l_@quot+2,w
  6134  11AA  00A2               	movwf	?__div_to_l_+2
  6135  11AB  0876               	movf	__div_to_l_@quot+1,w
  6136  11AC  00A1               	movwf	?__div_to_l_+1
  6137  11AD  0875               	movf	__div_to_l_@quot,w
  6138  11AE  00A0               	movwf	?__div_to_l_
  6139  11AF                     l543:	
  6140  11AF  0008               	return
  6141  11B0                     __end_of__div_to_l_:	
  6142                           
  6143                           	psect	text14
  6144  1E44                     __ptext14:	
  6145 ;; *************** function ___xxtofl *****************
  6146 ;; Defined at:
  6147 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\xxtofl.c"
  6148 ;; Parameters:    Size  Location     Type
  6149 ;;  sign            1    wreg     unsigned char 
  6150 ;;  val             4    3[COMMON] long 
  6151 ;; Auto vars:     Size  Location     Type
  6152 ;;  sign            1    4[BANK0 ] unsigned char 
  6153 ;;  arg             4    6[BANK0 ] unsigned long 
  6154 ;;  exp             1    5[BANK0 ] unsigned char 
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  4    3[COMMON] unsigned char 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6164 ;;      Params:         4       0       0       0       0
  6165 ;;      Locals:         0       6       0       0       0
  6166 ;;      Temps:          0       4       0       0       0
  6167 ;;      Totals:         4      10       0       0       0
  6168 ;;Total ram usage:       14 bytes
  6169 ;; Hardware stack levels used:    1
  6170 ;; Hardware stack levels required when called:    1
  6171 ;; This function calls:
  6172 ;;		Nothing
  6173 ;; This function is called by:
  6174 ;;		_main
  6175 ;;		_sprintf
  6176 ;; This function uses a non-reentrant model
  6177 ;;
  6178                           
  6179                           
  6180                           ;psect for function ___xxtofl
  6181  1E44                     ___xxtofl:	
  6182                           
  6183                           ;incstack = 0
  6184                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6185                           ;___xxtofl@sign stored from wreg
  6186  1E44  1283               	bcf	3,5	;RP0=0, select bank0
  6187  1E45  1303               	bcf	3,6	;RP1=0, select bank0
  6188  1E46  00A4               	movwf	___xxtofl@sign
  6189  1E47                     l3100:	
  6190  1E47  0824               	movf	___xxtofl@sign,w
  6191  1E48  1903               	btfsc	3,2
  6192  1E49  2E4B               	goto	u4921
  6193  1E4A  2E4C               	goto	u4920
  6194  1E4B                     u4921:	
  6195  1E4B  2E60               	goto	l3106
  6196  1E4C                     u4920:	
  6197  1E4C                     l3102:	
  6198  1E4C  1FF7               	btfss	___xxtofl@val+3,7
  6199  1E4D  2E4F               	goto	u4931
  6200  1E4E  2E50               	goto	u4930
  6201  1E4F                     u4931:	
  6202  1E4F  2E60               	goto	l3106
  6203  1E50                     u4930:	
  6204  1E50                     l3104:	
  6205  1E50  0974               	comf	___xxtofl@val,w
  6206  1E51  00A6               	movwf	___xxtofl@arg
  6207  1E52  0975               	comf	___xxtofl@val+1,w
  6208  1E53  00A7               	movwf	___xxtofl@arg+1
  6209  1E54  0976               	comf	___xxtofl@val+2,w
  6210  1E55  00A8               	movwf	___xxtofl@arg+2
  6211  1E56  0977               	comf	___xxtofl@val+3,w
  6212  1E57  00A9               	movwf	___xxtofl@arg+3
  6213  1E58  0AA6               	incf	___xxtofl@arg,f
  6214  1E59  1903               	skipnz
  6215  1E5A  0AA7               	incf	___xxtofl@arg+1,f
  6216  1E5B  1903               	skipnz
  6217  1E5C  0AA8               	incf	___xxtofl@arg+2,f
  6218  1E5D  1903               	skipnz
  6219  1E5E  0AA9               	incf	___xxtofl@arg+3,f
  6220  1E5F  2E68               	goto	l834
  6221  1E60                     l3106:	
  6222  1E60  0877               	movf	___xxtofl@val+3,w
  6223  1E61  00A9               	movwf	___xxtofl@arg+3
  6224  1E62  0876               	movf	___xxtofl@val+2,w
  6225  1E63  00A8               	movwf	___xxtofl@arg+2
  6226  1E64  0875               	movf	___xxtofl@val+1,w
  6227  1E65  00A7               	movwf	___xxtofl@arg+1
  6228  1E66  0874               	movf	___xxtofl@val,w
  6229  1E67  00A6               	movwf	___xxtofl@arg
  6230  1E68                     l834:	
  6231  1E68  0877               	movf	___xxtofl@val+3,w
  6232  1E69  0476               	iorwf	___xxtofl@val+2,w
  6233  1E6A  0475               	iorwf	___xxtofl@val+1,w
  6234  1E6B  0474               	iorwf	___xxtofl@val,w
  6235  1E6C  1D03               	skipz
  6236  1E6D  2E6F               	goto	u4941
  6237  1E6E  2E70               	goto	u4940
  6238  1E6F                     u4941:	
  6239  1E6F  2E79               	goto	l3112
  6240  1E70                     u4940:	
  6241  1E70                     l3108:	
  6242  1E70  3000               	movlw	0
  6243  1E71  00F7               	movwf	?___xxtofl+3
  6244  1E72  3000               	movlw	0
  6245  1E73  00F6               	movwf	?___xxtofl+2
  6246  1E74  3000               	movlw	0
  6247  1E75  00F5               	movwf	?___xxtofl+1
  6248  1E76  3000               	movlw	0
  6249  1E77  00F4               	movwf	?___xxtofl
  6250  1E78  2EFF               	goto	l836
  6251  1E79                     l3112:	
  6252  1E79  3096               	movlw	150
  6253  1E7A  00A0               	movwf	??___xxtofl
  6254  1E7B  0820               	movf	??___xxtofl,w
  6255  1E7C  00A5               	movwf	___xxtofl@exp
  6256  1E7D  2E8B               	goto	l3116
  6257  1E7E                     l3114:	
  6258  1E7E  3001               	movlw	1
  6259  1E7F  00A0               	movwf	??___xxtofl
  6260  1E80  0820               	movf	??___xxtofl,w
  6261  1E81  07A5               	addwf	___xxtofl@exp,f
  6262  1E82  3001               	movlw	1
  6263  1E83                     u4955:	
  6264  1E83  1003               	clrc
  6265  1E84  0CA9               	rrf	___xxtofl@arg+3,f
  6266  1E85  0CA8               	rrf	___xxtofl@arg+2,f
  6267  1E86  0CA7               	rrf	___xxtofl@arg+1,f
  6268  1E87  0CA6               	rrf	___xxtofl@arg,f
  6269  1E88  3EFF               	addlw	-1
  6270  1E89  1D03               	skipz
  6271  1E8A  2E83               	goto	u4955
  6272  1E8B                     l3116:	
  6273  1E8B  30FE               	movlw	254
  6274  1E8C  0529               	andwf	___xxtofl@arg+3,w
  6275  1E8D  1D03               	btfss	3,2
  6276  1E8E  2E90               	goto	u4961
  6277  1E8F  2E91               	goto	u4960
  6278  1E90                     u4961:	
  6279  1E90  2E7E               	goto	l3114
  6280  1E91                     u4960:	
  6281  1E91  2EAD               	goto	l840
  6282  1E92                     l3118:	
  6283  1E92  3001               	movlw	1
  6284  1E93  00A0               	movwf	??___xxtofl
  6285  1E94  0820               	movf	??___xxtofl,w
  6286  1E95  07A5               	addwf	___xxtofl@exp,f
  6287  1E96                     l3120:	
  6288  1E96  3001               	movlw	1
  6289  1E97  07A6               	addwf	___xxtofl@arg,f
  6290  1E98  3000               	movlw	0
  6291  1E99  1803               	skipnc
  6292  1E9A  3001               	movlw	1
  6293  1E9B  07A7               	addwf	___xxtofl@arg+1,f
  6294  1E9C  3000               	movlw	0
  6295  1E9D  1803               	skipnc
  6296  1E9E  3001               	movlw	1
  6297  1E9F  07A8               	addwf	___xxtofl@arg+2,f
  6298  1EA0  3000               	movlw	0
  6299  1EA1  1803               	skipnc
  6300  1EA2  3001               	movlw	1
  6301  1EA3  07A9               	addwf	___xxtofl@arg+3,f
  6302  1EA4                     l3122:	
  6303  1EA4  3001               	movlw	1
  6304  1EA5                     u4975:	
  6305  1EA5  1003               	clrc
  6306  1EA6  0CA9               	rrf	___xxtofl@arg+3,f
  6307  1EA7  0CA8               	rrf	___xxtofl@arg+2,f
  6308  1EA8  0CA7               	rrf	___xxtofl@arg+1,f
  6309  1EA9  0CA6               	rrf	___xxtofl@arg,f
  6310  1EAA  3EFF               	addlw	-1
  6311  1EAB  1D03               	skipz
  6312  1EAC  2EA5               	goto	u4975
  6313  1EAD                     l840:	
  6314  1EAD  30FF               	movlw	255
  6315  1EAE  0529               	andwf	___xxtofl@arg+3,w
  6316  1EAF  1D03               	btfss	3,2
  6317  1EB0  2EB2               	goto	u4981
  6318  1EB1  2EB3               	goto	u4980
  6319  1EB2                     u4981:	
  6320  1EB2  2E92               	goto	l3118
  6321  1EB3                     u4980:	
  6322  1EB3  2EBF               	goto	l3126
  6323  1EB4                     l3124:	
  6324  1EB4  3001               	movlw	1
  6325  1EB5  02A5               	subwf	___xxtofl@exp,f
  6326  1EB6  3001               	movlw	1
  6327  1EB7  00A0               	movwf	??___xxtofl
  6328  1EB8                     u4995:	
  6329  1EB8  1003               	clrc
  6330  1EB9  0DA6               	rlf	___xxtofl@arg,f
  6331  1EBA  0DA7               	rlf	___xxtofl@arg+1,f
  6332  1EBB  0DA8               	rlf	___xxtofl@arg+2,f
  6333  1EBC  0DA9               	rlf	___xxtofl@arg+3,f
  6334  1EBD  0BA0               	decfsz	??___xxtofl,f
  6335  1EBE  2EB8               	goto	u4995
  6336  1EBF                     l3126:	
  6337  1EBF  1BA8               	btfsc	___xxtofl@arg+2,7
  6338  1EC0  2EC2               	goto	u5001
  6339  1EC1  2EC3               	goto	u5000
  6340  1EC2                     u5001:	
  6341  1EC2  2EC9               	goto	l847
  6342  1EC3                     u5000:	
  6343  1EC3                     l3128:	
  6344  1EC3  3002               	movlw	2
  6345  1EC4  0225               	subwf	___xxtofl@exp,w
  6346  1EC5  1803               	skipnc
  6347  1EC6  2EC8               	goto	u5011
  6348  1EC7  2EC9               	goto	u5010
  6349  1EC8                     u5011:	
  6350  1EC8  2EB4               	goto	l3124
  6351  1EC9                     u5010:	
  6352  1EC9                     l847:	
  6353  1EC9  1825               	btfsc	___xxtofl@exp,0
  6354  1ECA  2ECC               	goto	u5021
  6355  1ECB  2ECD               	goto	u5020
  6356  1ECC                     u5021:	
  6357  1ECC  2ED5               	goto	l848
  6358  1ECD                     u5020:	
  6359  1ECD                     l3130:	
  6360  1ECD  30FF               	movlw	255
  6361  1ECE  05A6               	andwf	___xxtofl@arg,f
  6362  1ECF  30FF               	movlw	255
  6363  1ED0  05A7               	andwf	___xxtofl@arg+1,f
  6364  1ED1  307F               	movlw	127
  6365  1ED2  05A8               	andwf	___xxtofl@arg+2,f
  6366  1ED3  30FF               	movlw	255
  6367  1ED4  05A9               	andwf	___xxtofl@arg+3,f
  6368  1ED5                     l848:	
  6369  1ED5  1003               	clrc
  6370  1ED6  0CA5               	rrf	___xxtofl@exp,f
  6371  1ED7                     l3132:	
  6372  1ED7  0825               	movf	___xxtofl@exp,w
  6373  1ED8  00A0               	movwf	??___xxtofl
  6374  1ED9  01A1               	clrf	??___xxtofl+1
  6375  1EDA  01A2               	clrf	??___xxtofl+2
  6376  1EDB  01A3               	clrf	??___xxtofl+3
  6377  1EDC  3018               	movlw	24
  6378  1EDD                     u5035:	
  6379  1EDD  1003               	clrc
  6380  1EDE  0DA0               	rlf	??___xxtofl,f
  6381  1EDF  0DA1               	rlf	??___xxtofl+1,f
  6382  1EE0  0DA2               	rlf	??___xxtofl+2,f
  6383  1EE1  0DA3               	rlf	??___xxtofl+3,f
  6384  1EE2                     u5030:	
  6385  1EE2  3EFF               	addlw	-1
  6386  1EE3  1D03               	skipz
  6387  1EE4  2EDD               	goto	u5035
  6388  1EE5  0820               	movf	??___xxtofl,w
  6389  1EE6  04A6               	iorwf	___xxtofl@arg,f
  6390  1EE7  0821               	movf	??___xxtofl+1,w
  6391  1EE8  04A7               	iorwf	___xxtofl@arg+1,f
  6392  1EE9  0822               	movf	??___xxtofl+2,w
  6393  1EEA  04A8               	iorwf	___xxtofl@arg+2,f
  6394  1EEB  0823               	movf	??___xxtofl+3,w
  6395  1EEC  04A9               	iorwf	___xxtofl@arg+3,f
  6396  1EED                     l3134:	
  6397  1EED  0824               	movf	___xxtofl@sign,w
  6398  1EEE  1903               	btfsc	3,2
  6399  1EEF  2EF1               	goto	u5041
  6400  1EF0  2EF2               	goto	u5040
  6401  1EF1                     u5041:	
  6402  1EF1  2EF7               	goto	l3140
  6403  1EF2                     u5040:	
  6404  1EF2                     l3136:	
  6405  1EF2  1FF7               	btfss	___xxtofl@val+3,7
  6406  1EF3  2EF5               	goto	u5051
  6407  1EF4  2EF6               	goto	u5050
  6408  1EF5                     u5051:	
  6409  1EF5  2EF7               	goto	l3140
  6410  1EF6                     u5050:	
  6411  1EF6                     l3138:	
  6412  1EF6  17A9               	bsf	___xxtofl@arg+3,7
  6413  1EF7                     l3140:	
  6414  1EF7  0829               	movf	___xxtofl@arg+3,w
  6415  1EF8  00F7               	movwf	?___xxtofl+3
  6416  1EF9  0828               	movf	___xxtofl@arg+2,w
  6417  1EFA  00F6               	movwf	?___xxtofl+2
  6418  1EFB  0827               	movf	___xxtofl@arg+1,w
  6419  1EFC  00F5               	movwf	?___xxtofl+1
  6420  1EFD  0826               	movf	___xxtofl@arg,w
  6421  1EFE  00F4               	movwf	?___xxtofl
  6422  1EFF                     l836:	
  6423  1EFF  0008               	return
  6424  1F00                     __end_of___xxtofl:	
  6425                           
  6426                           	psect	text15
  6427  19B0                     __ptext15:	
  6428 ;; *************** function ___wmul *****************
  6429 ;; Defined at:
  6430 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul16.c"
  6431 ;; Parameters:    Size  Location     Type
  6432 ;;  multiplier      2    3[COMMON] unsigned int 
  6433 ;;  multiplicand    2    5[COMMON] unsigned int 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  product         2    7[COMMON] unsigned int 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  2    3[COMMON] unsigned int 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6445 ;;      Params:         4       0       0       0       0
  6446 ;;      Locals:         2       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0
  6448 ;;      Totals:         6       0       0       0       0
  6449 ;;Total ram usage:        6 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    1
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_sprintf
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function ___wmul
  6461  19B0                     ___wmul:	
  6462  19B0                     l2960:	
  6463                           ;incstack = 0
  6464                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6465                           
  6466  19B0  01F8               	clrf	___wmul@product
  6467  19B1  01F9               	clrf	___wmul@product+1
  6468  19B2                     l2962:	
  6469  19B2  1C74               	btfss	___wmul@multiplier,0
  6470  19B3  29B5               	goto	u4541
  6471  19B4  29B6               	goto	u4540
  6472  19B5                     u4541:	
  6473  19B5  29BC               	goto	l373
  6474  19B6                     u4540:	
  6475  19B6                     l2964:	
  6476  19B6  0876               	movf	___wmul@multiplicand,w
  6477  19B7  07F8               	addwf	___wmul@product,f
  6478  19B8  1803               	skipnc
  6479  19B9  0AF9               	incf	___wmul@product+1,f
  6480  19BA  0877               	movf	___wmul@multiplicand+1,w
  6481  19BB  07F9               	addwf	___wmul@product+1,f
  6482  19BC                     l373:	
  6483  19BC  3001               	movlw	1
  6484  19BD                     u4555:	
  6485  19BD  1003               	clrc
  6486  19BE  0DF6               	rlf	___wmul@multiplicand,f
  6487  19BF  0DF7               	rlf	___wmul@multiplicand+1,f
  6488  19C0  3EFF               	addlw	-1
  6489  19C1  1D03               	skipz
  6490  19C2  29BD               	goto	u4555
  6491  19C3                     l2966:	
  6492  19C3  3001               	movlw	1
  6493  19C4                     u4565:	
  6494  19C4  1003               	clrc
  6495  19C5  0CF5               	rrf	___wmul@multiplier+1,f
  6496  19C6  0CF4               	rrf	___wmul@multiplier,f
  6497  19C7  3EFF               	addlw	-1
  6498  19C8  1D03               	skipz
  6499  19C9  29C4               	goto	u4565
  6500  19CA                     l2968:	
  6501  19CA  0874               	movf	___wmul@multiplier,w
  6502  19CB  0475               	iorwf	___wmul@multiplier+1,w
  6503  19CC  1D03               	btfss	3,2
  6504  19CD  29CF               	goto	u4571
  6505  19CE  29D0               	goto	u4570
  6506  19CF                     u4571:	
  6507  19CF  29B2               	goto	l2962
  6508  19D0                     u4570:	
  6509  19D0                     l2970:	
  6510  19D0  0879               	movf	___wmul@product+1,w
  6511  19D1  00F5               	movwf	?___wmul+1
  6512  19D2  0878               	movf	___wmul@product,w
  6513  19D3  00F4               	movwf	?___wmul
  6514  19D4                     l375:	
  6515  19D4  0008               	return
  6516  19D5                     __end_of___wmul:	
  6517                           
  6518                           	psect	text16
  6519  1BA4                     __ptext16:	
  6520 ;; *************** function ___llmod *****************
  6521 ;; Defined at:
  6522 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\llmod.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  divisor         4    0[BANK0 ] unsigned long 
  6525 ;;  dividend        4    4[BANK0 ] unsigned long 
  6526 ;; Auto vars:     Size  Location     Type
  6527 ;;  counter         1    4[COMMON] unsigned char 
  6528 ;; Return value:  Size  Location     Type
  6529 ;;                  4    0[BANK0 ] unsigned long 
  6530 ;; Registers used:
  6531 ;;		wreg, status,2, status,0
  6532 ;; Tracked objects:
  6533 ;;		On entry : 0/0
  6534 ;;		On exit  : 0/0
  6535 ;;		Unchanged: 0/0
  6536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6537 ;;      Params:         0       8       0       0       0
  6538 ;;      Locals:         1       0       0       0       0
  6539 ;;      Temps:          1       0       0       0       0
  6540 ;;      Totals:         2       8       0       0       0
  6541 ;;Total ram usage:       10 bytes
  6542 ;; Hardware stack levels used:    1
  6543 ;; Hardware stack levels required when called:    1
  6544 ;; This function calls:
  6545 ;;		Nothing
  6546 ;; This function is called by:
  6547 ;;		_sprintf
  6548 ;; This function uses a non-reentrant model
  6549 ;;
  6550                           
  6551                           
  6552                           ;psect for function ___llmod
  6553  1BA4                     ___llmod:	
  6554  1BA4                     l3074:	
  6555                           ;incstack = 0
  6556                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6557                           
  6558  1BA4  1283               	bcf	3,5	;RP0=0, select bank0
  6559  1BA5  1303               	bcf	3,6	;RP1=0, select bank0
  6560  1BA6  0823               	movf	___llmod@divisor+3,w
  6561  1BA7  0422               	iorwf	___llmod@divisor+2,w
  6562  1BA8  0421               	iorwf	___llmod@divisor+1,w
  6563  1BA9  0420               	iorwf	___llmod@divisor,w
  6564  1BAA  1903               	skipnz
  6565  1BAB  2BAD               	goto	u4861
  6566  1BAC  2BAE               	goto	u4860
  6567  1BAD                     u4861:	
  6568  1BAD  2BF1               	goto	l3090
  6569  1BAE                     u4860:	
  6570  1BAE                     l3076:	
  6571  1BAE  01F5               	clrf	___llmod@counter
  6572  1BAF  0AF5               	incf	___llmod@counter,f
  6573  1BB0  2BBE               	goto	l3080
  6574  1BB1                     l3078:	
  6575  1BB1  3001               	movlw	1
  6576  1BB2  00F4               	movwf	??___llmod
  6577  1BB3                     u4875:	
  6578  1BB3  1003               	clrc
  6579  1BB4  0DA0               	rlf	___llmod@divisor,f
  6580  1BB5  0DA1               	rlf	___llmod@divisor+1,f
  6581  1BB6  0DA2               	rlf	___llmod@divisor+2,f
  6582  1BB7  0DA3               	rlf	___llmod@divisor+3,f
  6583  1BB8  0BF4               	decfsz	??___llmod,f
  6584  1BB9  2BB3               	goto	u4875
  6585  1BBA  3001               	movlw	1
  6586  1BBB  00F4               	movwf	??___llmod
  6587  1BBC  0874               	movf	??___llmod,w
  6588  1BBD  07F5               	addwf	___llmod@counter,f
  6589  1BBE                     l3080:	
  6590  1BBE  1FA3               	btfss	___llmod@divisor+3,7
  6591  1BBF  2BC1               	goto	u4881
  6592  1BC0  2BC2               	goto	u4880
  6593  1BC1                     u4881:	
  6594  1BC1  2BB1               	goto	l3078
  6595  1BC2                     u4880:	
  6596  1BC2                     l3082:	
  6597  1BC2  0823               	movf	___llmod@divisor+3,w
  6598  1BC3  0227               	subwf	___llmod@dividend+3,w
  6599  1BC4  1D03               	skipz
  6600  1BC5  2BD0               	goto	u4895
  6601  1BC6  0822               	movf	___llmod@divisor+2,w
  6602  1BC7  0226               	subwf	___llmod@dividend+2,w
  6603  1BC8  1D03               	skipz
  6604  1BC9  2BD0               	goto	u4895
  6605  1BCA  0821               	movf	___llmod@divisor+1,w
  6606  1BCB  0225               	subwf	___llmod@dividend+1,w
  6607  1BCC  1D03               	skipz
  6608  1BCD  2BD0               	goto	u4895
  6609  1BCE  0820               	movf	___llmod@divisor,w
  6610  1BCF  0224               	subwf	___llmod@dividend,w
  6611  1BD0                     u4895:	
  6612  1BD0  1C03               	skipc
  6613  1BD1  2BD3               	goto	u4891
  6614  1BD2  2BD4               	goto	u4890
  6615  1BD3                     u4891:	
  6616  1BD3  2BE2               	goto	l3086
  6617  1BD4                     u4890:	
  6618  1BD4                     l3084:	
  6619  1BD4  0820               	movf	___llmod@divisor,w
  6620  1BD5  02A4               	subwf	___llmod@dividend,f
  6621  1BD6  0821               	movf	___llmod@divisor+1,w
  6622  1BD7  1C03               	skipc
  6623  1BD8  0F21               	incfsz	___llmod@divisor+1,w
  6624  1BD9  02A5               	subwf	___llmod@dividend+1,f
  6625  1BDA  0822               	movf	___llmod@divisor+2,w
  6626  1BDB  1C03               	skipc
  6627  1BDC  0F22               	incfsz	___llmod@divisor+2,w
  6628  1BDD  02A6               	subwf	___llmod@dividend+2,f
  6629  1BDE  0823               	movf	___llmod@divisor+3,w
  6630  1BDF  1C03               	skipc
  6631  1BE0  0F23               	incfsz	___llmod@divisor+3,w
  6632  1BE1  02A7               	subwf	___llmod@dividend+3,f
  6633  1BE2                     l3086:	
  6634  1BE2  3001               	movlw	1
  6635  1BE3                     u4905:	
  6636  1BE3  1003               	clrc
  6637  1BE4  0CA3               	rrf	___llmod@divisor+3,f
  6638  1BE5  0CA2               	rrf	___llmod@divisor+2,f
  6639  1BE6  0CA1               	rrf	___llmod@divisor+1,f
  6640  1BE7  0CA0               	rrf	___llmod@divisor,f
  6641  1BE8  3EFF               	addlw	-1
  6642  1BE9  1D03               	skipz
  6643  1BEA  2BE3               	goto	u4905
  6644  1BEB                     l3088:	
  6645  1BEB  3001               	movlw	1
  6646  1BEC  02F5               	subwf	___llmod@counter,f
  6647  1BED  1D03               	btfss	3,2
  6648  1BEE  2BF0               	goto	u4911
  6649  1BEF  2BF1               	goto	u4910
  6650  1BF0                     u4911:	
  6651  1BF0  2BC2               	goto	l3082
  6652  1BF1                     u4910:	
  6653  1BF1                     l3090:	
  6654  1BF1  0827               	movf	___llmod@dividend+3,w
  6655  1BF2  00A3               	movwf	?___llmod+3
  6656  1BF3  0826               	movf	___llmod@dividend+2,w
  6657  1BF4  00A2               	movwf	?___llmod+2
  6658  1BF5  0825               	movf	___llmod@dividend+1,w
  6659  1BF6  00A1               	movwf	?___llmod+1
  6660  1BF7  0824               	movf	___llmod@dividend,w
  6661  1BF8  00A0               	movwf	?___llmod
  6662  1BF9                     l629:	
  6663  1BF9  0008               	return
  6664  1BFA                     __end_of___llmod:	
  6665                           
  6666                           	psect	text17
  6667  1C53                     __ptext17:	
  6668 ;; *************** function ___lldiv *****************
  6669 ;; Defined at:
  6670 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\__lldiv.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  divisor         4    0[BANK0 ] unsigned long 
  6673 ;;  dividend        4    4[BANK0 ] unsigned long 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  quotient        4    4[COMMON] unsigned long 
  6676 ;;  counter         1    8[COMMON] unsigned char 
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  4    0[BANK0 ] unsigned long 
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6686 ;;      Params:         0       8       0       0       0
  6687 ;;      Locals:         5       0       0       0       0
  6688 ;;      Temps:          1       0       0       0       0
  6689 ;;      Totals:         6       8       0       0       0
  6690 ;;Total ram usage:       14 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_sprintf
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           
  6701                           ;psect for function ___lldiv
  6702  1C53                     ___lldiv:	
  6703  1C53                     l2974:	
  6704                           ;incstack = 0
  6705                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6706                           
  6707  1C53  3000               	movlw	0
  6708  1C54  00F8               	movwf	___lldiv@quotient+3
  6709  1C55  3000               	movlw	0
  6710  1C56  00F7               	movwf	___lldiv@quotient+2
  6711  1C57  3000               	movlw	0
  6712  1C58  00F6               	movwf	___lldiv@quotient+1
  6713  1C59  3000               	movlw	0
  6714  1C5A  00F5               	movwf	___lldiv@quotient
  6715  1C5B  1283               	bcf	3,5	;RP0=0, select bank0
  6716  1C5C  1303               	bcf	3,6	;RP1=0, select bank0
  6717  1C5D  0823               	movf	___lldiv@divisor+3,w
  6718  1C5E  0422               	iorwf	___lldiv@divisor+2,w
  6719  1C5F  0421               	iorwf	___lldiv@divisor+1,w
  6720  1C60  0420               	iorwf	___lldiv@divisor,w
  6721  1C61  1903               	skipnz
  6722  1C62  2C64               	goto	u4581
  6723  1C63  2C65               	goto	u4580
  6724  1C64                     u4581:	
  6725  1C64  2CB2               	goto	l2994
  6726  1C65                     u4580:	
  6727  1C65                     l2976:	
  6728  1C65  01F9               	clrf	___lldiv@counter
  6729  1C66  0AF9               	incf	___lldiv@counter,f
  6730  1C67  2C75               	goto	l2980
  6731  1C68                     l2978:	
  6732  1C68  3001               	movlw	1
  6733  1C69  00F4               	movwf	??___lldiv
  6734  1C6A                     u4595:	
  6735  1C6A  1003               	clrc
  6736  1C6B  0DA0               	rlf	___lldiv@divisor,f
  6737  1C6C  0DA1               	rlf	___lldiv@divisor+1,f
  6738  1C6D  0DA2               	rlf	___lldiv@divisor+2,f
  6739  1C6E  0DA3               	rlf	___lldiv@divisor+3,f
  6740  1C6F  0BF4               	decfsz	??___lldiv,f
  6741  1C70  2C6A               	goto	u4595
  6742  1C71  3001               	movlw	1
  6743  1C72  00F4               	movwf	??___lldiv
  6744  1C73  0874               	movf	??___lldiv,w
  6745  1C74  07F9               	addwf	___lldiv@counter,f
  6746  1C75                     l2980:	
  6747  1C75  1FA3               	btfss	___lldiv@divisor+3,7
  6748  1C76  2C78               	goto	u4601
  6749  1C77  2C79               	goto	u4600
  6750  1C78                     u4601:	
  6751  1C78  2C68               	goto	l2978
  6752  1C79                     u4600:	
  6753  1C79                     l2982:	
  6754  1C79  3001               	movlw	1
  6755  1C7A  00F4               	movwf	??___lldiv
  6756  1C7B                     u4615:	
  6757  1C7B  1003               	clrc
  6758  1C7C  0DF5               	rlf	___lldiv@quotient,f
  6759  1C7D  0DF6               	rlf	___lldiv@quotient+1,f
  6760  1C7E  0DF7               	rlf	___lldiv@quotient+2,f
  6761  1C7F  0DF8               	rlf	___lldiv@quotient+3,f
  6762  1C80  0BF4               	decfsz	??___lldiv,f
  6763  1C81  2C7B               	goto	u4615
  6764  1C82                     l2984:	
  6765  1C82  0823               	movf	___lldiv@divisor+3,w
  6766  1C83  0227               	subwf	___lldiv@dividend+3,w
  6767  1C84  1D03               	skipz
  6768  1C85  2C90               	goto	u4625
  6769  1C86  0822               	movf	___lldiv@divisor+2,w
  6770  1C87  0226               	subwf	___lldiv@dividend+2,w
  6771  1C88  1D03               	skipz
  6772  1C89  2C90               	goto	u4625
  6773  1C8A  0821               	movf	___lldiv@divisor+1,w
  6774  1C8B  0225               	subwf	___lldiv@dividend+1,w
  6775  1C8C  1D03               	skipz
  6776  1C8D  2C90               	goto	u4625
  6777  1C8E  0820               	movf	___lldiv@divisor,w
  6778  1C8F  0224               	subwf	___lldiv@dividend,w
  6779  1C90                     u4625:	
  6780  1C90  1C03               	skipc
  6781  1C91  2C93               	goto	u4621
  6782  1C92  2C94               	goto	u4620
  6783  1C93                     u4621:	
  6784  1C93  2CA3               	goto	l2990
  6785  1C94                     u4620:	
  6786  1C94                     l2986:	
  6787  1C94  0820               	movf	___lldiv@divisor,w
  6788  1C95  02A4               	subwf	___lldiv@dividend,f
  6789  1C96  0821               	movf	___lldiv@divisor+1,w
  6790  1C97  1C03               	skipc
  6791  1C98  0F21               	incfsz	___lldiv@divisor+1,w
  6792  1C99  02A5               	subwf	___lldiv@dividend+1,f
  6793  1C9A  0822               	movf	___lldiv@divisor+2,w
  6794  1C9B  1C03               	skipc
  6795  1C9C  0F22               	incfsz	___lldiv@divisor+2,w
  6796  1C9D  02A6               	subwf	___lldiv@dividend+2,f
  6797  1C9E  0823               	movf	___lldiv@divisor+3,w
  6798  1C9F  1C03               	skipc
  6799  1CA0  0F23               	incfsz	___lldiv@divisor+3,w
  6800  1CA1  02A7               	subwf	___lldiv@dividend+3,f
  6801  1CA2                     l2988:	
  6802  1CA2  1475               	bsf	___lldiv@quotient,0
  6803  1CA3                     l2990:	
  6804  1CA3  3001               	movlw	1
  6805  1CA4                     u4635:	
  6806  1CA4  1003               	clrc
  6807  1CA5  0CA3               	rrf	___lldiv@divisor+3,f
  6808  1CA6  0CA2               	rrf	___lldiv@divisor+2,f
  6809  1CA7  0CA1               	rrf	___lldiv@divisor+1,f
  6810  1CA8  0CA0               	rrf	___lldiv@divisor,f
  6811  1CA9  3EFF               	addlw	-1
  6812  1CAA  1D03               	skipz
  6813  1CAB  2CA4               	goto	u4635
  6814  1CAC                     l2992:	
  6815  1CAC  3001               	movlw	1
  6816  1CAD  02F9               	subwf	___lldiv@counter,f
  6817  1CAE  1D03               	btfss	3,2
  6818  1CAF  2CB1               	goto	u4641
  6819  1CB0  2CB2               	goto	u4640
  6820  1CB1                     u4641:	
  6821  1CB1  2C79               	goto	l2982
  6822  1CB2                     u4640:	
  6823  1CB2                     l2994:	
  6824  1CB2  0878               	movf	___lldiv@quotient+3,w
  6825  1CB3  00A3               	movwf	?___lldiv+3
  6826  1CB4  0877               	movf	___lldiv@quotient+2,w
  6827  1CB5  00A2               	movwf	?___lldiv+2
  6828  1CB6  0876               	movf	___lldiv@quotient+1,w
  6829  1CB7  00A1               	movwf	?___lldiv+1
  6830  1CB8  0875               	movf	___lldiv@quotient,w
  6831  1CB9  00A0               	movwf	?___lldiv
  6832  1CBA                     l409:	
  6833  1CBA  0008               	return
  6834  1CBB                     __end_of___lldiv:	
  6835                           
  6836                           	psect	text18
  6837  1D24                     __ptext18:	
  6838 ;; *************** function ___fltol *****************
  6839 ;; Defined at:
  6840 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fltol.c"
  6841 ;; Parameters:    Size  Location     Type
  6842 ;;  f1              4   55[BANK0 ] unsigned long 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  exp1            1   65[BANK0 ] unsigned char 
  6845 ;;  sign1           1   64[BANK0 ] unsigned char 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  4   55[BANK0 ] long 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6855 ;;      Params:         0       4       0       0       0
  6856 ;;      Locals:         0       2       0       0       0
  6857 ;;      Temps:          0       5       0       0       0
  6858 ;;      Totals:         0      11       0       0       0
  6859 ;;Total ram usage:       11 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:    1
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_sprintf
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           
  6870                           ;psect for function ___fltol
  6871  1D24                     ___fltol:	
  6872  1D24                     l3038:	
  6873                           ;incstack = 0
  6874                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6875                           
  6876  1D24  1003               	clrc
  6877  1D25  1283               	bcf	3,5	;RP0=0, select bank0
  6878  1D26  1303               	bcf	3,6	;RP1=0, select bank0
  6879  1D27  0D59               	rlf	___fltol@f1+2,w
  6880  1D28  0D5A               	rlf	___fltol@f1+3,w
  6881  1D29  00DB               	movwf	??___fltol
  6882  1D2A  085B               	movf	??___fltol,w
  6883  1D2B  00E1               	movwf	___fltol@exp1
  6884  1D2C  0861               	movf	___fltol@exp1,w
  6885  1D2D  1D03               	btfss	3,2
  6886  1D2E  2D30               	goto	u4761
  6887  1D2F  2D31               	goto	u4760
  6888  1D30                     u4761:	
  6889  1D30  2D3A               	goto	l3044
  6890  1D31                     u4760:	
  6891  1D31                     l3040:	
  6892  1D31  3000               	movlw	0
  6893  1D32  00DA               	movwf	?___fltol+3
  6894  1D33  3000               	movlw	0
  6895  1D34  00D9               	movwf	?___fltol+2
  6896  1D35  3000               	movlw	0
  6897  1D36  00D8               	movwf	?___fltol+1
  6898  1D37  3000               	movlw	0
  6899  1D38  00D7               	movwf	?___fltol
  6900  1D39  2D9F               	goto	l576
  6901  1D3A                     l3044:	
  6902  1D3A  0857               	movf	___fltol@f1,w
  6903  1D3B  00DB               	movwf	??___fltol
  6904  1D3C  0858               	movf	___fltol@f1+1,w
  6905  1D3D  00DC               	movwf	??___fltol+1
  6906  1D3E  0859               	movf	___fltol@f1+2,w
  6907  1D3F  00DD               	movwf	??___fltol+2
  6908  1D40  085A               	movf	___fltol@f1+3,w
  6909  1D41  00DE               	movwf	??___fltol+3
  6910  1D42  301F               	movlw	31
  6911  1D43                     u4775:	
  6912  1D43  1003               	clrc
  6913  1D44  0CDE               	rrf	??___fltol+3,f
  6914  1D45  0CDD               	rrf	??___fltol+2,f
  6915  1D46  0CDC               	rrf	??___fltol+1,f
  6916  1D47  0CDB               	rrf	??___fltol,f
  6917  1D48                     u4770:	
  6918  1D48  3EFF               	addlw	-1
  6919  1D49  1D03               	skipz
  6920  1D4A  2D43               	goto	u4775
  6921  1D4B  085B               	movf	??___fltol,w
  6922  1D4C  00DF               	movwf	??___fltol+4
  6923  1D4D  085F               	movf	??___fltol+4,w
  6924  1D4E  00E0               	movwf	___fltol@sign1
  6925  1D4F                     l3046:	
  6926  1D4F  17D9               	bsf	___fltol@f1+2,7
  6927  1D50                     l3048:	
  6928  1D50  30FF               	movlw	255
  6929  1D51  05D7               	andwf	___fltol@f1,f
  6930  1D52  30FF               	movlw	255
  6931  1D53  05D8               	andwf	___fltol@f1+1,f
  6932  1D54  30FF               	movlw	255
  6933  1D55  05D9               	andwf	___fltol@f1+2,f
  6934  1D56  3000               	movlw	0
  6935  1D57  05DA               	andwf	___fltol@f1+3,f
  6936  1D58                     l3050:	
  6937  1D58  3096               	movlw	150
  6938  1D59  02E1               	subwf	___fltol@exp1,f
  6939  1D5A                     l3052:	
  6940  1D5A  1FE1               	btfss	___fltol@exp1,7
  6941  1D5B  2D5D               	goto	u4781
  6942  1D5C  2D5E               	goto	u4780
  6943  1D5D                     u4781:	
  6944  1D5D  2D78               	goto	l3062
  6945  1D5E                     u4780:	
  6946  1D5E                     l3054:	
  6947  1D5E  0861               	movf	___fltol@exp1,w
  6948  1D5F  3A80               	xorlw	128
  6949  1D60  3E97               	addlw	151
  6950  1D61  1803               	skipnc
  6951  1D62  2D64               	goto	u4791
  6952  1D63  2D65               	goto	u4790
  6953  1D64                     u4791:	
  6954  1D64  2D66               	goto	l3060
  6955  1D65                     u4790:	
  6956  1D65  2D31               	goto	l3040
  6957  1D66                     l3060:	
  6958  1D66  3001               	movlw	1
  6959  1D67                     u4805:	
  6960  1D67  1003               	clrc
  6961  1D68  0CDA               	rrf	___fltol@f1+3,f
  6962  1D69  0CD9               	rrf	___fltol@f1+2,f
  6963  1D6A  0CD8               	rrf	___fltol@f1+1,f
  6964  1D6B  0CD7               	rrf	___fltol@f1,f
  6965  1D6C  3EFF               	addlw	-1
  6966  1D6D  1D03               	skipz
  6967  1D6E  2D67               	goto	u4805
  6968  1D6F  3001               	movlw	1
  6969  1D70  00DB               	movwf	??___fltol
  6970  1D71  085B               	movf	??___fltol,w
  6971  1D72  07E1               	addwf	___fltol@exp1,f
  6972  1D73  1D03               	btfss	3,2
  6973  1D74  2D76               	goto	u4811
  6974  1D75  2D77               	goto	u4810
  6975  1D76                     u4811:	
  6976  1D76  2D66               	goto	l3060
  6977  1D77                     u4810:	
  6978  1D77  2D8F               	goto	l3070
  6979  1D78                     l3062:	
  6980  1D78  3020               	movlw	32
  6981  1D79  0261               	subwf	___fltol@exp1,w
  6982  1D7A  1C03               	skipc
  6983  1D7B  2D7D               	goto	u4821
  6984  1D7C  2D7E               	goto	u4820
  6985  1D7D                     u4821:	
  6986  1D7D  2D8A               	goto	l583
  6987  1D7E                     u4820:	
  6988  1D7E  2D31               	goto	l3040
  6989  1D7F                     l3068:	
  6990  1D7F  3001               	movlw	1
  6991  1D80  00DB               	movwf	??___fltol
  6992  1D81                     u4835:	
  6993  1D81  1003               	clrc
  6994  1D82  0DD7               	rlf	___fltol@f1,f
  6995  1D83  0DD8               	rlf	___fltol@f1+1,f
  6996  1D84  0DD9               	rlf	___fltol@f1+2,f
  6997  1D85  0DDA               	rlf	___fltol@f1+3,f
  6998  1D86  0BDB               	decfsz	??___fltol,f
  6999  1D87  2D81               	goto	u4835
  7000  1D88  3001               	movlw	1
  7001  1D89  02E1               	subwf	___fltol@exp1,f
  7002  1D8A                     l583:	
  7003  1D8A  0861               	movf	___fltol@exp1,w
  7004  1D8B  1D03               	btfss	3,2
  7005  1D8C  2D8E               	goto	u4841
  7006  1D8D  2D8F               	goto	u4840
  7007  1D8E                     u4841:	
  7008  1D8E  2D7F               	goto	l3068
  7009  1D8F                     u4840:	
  7010  1D8F                     l3070:	
  7011  1D8F  0860               	movf	___fltol@sign1,w
  7012  1D90  1903               	btfsc	3,2
  7013  1D91  2D93               	goto	u4851
  7014  1D92  2D94               	goto	u4850
  7015  1D93                     u4851:	
  7016  1D93  2D9F               	goto	l586
  7017  1D94                     u4850:	
  7018  1D94                     l3072:	
  7019  1D94  09D7               	comf	___fltol@f1,f
  7020  1D95  09D8               	comf	___fltol@f1+1,f
  7021  1D96  09D9               	comf	___fltol@f1+2,f
  7022  1D97  09DA               	comf	___fltol@f1+3,f
  7023  1D98  0AD7               	incf	___fltol@f1,f
  7024  1D99  1903               	skipnz
  7025  1D9A  0AD8               	incf	___fltol@f1+1,f
  7026  1D9B  1903               	skipnz
  7027  1D9C  0AD9               	incf	___fltol@f1+2,f
  7028  1D9D  1903               	skipnz
  7029  1D9E  0ADA               	incf	___fltol@f1+3,f
  7030  1D9F                     l586:	
  7031  1D9F                     l576:	
  7032  1D9F  0008               	return
  7033  1DA0                     __end_of___fltol:	
  7034                           
  7035                           	psect	text19
  7036  1B01                     __ptext19:	
  7037 ;; *************** function ___flsub *****************
  7038 ;; Defined at:
  7039 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  a               4    0[BANK1 ] long 
  7042 ;;  b               4    4[BANK1 ] long 
  7043 ;; Auto vars:     Size  Location     Type
  7044 ;;		None
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  4    0[BANK1 ] long 
  7047 ;; Registers used:
  7048 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7049 ;; Tracked objects:
  7050 ;;		On entry : 0/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7054 ;;      Params:         0       0       8       0       0
  7055 ;;      Locals:         0       0       0       0       0
  7056 ;;      Temps:          0       0       0       0       0
  7057 ;;      Totals:         0       0       8       0       0
  7058 ;;Total ram usage:        8 bytes
  7059 ;; Hardware stack levels used:    1
  7060 ;; Hardware stack levels required when called:    2
  7061 ;; This function calls:
  7062 ;;		___fladd
  7063 ;; This function is called by:
  7064 ;;		_sprintf
  7065 ;; This function uses a non-reentrant model
  7066 ;;
  7067                           
  7068                           
  7069                           ;psect for function ___flsub
  7070  1B01                     ___flsub:	
  7071  1B01                     l3094:	
  7072                           ;incstack = 0
  7073                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7074                           
  7075  1B01  3080               	movlw	128
  7076  1B02  1683               	bsf	3,5	;RP0=1, select bank1
  7077  1B03  1303               	bcf	3,6	;RP1=0, select bank1
  7078  1B04  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7079  1B05                     l3096:	
  7080  1B05  0827               	movf	(___flsub@b+3)^(0+128),w
  7081  1B06  1283               	bcf	3,5	;RP0=0, select bank0
  7082  1B07  1303               	bcf	3,6	;RP1=0, select bank0
  7083  1B08  00DB               	movwf	___fladd@b+3
  7084  1B09  1683               	bsf	3,5	;RP0=1, select bank1
  7085  1B0A  1303               	bcf	3,6	;RP1=0, select bank1
  7086  1B0B  0826               	movf	(___flsub@b+2)^(0+128),w
  7087  1B0C  1283               	bcf	3,5	;RP0=0, select bank0
  7088  1B0D  1303               	bcf	3,6	;RP1=0, select bank0
  7089  1B0E  00DA               	movwf	___fladd@b+2
  7090  1B0F  1683               	bsf	3,5	;RP0=1, select bank1
  7091  1B10  1303               	bcf	3,6	;RP1=0, select bank1
  7092  1B11  0825               	movf	(___flsub@b+1)^(0+128),w
  7093  1B12  1283               	bcf	3,5	;RP0=0, select bank0
  7094  1B13  1303               	bcf	3,6	;RP1=0, select bank0
  7095  1B14  00D9               	movwf	___fladd@b+1
  7096  1B15  1683               	bsf	3,5	;RP0=1, select bank1
  7097  1B16  1303               	bcf	3,6	;RP1=0, select bank1
  7098  1B17  0824               	movf	___flsub@b^(0+128),w
  7099  1B18  1283               	bcf	3,5	;RP0=0, select bank0
  7100  1B19  1303               	bcf	3,6	;RP1=0, select bank0
  7101  1B1A  00D8               	movwf	___fladd@b
  7102  1B1B  1683               	bsf	3,5	;RP0=1, select bank1
  7103  1B1C  1303               	bcf	3,6	;RP1=0, select bank1
  7104  1B1D  0823               	movf	(___flsub@a+3)^(0+128),w
  7105  1B1E  1283               	bcf	3,5	;RP0=0, select bank0
  7106  1B1F  1303               	bcf	3,6	;RP1=0, select bank0
  7107  1B20  00DF               	movwf	___fladd@a+3
  7108  1B21  1683               	bsf	3,5	;RP0=1, select bank1
  7109  1B22  1303               	bcf	3,6	;RP1=0, select bank1
  7110  1B23  0822               	movf	(___flsub@a+2)^(0+128),w
  7111  1B24  1283               	bcf	3,5	;RP0=0, select bank0
  7112  1B25  1303               	bcf	3,6	;RP1=0, select bank0
  7113  1B26  00DE               	movwf	___fladd@a+2
  7114  1B27  1683               	bsf	3,5	;RP0=1, select bank1
  7115  1B28  1303               	bcf	3,6	;RP1=0, select bank1
  7116  1B29  0821               	movf	(___flsub@a+1)^(0+128),w
  7117  1B2A  1283               	bcf	3,5	;RP0=0, select bank0
  7118  1B2B  1303               	bcf	3,6	;RP1=0, select bank0
  7119  1B2C  00DD               	movwf	___fladd@a+1
  7120  1B2D  1683               	bsf	3,5	;RP0=1, select bank1
  7121  1B2E  1303               	bcf	3,6	;RP1=0, select bank1
  7122  1B2F  0820               	movf	___flsub@a^(0+128),w
  7123  1B30  1283               	bcf	3,5	;RP0=0, select bank0
  7124  1B31  1303               	bcf	3,6	;RP1=0, select bank0
  7125  1B32  00DC               	movwf	___fladd@a
  7126  1B33  160A  118A  2274  160A  158A  	fcall	___fladd
  7127  1B38  1283               	bcf	3,5	;RP0=0, select bank0
  7128  1B39  1303               	bcf	3,6	;RP1=0, select bank0
  7129  1B3A  085B               	movf	?___fladd+3,w
  7130  1B3B  1683               	bsf	3,5	;RP0=1, select bank1
  7131  1B3C  1303               	bcf	3,6	;RP1=0, select bank1
  7132  1B3D  00A3               	movwf	(?___flsub+3)^(0+128)
  7133  1B3E  1283               	bcf	3,5	;RP0=0, select bank0
  7134  1B3F  1303               	bcf	3,6	;RP1=0, select bank0
  7135  1B40  085A               	movf	?___fladd+2,w
  7136  1B41  1683               	bsf	3,5	;RP0=1, select bank1
  7137  1B42  1303               	bcf	3,6	;RP1=0, select bank1
  7138  1B43  00A2               	movwf	(?___flsub+2)^(0+128)
  7139  1B44  1283               	bcf	3,5	;RP0=0, select bank0
  7140  1B45  1303               	bcf	3,6	;RP1=0, select bank0
  7141  1B46  0859               	movf	?___fladd+1,w
  7142  1B47  1683               	bsf	3,5	;RP0=1, select bank1
  7143  1B48  1303               	bcf	3,6	;RP1=0, select bank1
  7144  1B49  00A1               	movwf	(?___flsub+1)^(0+128)
  7145  1B4A  1283               	bcf	3,5	;RP0=0, select bank0
  7146  1B4B  1303               	bcf	3,6	;RP1=0, select bank0
  7147  1B4C  0858               	movf	?___fladd,w
  7148  1B4D  1683               	bsf	3,5	;RP0=1, select bank1
  7149  1B4E  1303               	bcf	3,6	;RP1=0, select bank1
  7150  1B4F  00A0               	movwf	?___flsub^(0+128)
  7151  1B50                     l746:	
  7152  1B50  0008               	return
  7153  1B51                     __end_of___flsub:	
  7154                           
  7155                           	psect	text20
  7156  1274                     __ptext20:	
  7157 ;; *************** function ___fladd *****************
  7158 ;; Defined at:
  7159 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\sprcadd.c"
  7160 ;; Parameters:    Size  Location     Type
  7161 ;;  b               4   56[BANK0 ] long 
  7162 ;;  a               4   60[BANK0 ] long 
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  grs             1   75[BANK0 ] unsigned char 
  7165 ;;  bexp            1   74[BANK0 ] unsigned char 
  7166 ;;  aexp            1   73[BANK0 ] unsigned char 
  7167 ;;  signs           1   72[BANK0 ] unsigned char 
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  4   56[BANK0 ] unsigned char 
  7170 ;; Registers used:
  7171 ;;		wreg, status,2, status,0, btemp+1
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7177 ;;      Params:         0       8       0       0       0
  7178 ;;      Locals:         0       4       0       0       0
  7179 ;;      Temps:          0       8       0       0       0
  7180 ;;      Totals:         0      20       0       0       0
  7181 ;;Total ram usage:       20 bytes
  7182 ;; Hardware stack levels used:    1
  7183 ;; Hardware stack levels required when called:    1
  7184 ;; This function calls:
  7185 ;;		Nothing
  7186 ;; This function is called by:
  7187 ;;		_sprintf
  7188 ;;		___flsub
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           
  7193                           ;psect for function ___fladd
  7194  1274                     ___fladd:	
  7195  1274                     l2434:	
  7196                           ;incstack = 0
  7197                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7198                           
  7199  1274  1283               	bcf	3,5	;RP0=0, select bank0
  7200  1275  1303               	bcf	3,6	;RP1=0, select bank0
  7201  1276  085B               	movf	___fladd@b+3,w
  7202  1277  3980               	andlw	128
  7203  1278  00E0               	movwf	??___fladd
  7204  1279  0860               	movf	??___fladd,w
  7205  127A  00E8               	movwf	___fladd@signs
  7206  127B                     l2436:	
  7207  127B  085B               	movf	___fladd@b+3,w
  7208  127C  00E0               	movwf	??___fladd
  7209  127D  0760               	addwf	??___fladd,w
  7210  127E  00E1               	movwf	??___fladd+1
  7211  127F  0861               	movf	??___fladd+1,w
  7212  1280  00EA               	movwf	___fladd@bexp
  7213  1281                     l2438:	
  7214  1281  1FDA               	btfss	___fladd@b+2,7
  7215  1282  2A84               	goto	u3181
  7216  1283  2A85               	goto	u3180
  7217  1284                     u3181:	
  7218  1284  2A86               	goto	l2442
  7219  1285                     u3180:	
  7220  1285                     l2440:	
  7221  1285  146A               	bsf	___fladd@bexp,0
  7222  1286                     l2442:	
  7223  1286  086A               	movf	___fladd@bexp,w
  7224  1287  1903               	btfsc	3,2
  7225  1288  2A8A               	goto	u3191
  7226  1289  2A8B               	goto	u3190
  7227  128A                     u3191:	
  7228  128A  2A9B               	goto	l2452
  7229  128B                     u3190:	
  7230  128B                     l2444:	
  7231  128B  0A6A               	incf	___fladd@bexp,w
  7232  128C  1D03               	btfss	3,2
  7233  128D  2A8F               	goto	u3201
  7234  128E  2A90               	goto	u3200
  7235  128F                     u3201:	
  7236  128F  2A98               	goto	l2448
  7237  1290                     u3200:	
  7238  1290                     l2446:	
  7239  1290  3000               	movlw	0
  7240  1291  00DB               	movwf	___fladd@b+3
  7241  1292  3000               	movlw	0
  7242  1293  00DA               	movwf	___fladd@b+2
  7243  1294  3000               	movlw	0
  7244  1295  00D9               	movwf	___fladd@b+1
  7245  1296  3000               	movlw	0
  7246  1297  00D8               	movwf	___fladd@b
  7247  1298                     l2448:	
  7248  1298  17DA               	bsf	___fladd@b+2,7
  7249  1299                     l2450:	
  7250  1299  01DB               	clrf	___fladd@b+3
  7251  129A  2AA3               	goto	l2454
  7252  129B                     l2452:	
  7253  129B  3000               	movlw	0
  7254  129C  00DB               	movwf	___fladd@b+3
  7255  129D  3000               	movlw	0
  7256  129E  00DA               	movwf	___fladd@b+2
  7257  129F  3000               	movlw	0
  7258  12A0  00D9               	movwf	___fladd@b+1
  7259  12A1  3000               	movlw	0
  7260  12A2  00D8               	movwf	___fladd@b
  7261  12A3                     l2454:	
  7262  12A3  085F               	movf	___fladd@a+3,w
  7263  12A4  3980               	andlw	128
  7264  12A5  00E0               	movwf	??___fladd
  7265  12A6  0860               	movf	??___fladd,w
  7266  12A7  00E9               	movwf	___fladd@aexp
  7267  12A8                     l2456:	
  7268  12A8  0869               	movf	___fladd@aexp,w
  7269  12A9  0668               	xorwf	___fladd@signs,w
  7270  12AA  1903               	skipnz
  7271  12AB  2AAD               	goto	u3211
  7272  12AC  2AAE               	goto	u3210
  7273  12AD                     u3211:	
  7274  12AD  2AAF               	goto	l2460
  7275  12AE                     u3210:	
  7276  12AE                     l2458:	
  7277  12AE  1768               	bsf	___fladd@signs,6
  7278  12AF                     l2460:	
  7279  12AF  085F               	movf	___fladd@a+3,w
  7280  12B0  00E0               	movwf	??___fladd
  7281  12B1  0760               	addwf	??___fladd,w
  7282  12B2  00E1               	movwf	??___fladd+1
  7283  12B3  0861               	movf	??___fladd+1,w
  7284  12B4  00E9               	movwf	___fladd@aexp
  7285  12B5                     l2462:	
  7286  12B5  1FDE               	btfss	___fladd@a+2,7
  7287  12B6  2AB8               	goto	u3221
  7288  12B7  2AB9               	goto	u3220
  7289  12B8                     u3221:	
  7290  12B8  2ABA               	goto	l2466
  7291  12B9                     u3220:	
  7292  12B9                     l2464:	
  7293  12B9  1469               	bsf	___fladd@aexp,0
  7294  12BA                     l2466:	
  7295  12BA  0869               	movf	___fladd@aexp,w
  7296  12BB  1903               	btfsc	3,2
  7297  12BC  2ABE               	goto	u3231
  7298  12BD  2ABF               	goto	u3230
  7299  12BE                     u3231:	
  7300  12BE  2ACF               	goto	l2476
  7301  12BF                     u3230:	
  7302  12BF                     l2468:	
  7303  12BF  0A69               	incf	___fladd@aexp,w
  7304  12C0  1D03               	btfss	3,2
  7305  12C1  2AC3               	goto	u3241
  7306  12C2  2AC4               	goto	u3240
  7307  12C3                     u3241:	
  7308  12C3  2ACC               	goto	l2472
  7309  12C4                     u3240:	
  7310  12C4                     l2470:	
  7311  12C4  3000               	movlw	0
  7312  12C5  00DF               	movwf	___fladd@a+3
  7313  12C6  3000               	movlw	0
  7314  12C7  00DE               	movwf	___fladd@a+2
  7315  12C8  3000               	movlw	0
  7316  12C9  00DD               	movwf	___fladd@a+1
  7317  12CA  3000               	movlw	0
  7318  12CB  00DC               	movwf	___fladd@a
  7319  12CC                     l2472:	
  7320  12CC  17DE               	bsf	___fladd@a+2,7
  7321  12CD                     l2474:	
  7322  12CD  01DF               	clrf	___fladd@a+3
  7323  12CE  2AD7               	goto	l700
  7324  12CF                     l2476:	
  7325  12CF  3000               	movlw	0
  7326  12D0  00DF               	movwf	___fladd@a+3
  7327  12D1  3000               	movlw	0
  7328  12D2  00DE               	movwf	___fladd@a+2
  7329  12D3  3000               	movlw	0
  7330  12D4  00DD               	movwf	___fladd@a+1
  7331  12D5  3000               	movlw	0
  7332  12D6  00DC               	movwf	___fladd@a
  7333  12D7                     l700:	
  7334  12D7  086A               	movf	___fladd@bexp,w
  7335  12D8  0269               	subwf	___fladd@aexp,w
  7336  12D9  1803               	skipnc
  7337  12DA  2ADC               	goto	u3251
  7338  12DB  2ADD               	goto	u3250
  7339  12DC                     u3251:	
  7340  12DC  2B21               	goto	l2512
  7341  12DD                     u3250:	
  7342  12DD                     l2478:	
  7343  12DD  1F68               	btfss	___fladd@signs,6
  7344  12DE  2AE0               	goto	u3261
  7345  12DF  2AE1               	goto	u3260
  7346  12E0                     u3261:	
  7347  12E0  2AE5               	goto	l2482
  7348  12E1                     u3260:	
  7349  12E1                     l2480:	
  7350  12E1  3080               	movlw	128
  7351  12E2  00E0               	movwf	??___fladd
  7352  12E3  0860               	movf	??___fladd,w
  7353  12E4  06E8               	xorwf	___fladd@signs,f
  7354  12E5                     l2482:	
  7355  12E5  086A               	movf	___fladd@bexp,w
  7356  12E6  00E0               	movwf	??___fladd
  7357  12E7  0860               	movf	??___fladd,w
  7358  12E8  00EB               	movwf	___fladd@grs
  7359  12E9                     l2484:	
  7360  12E9  0869               	movf	___fladd@aexp,w
  7361  12EA  00E0               	movwf	??___fladd
  7362  12EB  0860               	movf	??___fladd,w
  7363  12EC  00EA               	movwf	___fladd@bexp
  7364  12ED                     l2486:	
  7365  12ED  086B               	movf	___fladd@grs,w
  7366  12EE  00E0               	movwf	??___fladd
  7367  12EF  0860               	movf	??___fladd,w
  7368  12F0  00E9               	movwf	___fladd@aexp
  7369  12F1                     l2488:	
  7370  12F1  0858               	movf	___fladd@b,w
  7371  12F2  00E0               	movwf	??___fladd
  7372  12F3  0860               	movf	??___fladd,w
  7373  12F4  00EB               	movwf	___fladd@grs
  7374  12F5                     l2490:	
  7375  12F5  085C               	movf	___fladd@a,w
  7376  12F6  00E0               	movwf	??___fladd
  7377  12F7  0860               	movf	??___fladd,w
  7378  12F8  00D8               	movwf	___fladd@b
  7379  12F9                     l2492:	
  7380  12F9  086B               	movf	___fladd@grs,w
  7381  12FA  00E0               	movwf	??___fladd
  7382  12FB  0860               	movf	??___fladd,w
  7383  12FC  00DC               	movwf	___fladd@a
  7384  12FD                     l2494:	
  7385  12FD  0859               	movf	___fladd@b+1,w
  7386  12FE  00E0               	movwf	??___fladd
  7387  12FF  0860               	movf	??___fladd,w
  7388  1300  00EB               	movwf	___fladd@grs
  7389  1301                     l2496:	
  7390  1301  085D               	movf	___fladd@a+1,w
  7391  1302  00E0               	movwf	??___fladd
  7392  1303  0860               	movf	??___fladd,w
  7393  1304  00D9               	movwf	___fladd@b+1
  7394  1305                     l2498:	
  7395  1305  086B               	movf	___fladd@grs,w
  7396  1306  00E0               	movwf	??___fladd
  7397  1307  0860               	movf	??___fladd,w
  7398  1308  00DD               	movwf	___fladd@a+1
  7399  1309                     l2500:	
  7400  1309  085A               	movf	___fladd@b+2,w
  7401  130A  00E0               	movwf	??___fladd
  7402  130B  0860               	movf	??___fladd,w
  7403  130C  00EB               	movwf	___fladd@grs
  7404  130D                     l2502:	
  7405  130D  085E               	movf	___fladd@a+2,w
  7406  130E  00E0               	movwf	??___fladd
  7407  130F  0860               	movf	??___fladd,w
  7408  1310  00DA               	movwf	___fladd@b+2
  7409  1311                     l2504:	
  7410  1311  086B               	movf	___fladd@grs,w
  7411  1312  00E0               	movwf	??___fladd
  7412  1313  0860               	movf	??___fladd,w
  7413  1314  00DE               	movwf	___fladd@a+2
  7414  1315                     l2506:	
  7415  1315  085B               	movf	___fladd@b+3,w
  7416  1316  00E0               	movwf	??___fladd
  7417  1317  0860               	movf	??___fladd,w
  7418  1318  00EB               	movwf	___fladd@grs
  7419  1319                     l2508:	
  7420  1319  085F               	movf	___fladd@a+3,w
  7421  131A  00E0               	movwf	??___fladd
  7422  131B  0860               	movf	??___fladd,w
  7423  131C  00DB               	movwf	___fladd@b+3
  7424  131D                     l2510:	
  7425  131D  086B               	movf	___fladd@grs,w
  7426  131E  00E0               	movwf	??___fladd
  7427  131F  0860               	movf	??___fladd,w
  7428  1320  00DF               	movwf	___fladd@a+3
  7429  1321                     l2512:	
  7430  1321  01EB               	clrf	___fladd@grs
  7431  1322                     l2514:	
  7432  1322  0869               	movf	___fladd@aexp,w
  7433  1323  00E0               	movwf	??___fladd
  7434  1324  01E1               	clrf	??___fladd+1
  7435  1325  0861               	movf	??___fladd+1,w
  7436  1326  00E3               	movwf	??___fladd+3
  7437  1327  086A               	movf	___fladd@bexp,w
  7438  1328  0260               	subwf	??___fladd,w
  7439  1329  00E2               	movwf	??___fladd+2
  7440  132A  1C03               	skipc
  7441  132B  03E3               	decf	??___fladd+3,f
  7442  132C  0863               	movf	??___fladd+3,w
  7443  132D  3A80               	xorlw	128
  7444  132E  00FF               	movwf	btemp+1
  7445  132F  3080               	movlw	128
  7446  1330  027F               	subwf	btemp+1,w
  7447  1331  1D03               	skipz
  7448  1332  2B35               	goto	u3275
  7449  1333  301A               	movlw	26
  7450  1334  0262               	subwf	??___fladd+2,w
  7451  1335                     u3275:	
  7452  1335  1C03               	skipc
  7453  1336  2B38               	goto	u3271
  7454  1337  2B39               	goto	u3270
  7455  1338                     u3271:	
  7456  1338  2B76               	goto	l2530
  7457  1339                     u3270:	
  7458  1339                     l2516:	
  7459  1339  1283               	bcf	3,5	;RP0=0, select bank0
  7460  133A  1303               	bcf	3,6	;RP1=0, select bank0
  7461  133B  085B               	movf	___fladd@b+3,w
  7462  133C  045A               	iorwf	___fladd@b+2,w
  7463  133D  0459               	iorwf	___fladd@b+1,w
  7464  133E  0458               	iorwf	___fladd@b,w
  7465  133F  1D03               	skipz
  7466  1340  2B42               	goto	u3281
  7467  1341  2B44               	goto	u3280
  7468  1342                     u3281:	
  7469  1342  3001               	movlw	1
  7470  1343  2B45               	goto	u3290
  7471  1344                     u3280:	
  7472  1344  3000               	movlw	0
  7473  1345                     u3290:	
  7474  1345  00E0               	movwf	??___fladd
  7475  1346  0860               	movf	??___fladd,w
  7476  1347  00EB               	movwf	___fladd@grs
  7477  1348  3000               	movlw	0
  7478  1349  00DB               	movwf	___fladd@b+3
  7479  134A  3000               	movlw	0
  7480  134B  00DA               	movwf	___fladd@b+2
  7481  134C  3000               	movlw	0
  7482  134D  00D9               	movwf	___fladd@b+1
  7483  134E  3000               	movlw	0
  7484  134F  00D8               	movwf	___fladd@b
  7485  1350  0869               	movf	___fladd@aexp,w
  7486  1351  00E0               	movwf	??___fladd
  7487  1352  0860               	movf	??___fladd,w
  7488  1353  00EA               	movwf	___fladd@bexp
  7489  1354  2B7E               	goto	l704
  7490  1355                     l706:	
  7491  1355  1C6B               	btfss	___fladd@grs,0
  7492  1356  2B58               	goto	u3301
  7493  1357  2B59               	goto	u3300
  7494  1358                     u3301:	
  7495  1358  2B62               	goto	l2520
  7496  1359                     u3300:	
  7497  1359                     l2518:	
  7498  1359  086B               	movf	___fladd@grs,w
  7499  135A  00E0               	movwf	??___fladd
  7500  135B  1003               	clrc
  7501  135C  0C60               	rrf	??___fladd,w
  7502  135D  3801               	iorlw	1
  7503  135E  00E1               	movwf	??___fladd+1
  7504  135F  0861               	movf	??___fladd+1,w
  7505  1360  00EB               	movwf	___fladd@grs
  7506  1361  2B64               	goto	l2522
  7507  1362                     l2520:	
  7508  1362  1003               	clrc
  7509  1363  0CEB               	rrf	___fladd@grs,f
  7510  1364                     l2522:	
  7511  1364  1C58               	btfss	___fladd@b,0
  7512  1365  2B67               	goto	u3311
  7513  1366  2B68               	goto	u3310
  7514  1367                     u3311:	
  7515  1367  2B69               	goto	l2526
  7516  1368                     u3310:	
  7517  1368                     l2524:	
  7518  1368  17EB               	bsf	___fladd@grs,7
  7519  1369                     l2526:	
  7520  1369  3001               	movlw	1
  7521  136A  00E0               	movwf	??___fladd
  7522  136B                     u3325:	
  7523  136B  0D5B               	rlf	___fladd@b+3,w
  7524  136C  0CDB               	rrf	___fladd@b+3,f
  7525  136D  0CDA               	rrf	___fladd@b+2,f
  7526  136E  0CD9               	rrf	___fladd@b+1,f
  7527  136F  0CD8               	rrf	___fladd@b,f
  7528  1370  0BE0               	decfsz	??___fladd& (0+127),f
  7529  1371  2B6B               	goto	u3325
  7530  1372                     l2528:	
  7531  1372  3001               	movlw	1
  7532  1373  00E0               	movwf	??___fladd
  7533  1374  0860               	movf	??___fladd,w
  7534  1375  07EA               	addwf	___fladd@bexp,f
  7535  1376                     l2530:	
  7536  1376  1283               	bcf	3,5	;RP0=0, select bank0
  7537  1377  1303               	bcf	3,6	;RP1=0, select bank0
  7538  1378  0869               	movf	___fladd@aexp,w
  7539  1379  026A               	subwf	___fladd@bexp,w
  7540  137A  1C03               	skipc
  7541  137B  2B7D               	goto	u3331
  7542  137C  2B7E               	goto	u3330
  7543  137D                     u3331:	
  7544  137D  2B55               	goto	l706
  7545  137E                     u3330:	
  7546  137E                     l704:	
  7547  137E  1B68               	btfsc	___fladd@signs,6
  7548  137F  2B81               	goto	u3341
  7549  1380  2B82               	goto	u3340
  7550  1381                     u3341:	
  7551  1381  2BCD               	goto	l2556
  7552  1382                     u3340:	
  7553  1382                     l2532:	
  7554  1382  086A               	movf	___fladd@bexp,w
  7555  1383  1D03               	btfss	3,2
  7556  1384  2B86               	goto	u3351
  7557  1385  2B87               	goto	u3350
  7558  1386                     u3351:	
  7559  1386  2B90               	goto	l2538
  7560  1387                     u3350:	
  7561  1387                     l2534:	
  7562  1387  3000               	movlw	0
  7563  1388  00DB               	movwf	?___fladd+3
  7564  1389  3000               	movlw	0
  7565  138A  00DA               	movwf	?___fladd+2
  7566  138B  3000               	movlw	0
  7567  138C  00D9               	movwf	?___fladd+1
  7568  138D  3000               	movlw	0
  7569  138E  00D8               	movwf	?___fladd
  7570  138F  2CFB               	goto	l713
  7571  1390                     l2538:	
  7572  1390  085C               	movf	___fladd@a,w
  7573  1391  07D8               	addwf	___fladd@b,f
  7574  1392  085D               	movf	___fladd@a+1,w
  7575  1393  1103               	clrz
  7576  1394  1803               	skipnc
  7577  1395  3E01               	addlw	1
  7578  1396  1903               	skipnz
  7579  1397  2B99               	goto	u3361
  7580  1398  07D9               	addwf	___fladd@b+1,f
  7581  1399                     u3361:	
  7582  1399  085E               	movf	___fladd@a+2,w
  7583  139A  1103               	clrz
  7584  139B  1803               	skipnc
  7585  139C  3E01               	addlw	1
  7586  139D  1903               	skipnz
  7587  139E  2BA0               	goto	u3362
  7588  139F  07DA               	addwf	___fladd@b+2,f
  7589  13A0                     u3362:	
  7590  13A0  085F               	movf	___fladd@a+3,w
  7591  13A1  1103               	clrz
  7592  13A2  1803               	skipnc
  7593  13A3  3E01               	addlw	1
  7594  13A4  1903               	skipnz
  7595  13A5  2BA7               	goto	u3363
  7596  13A6  07DB               	addwf	___fladd@b+3,f
  7597  13A7                     u3363:	
  7598  13A7                     l2540:	
  7599  13A7  1C5B               	btfss	___fladd@b+3,0
  7600  13A8  2BAA               	goto	u3371
  7601  13A9  2BAB               	goto	u3370
  7602  13AA                     u3371:	
  7603  13AA  2C81               	goto	l2590
  7604  13AB                     u3370:	
  7605  13AB                     l2542:	
  7606  13AB  1C6B               	btfss	___fladd@grs,0
  7607  13AC  2BAE               	goto	u3381
  7608  13AD  2BAF               	goto	u3380
  7609  13AE                     u3381:	
  7610  13AE  2BB8               	goto	l2546
  7611  13AF                     u3380:	
  7612  13AF                     l2544:	
  7613  13AF  086B               	movf	___fladd@grs,w
  7614  13B0  00E0               	movwf	??___fladd
  7615  13B1  1003               	clrc
  7616  13B2  0C60               	rrf	??___fladd,w
  7617  13B3  3801               	iorlw	1
  7618  13B4  00E1               	movwf	??___fladd+1
  7619  13B5  0861               	movf	??___fladd+1,w
  7620  13B6  00EB               	movwf	___fladd@grs
  7621  13B7  2BBA               	goto	l2548
  7622  13B8                     l2546:	
  7623  13B8  1003               	clrc
  7624  13B9  0CEB               	rrf	___fladd@grs,f
  7625  13BA                     l2548:	
  7626  13BA  1C58               	btfss	___fladd@b,0
  7627  13BB  2BBD               	goto	u3391
  7628  13BC  2BBE               	goto	u3390
  7629  13BD                     u3391:	
  7630  13BD  2BBF               	goto	l2552
  7631  13BE                     u3390:	
  7632  13BE                     l2550:	
  7633  13BE  17EB               	bsf	___fladd@grs,7
  7634  13BF                     l2552:	
  7635  13BF  3001               	movlw	1
  7636  13C0  00E0               	movwf	??___fladd
  7637  13C1                     u3405:	
  7638  13C1  0D5B               	rlf	___fladd@b+3,w
  7639  13C2  0CDB               	rrf	___fladd@b+3,f
  7640  13C3  0CDA               	rrf	___fladd@b+2,f
  7641  13C4  0CD9               	rrf	___fladd@b+1,f
  7642  13C5  0CD8               	rrf	___fladd@b,f
  7643  13C6  0BE0               	decfsz	??___fladd& (0+127),f
  7644  13C7  2BC1               	goto	u3405
  7645  13C8                     l2554:	
  7646  13C8  3001               	movlw	1
  7647  13C9  00E0               	movwf	??___fladd
  7648  13CA  0860               	movf	??___fladd,w
  7649  13CB  07EA               	addwf	___fladd@bexp,f
  7650  13CC  2C81               	goto	l2590
  7651  13CD                     l2556:	
  7652  13CD  085B               	movf	___fladd@b+3,w
  7653  13CE  3A80               	xorlw	128
  7654  13CF  00FF               	movwf	btemp+1
  7655  13D0  085F               	movf	___fladd@a+3,w
  7656  13D1  3A80               	xorlw	128
  7657  13D2  027F               	subwf	btemp+1,w
  7658  13D3  1D03               	skipz
  7659  13D4  2BDF               	goto	u3413
  7660  13D5  085E               	movf	___fladd@a+2,w
  7661  13D6  025A               	subwf	___fladd@b+2,w
  7662  13D7  1D03               	skipz
  7663  13D8  2BDF               	goto	u3413
  7664  13D9  085D               	movf	___fladd@a+1,w
  7665  13DA  0259               	subwf	___fladd@b+1,w
  7666  13DB  1D03               	skipz
  7667  13DC  2BDF               	goto	u3413
  7668  13DD  085C               	movf	___fladd@a,w
  7669  13DE  0258               	subwf	___fladd@b,w
  7670  13DF                     u3413:	
  7671  13DF  1803               	skipnc
  7672  13E0  2BE2               	goto	u3411
  7673  13E1  2BE3               	goto	u3410
  7674  13E2                     u3411:	
  7675  13E2  2C3B               	goto	l2566
  7676  13E3                     u3410:	
  7677  13E3                     l2558:	
  7678  13E3  30FF               	movlw	255
  7679  13E4  00E0               	movwf	??___fladd
  7680  13E5  30FF               	movlw	255
  7681  13E6  00E1               	movwf	??___fladd+1
  7682  13E7  30FF               	movlw	255
  7683  13E8  00E2               	movwf	??___fladd+2
  7684  13E9  30FF               	movlw	255
  7685  13EA  00E3               	movwf	??___fladd+3
  7686  13EB  085C               	movf	___fladd@a,w
  7687  13EC  00E4               	movwf	??___fladd+4
  7688  13ED  085D               	movf	___fladd@a+1,w
  7689  13EE  00E5               	movwf	??___fladd+5
  7690  13EF  085E               	movf	___fladd@a+2,w
  7691  13F0  00E6               	movwf	??___fladd+6
  7692  13F1  085F               	movf	___fladd@a+3,w
  7693  13F2  00E7               	movwf	??___fladd+7
  7694  13F3  0858               	movf	___fladd@b,w
  7695  13F4  02E4               	subwf	??___fladd+4,f
  7696  13F5  0859               	movf	___fladd@b+1,w
  7697  13F6  1C03               	skipc
  7698  13F7  0F59               	incfsz	___fladd@b+1,w
  7699  13F8  2BFA               	goto	u3421
  7700  13F9  2BFB               	goto	u3422
  7701  13FA                     u3421:	
  7702  13FA  02E5               	subwf	??___fladd+5,f
  7703  13FB                     u3422:	
  7704  13FB  085A               	movf	___fladd@b+2,w
  7705  13FC  1C03               	skipc
  7706  13FD  0F5A               	incfsz	___fladd@b+2,w
  7707  13FE  2C00               	goto	u3423
  7708  13FF  2C01               	goto	u3424
  7709  1400                     u3423:	
  7710  1400  02E6               	subwf	??___fladd+6,f
  7711  1401                     u3424:	
  7712  1401  085B               	movf	___fladd@b+3,w
  7713  1402  1C03               	skipc
  7714  1403  0F5B               	incfsz	___fladd@b+3,w
  7715  1404  2C06               	goto	u3425
  7716  1405  2C07               	goto	u3426
  7717  1406                     u3425:	
  7718  1406  02E7               	subwf	??___fladd+7,f
  7719  1407                     u3426:	
  7720  1407  0864               	movf	??___fladd+4,w
  7721  1408  07E0               	addwf	??___fladd,f
  7722  1409  0865               	movf	??___fladd+5,w
  7723  140A  1803               	skipnc
  7724  140B  0F65               	incfsz	??___fladd+5,w
  7725  140C  2C0E               	goto	u3430
  7726  140D  2C0F               	goto	u3431
  7727  140E                     u3430:	
  7728  140E  07E1               	addwf	??___fladd+1,f
  7729  140F                     u3431:	
  7730  140F  0866               	movf	??___fladd+6,w
  7731  1410  1803               	skipnc
  7732  1411  0F66               	incfsz	??___fladd+6,w
  7733  1412  2C14               	goto	u3432
  7734  1413  2C15               	goto	u3433
  7735  1414                     u3432:	
  7736  1414  07E2               	addwf	??___fladd+2,f
  7737  1415                     u3433:	
  7738  1415  0867               	movf	??___fladd+7,w
  7739  1416  1803               	skipnc
  7740  1417  0A67               	incf	??___fladd+7,w
  7741  1418  07E3               	addwf	??___fladd+3,f
  7742  1419  0863               	movf	??___fladd+3,w
  7743  141A  00DB               	movwf	___fladd@b+3
  7744  141B  0862               	movf	??___fladd+2,w
  7745  141C  00DA               	movwf	___fladd@b+2
  7746  141D  0861               	movf	??___fladd+1,w
  7747  141E  00D9               	movwf	___fladd@b+1
  7748  141F  0860               	movf	??___fladd,w
  7749  1420  00D8               	movwf	___fladd@b
  7750  1421                     l2560:	
  7751  1421  3080               	movlw	128
  7752  1422  00E0               	movwf	??___fladd
  7753  1423  0860               	movf	??___fladd,w
  7754  1424  06E8               	xorwf	___fladd@signs,f
  7755  1425  09EB               	comf	___fladd@grs,f
  7756  1426  0AEB               	incf	___fladd@grs,f
  7757  1427                     l2562:	
  7758  1427  086B               	movf	___fladd@grs,w
  7759  1428  1D03               	btfss	3,2
  7760  1429  2C2B               	goto	u3441
  7761  142A  2C2C               	goto	u3440
  7762  142B                     u3441:	
  7763  142B  2C49               	goto	l721
  7764  142C                     u3440:	
  7765  142C                     l2564:	
  7766  142C  3001               	movlw	1
  7767  142D  07D8               	addwf	___fladd@b,f
  7768  142E  3000               	movlw	0
  7769  142F  1803               	skipnc
  7770  1430  3001               	movlw	1
  7771  1431  07D9               	addwf	___fladd@b+1,f
  7772  1432  3000               	movlw	0
  7773  1433  1803               	skipnc
  7774  1434  3001               	movlw	1
  7775  1435  07DA               	addwf	___fladd@b+2,f
  7776  1436  3000               	movlw	0
  7777  1437  1803               	skipnc
  7778  1438  3001               	movlw	1
  7779  1439  07DB               	addwf	___fladd@b+3,f
  7780  143A  2C49               	goto	l721
  7781  143B                     l2566:	
  7782  143B  085C               	movf	___fladd@a,w
  7783  143C  02D8               	subwf	___fladd@b,f
  7784  143D  085D               	movf	___fladd@a+1,w
  7785  143E  1C03               	skipc
  7786  143F  0F5D               	incfsz	___fladd@a+1,w
  7787  1440  02D9               	subwf	___fladd@b+1,f
  7788  1441  085E               	movf	___fladd@a+2,w
  7789  1442  1C03               	skipc
  7790  1443  0F5E               	incfsz	___fladd@a+2,w
  7791  1444  02DA               	subwf	___fladd@b+2,f
  7792  1445  085F               	movf	___fladd@a+3,w
  7793  1446  1C03               	skipc
  7794  1447  0F5F               	incfsz	___fladd@a+3,w
  7795  1448  02DB               	subwf	___fladd@b+3,f
  7796  1449                     l721:	
  7797  1449  085B               	movf	___fladd@b+3,w
  7798  144A  045A               	iorwf	___fladd@b+2,w
  7799  144B  0459               	iorwf	___fladd@b+1,w
  7800  144C  0458               	iorwf	___fladd@b,w
  7801  144D  1D03               	skipz
  7802  144E  2C50               	goto	u3451
  7803  144F  2C51               	goto	u3450
  7804  1450                     u3451:	
  7805  1450  2C7D               	goto	l2588
  7806  1451                     u3450:	
  7807  1451                     l2568:	
  7808  1451  086B               	movf	___fladd@grs,w
  7809  1452  1D03               	btfss	3,2
  7810  1453  2C55               	goto	u3461
  7811  1454  2C56               	goto	u3460
  7812  1455                     u3461:	
  7813  1455  2C7D               	goto	l2588
  7814  1456                     u3460:	
  7815  1456                     l2570:	
  7816  1456  3000               	movlw	0
  7817  1457  00DB               	movwf	?___fladd+3
  7818  1458  3000               	movlw	0
  7819  1459  00DA               	movwf	?___fladd+2
  7820  145A  3000               	movlw	0
  7821  145B  00D9               	movwf	?___fladd+1
  7822  145C  3000               	movlw	0
  7823  145D  00D8               	movwf	?___fladd
  7824  145E  2CFB               	goto	l713
  7825  145F                     l2574:	
  7826  145F  3001               	movlw	1
  7827  1460  00E0               	movwf	??___fladd
  7828  1461                     u3475:	
  7829  1461  1003               	clrc
  7830  1462  0DD8               	rlf	___fladd@b,f
  7831  1463  0DD9               	rlf	___fladd@b+1,f
  7832  1464  0DDA               	rlf	___fladd@b+2,f
  7833  1465  0DDB               	rlf	___fladd@b+3,f
  7834  1466  0BE0               	decfsz	??___fladd,f
  7835  1467  2C61               	goto	u3475
  7836  1468                     l2576:	
  7837  1468  1FEB               	btfss	___fladd@grs,7
  7838  1469  2C6B               	goto	u3481
  7839  146A  2C6C               	goto	u3480
  7840  146B                     u3481:	
  7841  146B  2C6D               	goto	l725
  7842  146C                     u3480:	
  7843  146C                     l2578:	
  7844  146C  1458               	bsf	___fladd@b,0
  7845  146D                     l725:	
  7846  146D  1C6B               	btfss	___fladd@grs,0
  7847  146E  2C70               	goto	u3491
  7848  146F  2C71               	goto	u3490
  7849  1470                     u3491:	
  7850  1470  2C74               	goto	l2582
  7851  1471                     u3490:	
  7852  1471                     l2580:	
  7853  1471  1403               	setc
  7854  1472  0DEB               	rlf	___fladd@grs,f
  7855  1473  2C76               	goto	l2584
  7856  1474                     l2582:	
  7857  1474  1003               	clrc
  7858  1475  0DEB               	rlf	___fladd@grs,f
  7859  1476                     l2584:	
  7860  1476  086A               	movf	___fladd@bexp,w
  7861  1477  1903               	btfsc	3,2
  7862  1478  2C7A               	goto	u3501
  7863  1479  2C7B               	goto	u3500
  7864  147A                     u3501:	
  7865  147A  2C7D               	goto	l2588
  7866  147B                     u3500:	
  7867  147B                     l2586:	
  7868  147B  3001               	movlw	1
  7869  147C  02EA               	subwf	___fladd@bexp,f
  7870  147D                     l2588:	
  7871  147D  1FDA               	btfss	___fladd@b+2,7
  7872  147E  2C80               	goto	u3511
  7873  147F  2C81               	goto	u3510
  7874  1480                     u3511:	
  7875  1480  2C5F               	goto	l2574
  7876  1481                     u3510:	
  7877  1481                     l2590:	
  7878  1481  01E9               	clrf	___fladd@aexp
  7879  1482                     l2592:	
  7880  1482  1FEB               	btfss	___fladd@grs,7
  7881  1483  2C85               	goto	u3521
  7882  1484  2C86               	goto	u3520
  7883  1485                     u3521:	
  7884  1485  2C94               	goto	l2600
  7885  1486                     u3520:	
  7886  1486                     l2594:	
  7887  1486  086B               	movf	___fladd@grs,w
  7888  1487  397F               	andlw	127
  7889  1488  1903               	btfsc	3,2
  7890  1489  2C8B               	goto	u3531
  7891  148A  2C8C               	goto	u3530
  7892  148B                     u3531:	
  7893  148B  2C8F               	goto	l731
  7894  148C                     u3530:	
  7895  148C                     l2596:	
  7896  148C  01E9               	clrf	___fladd@aexp
  7897  148D  0AE9               	incf	___fladd@aexp,f
  7898  148E  2C94               	goto	l2600
  7899  148F                     l731:	
  7900  148F  1C58               	btfss	___fladd@b,0
  7901  1490  2C92               	goto	u3541
  7902  1491  2C93               	goto	u3540
  7903  1492                     u3541:	
  7904  1492  2C94               	goto	l2600
  7905  1493                     u3540:	
  7906  1493  2C8C               	goto	l2596
  7907  1494                     l2600:	
  7908  1494  0869               	movf	___fladd@aexp,w
  7909  1495  1903               	btfsc	3,2
  7910  1496  2C98               	goto	u3551
  7911  1497  2C99               	goto	u3550
  7912  1498                     u3551:	
  7913  1498  2CCD               	goto	l734
  7914  1499                     u3550:	
  7915  1499                     l2602:	
  7916  1499  3001               	movlw	1
  7917  149A  07D8               	addwf	___fladd@b,f
  7918  149B  3000               	movlw	0
  7919  149C  1803               	skipnc
  7920  149D  3001               	movlw	1
  7921  149E  07D9               	addwf	___fladd@b+1,f
  7922  149F  3000               	movlw	0
  7923  14A0  1803               	skipnc
  7924  14A1  3001               	movlw	1
  7925  14A2  07DA               	addwf	___fladd@b+2,f
  7926  14A3  3000               	movlw	0
  7927  14A4  1803               	skipnc
  7928  14A5  3001               	movlw	1
  7929  14A6  07DB               	addwf	___fladd@b+3,f
  7930  14A7                     l2604:	
  7931  14A7  1C5B               	btfss	___fladd@b+3,0
  7932  14A8  2CAA               	goto	u3561
  7933  14A9  2CAB               	goto	u3560
  7934  14AA                     u3561:	
  7935  14AA  2CCD               	goto	l734
  7936  14AB                     u3560:	
  7937  14AB                     l2606:	
  7938  14AB  0858               	movf	___fladd@b,w
  7939  14AC  00E0               	movwf	??___fladd
  7940  14AD  0859               	movf	___fladd@b+1,w
  7941  14AE  00E1               	movwf	??___fladd+1
  7942  14AF  085A               	movf	___fladd@b+2,w
  7943  14B0  00E2               	movwf	??___fladd+2
  7944  14B1  085B               	movf	___fladd@b+3,w
  7945  14B2  00E3               	movwf	??___fladd+3
  7946  14B3  3001               	movlw	1
  7947  14B4  00E4               	movwf	??___fladd+4
  7948  14B5                     u3575:	
  7949  14B5  0D63               	rlf	??___fladd+3,w
  7950  14B6  0CE3               	rrf	??___fladd+3,f
  7951  14B7  0CE2               	rrf	??___fladd+2,f
  7952  14B8  0CE1               	rrf	??___fladd+1,f
  7953  14B9  0CE0               	rrf	??___fladd,f
  7954  14BA                     u3570:	
  7955  14BA  0BE4               	decfsz	??___fladd+4,f
  7956  14BB  2CB5               	goto	u3575
  7957  14BC  0863               	movf	??___fladd+3,w
  7958  14BD  00DB               	movwf	___fladd@b+3
  7959  14BE  0862               	movf	??___fladd+2,w
  7960  14BF  00DA               	movwf	___fladd@b+2
  7961  14C0  0861               	movf	??___fladd+1,w
  7962  14C1  00D9               	movwf	___fladd@b+1
  7963  14C2  0860               	movf	??___fladd,w
  7964  14C3  00D8               	movwf	___fladd@b
  7965  14C4  0A6A               	incf	___fladd@bexp,w
  7966  14C5  1903               	btfsc	3,2
  7967  14C6  2CC8               	goto	u3581
  7968  14C7  2CC9               	goto	u3580
  7969  14C8                     u3581:	
  7970  14C8  2CCD               	goto	l734
  7971  14C9                     u3580:	
  7972  14C9                     l2608:	
  7973  14C9  3001               	movlw	1
  7974  14CA  00E0               	movwf	??___fladd
  7975  14CB  0860               	movf	??___fladd,w
  7976  14CC  07EA               	addwf	___fladd@bexp,f
  7977  14CD                     l734:	
  7978  14CD  0A6A               	incf	___fladd@bexp,w
  7979  14CE  1903               	btfsc	3,2
  7980  14CF  2CD1               	goto	u3591
  7981  14D0  2CD2               	goto	u3590
  7982  14D1                     u3591:	
  7983  14D1  2CD7               	goto	l2612
  7984  14D2                     u3590:	
  7985  14D2                     l2610:	
  7986  14D2  086A               	movf	___fladd@bexp,w
  7987  14D3  1D03               	btfss	3,2
  7988  14D4  2CD6               	goto	u3601
  7989  14D5  2CD7               	goto	u3600
  7990  14D6                     u3601:	
  7991  14D6  2CE5               	goto	l2618
  7992  14D7                     u3600:	
  7993  14D7                     l2612:	
  7994  14D7  3000               	movlw	0
  7995  14D8  00DB               	movwf	___fladd@b+3
  7996  14D9  3000               	movlw	0
  7997  14DA  00DA               	movwf	___fladd@b+2
  7998  14DB  3000               	movlw	0
  7999  14DC  00D9               	movwf	___fladd@b+1
  8000  14DD  3000               	movlw	0
  8001  14DE  00D8               	movwf	___fladd@b
  8002  14DF                     l2614:	
  8003  14DF  086A               	movf	___fladd@bexp,w
  8004  14E0  1D03               	btfss	3,2
  8005  14E1  2CE3               	goto	u3611
  8006  14E2  2CE4               	goto	u3610
  8007  14E3                     u3611:	
  8008  14E3  2CE5               	goto	l2618
  8009  14E4                     u3610:	
  8010  14E4                     l2616:	
  8011  14E4  01E8               	clrf	___fladd@signs
  8012  14E5                     l2618:	
  8013  14E5  1C6A               	btfss	___fladd@bexp,0
  8014  14E6  2CE8               	goto	u3621
  8015  14E7  2CE9               	goto	u3620
  8016  14E8                     u3621:	
  8017  14E8  2CEB               	goto	l2622
  8018  14E9                     u3620:	
  8019  14E9                     l2620:	
  8020  14E9  17DA               	bsf	___fladd@b+2,7
  8021  14EA  2CEF               	goto	l742
  8022  14EB                     l2622:	
  8023  14EB  307F               	movlw	127
  8024  14EC  00E0               	movwf	??___fladd
  8025  14ED  0860               	movf	??___fladd,w
  8026  14EE  05DA               	andwf	___fladd@b+2,f
  8027  14EF                     l742:	
  8028  14EF  086A               	movf	___fladd@bexp,w
  8029  14F0  00E0               	movwf	??___fladd
  8030  14F1  1003               	clrc
  8031  14F2  0C60               	rrf	??___fladd,w
  8032  14F3  00E1               	movwf	??___fladd+1
  8033  14F4  0861               	movf	??___fladd+1,w
  8034  14F5  00DB               	movwf	___fladd@b+3
  8035  14F6                     l2624:	
  8036  14F6  1FE8               	btfss	___fladd@signs,7
  8037  14F7  2CF9               	goto	u3631
  8038  14F8  2CFA               	goto	u3630
  8039  14F9                     u3631:	
  8040  14F9  2CFB               	goto	l743
  8041  14FA                     u3630:	
  8042  14FA                     l2626:	
  8043  14FA  17DB               	bsf	___fladd@b+3,7
  8044  14FB                     l743:	
  8045  14FB                     l713:	
  8046  14FB  0008               	return
  8047  14FC                     __end_of___fladd:	
  8048                           
  8049                           	psect	text21
  8050  1942                     __ptext21:	
  8051 ;; *************** function ___flneg *****************
  8052 ;; Defined at:
  8053 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flneg.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;  f1              4    3[COMMON] unsigned char 
  8056 ;; Auto vars:     Size  Location     Type
  8057 ;;		None
  8058 ;; Return value:  Size  Location     Type
  8059 ;;                  4    3[COMMON] unsigned char 
  8060 ;; Registers used:
  8061 ;;		wreg
  8062 ;; Tracked objects:
  8063 ;;		On entry : 0/0
  8064 ;;		On exit  : 0/0
  8065 ;;		Unchanged: 0/0
  8066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8067 ;;      Params:         4       0       0       0       0
  8068 ;;      Locals:         0       0       0       0       0
  8069 ;;      Temps:          0       0       0       0       0
  8070 ;;      Totals:         4       0       0       0       0
  8071 ;;Total ram usage:        4 bytes
  8072 ;; Hardware stack levels used:    1
  8073 ;; Hardware stack levels required when called:    1
  8074 ;; This function calls:
  8075 ;;		Nothing
  8076 ;; This function is called by:
  8077 ;;		_sprintf
  8078 ;; This function uses a non-reentrant model
  8079 ;;
  8080                           
  8081                           
  8082                           ;psect for function ___flneg
  8083  1942                     ___flneg:	
  8084  1942                     l3030:	
  8085                           ;incstack = 0
  8086                           ; Regs used in ___flneg: [wreg]
  8087                           
  8088  1942  0877               	movf	___flneg@f1+3,w
  8089  1943  0476               	iorwf	___flneg@f1+2,w
  8090  1944  0475               	iorwf	___flneg@f1+1,w
  8091  1945  0474               	iorwf	___flneg@f1,w
  8092  1946  1903               	skipnz
  8093  1947  2949               	goto	u4751
  8094  1948  294A               	goto	u4750
  8095  1949                     u4751:	
  8096  1949  294C               	goto	l3034
  8097  194A                     u4750:	
  8098  194A                     l3032:	
  8099  194A  3080               	movlw	128
  8100  194B  06F7               	xorwf	___flneg@f1+3,f
  8101  194C                     l3034:	
  8102  194C                     l572:	
  8103  194C  0008               	return
  8104  194D                     __end_of___flneg:	
  8105                           
  8106                           	psect	text22
  8107  1DA0                     __ptext22:	
  8108 ;; *************** function ___flge *****************
  8109 ;; Defined at:
  8110 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\flge.c"
  8111 ;; Parameters:    Size  Location     Type
  8112 ;;  ff1             4    0[BANK0 ] unsigned char 
  8113 ;;  ff2             4    4[BANK0 ] unsigned char 
  8114 ;; Auto vars:     Size  Location     Type
  8115 ;;		None
  8116 ;; Return value:  Size  Location     Type
  8117 ;;		None               void
  8118 ;; Registers used:
  8119 ;;		wreg, status,2, status,0
  8120 ;; Tracked objects:
  8121 ;;		On entry : 0/0
  8122 ;;		On exit  : 0/0
  8123 ;;		Unchanged: 0/0
  8124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8125 ;;      Params:         0       8       0       0       0
  8126 ;;      Locals:         0       0       0       0       0
  8127 ;;      Temps:          4       0       0       0       0
  8128 ;;      Totals:         4       8       0       0       0
  8129 ;;Total ram usage:       12 bytes
  8130 ;; Hardware stack levels used:    1
  8131 ;; Hardware stack levels required when called:    1
  8132 ;; This function calls:
  8133 ;;		Nothing
  8134 ;; This function is called by:
  8135 ;;		_sprintf
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           
  8140                           ;psect for function ___flge
  8141  1DA0                     ___flge:	
  8142  1DA0                     l3010:	
  8143                           ;incstack = 0
  8144                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8145                           
  8146  1DA0  3000               	movlw	0
  8147  1DA1  1283               	bcf	3,5	;RP0=0, select bank0
  8148  1DA2  1303               	bcf	3,6	;RP1=0, select bank0
  8149  1DA3  0520               	andwf	___flge@ff1,w
  8150  1DA4  00F4               	movwf	??___flge
  8151  1DA5  3000               	movlw	0
  8152  1DA6  0521               	andwf	___flge@ff1+1,w
  8153  1DA7  00F5               	movwf	??___flge+1
  8154  1DA8  3080               	movlw	128
  8155  1DA9  0522               	andwf	___flge@ff1+2,w
  8156  1DAA  00F6               	movwf	??___flge+2
  8157  1DAB  307F               	movlw	127
  8158  1DAC  0523               	andwf	___flge@ff1+3,w
  8159  1DAD  00F7               	movwf	??___flge+3
  8160  1DAE  0877               	movf	??___flge+3,w
  8161  1DAF  0476               	iorwf	??___flge+2,w
  8162  1DB0  0475               	iorwf	??___flge+1,w
  8163  1DB1  0474               	iorwf	??___flge,w
  8164  1DB2  1D03               	skipz
  8165  1DB3  2DB5               	goto	u4681
  8166  1DB4  2DB6               	goto	u4680
  8167  1DB5                     u4681:	
  8168  1DB5  2DBE               	goto	l564
  8169  1DB6                     u4680:	
  8170  1DB6                     l3012:	
  8171  1DB6  3000               	movlw	0
  8172  1DB7  00A3               	movwf	___flge@ff1+3
  8173  1DB8  3000               	movlw	0
  8174  1DB9  00A2               	movwf	___flge@ff1+2
  8175  1DBA  3000               	movlw	0
  8176  1DBB  00A1               	movwf	___flge@ff1+1
  8177  1DBC  3000               	movlw	0
  8178  1DBD  00A0               	movwf	___flge@ff1
  8179  1DBE                     l564:	
  8180  1DBE  3000               	movlw	0
  8181  1DBF  0524               	andwf	___flge@ff2,w
  8182  1DC0  00F4               	movwf	??___flge
  8183  1DC1  3000               	movlw	0
  8184  1DC2  0525               	andwf	___flge@ff2+1,w
  8185  1DC3  00F5               	movwf	??___flge+1
  8186  1DC4  3080               	movlw	128
  8187  1DC5  0526               	andwf	___flge@ff2+2,w
  8188  1DC6  00F6               	movwf	??___flge+2
  8189  1DC7  307F               	movlw	127
  8190  1DC8  0527               	andwf	___flge@ff2+3,w
  8191  1DC9  00F7               	movwf	??___flge+3
  8192  1DCA  0877               	movf	??___flge+3,w
  8193  1DCB  0476               	iorwf	??___flge+2,w
  8194  1DCC  0475               	iorwf	??___flge+1,w
  8195  1DCD  0474               	iorwf	??___flge,w
  8196  1DCE  1D03               	skipz
  8197  1DCF  2DD1               	goto	u4691
  8198  1DD0  2DD2               	goto	u4690
  8199  1DD1                     u4691:	
  8200  1DD1  2DDA               	goto	l3016
  8201  1DD2                     u4690:	
  8202  1DD2                     l3014:	
  8203  1DD2  3000               	movlw	0
  8204  1DD3  00A7               	movwf	___flge@ff2+3
  8205  1DD4  3000               	movlw	0
  8206  1DD5  00A6               	movwf	___flge@ff2+2
  8207  1DD6  3000               	movlw	0
  8208  1DD7  00A5               	movwf	___flge@ff2+1
  8209  1DD8  3000               	movlw	0
  8210  1DD9  00A4               	movwf	___flge@ff2
  8211  1DDA                     l3016:	
  8212  1DDA  1FA3               	btfss	___flge@ff1+3,7
  8213  1DDB  2DDD               	goto	u4701
  8214  1DDC  2DDE               	goto	u4700
  8215  1DDD                     u4701:	
  8216  1DDD  2E02               	goto	l3020
  8217  1DDE                     u4700:	
  8218  1DDE                     l3018:	
  8219  1DDE  3000               	movlw	0
  8220  1DDF  00F4               	movwf	??___flge
  8221  1DE0  3000               	movlw	0
  8222  1DE1  00F5               	movwf	??___flge+1
  8223  1DE2  3000               	movlw	0
  8224  1DE3  00F6               	movwf	??___flge+2
  8225  1DE4  3080               	movlw	128
  8226  1DE5  00F7               	movwf	??___flge+3
  8227  1DE6  0820               	movf	___flge@ff1,w
  8228  1DE7  02F4               	subwf	??___flge,f
  8229  1DE8  0821               	movf	___flge@ff1+1,w
  8230  1DE9  1C03               	skipc
  8231  1DEA  0F21               	incfsz	___flge@ff1+1,w
  8232  1DEB  2DED               	goto	u4711
  8233  1DEC  2DEE               	goto	u4712
  8234  1DED                     u4711:	
  8235  1DED  02F5               	subwf	??___flge+1,f
  8236  1DEE                     u4712:	
  8237  1DEE  0822               	movf	___flge@ff1+2,w
  8238  1DEF  1C03               	skipc
  8239  1DF0  0F22               	incfsz	___flge@ff1+2,w
  8240  1DF1  2DF3               	goto	u4713
  8241  1DF2  2DF4               	goto	u4714
  8242  1DF3                     u4713:	
  8243  1DF3  02F6               	subwf	??___flge+2,f
  8244  1DF4                     u4714:	
  8245  1DF4  0823               	movf	___flge@ff1+3,w
  8246  1DF5  1C03               	skipc
  8247  1DF6  0F23               	incfsz	___flge@ff1+3,w
  8248  1DF7  2DF9               	goto	u4715
  8249  1DF8  2DFA               	goto	u4716
  8250  1DF9                     u4715:	
  8251  1DF9  02F7               	subwf	??___flge+3,f
  8252  1DFA                     u4716:	
  8253  1DFA  0877               	movf	??___flge+3,w
  8254  1DFB  00A3               	movwf	___flge@ff1+3
  8255  1DFC  0876               	movf	??___flge+2,w
  8256  1DFD  00A2               	movwf	___flge@ff1+2
  8257  1DFE  0875               	movf	??___flge+1,w
  8258  1DFF  00A1               	movwf	___flge@ff1+1
  8259  1E00  0874               	movf	??___flge,w
  8260  1E01  00A0               	movwf	___flge@ff1
  8261  1E02                     l3020:	
  8262  1E02  1FA7               	btfss	___flge@ff2+3,7
  8263  1E03  2E05               	goto	u4721
  8264  1E04  2E06               	goto	u4720
  8265  1E05                     u4721:	
  8266  1E05  2E2A               	goto	l567
  8267  1E06                     u4720:	
  8268  1E06                     l3022:	
  8269  1E06  3000               	movlw	0
  8270  1E07  00F4               	movwf	??___flge
  8271  1E08  3000               	movlw	0
  8272  1E09  00F5               	movwf	??___flge+1
  8273  1E0A  3000               	movlw	0
  8274  1E0B  00F6               	movwf	??___flge+2
  8275  1E0C  3080               	movlw	128
  8276  1E0D  00F7               	movwf	??___flge+3
  8277  1E0E  0824               	movf	___flge@ff2,w
  8278  1E0F  02F4               	subwf	??___flge,f
  8279  1E10  0825               	movf	___flge@ff2+1,w
  8280  1E11  1C03               	skipc
  8281  1E12  0F25               	incfsz	___flge@ff2+1,w
  8282  1E13  2E15               	goto	u4731
  8283  1E14  2E16               	goto	u4732
  8284  1E15                     u4731:	
  8285  1E15  02F5               	subwf	??___flge+1,f
  8286  1E16                     u4732:	
  8287  1E16  0826               	movf	___flge@ff2+2,w
  8288  1E17  1C03               	skipc
  8289  1E18  0F26               	incfsz	___flge@ff2+2,w
  8290  1E19  2E1B               	goto	u4733
  8291  1E1A  2E1C               	goto	u4734
  8292  1E1B                     u4733:	
  8293  1E1B  02F6               	subwf	??___flge+2,f
  8294  1E1C                     u4734:	
  8295  1E1C  0827               	movf	___flge@ff2+3,w
  8296  1E1D  1C03               	skipc
  8297  1E1E  0F27               	incfsz	___flge@ff2+3,w
  8298  1E1F  2E21               	goto	u4735
  8299  1E20  2E22               	goto	u4736
  8300  1E21                     u4735:	
  8301  1E21  02F7               	subwf	??___flge+3,f
  8302  1E22                     u4736:	
  8303  1E22  0877               	movf	??___flge+3,w
  8304  1E23  00A7               	movwf	___flge@ff2+3
  8305  1E24  0876               	movf	??___flge+2,w
  8306  1E25  00A6               	movwf	___flge@ff2+2
  8307  1E26  0875               	movf	??___flge+1,w
  8308  1E27  00A5               	movwf	___flge@ff2+1
  8309  1E28  0874               	movf	??___flge,w
  8310  1E29  00A4               	movwf	___flge@ff2
  8311  1E2A                     l567:	
  8312  1E2A  3080               	movlw	128
  8313  1E2B  06A3               	xorwf	___flge@ff1+3,f
  8314  1E2C  3080               	movlw	128
  8315  1E2D  06A7               	xorwf	___flge@ff2+3,f
  8316  1E2E  0827               	movf	___flge@ff2+3,w
  8317  1E2F  0223               	subwf	___flge@ff1+3,w
  8318  1E30  1D03               	skipz
  8319  1E31  2E3C               	goto	u4745
  8320  1E32  0826               	movf	___flge@ff2+2,w
  8321  1E33  0222               	subwf	___flge@ff1+2,w
  8322  1E34  1D03               	skipz
  8323  1E35  2E3C               	goto	u4745
  8324  1E36  0825               	movf	___flge@ff2+1,w
  8325  1E37  0221               	subwf	___flge@ff1+1,w
  8326  1E38  1D03               	skipz
  8327  1E39  2E3C               	goto	u4745
  8328  1E3A  0824               	movf	___flge@ff2,w
  8329  1E3B  0220               	subwf	___flge@ff1,w
  8330  1E3C                     u4745:	
  8331  1E3C  1803               	skipnc
  8332  1E3D  2E3F               	goto	u4741
  8333  1E3E  2E40               	goto	u4740
  8334  1E3F                     u4741:	
  8335  1E3F  2E42               	goto	l3026
  8336  1E40                     u4740:	
  8337  1E40                     l3024:	
  8338  1E40  1003               	clrc
  8339  1E41  2E43               	goto	l568
  8340  1E42                     l3026:	
  8341  1E42  1403               	setc
  8342  1E43                     l568:	
  8343  1E43  0008               	return
  8344  1E44                     __end_of___flge:	
  8345                           
  8346                           	psect	text23
  8347  1AB1                     __ptext23:	
  8348 ;; *************** function ___fleq *****************
  8349 ;; Defined at:
  8350 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\fleq.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  ff1             4    0[BANK0 ] unsigned char 
  8353 ;;  ff2             4    4[BANK0 ] unsigned char 
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;		None
  8356 ;; Return value:  Size  Location     Type
  8357 ;;		None               void
  8358 ;; Registers used:
  8359 ;;		wreg, status,2, status,0
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8365 ;;      Params:         0       8       0       0       0
  8366 ;;      Locals:         0       0       0       0       0
  8367 ;;      Temps:          4       0       0       0       0
  8368 ;;      Totals:         4       8       0       0       0
  8369 ;;Total ram usage:       12 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:    1
  8372 ;; This function calls:
  8373 ;;		Nothing
  8374 ;; This function is called by:
  8375 ;;		_sprintf
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           
  8380                           ;psect for function ___fleq
  8381  1AB1                     ___fleq:	
  8382  1AB1                     l2998:	
  8383                           ;incstack = 0
  8384                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8385                           
  8386  1AB1  3000               	movlw	0
  8387  1AB2  1283               	bcf	3,5	;RP0=0, select bank0
  8388  1AB3  1303               	bcf	3,6	;RP1=0, select bank0
  8389  1AB4  0520               	andwf	___fleq@ff1,w
  8390  1AB5  00F4               	movwf	??___fleq
  8391  1AB6  3000               	movlw	0
  8392  1AB7  0521               	andwf	___fleq@ff1+1,w
  8393  1AB8  00F5               	movwf	??___fleq+1
  8394  1AB9  3080               	movlw	128
  8395  1ABA  0522               	andwf	___fleq@ff1+2,w
  8396  1ABB  00F6               	movwf	??___fleq+2
  8397  1ABC  307F               	movlw	127
  8398  1ABD  0523               	andwf	___fleq@ff1+3,w
  8399  1ABE  00F7               	movwf	??___fleq+3
  8400  1ABF  0877               	movf	??___fleq+3,w
  8401  1AC0  0476               	iorwf	??___fleq+2,w
  8402  1AC1  0475               	iorwf	??___fleq+1,w
  8403  1AC2  0474               	iorwf	??___fleq,w
  8404  1AC3  1D03               	skipz
  8405  1AC4  2AC6               	goto	u4651
  8406  1AC5  2AC7               	goto	u4650
  8407  1AC6                     u4651:	
  8408  1AC6  2ACF               	goto	l559
  8409  1AC7                     u4650:	
  8410  1AC7                     l3000:	
  8411  1AC7  3000               	movlw	0
  8412  1AC8  00A3               	movwf	___fleq@ff1+3
  8413  1AC9  3000               	movlw	0
  8414  1ACA  00A2               	movwf	___fleq@ff1+2
  8415  1ACB  3000               	movlw	0
  8416  1ACC  00A1               	movwf	___fleq@ff1+1
  8417  1ACD  3000               	movlw	0
  8418  1ACE  00A0               	movwf	___fleq@ff1
  8419  1ACF                     l559:	
  8420  1ACF  3000               	movlw	0
  8421  1AD0  0524               	andwf	___fleq@ff2,w
  8422  1AD1  00F4               	movwf	??___fleq
  8423  1AD2  3000               	movlw	0
  8424  1AD3  0525               	andwf	___fleq@ff2+1,w
  8425  1AD4  00F5               	movwf	??___fleq+1
  8426  1AD5  3080               	movlw	128
  8427  1AD6  0526               	andwf	___fleq@ff2+2,w
  8428  1AD7  00F6               	movwf	??___fleq+2
  8429  1AD8  307F               	movlw	127
  8430  1AD9  0527               	andwf	___fleq@ff2+3,w
  8431  1ADA  00F7               	movwf	??___fleq+3
  8432  1ADB  0877               	movf	??___fleq+3,w
  8433  1ADC  0476               	iorwf	??___fleq+2,w
  8434  1ADD  0475               	iorwf	??___fleq+1,w
  8435  1ADE  0474               	iorwf	??___fleq,w
  8436  1ADF  1D03               	skipz
  8437  1AE0  2AE2               	goto	u4661
  8438  1AE1  2AE3               	goto	u4660
  8439  1AE2                     u4661:	
  8440  1AE2  2AEB               	goto	l560
  8441  1AE3                     u4660:	
  8442  1AE3                     l3002:	
  8443  1AE3  3000               	movlw	0
  8444  1AE4  00A7               	movwf	___fleq@ff2+3
  8445  1AE5  3000               	movlw	0
  8446  1AE6  00A6               	movwf	___fleq@ff2+2
  8447  1AE7  3000               	movlw	0
  8448  1AE8  00A5               	movwf	___fleq@ff2+1
  8449  1AE9  3000               	movlw	0
  8450  1AEA  00A4               	movwf	___fleq@ff2
  8451  1AEB                     l560:	
  8452  1AEB  0827               	movf	___fleq@ff2+3,w
  8453  1AEC  0623               	xorwf	___fleq@ff1+3,w
  8454  1AED  1D03               	skipz
  8455  1AEE  2AF9               	goto	u4675
  8456  1AEF  0826               	movf	___fleq@ff2+2,w
  8457  1AF0  0622               	xorwf	___fleq@ff1+2,w
  8458  1AF1  1D03               	skipz
  8459  1AF2  2AF9               	goto	u4675
  8460  1AF3  0825               	movf	___fleq@ff2+1,w
  8461  1AF4  0621               	xorwf	___fleq@ff1+1,w
  8462  1AF5  1D03               	skipz
  8463  1AF6  2AF9               	goto	u4675
  8464  1AF7  0824               	movf	___fleq@ff2,w
  8465  1AF8  0620               	xorwf	___fleq@ff1,w
  8466  1AF9                     u4675:	
  8467  1AF9  1903               	skipnz
  8468  1AFA  2AFC               	goto	u4671
  8469  1AFB  2AFD               	goto	u4670
  8470  1AFC                     u4671:	
  8471  1AFC  2AFF               	goto	l3006
  8472  1AFD                     u4670:	
  8473  1AFD                     l3004:	
  8474  1AFD  1003               	clrc
  8475  1AFE  2B00               	goto	l561
  8476  1AFF                     l3006:	
  8477  1AFF  1403               	setc
  8478  1B00                     l561:	
  8479  1B00  0008               	return
  8480  1B01                     __end_of___fleq:	
  8481                           
  8482                           	psect	text24
  8483  0802                     __ptext24:	
  8484 ;; *************** function _Port_init *****************
  8485 ;; Defined at:
  8486 ;;		line 78 in file "main_lab3.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;		None
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;		None
  8491 ;; Return value:  Size  Location     Type
  8492 ;;                  1    wreg      void 
  8493 ;; Registers used:
  8494 ;;		wreg, status,2
  8495 ;; Tracked objects:
  8496 ;;		On entry : 0/0
  8497 ;;		On exit  : 0/0
  8498 ;;		Unchanged: 0/0
  8499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8500 ;;      Params:         0       0       0       0       0
  8501 ;;      Locals:         0       0       0       0       0
  8502 ;;      Temps:          0       0       0       0       0
  8503 ;;      Totals:         0       0       0       0       0
  8504 ;;Total ram usage:        0 bytes
  8505 ;; Hardware stack levels used:    1
  8506 ;; Hardware stack levels required when called:    1
  8507 ;; This function calls:
  8508 ;;		Nothing
  8509 ;; This function is called by:
  8510 ;;		_main
  8511 ;; This function uses a non-reentrant model
  8512 ;;
  8513                           
  8514                           
  8515                           ;psect for function _Port_init
  8516  0802                     _Port_init:	
  8517  0802                     l3192:	
  8518                           ;incstack = 0
  8519                           ; Regs used in _Port_init: [wreg+status,2]
  8520                           
  8521                           
  8522                           ;main_lab3.c: 79:     TRISA = 0x03;
  8523  0802  3003               	movlw	3
  8524  0803  1683               	bsf	3,5	;RP0=1, select bank1
  8525  0804  1303               	bcf	3,6	;RP1=0, select bank1
  8526  0805  0085               	movwf	5	;volatile
  8527  0806                     l3194:	
  8528                           
  8529                           ;main_lab3.c: 80:     ANSEL = 0;
  8530  0806  1683               	bsf	3,5	;RP0=1, select bank3
  8531  0807  1703               	bsf	3,6	;RP1=1, select bank3
  8532  0808  0188               	clrf	8	;volatile
  8533  0809                     l3196:	
  8534                           
  8535                           ;main_lab3.c: 81:     ANSEL = 0x03;
  8536  0809  3003               	movlw	3
  8537  080A  0088               	movwf	8	;volatile
  8538                           
  8539                           ;main_lab3.c: 82:     ANSELH = 0;
  8540  080B  0189               	clrf	9	;volatile
  8541                           
  8542                           ;main_lab3.c: 83:     TRISB = 0;
  8543  080C  1683               	bsf	3,5	;RP0=1, select bank1
  8544  080D  1303               	bcf	3,6	;RP1=0, select bank1
  8545  080E  0186               	clrf	6	;volatile
  8546                           
  8547                           ;main_lab3.c: 84:     PORTB = 0;
  8548  080F  1283               	bcf	3,5	;RP0=0, select bank0
  8549  0810  1303               	bcf	3,6	;RP1=0, select bank0
  8550  0811  0186               	clrf	6	;volatile
  8551                           
  8552                           ;main_lab3.c: 85:     TRISD = 0;
  8553  0812  1683               	bsf	3,5	;RP0=1, select bank1
  8554  0813  1303               	bcf	3,6	;RP1=0, select bank1
  8555  0814  0188               	clrf	8	;volatile
  8556                           
  8557                           ;main_lab3.c: 86:     PORTD = 0;
  8558  0815  1283               	bcf	3,5	;RP0=0, select bank0
  8559  0816  1303               	bcf	3,6	;RP1=0, select bank0
  8560  0817  0188               	clrf	8	;volatile
  8561                           
  8562                           ;main_lab3.c: 87:     PORTA = 0;
  8563  0818  0185               	clrf	5	;volatile
  8564  0819                     l108:	
  8565  0819  0008               	return
  8566  081A                     __end_of_Port_init:	
  8567                           
  8568                           	psect	text25
  8569  1A27                     __ptext25:	
  8570 ;; *************** function _LCD_WRITE_STRING *****************
  8571 ;; Defined at:
  8572 ;;		line 66 in file "LCD_8bits_main.c"
  8573 ;; Parameters:    Size  Location     Type
  8574 ;;  a               2    6[COMMON] PTR unsigned char 
  8575 ;;		 -> STR_3(15), string2(5), string1(5), 
  8576 ;; Auto vars:     Size  Location     Type
  8577 ;;  i               2    8[COMMON] int 
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      void 
  8580 ;; Registers used:
  8581 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8587 ;;      Params:         2       0       0       0       0
  8588 ;;      Locals:         2       0       0       0       0
  8589 ;;      Temps:          0       3       0       0       0
  8590 ;;      Totals:         4       3       0       0       0
  8591 ;;Total ram usage:        7 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:    2
  8594 ;; This function calls:
  8595 ;;		_LCD_WRITE_CHAR
  8596 ;; This function is called by:
  8597 ;;		_main
  8598 ;; This function uses a non-reentrant model
  8599 ;;
  8600                           
  8601                           
  8602                           ;psect for function _LCD_WRITE_STRING
  8603  1A27                     _LCD_WRITE_STRING:	
  8604  1A27                     l3184:	
  8605                           ;incstack = 0
  8606                           ; Regs used in _LCD_WRITE_STRING: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8607                           
  8608                           
  8609                           ;LCD_8bits_main.c: 67:     int i;;LCD_8bits_main.c: 68:     for(i=0; a[i]!='\0'; i++)
  8610  1A27  01F9               	clrf	LCD_WRITE_STRING@i
  8611  1A28  01FA               	clrf	LCD_WRITE_STRING@i+1
  8612  1A29  2A4C               	goto	l3190
  8613  1A2A                     l3186:	
  8614                           
  8615                           ;LCD_8bits_main.c: 69:         LCD_WRITE_CHAR(a[i]);
  8616  1A2A  0879               	movf	LCD_WRITE_STRING@i,w
  8617  1A2B  0777               	addwf	LCD_WRITE_STRING@a,w
  8618  1A2C  00A1               	movwf	??_LCD_WRITE_STRING+1
  8619  1A2D  0878               	movf	LCD_WRITE_STRING@a+1,w
  8620  1A2E  00A0               	movwf	??_LCD_WRITE_STRING
  8621  1A2F  1803               	skipnc
  8622  1A30  0AA0               	incf	??_LCD_WRITE_STRING,f
  8623  1A31  1FF9               	btfss	LCD_WRITE_STRING@i,7
  8624  1A32  2A34               	goto	u5080
  8625  1A33  03A0               	decf	??_LCD_WRITE_STRING,f
  8626  1A34                     u5080:	
  8627  1A34  1283               	bcf	3,5	;RP0=0, select bank0
  8628  1A35  1303               	bcf	3,6	;RP1=0, select bank0
  8629  1A36  0820               	movf	??_LCD_WRITE_STRING,w
  8630  1A37  00A2               	movwf	??_LCD_WRITE_STRING+2
  8631  1A38  0822               	movf	??_LCD_WRITE_STRING+2,w
  8632  1A39  00FF               	movwf	btemp+1
  8633  1A3A  0821               	movf	??_LCD_WRITE_STRING+1,w
  8634  1A3B  0084               	movwf	4
  8635  1A3C  160A  158A  2000  160A  158A  	fcall	stringtab
  8636  1A41  160A  158A  2175  160A  158A  	fcall	_LCD_WRITE_CHAR
  8637  1A46                     l3188:	
  8638  1A46  3001               	movlw	1
  8639  1A47  07F9               	addwf	LCD_WRITE_STRING@i,f
  8640  1A48  1803               	skipnc
  8641  1A49  0AFA               	incf	LCD_WRITE_STRING@i+1,f
  8642  1A4A  3000               	movlw	0
  8643  1A4B  07FA               	addwf	LCD_WRITE_STRING@i+1,f
  8644  1A4C                     l3190:	
  8645  1A4C  0879               	movf	LCD_WRITE_STRING@i,w
  8646  1A4D  0777               	addwf	LCD_WRITE_STRING@a,w
  8647  1A4E  1283               	bcf	3,5	;RP0=0, select bank0
  8648  1A4F  1303               	bcf	3,6	;RP1=0, select bank0
  8649  1A50  00A1               	movwf	??_LCD_WRITE_STRING+1
  8650  1A51  0878               	movf	LCD_WRITE_STRING@a+1,w
  8651  1A52  00A0               	movwf	??_LCD_WRITE_STRING
  8652  1A53  1803               	skipnc
  8653  1A54  0AA0               	incf	??_LCD_WRITE_STRING,f
  8654  1A55  1FF9               	btfss	LCD_WRITE_STRING@i,7
  8655  1A56  2A58               	goto	u5090
  8656  1A57  03A0               	decf	??_LCD_WRITE_STRING,f
  8657  1A58                     u5090:	
  8658  1A58  1283               	bcf	3,5	;RP0=0, select bank0
  8659  1A59  1303               	bcf	3,6	;RP1=0, select bank0
  8660  1A5A  0820               	movf	??_LCD_WRITE_STRING,w
  8661  1A5B  00A2               	movwf	??_LCD_WRITE_STRING+2
  8662  1A5C  0822               	movf	??_LCD_WRITE_STRING+2,w
  8663  1A5D  00FF               	movwf	btemp+1
  8664  1A5E  0821               	movf	??_LCD_WRITE_STRING+1,w
  8665  1A5F  0084               	movwf	4
  8666  1A60  160A  158A  2000  160A  158A  	fcall	stringtab
  8667  1A65  3A00               	xorlw	0
  8668  1A66  1D03               	skipz
  8669  1A67  2A69               	goto	u5101
  8670  1A68  2A6A               	goto	u5100
  8671  1A69                     u5101:	
  8672  1A69  2A2A               	goto	l3186
  8673  1A6A                     u5100:	
  8674  1A6A                     l30:	
  8675  1A6A  0008               	return
  8676  1A6B                     __end_of_LCD_WRITE_STRING:	
  8677                           
  8678                           	psect	text26
  8679  1975                     __ptext26:	
  8680 ;; *************** function _LCD_WRITE_CHAR *****************
  8681 ;; Defined at:
  8682 ;;		line 57 in file "LCD_8bits_main.c"
  8683 ;; Parameters:    Size  Location     Type
  8684 ;;  a               1    wreg     unsigned char 
  8685 ;; Auto vars:     Size  Location     Type
  8686 ;;  a               1    5[COMMON] unsigned char 
  8687 ;; Return value:  Size  Location     Type
  8688 ;;                  1    wreg      void 
  8689 ;; Registers used:
  8690 ;;		wreg
  8691 ;; Tracked objects:
  8692 ;;		On entry : 0/0
  8693 ;;		On exit  : 0/0
  8694 ;;		Unchanged: 0/0
  8695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8696 ;;      Params:         0       0       0       0       0
  8697 ;;      Locals:         1       0       0       0       0
  8698 ;;      Temps:          2       0       0       0       0
  8699 ;;      Totals:         3       0       0       0       0
  8700 ;;Total ram usage:        3 bytes
  8701 ;; Hardware stack levels used:    1
  8702 ;; Hardware stack levels required when called:    1
  8703 ;; This function calls:
  8704 ;;		Nothing
  8705 ;; This function is called by:
  8706 ;;		_LCD_WRITE_STRING
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           
  8711                           ;psect for function _LCD_WRITE_CHAR
  8712  1975                     _LCD_WRITE_CHAR:	
  8713                           
  8714                           ;incstack = 0
  8715                           ; Regs used in _LCD_WRITE_CHAR: [wreg]
  8716                           ;LCD_WRITE_CHAR@a stored from wreg
  8717  1975  00F6               	movwf	LCD_WRITE_CHAR@a
  8718  1976                     l2778:	
  8719                           
  8720                           ;LCD_8bits_main.c: 58:     PORTDbits.RD5 = 1;
  8721  1976  1283               	bcf	3,5	;RP0=0, select bank0
  8722  1977  1303               	bcf	3,6	;RP1=0, select bank0
  8723  1978  1688               	bsf	8,5	;volatile
  8724  1979                     l2780:	
  8725                           
  8726                           ;LCD_8bits_main.c: 59:     PORTB = a;
  8727  1979  0876               	movf	LCD_WRITE_CHAR@a,w
  8728  197A  0086               	movwf	6	;volatile
  8729  197B                     l2782:	
  8730                           
  8731                           ;LCD_8bits_main.c: 60:     PORTDbits.RD7 = 1;
  8732  197B  1788               	bsf	8,7	;volatile
  8733                           
  8734                           ;LCD_8bits_main.c: 61:     _delay((unsigned long)((40)*(4000000/4000000.0)));
  8735  197C  300D               	movlw	13
  8736  197D  00F4               	movwf	??_LCD_WRITE_CHAR
  8737  197E                     u5647:	
  8738  197E  0BF4               	decfsz	??_LCD_WRITE_CHAR,f
  8739  197F  297E               	goto	u5647
  8740  1980                     l2784:	
  8741                           
  8742                           ;LCD_8bits_main.c: 62:     PORTDbits.RD7 = 0;
  8743  1980  1283               	bcf	3,5	;RP0=0, select bank0
  8744  1981  1303               	bcf	3,6	;RP1=0, select bank0
  8745  1982  1388               	bcf	8,7	;volatile
  8746                           
  8747                           ;LCD_8bits_main.c: 63:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8748  1983  3007               	movlw	7
  8749  1984  00F5               	movwf	??_LCD_WRITE_CHAR+1
  8750  1985  307D               	movlw	125
  8751  1986  00F4               	movwf	??_LCD_WRITE_CHAR
  8752  1987                     u5657:	
  8753  1987  0BF4               	decfsz	??_LCD_WRITE_CHAR,f
  8754  1988  2987               	goto	u5657
  8755  1989  0BF5               	decfsz	??_LCD_WRITE_CHAR+1,f
  8756  198A  2987               	goto	u5657
  8757  198B                     l24:	
  8758  198B  0008               	return
  8759  198C                     __end_of_LCD_WRITE_CHAR:	
  8760                           
  8761                           	psect	text27
  8762  198C                     __ptext27:	
  8763 ;; *************** function _LCD_SET_CURSOR *****************
  8764 ;; Defined at:
  8765 ;;		line 25 in file "LCD_8bits_main.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  a               1    wreg     unsigned char 
  8768 ;;  b               1    6[COMMON] unsigned char 
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;  a               1    8[COMMON] unsigned char 
  8771 ;;  temporal        1    9[COMMON] unsigned char 
  8772 ;; Return value:  Size  Location     Type
  8773 ;;                  1    wreg      void 
  8774 ;; Registers used:
  8775 ;;		wreg, status,2, status,0, pclath, cstack
  8776 ;; Tracked objects:
  8777 ;;		On entry : 0/0
  8778 ;;		On exit  : 0/0
  8779 ;;		Unchanged: 0/0
  8780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8781 ;;      Params:         1       0       0       0       0
  8782 ;;      Locals:         2       0       0       0       0
  8783 ;;      Temps:          1       0       0       0       0
  8784 ;;      Totals:         4       0       0       0       0
  8785 ;;Total ram usage:        4 bytes
  8786 ;; Hardware stack levels used:    1
  8787 ;; Hardware stack levels required when called:    2
  8788 ;; This function calls:
  8789 ;;		_LCD_CMD
  8790 ;; This function is called by:
  8791 ;;		_main
  8792 ;; This function uses a non-reentrant model
  8793 ;;
  8794                           
  8795                           
  8796                           ;psect for function _LCD_SET_CURSOR
  8797  198C                     _LCD_SET_CURSOR:	
  8798                           
  8799                           ;incstack = 0
  8800                           ; Regs used in _LCD_SET_CURSOR: [wreg+status,2+status,0+pclath+cstack]
  8801                           ;LCD_SET_CURSOR@a stored from wreg
  8802  198C  00F9               	movwf	LCD_SET_CURSOR@a
  8803  198D                     l3144:	
  8804                           
  8805                           ;LCD_8bits_main.c: 26:     uint8_t temporal;;LCD_8bits_main.c: 27:     if (a == 1) {
  8806  198D  0379               	decf	LCD_SET_CURSOR@a,w
  8807  198E  1D03               	btfss	3,2
  8808  198F  2991               	goto	u5061
  8809  1990  2992               	goto	u5060
  8810  1991                     u5061:	
  8811  1991  299E               	goto	l3150
  8812  1992                     u5060:	
  8813  1992                     l3146:	
  8814                           
  8815                           ;LCD_8bits_main.c: 28:         temporal = 0x80 + b - 1;
  8816  1992  0877               	movf	LCD_SET_CURSOR@b,w
  8817  1993  3E7F               	addlw	127
  8818  1994  00F8               	movwf	??_LCD_SET_CURSOR
  8819  1995  0878               	movf	??_LCD_SET_CURSOR,w
  8820  1996  00FA               	movwf	LCD_SET_CURSOR@temporal
  8821  1997                     l3148:	
  8822                           
  8823                           ;LCD_8bits_main.c: 29:         LCD_CMD(temporal);
  8824  1997  087A               	movf	LCD_SET_CURSOR@temporal,w
  8825  1998  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8826                           
  8827                           ;LCD_8bits_main.c: 30:     }
  8828  199D  29AF               	goto	l18
  8829  199E                     l3150:	
  8830  199E  3002               	movlw	2
  8831  199F  0679               	xorwf	LCD_SET_CURSOR@a,w
  8832  19A0  1D03               	btfss	3,2
  8833  19A1  29A3               	goto	u5071
  8834  19A2  29A4               	goto	u5070
  8835  19A3                     u5071:	
  8836  19A3  29AF               	goto	l18
  8837  19A4                     u5070:	
  8838  19A4                     l3152:	
  8839                           
  8840                           ;LCD_8bits_main.c: 32:         temporal = 0xC0 + b - 1;
  8841  19A4  0877               	movf	LCD_SET_CURSOR@b,w
  8842  19A5  3EBF               	addlw	191
  8843  19A6  00F8               	movwf	??_LCD_SET_CURSOR
  8844  19A7  0878               	movf	??_LCD_SET_CURSOR,w
  8845  19A8  00FA               	movwf	LCD_SET_CURSOR@temporal
  8846  19A9                     l3154:	
  8847                           
  8848                           ;LCD_8bits_main.c: 33:         LCD_CMD(temporal);
  8849  19A9  087A               	movf	LCD_SET_CURSOR@temporal,w
  8850  19AA  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8851  19AF                     l18:	
  8852  19AF  0008               	return
  8853  19B0                     __end_of_LCD_SET_CURSOR:	
  8854                           
  8855                           	psect	text28
  8856  1B51                     __ptext28:	
  8857 ;; *************** function _LCD_INIT *****************
  8858 ;; Defined at:
  8859 ;;		line 37 in file "LCD_8bits_main.c"
  8860 ;; Parameters:    Size  Location     Type
  8861 ;;		None
  8862 ;; Auto vars:     Size  Location     Type
  8863 ;;		None
  8864 ;; Return value:  Size  Location     Type
  8865 ;;                  1    wreg      void 
  8866 ;; Registers used:
  8867 ;;		wreg, status,2, status,0, pclath, cstack
  8868 ;; Tracked objects:
  8869 ;;		On entry : 0/0
  8870 ;;		On exit  : 0/0
  8871 ;;		Unchanged: 0/0
  8872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8873 ;;      Params:         0       0       0       0       0
  8874 ;;      Locals:         0       0       0       0       0
  8875 ;;      Temps:          2       0       0       0       0
  8876 ;;      Totals:         2       0       0       0       0
  8877 ;;Total ram usage:        2 bytes
  8878 ;; Hardware stack levels used:    1
  8879 ;; Hardware stack levels required when called:    2
  8880 ;; This function calls:
  8881 ;;		_LCD_CMD
  8882 ;; This function is called by:
  8883 ;;		_main
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           
  8888                           ;psect for function _LCD_INIT
  8889  1B51                     _LCD_INIT:	
  8890  1B51                     l3156:	
  8891                           ;incstack = 0
  8892                           ; Regs used in _LCD_INIT: [wreg+status,2+status,0+pclath+cstack]
  8893                           
  8894                           
  8895                           ;LCD_8bits_main.c: 38:     PORTB = 0;
  8896  1B51  1283               	bcf	3,5	;RP0=0, select bank0
  8897  1B52  1303               	bcf	3,6	;RP1=0, select bank0
  8898  1B53  0186               	clrf	6	;volatile
  8899  1B54                     l3158:	
  8900                           
  8901                           ;LCD_8bits_main.c: 39:     _delay((unsigned long)((15)*(4000000/4000.0)));
  8902  1B54  3014               	movlw	20
  8903  1B55  00F8               	movwf	??_LCD_INIT+1
  8904  1B56  3079               	movlw	121
  8905  1B57  00F7               	movwf	??_LCD_INIT
  8906  1B58                     u5667:	
  8907  1B58  0BF7               	decfsz	??_LCD_INIT,f
  8908  1B59  2B58               	goto	u5667
  8909  1B5A  0BF8               	decfsz	??_LCD_INIT+1,f
  8910  1B5B  2B58               	goto	u5667
  8911  1B5C  2B5D               	nop2
  8912  1B5D                     l3160:	
  8913                           
  8914                           ;LCD_8bits_main.c: 40:     LCD_CMD(0x30);
  8915  1B5D  3030               	movlw	48
  8916  1B5E  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8917  1B63                     l3162:	
  8918                           
  8919                           ;LCD_8bits_main.c: 41:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8920  1B63  3007               	movlw	7
  8921  1B64  00F8               	movwf	??_LCD_INIT+1
  8922  1B65  307D               	movlw	125
  8923  1B66  00F7               	movwf	??_LCD_INIT
  8924  1B67                     u5677:	
  8925  1B67  0BF7               	decfsz	??_LCD_INIT,f
  8926  1B68  2B67               	goto	u5677
  8927  1B69  0BF8               	decfsz	??_LCD_INIT+1,f
  8928  1B6A  2B67               	goto	u5677
  8929  1B6B                     l3164:	
  8930                           
  8931                           ;LCD_8bits_main.c: 42:     LCD_CMD(0x30);
  8932  1B6B  3030               	movlw	48
  8933  1B6C  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8934  1B71                     l3166:	
  8935                           
  8936                           ;LCD_8bits_main.c: 43:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  8937  1B71  3035               	movlw	53
  8938  1B72  00F7               	movwf	??_LCD_INIT
  8939  1B73                     u5687:	
  8940  1B73  0BF7               	decfsz	??_LCD_INIT,f
  8941  1B74  2B73               	goto	u5687
  8942  1B75                     l3168:	
  8943                           
  8944                           ;LCD_8bits_main.c: 44:     LCD_CMD(0x30);
  8945  1B75  3030               	movlw	48
  8946  1B76  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8947  1B7B                     l3170:	
  8948                           
  8949                           ;LCD_8bits_main.c: 45:     _delay((unsigned long)((160)*(4000000/4000000.0)));
  8950  1B7B  3035               	movlw	53
  8951  1B7C  00F7               	movwf	??_LCD_INIT
  8952  1B7D                     u5697:	
  8953  1B7D  0BF7               	decfsz	??_LCD_INIT,f
  8954  1B7E  2B7D               	goto	u5697
  8955  1B7F                     l3172:	
  8956                           
  8957                           ;LCD_8bits_main.c: 48:     LCD_CMD(0x02);
  8958  1B7F  3002               	movlw	2
  8959  1B80  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8960  1B85                     l3174:	
  8961                           
  8962                           ;LCD_8bits_main.c: 49:     LCD_CMD(0x38);
  8963  1B85  3038               	movlw	56
  8964  1B86  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8965  1B8B                     l3176:	
  8966                           
  8967                           ;LCD_8bits_main.c: 50:     LCD_CMD(0x08);
  8968  1B8B  3008               	movlw	8
  8969  1B8C  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8970  1B91                     l3178:	
  8971                           
  8972                           ;LCD_8bits_main.c: 51:     LCD_CMD(0x01);
  8973  1B91  3001               	movlw	1
  8974  1B92  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8975  1B97                     l3180:	
  8976                           
  8977                           ;LCD_8bits_main.c: 52:     LCD_CMD(0x06);
  8978  1B97  3006               	movlw	6
  8979  1B98  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8980  1B9D                     l3182:	
  8981                           
  8982                           ;LCD_8bits_main.c: 53:     LCD_CMD(0x0C);
  8983  1B9D  300C               	movlw	12
  8984  1B9E  160A  158A  215F  160A  158A  	fcall	_LCD_CMD
  8985  1BA3                     l21:	
  8986  1BA3  0008               	return
  8987  1BA4                     __end_of_LCD_INIT:	
  8988                           
  8989                           	psect	text29
  8990  195F                     __ptext29:	
  8991 ;; *************** function _LCD_CMD *****************
  8992 ;; Defined at:
  8993 ;;		line 12 in file "LCD_8bits_main.c"
  8994 ;; Parameters:    Size  Location     Type
  8995 ;;  a               1    wreg     unsigned char 
  8996 ;; Auto vars:     Size  Location     Type
  8997 ;;  a               1    5[COMMON] unsigned char 
  8998 ;; Return value:  Size  Location     Type
  8999 ;;                  1    wreg      void 
  9000 ;; Registers used:
  9001 ;;		wreg
  9002 ;; Tracked objects:
  9003 ;;		On entry : 0/0
  9004 ;;		On exit  : 0/0
  9005 ;;		Unchanged: 0/0
  9006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9007 ;;      Params:         0       0       0       0       0
  9008 ;;      Locals:         1       0       0       0       0
  9009 ;;      Temps:          2       0       0       0       0
  9010 ;;      Totals:         3       0       0       0       0
  9011 ;;Total ram usage:        3 bytes
  9012 ;; Hardware stack levels used:    1
  9013 ;; Hardware stack levels required when called:    1
  9014 ;; This function calls:
  9015 ;;		Nothing
  9016 ;; This function is called by:
  9017 ;;		_LCD_SET_CURSOR
  9018 ;;		_LCD_INIT
  9019 ;;		_LCD_CLR
  9020 ;;		_LCD_SHIFT_RIGHT
  9021 ;;		_LCD_SHIFT_LEFT
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           
  9026                           ;psect for function _LCD_CMD
  9027  195F                     _LCD_CMD:	
  9028                           
  9029                           ;incstack = 0
  9030                           ; Regs used in _LCD_CMD: [wreg]
  9031                           ;LCD_CMD@a stored from wreg
  9032  195F  00F6               	movwf	LCD_CMD@a
  9033  1960                     l2768:	
  9034                           
  9035                           ;LCD_8bits_main.c: 13:     PORTDbits.RD5 = 0;
  9036  1960  1283               	bcf	3,5	;RP0=0, select bank0
  9037  1961  1303               	bcf	3,6	;RP1=0, select bank0
  9038  1962  1288               	bcf	8,5	;volatile
  9039  1963                     l2770:	
  9040                           
  9041                           ;LCD_8bits_main.c: 14:     PORTB = a;
  9042  1963  0876               	movf	LCD_CMD@a,w
  9043  1964  0086               	movwf	6	;volatile
  9044  1965                     l2772:	
  9045                           
  9046                           ;LCD_8bits_main.c: 15:     PORTDbits.RD7 = 1;
  9047  1965  1788               	bsf	8,7	;volatile
  9048  1966                     l2774:	
  9049                           
  9050                           ;LCD_8bits_main.c: 16:     _delay((unsigned long)((5)*(4000000/4000000.0)));
  9051  1966  2967               	nop2	;2 cycle nop
  9052  1967  2968               	nop2	;2 cycle nop
  9053  1968  0000               	nop
  9054  1969                     l2776:	
  9055                           
  9056                           ;LCD_8bits_main.c: 17:     PORTDbits.RD7 = 0;
  9057  1969  1283               	bcf	3,5	;RP0=0, select bank0
  9058  196A  1303               	bcf	3,6	;RP1=0, select bank0
  9059  196B  1388               	bcf	8,7	;volatile
  9060                           
  9061                           ;LCD_8bits_main.c: 18:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9062  196C  3007               	movlw	7
  9063  196D  00F5               	movwf	??_LCD_CMD+1
  9064  196E  307D               	movlw	125
  9065  196F  00F4               	movwf	??_LCD_CMD
  9066  1970                     u5707:	
  9067  1970  0BF4               	decfsz	??_LCD_CMD,f
  9068  1971  2970               	goto	u5707
  9069  1972  0BF5               	decfsz	??_LCD_CMD+1,f
  9070  1973  2970               	goto	u5707
  9071  1974                     l9:	
  9072  1974  0008               	return
  9073  1975                     __end_of_LCD_CMD:	
  9074                           
  9075                           	psect	text30
  9076  19D5                     __ptext30:	
  9077 ;; *************** function _EUSART_Init *****************
  9078 ;; Defined at:
  9079 ;;		line 5 in file "Lib_EUSART.c"
  9080 ;; Parameters:    Size  Location     Type
  9081 ;;  a               1    wreg     unsigned char 
  9082 ;;  b               1    3[COMMON] unsigned char 
  9083 ;; Auto vars:     Size  Location     Type
  9084 ;;  a               1    4[COMMON] unsigned char 
  9085 ;; Return value:  Size  Location     Type
  9086 ;;                  1    wreg      void 
  9087 ;; Registers used:
  9088 ;;		wreg, status,2, status,0
  9089 ;; Tracked objects:
  9090 ;;		On entry : 0/0
  9091 ;;		On exit  : 0/0
  9092 ;;		Unchanged: 0/0
  9093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9094 ;;      Params:         1       0       0       0       0
  9095 ;;      Locals:         1       0       0       0       0
  9096 ;;      Temps:          0       0       0       0       0
  9097 ;;      Totals:         2       0       0       0       0
  9098 ;;Total ram usage:        2 bytes
  9099 ;; Hardware stack levels used:    1
  9100 ;; Hardware stack levels required when called:    1
  9101 ;; This function calls:
  9102 ;;		Nothing
  9103 ;; This function is called by:
  9104 ;;		_main
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           
  9109                           ;psect for function _EUSART_Init
  9110  19D5                     _EUSART_Init:	
  9111                           
  9112                           ;incstack = 0
  9113                           ; Regs used in _EUSART_Init: [wreg+status,2+status,0]
  9114                           ;EUSART_Init@a stored from wreg
  9115  19D5  00F5               	movwf	EUSART_Init@a
  9116  19D6                     l3228:	
  9117                           
  9118                           ;Lib_EUSART.c: 7:     BAUDCTLbits.BRG16 = 0;
  9119  19D6  1683               	bsf	3,5	;RP0=1, select bank3
  9120  19D7  1703               	bsf	3,6	;RP1=1, select bank3
  9121  19D8  1187               	bcf	7,3	;volatile
  9122                           
  9123                           ;Lib_EUSART.c: 8:     TXSTAbits.BRGH = 1;
  9124  19D9  1683               	bsf	3,5	;RP0=1, select bank1
  9125  19DA  1303               	bcf	3,6	;RP1=0, select bank1
  9126  19DB  1518               	bsf	24,2	;volatile
  9127                           
  9128                           ;Lib_EUSART.c: 9:     TXSTAbits.SYNC = 0;
  9129  19DC  1218               	bcf	24,4	;volatile
  9130                           
  9131                           ;Lib_EUSART.c: 10:     RCSTAbits.SPEN = 1;
  9132  19DD  1283               	bcf	3,5	;RP0=0, select bank0
  9133  19DE  1303               	bcf	3,6	;RP1=0, select bank0
  9134  19DF  1798               	bsf	24,7	;volatile
  9135  19E0                     l3230:	
  9136                           
  9137                           ;Lib_EUSART.c: 11:     if (a==1){
  9138  19E0  0375               	decf	EUSART_Init@a,w
  9139  19E1  1D03               	btfss	3,2
  9140  19E2  29E4               	goto	u5121
  9141  19E3  29E5               	goto	u5120
  9142  19E4                     u5121:	
  9143  19E4  29ED               	goto	l168
  9144  19E5                     u5120:	
  9145  19E5                     l3232:	
  9146                           
  9147                           ;Lib_EUSART.c: 12:         PIE1bits.RCIE = 1;
  9148  19E5  1683               	bsf	3,5	;RP0=1, select bank1
  9149  19E6  1303               	bcf	3,6	;RP1=0, select bank1
  9150  19E7  168C               	bsf	12,5	;volatile
  9151                           
  9152                           ;Lib_EUSART.c: 13:         PIR1bits.RCIF = 0;
  9153  19E8  1283               	bcf	3,5	;RP0=0, select bank0
  9154  19E9  1303               	bcf	3,6	;RP1=0, select bank0
  9155  19EA  128C               	bcf	12,5	;volatile
  9156                           
  9157                           ;Lib_EUSART.c: 14:         INTCONbits.GIE = 1;
  9158  19EB  178B               	bsf	11,7	;volatile
  9159                           
  9160                           ;Lib_EUSART.c: 15:         INTCONbits.PEIE = 1;
  9161  19EC  170B               	bsf	11,6	;volatile
  9162  19ED                     l168:	
  9163                           ;Lib_EUSART.c: 16:     }
  9164                           
  9165                           
  9166                           ;Lib_EUSART.c: 17:     RCSTAbits.RX9D = 0;
  9167  19ED  1018               	bcf	24,0	;volatile
  9168                           
  9169                           ;Lib_EUSART.c: 18:     RCSTAbits.CREN = 1;
  9170  19EE  1618               	bsf	24,4	;volatile
  9171                           
  9172                           ;Lib_EUSART.c: 21:     TXSTAbits.TXEN = 1;
  9173  19EF  1683               	bsf	3,5	;RP0=1, select bank1
  9174  19F0  1303               	bcf	3,6	;RP1=0, select bank1
  9175  19F1  1698               	bsf	24,5	;volatile
  9176  19F2                     l3234:	
  9177                           
  9178                           ;Lib_EUSART.c: 22:     if(b==1){
  9179  19F2  0374               	decf	EUSART_Init@b,w
  9180  19F3  1D03               	btfss	3,2
  9181  19F4  29F6               	goto	u5131
  9182  19F5  29F7               	goto	u5130
  9183  19F6                     u5131:	
  9184  19F6  29FD               	goto	l170
  9185  19F7                     u5130:	
  9186  19F7                     l3236:	
  9187                           
  9188                           ;Lib_EUSART.c: 23:         PIE1bits.TXIE = 1;
  9189  19F7  160C               	bsf	12,4	;volatile
  9190                           
  9191                           ;Lib_EUSART.c: 24:         PIR1bits.TXIF = 0;
  9192  19F8  1283               	bcf	3,5	;RP0=0, select bank0
  9193  19F9  1303               	bcf	3,6	;RP1=0, select bank0
  9194  19FA  120C               	bcf	12,4	;volatile
  9195                           
  9196                           ;Lib_EUSART.c: 25:         INTCONbits.GIE = 1;
  9197  19FB  178B               	bsf	11,7	;volatile
  9198                           
  9199                           ;Lib_EUSART.c: 26:         INTCONbits.PEIE = 1;
  9200  19FC  170B               	bsf	11,6	;volatile
  9201  19FD                     l170:	
  9202  19FD  0008               	return
  9203  19FE                     __end_of_EUSART_Init:	
  9204                           
  9205                           	psect	text31
  9206  11B0                     __ptext31:	
  9207 ;; *************** function _ADC_init *****************
  9208 ;; Defined at:
  9209 ;;		line 28 in file "../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c"
  9210 ;; Parameters:    Size  Location     Type
  9211 ;;  Fosc            1    wreg     unsigned char 
  9212 ;;  channel         1    3[COMMON] unsigned char 
  9213 ;;  int_on          1    4[COMMON] unsigned char 
  9214 ;;  left_or_righ    1    5[COMMON] unsigned char 
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  Fosc            1    8[COMMON] unsigned char 
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      void 
  9219 ;; Registers used:
  9220 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9221 ;; Tracked objects:
  9222 ;;		On entry : 0/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9226 ;;      Params:         3       0       0       0       0
  9227 ;;      Locals:         1       0       0       0       0
  9228 ;;      Temps:          2       0       0       0       0
  9229 ;;      Totals:         6       0       0       0       0
  9230 ;;Total ram usage:        6 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:    1
  9233 ;; This function calls:
  9234 ;;		Nothing
  9235 ;; This function is called by:
  9236 ;;		_main
  9237 ;; This function uses a non-reentrant model
  9238 ;;
  9239                           
  9240                           
  9241                           ;psect for function _ADC_init
  9242  11B0                     _ADC_init:	
  9243                           
  9244                           ;incstack = 0
  9245                           ; Regs used in _ADC_init: [wreg-fsr0h+status,2+status,0]
  9246                           ;ADC_init@Fosc stored from wreg
  9247  11B0  00F9               	movwf	ADC_init@Fosc
  9248  11B1                     l3198:	
  9249                           
  9250                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 29:     switch (Fosc) {
  9251  11B1  29CB               	goto	l3202
  9252  11B2                     l130:	
  9253                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 30:         case 0:
  9254                           
  9255                           
  9256                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 31:             ADCON0bits
      +                          .ADCS1 = 0;
  9257  11B2  1283               	bcf	3,5	;RP0=0, select bank0
  9258  11B3  1303               	bcf	3,6	;RP1=0, select bank0
  9259  11B4  139F               	bcf	31,7	;volatile
  9260                           
  9261                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 32:             ADCON0bits
      +                          .ADCS0 = 0;
  9262  11B5  131F               	bcf	31,6	;volatile
  9263                           
  9264                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 33:             break;
  9265  11B6  2A27               	goto	l3206
  9266  11B7                     l132:	
  9267                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 34:         case 1:
  9268                           
  9269                           
  9270                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 35:             ADCON0bits
      +                          .ADCS1 = 0;
  9271  11B7  1283               	bcf	3,5	;RP0=0, select bank0
  9272  11B8  1303               	bcf	3,6	;RP1=0, select bank0
  9273  11B9  139F               	bcf	31,7	;volatile
  9274                           
  9275                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 36:             ADCON0bits
      +                          .ADCS0 = 1;
  9276  11BA  171F               	bsf	31,6	;volatile
  9277                           
  9278                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 37:             break;
  9279  11BB  2A27               	goto	l3206
  9280  11BC                     l133:	
  9281                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 38:         case 2:
  9282                           
  9283                           
  9284                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 39:             ADCON0bits
      +                          .ADCS1 = 1;
  9285  11BC  1283               	bcf	3,5	;RP0=0, select bank0
  9286  11BD  1303               	bcf	3,6	;RP1=0, select bank0
  9287  11BE  179F               	bsf	31,7	;volatile
  9288                           
  9289                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 40:             ADCON0bits
      +                          .ADCS0 = 0;
  9290  11BF  131F               	bcf	31,6	;volatile
  9291                           
  9292                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 41:             break;
  9293  11C0  2A27               	goto	l3206
  9294  11C1                     l134:	
  9295                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 42:         case 3:
  9296                           
  9297                           
  9298                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 43:             ADCON0bits
      +                          .ADCS1 = 1;
  9299  11C1  1283               	bcf	3,5	;RP0=0, select bank0
  9300  11C2  1303               	bcf	3,6	;RP1=0, select bank0
  9301  11C3  179F               	bsf	31,7	;volatile
  9302                           
  9303                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 44:             ADCON0bits
      +                          .ADCS0 = 1;
  9304  11C4  171F               	bsf	31,6	;volatile
  9305                           
  9306                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 45:             break;
  9307  11C5  2A27               	goto	l3206
  9308  11C6                     l135:	
  9309                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 46:         default:
  9310                           
  9311                           
  9312                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 47:             ADCON0bits
      +                          .ADCS1 = 0;
  9313  11C6  1283               	bcf	3,5	;RP0=0, select bank0
  9314  11C7  1303               	bcf	3,6	;RP1=0, select bank0
  9315  11C8  139F               	bcf	31,7	;volatile
  9316                           
  9317                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 48:             ADCON0bits
      +                          .ADCS0 = 1;
  9318  11C9  171F               	bsf	31,6	;volatile
  9319                           
  9320                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 49:             break;
  9321  11CA  2A27               	goto	l3206
  9322  11CB                     l3202:	
  9323  11CB  0879               	movf	ADC_init@Fosc,w
  9324  11CC  00F7               	movwf	??_ADC_init
  9325  11CD  01F8               	clrf	??_ADC_init+1
  9326                           
  9327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9328                           ; Switch size 1, requested type "simple"
  9329                           ; Number of cases is 1, Range of values is 0 to 0
  9330                           ; switch strategies available:
  9331                           ; Name         Instructions Cycles
  9332                           ; simple_byte            4     3 (average)
  9333                           ; direct_byte           11     8 (fixed)
  9334                           ; jumptable            260     6 (fixed)
  9335                           ;	Chosen strategy is simple_byte
  9336  11CE  0878               	movf	??_ADC_init+1,w
  9337  11CF  3A00               	xorlw	0	; case 0
  9338  11D0  1903               	skipnz
  9339  11D1  29D3               	goto	l3624
  9340  11D2  29C6               	goto	l135
  9341  11D3                     l3624:	
  9342                           
  9343                           ; Switch size 1, requested type "simple"
  9344                           ; Number of cases is 4, Range of values is 0 to 3
  9345                           ; switch strategies available:
  9346                           ; Name         Instructions Cycles
  9347                           ; simple_byte           13     7 (average)
  9348                           ; direct_byte           20     8 (fixed)
  9349                           ; jumptable            260     6 (fixed)
  9350                           ;	Chosen strategy is simple_byte
  9351  11D3  0877               	movf	??_ADC_init,w
  9352  11D4  3A00               	xorlw	0	; case 0
  9353  11D5  1903               	skipnz
  9354  11D6  29B2               	goto	l130
  9355  11D7  3A01               	xorlw	1	; case 1
  9356  11D8  1903               	skipnz
  9357  11D9  29B7               	goto	l132
  9358  11DA  3A03               	xorlw	3	; case 2
  9359  11DB  1903               	skipnz
  9360  11DC  29BC               	goto	l133
  9361  11DD  3A01               	xorlw	1	; case 3
  9362  11DE  1903               	skipnz
  9363  11DF  29C1               	goto	l134
  9364  11E0  29C6               	goto	l135
  9365  11E1                     l137:	
  9366                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 53:         case 0:
  9367                           
  9368                           
  9369                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 54:             ADCON0bits
      +                          .CHS0 = 0;
  9370  11E1  111F               	bcf	31,2	;volatile
  9371                           
  9372                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 55:             ADCON0bits
      +                          .CHS1 = 0;
  9373  11E2  119F               	bcf	31,3	;volatile
  9374                           
  9375                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 56:             ADCON0bits
      +                          .CHS2 = 0;
  9376  11E3  121F               	bcf	31,4	;volatile
  9377                           
  9378                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 57:             ADCON0bits
      +                          .CHS3 = 0;
  9379  11E4  129F               	bcf	31,5	;volatile
  9380                           
  9381                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 58:             break;
  9382  11E5  2A5B               	goto	l138
  9383  11E6                     l139:	
  9384                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 59:         case 1:
  9385                           
  9386                           
  9387                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 60:             ADCON0bits
      +                          .CHS0 = 1;
  9388  11E6  151F               	bsf	31,2	;volatile
  9389                           
  9390                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 61:             ADCON0bits
      +                          .CHS1 = 0;
  9391  11E7  119F               	bcf	31,3	;volatile
  9392                           
  9393                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 62:             ADCON0bits
      +                          .CHS2 = 0;
  9394  11E8  121F               	bcf	31,4	;volatile
  9395                           
  9396                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 63:             ADCON0bits
      +                          .CHS3 = 0;
  9397  11E9  129F               	bcf	31,5	;volatile
  9398                           
  9399                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 64:             break;
  9400  11EA  2A5B               	goto	l138
  9401  11EB                     l140:	
  9402                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 65:         case 2:
  9403                           
  9404                           
  9405                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 66:             ADCON0bits
      +                          .CHS0 = 0;
  9406  11EB  111F               	bcf	31,2	;volatile
  9407                           
  9408                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 67:             ADCON0bits
      +                          .CHS1 = 1;
  9409  11EC  159F               	bsf	31,3	;volatile
  9410                           
  9411                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 68:             ADCON0bits
      +                          .CHS2 = 0;
  9412  11ED  121F               	bcf	31,4	;volatile
  9413                           
  9414                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 69:             ADCON0bits
      +                          .CHS3 = 0;
  9415  11EE  129F               	bcf	31,5	;volatile
  9416                           
  9417                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 70:             break;
  9418  11EF  2A5B               	goto	l138
  9419  11F0                     l141:	
  9420                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 71:         case 3:
  9421                           
  9422                           
  9423                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 72:             ADCON0bits
      +                          .CHS0 = 1;
  9424  11F0  151F               	bsf	31,2	;volatile
  9425                           
  9426                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 73:             ADCON0bits
      +                          .CHS1 = 1;
  9427  11F1  159F               	bsf	31,3	;volatile
  9428                           
  9429                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 74:             ADCON0bits
      +                          .CHS2 = 0;
  9430  11F2  121F               	bcf	31,4	;volatile
  9431                           
  9432                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 75:             ADCON0bits
      +                          .CHS3 = 0;
  9433  11F3  129F               	bcf	31,5	;volatile
  9434                           
  9435                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 76:             break;
  9436  11F4  2A5B               	goto	l138
  9437  11F5                     l142:	
  9438                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 77:         case 4:
  9439                           
  9440                           
  9441                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 78:             ADCON0bits
      +                          .CHS0 = 0;
  9442  11F5  111F               	bcf	31,2	;volatile
  9443                           
  9444                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 79:             ADCON0bits
      +                          .CHS1 = 0;
  9445  11F6  119F               	bcf	31,3	;volatile
  9446                           
  9447                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 80:             ADCON0bits
      +                          .CHS2 = 1;
  9448  11F7  161F               	bsf	31,4	;volatile
  9449                           
  9450                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 81:             ADCON0bits
      +                          .CHS3 = 0;
  9451  11F8  129F               	bcf	31,5	;volatile
  9452                           
  9453                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 82:             break;
  9454  11F9  2A5B               	goto	l138
  9455  11FA                     l143:	
  9456                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 83:         case 5:
  9457                           
  9458                           
  9459                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 84:             ADCON0bits
      +                          .CHS0 = 1;
  9460  11FA  151F               	bsf	31,2	;volatile
  9461                           
  9462                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 85:             ADCON0bits
      +                          .CHS1 = 0;
  9463  11FB  119F               	bcf	31,3	;volatile
  9464                           
  9465                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 86:             ADCON0bits
      +                          .CHS2 = 1;
  9466  11FC  161F               	bsf	31,4	;volatile
  9467                           
  9468                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 87:             ADCON0bits
      +                          .CHS3 = 0;
  9469  11FD  129F               	bcf	31,5	;volatile
  9470                           
  9471                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 88:             break;
  9472  11FE  2A5B               	goto	l138
  9473  11FF                     l144:	
  9474                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 89:         case 6:
  9475                           
  9476                           
  9477                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 90:             ADCON0bits
      +                          .CHS0 = 0;
  9478  11FF  111F               	bcf	31,2	;volatile
  9479                           
  9480                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 91:             ADCON0bits
      +                          .CHS1 = 1;
  9481  1200  159F               	bsf	31,3	;volatile
  9482                           
  9483                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 92:             ADCON0bits
      +                          .CHS2 = 1;
  9484  1201  161F               	bsf	31,4	;volatile
  9485                           
  9486                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 93:             ADCON0bits
      +                          .CHS3 = 0;
  9487  1202  129F               	bcf	31,5	;volatile
  9488                           
  9489                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 94:             break;
  9490  1203  2A5B               	goto	l138
  9491  1204                     l145:	
  9492                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 95:         case 7:
  9493                           
  9494                           
  9495                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 96:             ADCON0bits
      +                          .CHS0 = 1;
  9496  1204  151F               	bsf	31,2	;volatile
  9497                           
  9498                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 97:             ADCON0bits
      +                          .CHS1 = 1;
  9499  1205  159F               	bsf	31,3	;volatile
  9500                           
  9501                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 98:             ADCON0bits
      +                          .CHS2 = 1;
  9502  1206  161F               	bsf	31,4	;volatile
  9503                           
  9504                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 99:             ADCON0bits
      +                          .CHS3 = 0;
  9505  1207  129F               	bcf	31,5	;volatile
  9506                           
  9507                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 100:             break;
  9508  1208  2A5B               	goto	l138
  9509  1209                     l146:	
  9510                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 101:         case 8:
  9511                           
  9512                           
  9513                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 102:             ADCON0bit
      +                          s.CHS0 = 0;
  9514  1209  111F               	bcf	31,2	;volatile
  9515                           
  9516                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 103:             ADCON0bit
      +                          s.CHS1 = 0;
  9517  120A  119F               	bcf	31,3	;volatile
  9518                           
  9519                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 104:             ADCON0bit
      +                          s.CHS2 = 0;
  9520  120B  121F               	bcf	31,4	;volatile
  9521                           
  9522                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 105:             ADCON0bit
      +                          s.CHS3 = 1;
  9523  120C  169F               	bsf	31,5	;volatile
  9524                           
  9525                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 106:             break;
  9526  120D  2A5B               	goto	l138
  9527  120E                     l147:	
  9528                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 107:         case 9:
  9529                           
  9530                           
  9531                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 108:             ADCON0bit
      +                          s.CHS0 = 1;
  9532  120E  151F               	bsf	31,2	;volatile
  9533                           
  9534                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 109:             ADCON0bit
      +                          s.CHS1 = 0;
  9535  120F  119F               	bcf	31,3	;volatile
  9536                           
  9537                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 110:             ADCON0bit
      +                          s.CHS2 = 0;
  9538  1210  121F               	bcf	31,4	;volatile
  9539                           
  9540                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 111:             ADCON0bit
      +                          s.CHS3 = 1;
  9541  1211  169F               	bsf	31,5	;volatile
  9542                           
  9543                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 112:             break;
  9544  1212  2A5B               	goto	l138
  9545  1213                     l148:	
  9546                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 113:         case 10:
  9547                           
  9548                           
  9549                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 114:             ADCON0bit
      +                          s.CHS0 = 0;
  9550  1213  111F               	bcf	31,2	;volatile
  9551                           
  9552                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 115:             ADCON0bit
      +                          s.CHS1 = 1;
  9553  1214  159F               	bsf	31,3	;volatile
  9554                           
  9555                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 116:             ADCON0bit
      +                          s.CHS2 = 0;
  9556  1215  121F               	bcf	31,4	;volatile
  9557                           
  9558                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 117:             ADCON0bit
      +                          s.CHS3 = 1;
  9559  1216  169F               	bsf	31,5	;volatile
  9560                           
  9561                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 118:             break;
  9562  1217  2A5B               	goto	l138
  9563  1218                     l149:	
  9564                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 119:         case 11:
  9565                           
  9566                           
  9567                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 120:             ADCON0bit
      +                          s.CHS0 = 1;
  9568  1218  151F               	bsf	31,2	;volatile
  9569                           
  9570                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 121:             ADCON0bit
      +                          s.CHS1 = 1;
  9571  1219  159F               	bsf	31,3	;volatile
  9572                           
  9573                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 122:             ADCON0bit
      +                          s.CHS2 = 0;
  9574  121A  121F               	bcf	31,4	;volatile
  9575                           
  9576                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 123:             ADCON0bit
      +                          s.CHS3 = 1;
  9577  121B  169F               	bsf	31,5	;volatile
  9578                           
  9579                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 124:             break;
  9580  121C  2A5B               	goto	l138
  9581  121D                     l150:	
  9582                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 125:         case 12:
  9583                           
  9584                           
  9585                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 126:             ADCON0bit
      +                          s.CHS0 = 0;
  9586  121D  111F               	bcf	31,2	;volatile
  9587                           
  9588                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 127:             ADCON0bit
      +                          s.CHS1 = 0;
  9589  121E  119F               	bcf	31,3	;volatile
  9590                           
  9591                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 128:             ADCON0bit
      +                          s.CHS2 = 1;
  9592  121F  161F               	bsf	31,4	;volatile
  9593                           
  9594                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 129:             ADCON0bit
      +                          s.CHS3 = 1;
  9595  1220  169F               	bsf	31,5	;volatile
  9596                           
  9597                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 130:             break;
  9598  1221  2A5B               	goto	l138
  9599  1222                     l151:	
  9600                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 131:         case 13:
  9601                           
  9602                           
  9603                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 132:             ADCON0bit
      +                          s.CHS0 = 1;
  9604  1222  151F               	bsf	31,2	;volatile
  9605                           
  9606                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 133:             ADCON0bit
      +                          s.CHS1 = 0;
  9607  1223  119F               	bcf	31,3	;volatile
  9608                           
  9609                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 134:             ADCON0bit
      +                          s.CHS2 = 1;
  9610  1224  161F               	bsf	31,4	;volatile
  9611                           
  9612                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 135:             ADCON0bit
      +                          s.CHS3 = 1;
  9613  1225  169F               	bsf	31,5	;volatile
  9614                           
  9615                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 136:             break;
  9616  1226  2A5B               	goto	l138
  9617  1227                     l3206:	
  9618  1227  0874               	movf	ADC_init@channel,w
  9619  1228  00F7               	movwf	??_ADC_init
  9620  1229  01F8               	clrf	??_ADC_init+1
  9621                           
  9622                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9623                           ; Switch size 1, requested type "simple"
  9624                           ; Number of cases is 1, Range of values is 0 to 0
  9625                           ; switch strategies available:
  9626                           ; Name         Instructions Cycles
  9627                           ; simple_byte            4     3 (average)
  9628                           ; direct_byte           11     8 (fixed)
  9629                           ; jumptable            260     6 (fixed)
  9630                           ;	Chosen strategy is simple_byte
  9631  122A  0878               	movf	??_ADC_init+1,w
  9632  122B  3A00               	xorlw	0	; case 0
  9633  122C  1903               	skipnz
  9634  122D  2A2F               	goto	l3626
  9635  122E  2A5B               	goto	l138
  9636  122F                     l3626:	
  9637                           
  9638                           ; Switch size 1, requested type "simple"
  9639                           ; Number of cases is 14, Range of values is 0 to 13
  9640                           ; switch strategies available:
  9641                           ; Name         Instructions Cycles
  9642                           ; simple_byte           43    22 (average)
  9643                           ; direct_byte           50     8 (fixed)
  9644                           ; jumptable            260     6 (fixed)
  9645                           ;	Chosen strategy is simple_byte
  9646  122F  0877               	movf	??_ADC_init,w
  9647  1230  3A00               	xorlw	0	; case 0
  9648  1231  1903               	skipnz
  9649  1232  29E1               	goto	l137
  9650  1233  3A01               	xorlw	1	; case 1
  9651  1234  1903               	skipnz
  9652  1235  29E6               	goto	l139
  9653  1236  3A03               	xorlw	3	; case 2
  9654  1237  1903               	skipnz
  9655  1238  29EB               	goto	l140
  9656  1239  3A01               	xorlw	1	; case 3
  9657  123A  1903               	skipnz
  9658  123B  29F0               	goto	l141
  9659  123C  3A07               	xorlw	7	; case 4
  9660  123D  1903               	skipnz
  9661  123E  29F5               	goto	l142
  9662  123F  3A01               	xorlw	1	; case 5
  9663  1240  1903               	skipnz
  9664  1241  29FA               	goto	l143
  9665  1242  3A03               	xorlw	3	; case 6
  9666  1243  1903               	skipnz
  9667  1244  29FF               	goto	l144
  9668  1245  3A01               	xorlw	1	; case 7
  9669  1246  1903               	skipnz
  9670  1247  2A04               	goto	l145
  9671  1248  3A0F               	xorlw	15	; case 8
  9672  1249  1903               	skipnz
  9673  124A  2A09               	goto	l146
  9674  124B  3A01               	xorlw	1	; case 9
  9675  124C  1903               	skipnz
  9676  124D  2A0E               	goto	l147
  9677  124E  3A03               	xorlw	3	; case 10
  9678  124F  1903               	skipnz
  9679  1250  2A13               	goto	l148
  9680  1251  3A01               	xorlw	1	; case 11
  9681  1252  1903               	skipnz
  9682  1253  2A18               	goto	l149
  9683  1254  3A07               	xorlw	7	; case 12
  9684  1255  1903               	skipnz
  9685  1256  2A1D               	goto	l150
  9686  1257  3A01               	xorlw	1	; case 13
  9687  1258  1903               	skipnz
  9688  1259  2A22               	goto	l151
  9689  125A  2A5B               	goto	l138
  9690  125B                     l138:	
  9691                           
  9692                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 140:     ADCON0bits.ADON =
      +                           1;
  9693  125B  141F               	bsf	31,0	;volatile
  9694  125C                     l3208:	
  9695                           
  9696                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 141:     if (int_on == 1){
  9697  125C  0375               	decf	ADC_init@int_on,w
  9698  125D  1D03               	btfss	3,2
  9699  125E  2A60               	goto	u5111
  9700  125F  2A61               	goto	u5110
  9701  1260                     u5111:	
  9702  1260  2A67               	goto	l3212
  9703  1261                     u5110:	
  9704  1261                     l3210:	
  9705                           
  9706                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 142:         PIR1bits.ADIF
      +                           = 0;
  9707  1261  130C               	bcf	12,6	;volatile
  9708                           
  9709                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 143:         PIE1bits.ADIE
      +                           = 1;
  9710  1262  1683               	bsf	3,5	;RP0=1, select bank1
  9711  1263  1303               	bcf	3,6	;RP1=0, select bank1
  9712  1264  170C               	bsf	12,6	;volatile
  9713                           
  9714                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 144:         INTCONbits.PE
      +                          IE = 1;
  9715  1265  170B               	bsf	11,6	;volatile
  9716                           
  9717                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 145:         INTCONbits.GI
      +                          E = 1;
  9718  1266  178B               	bsf	11,7	;volatile
  9719  1267                     l3212:	
  9720                           
  9721                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 147:     ADCON1bits.ADFM =
      +                           left_or_right;
  9722  1267  0C76               	rrf	ADC_init@left_or_right,w
  9723  1268  1683               	bsf	3,5	;RP0=1, select bank1
  9724  1269  1303               	bcf	3,6	;RP1=0, select bank1
  9725  126A  1C03               	skipc
  9726  126B  139F               	bcf	31,7	;volatile
  9727  126C  1803               	skipnc
  9728  126D  179F               	bsf	31,7	;volatile
  9729  126E                     l3214:	
  9730                           
  9731                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 148:     ADCON1bits.VCFG0 
      +                          = 0;
  9732  126E  121F               	bcf	31,4	;volatile
  9733  126F                     l3216:	
  9734                           
  9735                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 149:     ADCON1bits.VCFG1 
      +                          = 0;
  9736  126F  129F               	bcf	31,5	;volatile
  9737  1270                     l3218:	
  9738                           
  9739                           ;../../../../../../MPLABXProjects/Laboratorio2_2.X/ADCmain.c: 150:     ADCON0bits.GO_DON
      +                          E = 1;
  9740  1270  1283               	bcf	3,5	;RP0=0, select bank0
  9741  1271  1303               	bcf	3,6	;RP1=0, select bank0
  9742  1272  149F               	bsf	31,1	;volatile
  9743  1273                     l153:	
  9744  1273  0008               	return
  9745  1274                     __end_of_ADC_init:	
  9746                           
  9747                           	psect	text32
  9748  1008                     __ptext32:	
  9749 ;; *************** function _isr *****************
  9750 ;; Defined at:
  9751 ;;		line 38 in file "main_lab3.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;		None
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;		None
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  1    wreg      void 
  9758 ;; Registers used:
  9759 ;;		wreg
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9765 ;;      Params:         0       0       0       0       0
  9766 ;;      Locals:         0       0       0       0       0
  9767 ;;      Temps:          3       0       0       0       0
  9768 ;;      Totals:         3       0       0       0       0
  9769 ;;Total ram usage:        3 bytes
  9770 ;; Hardware stack levels used:    1
  9771 ;; This function calls:
  9772 ;;		Nothing
  9773 ;; This function is called by:
  9774 ;;		Interrupt level 1
  9775 ;; This function uses a non-reentrant model
  9776 ;;
  9777                           
  9778                           
  9779                           ;psect for function _isr
  9780  1008                     _isr:	
  9781  1008                     i1l3508:	
  9782                           
  9783                           ;main_lab3.c: 39:     if (PIR1bits.ADIF == 1){
  9784  1008  1283               	bcf	3,5	;RP0=0, select bank0
  9785  1009  1303               	bcf	3,6	;RP1=0, select bank0
  9786  100A  1F0C               	btfss	12,6	;volatile
  9787  100B  280D               	goto	u561_21
  9788  100C  280E               	goto	u561_20
  9789  100D                     u561_21:	
  9790  100D  282C               	goto	i1l96
  9791  100E                     u561_20:	
  9792  100E                     i1l3510:	
  9793                           
  9794                           ;main_lab3.c: 40:         PIR1bits.ADIF = 0;
  9795  100E  130C               	bcf	12,6	;volatile
  9796                           
  9797                           ;main_lab3.c: 41:         start_another = 1;
  9798  100F  1683               	bsf	3,5	;RP0=1, select bank1
  9799  1010  1303               	bcf	3,6	;RP1=0, select bank1
  9800  1011  01D5               	clrf	_start_another^(0+128)
  9801  1012  0AD5               	incf	_start_another^(0+128),f
  9802                           
  9803                           ;main_lab3.c: 42:         if (ADCON0bits.CHS0 == 0){
  9804  1013  1283               	bcf	3,5	;RP0=0, select bank0
  9805  1014  1303               	bcf	3,6	;RP1=0, select bank0
  9806  1015  191F               	btfsc	31,2	;volatile
  9807  1016  2818               	goto	u562_21
  9808  1017  2819               	goto	u562_20
  9809  1018                     u562_21:	
  9810  1018  2823               	goto	i1l3516
  9811  1019                     u562_20:	
  9812  1019                     i1l3512:	
  9813                           
  9814                           ;main_lab3.c: 43:             pot2 = ADRESH;
  9815  1019  081E               	movf	30,w	;volatile
  9816  101A  00F1               	movwf	??_isr
  9817  101B  0871               	movf	??_isr,w
  9818  101C  1683               	bsf	3,5	;RP0=1, select bank1
  9819  101D  1303               	bcf	3,6	;RP1=0, select bank1
  9820  101E  00D6               	movwf	_pot2^(0+128)
  9821  101F                     i1l3514:	
  9822                           
  9823                           ;main_lab3.c: 44:             ADCON0bits.CHS0 = 1;
  9824  101F  1283               	bcf	3,5	;RP0=0, select bank0
  9825  1020  1303               	bcf	3,6	;RP1=0, select bank0
  9826  1021  151F               	bsf	31,2	;volatile
  9827                           
  9828                           ;main_lab3.c: 45:         }else{
  9829  1022  282C               	goto	i1l96
  9830  1023                     i1l3516:	
  9831                           
  9832                           ;main_lab3.c: 46:             pot1 = ADRESH;
  9833  1023  081E               	movf	30,w	;volatile
  9834  1024  00F1               	movwf	??_isr
  9835  1025  0871               	movf	??_isr,w
  9836  1026  1683               	bsf	3,5	;RP0=1, select bank1
  9837  1027  1303               	bcf	3,6	;RP1=0, select bank1
  9838  1028  00D7               	movwf	_pot1^(0+128)
  9839  1029                     i1l3518:	
  9840                           
  9841                           ;main_lab3.c: 47:             ADCON0bits.CHS0 = 0;
  9842  1029  1283               	bcf	3,5	;RP0=0, select bank0
  9843  102A  1303               	bcf	3,6	;RP1=0, select bank0
  9844  102B  111F               	bcf	31,2	;volatile
  9845  102C                     i1l96:	
  9846  102C  0873               	movf	??_isr+2,w
  9847  102D  008A               	movwf	10
  9848  102E  0E72               	swapf	(??_isr+1)^(0+4294967168),w
  9849  102F  0083               	movwf	3
  9850  1030  0EFE               	swapf	btemp,f
  9851  1031  0E7E               	swapf	btemp,w
  9852  1032  0009               	retfie
  9853  1033                     __end_of_isr:	
  9854  007E                     btemp	set	126	;btemp
  9855  007E                     wtemp0	set	126
  9856                           
  9857                           	psect	intentry
  9858  0004                     __pintentry:	
  9859                           ;incstack = 0
  9860                           ; Regs used in _isr: [wreg]
  9861                           
  9862  0004                     interrupt_function:	
  9863  007E                     saved_w	set	btemp
  9864  0004  00FE               	movwf	btemp
  9865  0005  0E03               	swapf	3,w
  9866  0006  00F2               	movwf	??_isr+1
  9867  0007  080A               	movf	10,w
  9868  0008  00F3               	movwf	??_isr+2
  9869  0009  160A  118A  2808   	ljmp	_isr
  9870                           
  9871                           	psect	text2_split_1
  9872  025B                     u5270:	
  9873  025B                     l3336:	
  9874  025B  1683               	bsf	3,5	;RP0=1, select bank1
  9875  025C  1303               	bcf	3,6	;RP1=0, select bank1
  9876  025D  0848               	movf	(sprintf@fval+3)^(0+128),w
  9877  025E  1283               	bcf	3,5	;RP0=0, select bank0
  9878  025F  1303               	bcf	3,6	;RP1=0, select bank0
  9879  0260  00A3               	movwf	___fleq@ff1+3
  9880  0261  1683               	bsf	3,5	;RP0=1, select bank1
  9881  0262  1303               	bcf	3,6	;RP1=0, select bank1
  9882  0263  0847               	movf	(sprintf@fval+2)^(0+128),w
  9883  0264  1283               	bcf	3,5	;RP0=0, select bank0
  9884  0265  1303               	bcf	3,6	;RP1=0, select bank0
  9885  0266  00A2               	movwf	___fleq@ff1+2
  9886  0267  1683               	bsf	3,5	;RP0=1, select bank1
  9887  0268  1303               	bcf	3,6	;RP1=0, select bank1
  9888  0269  0846               	movf	(sprintf@fval+1)^(0+128),w
  9889  026A  1283               	bcf	3,5	;RP0=0, select bank0
  9890  026B  1303               	bcf	3,6	;RP1=0, select bank0
  9891  026C  00A1               	movwf	___fleq@ff1+1
  9892  026D  1683               	bsf	3,5	;RP0=1, select bank1
  9893  026E  1303               	bcf	3,6	;RP1=0, select bank1
  9894  026F  0845               	movf	sprintf@fval^(0+128),w
  9895  0270  1283               	bcf	3,5	;RP0=0, select bank0
  9896  0271  1303               	bcf	3,6	;RP1=0, select bank0
  9897  0272  00A0               	movwf	___fleq@ff1
  9898  0273  3000               	movlw	0
  9899  0274  00A7               	movwf	___fleq@ff2+3
  9900  0275  3000               	movlw	0
  9901  0276  00A6               	movwf	___fleq@ff2+2
  9902  0277  3000               	movlw	0
  9903  0278  00A5               	movwf	___fleq@ff2+1
  9904  0279  3000               	movlw	0
  9905  027A  00A4               	movwf	___fleq@ff2
  9906  027B  160A  158A  22B1  120A  118A  	fcall	___fleq
  9907  0280  1803               	btfsc	3,0
  9908  0281  2A83               	goto	u5281
  9909  0282  2A84               	goto	u5280
  9910  0283                     u5281:	
  9911  0283  2B66               	goto	l3356
  9912  0284                     u5280:	
  9913  0284                     l3338:	
  9914  0284  1683               	bsf	3,5	;RP0=1, select bank1
  9915  0285  1303               	bcf	3,6	;RP1=0, select bank1
  9916  0286  0848               	movf	(sprintf@fval+3)^(0+128),w
  9917  0287  1283               	bcf	3,5	;RP0=0, select bank0
  9918  0288  1303               	bcf	3,6	;RP1=0, select bank0
  9919  0289  00DA               	movwf	___fltol@f1+3
  9920  028A  1683               	bsf	3,5	;RP0=1, select bank1
  9921  028B  1303               	bcf	3,6	;RP1=0, select bank1
  9922  028C  0847               	movf	(sprintf@fval+2)^(0+128),w
  9923  028D  1283               	bcf	3,5	;RP0=0, select bank0
  9924  028E  1303               	bcf	3,6	;RP1=0, select bank0
  9925  028F  00D9               	movwf	___fltol@f1+2
  9926  0290  1683               	bsf	3,5	;RP0=1, select bank1
  9927  0291  1303               	bcf	3,6	;RP1=0, select bank1
  9928  0292  0846               	movf	(sprintf@fval+1)^(0+128),w
  9929  0293  1283               	bcf	3,5	;RP0=0, select bank0
  9930  0294  1303               	bcf	3,6	;RP1=0, select bank0
  9931  0295  00D8               	movwf	___fltol@f1+1
  9932  0296  1683               	bsf	3,5	;RP0=1, select bank1
  9933  0297  1303               	bcf	3,6	;RP1=0, select bank1
  9934  0298  0845               	movf	sprintf@fval^(0+128),w
  9935  0299  1283               	bcf	3,5	;RP0=0, select bank0
  9936  029A  1303               	bcf	3,6	;RP1=0, select bank0
  9937  029B  00D7               	movwf	___fltol@f1
  9938  029C  160A  158A  2524  120A  118A  	fcall	___fltol
  9939  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  9940  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  9941  02A3  085A               	movf	?___fltol+3,w
  9942  02A4  0459               	iorwf	?___fltol+2,w
  9943  02A5  0458               	iorwf	?___fltol+1,w
  9944  02A6  0457               	iorwf	?___fltol,w
  9945  02A7  1D03               	skipz
  9946  02A8  2AAA               	goto	u5291
  9947  02A9  2AAB               	goto	u5290
  9948  02AA                     u5291:	
  9949  02AA  2B66               	goto	l3356
  9950  02AB                     u5290:	
  9951  02AB                     l3340:	
  9952  02AB  1683               	bsf	3,5	;RP0=1, select bank1
  9953  02AC  1303               	bcf	3,6	;RP1=0, select bank1
  9954  02AD  0844               	movf	(sprintf@eexp+1)^(0+128),w
  9955  02AE  3A80               	xorlw	128
  9956  02AF  00FF               	movwf	btemp+1
  9957  02B0  3080               	movlw	128
  9958  02B1  027F               	subwf	btemp+1,w
  9959  02B2  1D03               	skipz
  9960  02B3  2AB6               	goto	u5305
  9961  02B4  3002               	movlw	2
  9962  02B5  0243               	subwf	sprintf@eexp^(0+128),w
  9963  02B6                     u5305:	
  9964  02B6  1C03               	skipc
  9965  02B7  2AB9               	goto	u5301
  9966  02B8  2ABA               	goto	u5300
  9967  02B9                     u5301:	
  9968  02B9  2B66               	goto	l3356
  9969  02BA                     u5300:	
  9970  02BA                     l3342:	
  9971                           
  9972                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1146:      
      +                          if(tmpval.integ < 4.294967296){
  9973  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  9974  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  9975  02BC  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  9976  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  9977  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  9978  02BF  00A3               	movwf	___flge@ff1+3
  9979  02C0  1683               	bsf	3,5	;RP0=1, select bank1
  9980  02C1  1303               	bcf	3,6	;RP1=0, select bank1
  9981  02C2  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  9982  02C3  1283               	bcf	3,5	;RP0=0, select bank0
  9983  02C4  1303               	bcf	3,6	;RP1=0, select bank0
  9984  02C5  00A2               	movwf	___flge@ff1+2
  9985  02C6  1683               	bsf	3,5	;RP0=1, select bank1
  9986  02C7  1303               	bcf	3,6	;RP1=0, select bank1
  9987  02C8  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  9988  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  9989  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  9990  02CB  00A1               	movwf	___flge@ff1+1
  9991  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  9992  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  9993  02CE  083F               	movf	sprintf@tmpval^(0+128),w
  9994  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  9995  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  9996  02D1  00A0               	movwf	___flge@ff1
  9997  02D2  3040               	movlw	64
  9998  02D3  00A7               	movwf	___flge@ff2+3
  9999  02D4  3089               	movlw	137
 10000  02D5  00A6               	movwf	___flge@ff2+2
 10001  02D6  3070               	movlw	112
 10002  02D7  00A5               	movwf	___flge@ff2+1
 10003  02D8  305F               	movlw	95
 10004  02D9  00A4               	movwf	___flge@ff2
 10005  02DA  160A  158A  25A0  120A  118A  	fcall	___flge
 10006  02DF  1803               	btfsc	3,0
 10007  02E0  2AE2               	goto	u5311
 10008  02E1  2AE3               	goto	u5310
 10009  02E2                     u5311:	
 10010  02E2  2AEC               	goto	l3346
 10011  02E3                     u5310:	
 10012  02E3                     l3344:	
 10013                           
 10014                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1147:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
 10015  02E3  30F7               	movlw	247
 10016  02E4  1683               	bsf	3,5	;RP0=1, select bank1
 10017  02E5  1303               	bcf	3,6	;RP1=0, select bank1
 10018  02E6  07C3               	addwf	sprintf@eexp^(0+128),f
 10019  02E7  1803               	skipnc
 10020  02E8  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10021  02E9  30FF               	movlw	255
 10022  02EA  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10023                           
 10024                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1148:      
      +                          }else{
 10025  02EB  2AF4               	goto	l3348
 10026  02EC                     l3346:	
 10027                           
 10028                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1149:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
 10029  02EC  30F8               	movlw	248
 10030  02ED  1683               	bsf	3,5	;RP0=1, select bank1
 10031  02EE  1303               	bcf	3,6	;RP1=0, select bank1
 10032  02EF  07C3               	addwf	sprintf@eexp^(0+128),f
 10033  02F0  1803               	skipnc
 10034  02F1  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10035  02F2  30FF               	movlw	255
 10036  02F3  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10037  02F4                     l3348:	
 10038                           
 10039                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1152:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
 10040  02F4  0843               	movf	sprintf@eexp^(0+128),w
 10041  02F5  120A  158A  249D  120A  118A  	fcall	_scale
 10042  02FA  1283               	bcf	3,5	;RP0=0, select bank0
 10043  02FB  1303               	bcf	3,6	;RP1=0, select bank0
 10044  02FC  0847               	movf	?_scale+3,w
 10045  02FD  1683               	bsf	3,5	;RP0=1, select bank1
 10046  02FE  1303               	bcf	3,6	;RP1=0, select bank1
 10047  02FF  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10048  0300  1283               	bcf	3,5	;RP0=0, select bank0
 10049  0301  1303               	bcf	3,6	;RP1=0, select bank0
 10050  0302  0846               	movf	?_scale+2,w
 10051  0303  1683               	bsf	3,5	;RP0=1, select bank1
 10052  0304  1303               	bcf	3,6	;RP1=0, select bank1
 10053  0305  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10054  0306  1283               	bcf	3,5	;RP0=0, select bank0
 10055  0307  1303               	bcf	3,6	;RP1=0, select bank0
 10056  0308  0845               	movf	?_scale+1,w
 10057  0309  1683               	bsf	3,5	;RP0=1, select bank1
 10058  030A  1303               	bcf	3,6	;RP1=0, select bank1
 10059  030B  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10060  030C  1283               	bcf	3,5	;RP0=0, select bank0
 10061  030D  1303               	bcf	3,6	;RP1=0, select bank0
 10062  030E  0844               	movf	?_scale,w
 10063  030F  1683               	bsf	3,5	;RP0=1, select bank1
 10064  0310  1303               	bcf	3,6	;RP1=0, select bank1
 10065  0311  00BF               	movwf	sprintf@tmpval^(0+128)
 10066  0312                     l3350:	
 10067  0312  0848               	movf	(sprintf@fval+3)^(0+128),w
 10068  0313  1283               	bcf	3,5	;RP0=0, select bank0
 10069  0314  1303               	bcf	3,6	;RP1=0, select bank0
 10070  0315  00A3               	movwf	__div_to_l_@f1+3
 10071  0316  1683               	bsf	3,5	;RP0=1, select bank1
 10072  0317  1303               	bcf	3,6	;RP1=0, select bank1
 10073  0318  0847               	movf	(sprintf@fval+2)^(0+128),w
 10074  0319  1283               	bcf	3,5	;RP0=0, select bank0
 10075  031A  1303               	bcf	3,6	;RP1=0, select bank0
 10076  031B  00A2               	movwf	__div_to_l_@f1+2
 10077  031C  1683               	bsf	3,5	;RP0=1, select bank1
 10078  031D  1303               	bcf	3,6	;RP1=0, select bank1
 10079  031E  0846               	movf	(sprintf@fval+1)^(0+128),w
 10080  031F  1283               	bcf	3,5	;RP0=0, select bank0
 10081  0320  1303               	bcf	3,6	;RP1=0, select bank0
 10082  0321  00A1               	movwf	__div_to_l_@f1+1
 10083  0322  1683               	bsf	3,5	;RP0=1, select bank1
 10084  0323  1303               	bcf	3,6	;RP1=0, select bank1
 10085  0324  0845               	movf	sprintf@fval^(0+128),w
 10086  0325  1283               	bcf	3,5	;RP0=0, select bank0
 10087  0326  1303               	bcf	3,6	;RP1=0, select bank0
 10088  0327  00A0               	movwf	__div_to_l_@f1
 10089  0328  1683               	bsf	3,5	;RP0=1, select bank1
 10090  0329  1303               	bcf	3,6	;RP1=0, select bank1
 10091  032A  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10092  032B  1283               	bcf	3,5	;RP0=0, select bank0
 10093  032C  1303               	bcf	3,6	;RP1=0, select bank0
 10094  032D  00A7               	movwf	__div_to_l_@f2+3
 10095  032E  1683               	bsf	3,5	;RP0=1, select bank1
 10096  032F  1303               	bcf	3,6	;RP1=0, select bank1
 10097  0330  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10098  0331  1283               	bcf	3,5	;RP0=0, select bank0
 10099  0332  1303               	bcf	3,6	;RP1=0, select bank0
 10100  0333  00A6               	movwf	__div_to_l_@f2+2
 10101  0334  1683               	bsf	3,5	;RP0=1, select bank1
 10102  0335  1303               	bcf	3,6	;RP1=0, select bank1
 10103  0336  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10104  0337  1283               	bcf	3,5	;RP0=0, select bank0
 10105  0338  1303               	bcf	3,6	;RP1=0, select bank0
 10106  0339  00A5               	movwf	__div_to_l_@f2+1
 10107  033A  1683               	bsf	3,5	;RP0=1, select bank1
 10108  033B  1303               	bcf	3,6	;RP1=0, select bank1
 10109  033C  083F               	movf	sprintf@tmpval^(0+128),w
 10110  033D  1283               	bcf	3,5	;RP0=0, select bank0
 10111  033E  1303               	bcf	3,6	;RP1=0, select bank0
 10112  033F  00A4               	movwf	__div_to_l_@f2
 10113  0340  160A  118A  20F0  120A  118A  	fcall	__div_to_l_
 10114  0345  1283               	bcf	3,5	;RP0=0, select bank0
 10115  0346  1303               	bcf	3,6	;RP1=0, select bank0
 10116  0347  0823               	movf	?__div_to_l_+3,w
 10117  0348  1683               	bsf	3,5	;RP0=1, select bank1
 10118  0349  1303               	bcf	3,6	;RP1=0, select bank1
 10119  034A  00BA               	movwf	(sprintf@val+3)^(0+128)
 10120  034B  1283               	bcf	3,5	;RP0=0, select bank0
 10121  034C  1303               	bcf	3,6	;RP1=0, select bank0
 10122  034D  0822               	movf	?__div_to_l_+2,w
 10123  034E  1683               	bsf	3,5	;RP0=1, select bank1
 10124  034F  1303               	bcf	3,6	;RP1=0, select bank1
 10125  0350  00B9               	movwf	(sprintf@val+2)^(0+128)
 10126  0351  1283               	bcf	3,5	;RP0=0, select bank0
 10127  0352  1303               	bcf	3,6	;RP1=0, select bank0
 10128  0353  0821               	movf	?__div_to_l_+1,w
 10129  0354  1683               	bsf	3,5	;RP0=1, select bank1
 10130  0355  1303               	bcf	3,6	;RP1=0, select bank1
 10131  0356  00B8               	movwf	(sprintf@val+1)^(0+128)
 10132  0357  1283               	bcf	3,5	;RP0=0, select bank0
 10133  0358  1303               	bcf	3,6	;RP1=0, select bank0
 10134  0359  0820               	movf	?__div_to_l_,w
 10135  035A  1683               	bsf	3,5	;RP0=1, select bank1
 10136  035B  1303               	bcf	3,6	;RP1=0, select bank1
 10137  035C  00B7               	movwf	sprintf@val^(0+128)
 10138  035D                     l3354:	
 10139                           
 10140                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1155:      
      +                          fval = 0.0;
 10141  035D  3000               	movlw	0
 10142  035E  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10143  035F  3000               	movlw	0
 10144  0360  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10145  0361  3000               	movlw	0
 10146  0362  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10147  0363  3000               	movlw	0
 10148  0364  00C5               	movwf	sprintf@fval^(0+128)
 10149                           
 10150                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1156:     }
      +                           else {
 10151  0365  2BCC               	goto	l3362
 10152  0366                     l3356:	
 10153                           
 10154                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1157:      
      +                          val = (unsigned long)fval;
 10155  0366  1683               	bsf	3,5	;RP0=1, select bank1
 10156  0367  1303               	bcf	3,6	;RP1=0, select bank1
 10157  0368  0848               	movf	(sprintf@fval+3)^(0+128),w
 10158  0369  1283               	bcf	3,5	;RP0=0, select bank0
 10159  036A  1303               	bcf	3,6	;RP1=0, select bank0
 10160  036B  00DA               	movwf	___fltol@f1+3
 10161  036C  1683               	bsf	3,5	;RP0=1, select bank1
 10162  036D  1303               	bcf	3,6	;RP1=0, select bank1
 10163  036E  0847               	movf	(sprintf@fval+2)^(0+128),w
 10164  036F  1283               	bcf	3,5	;RP0=0, select bank0
 10165  0370  1303               	bcf	3,6	;RP1=0, select bank0
 10166  0371  00D9               	movwf	___fltol@f1+2
 10167  0372  1683               	bsf	3,5	;RP0=1, select bank1
 10168  0373  1303               	bcf	3,6	;RP1=0, select bank1
 10169  0374  0846               	movf	(sprintf@fval+1)^(0+128),w
 10170  0375  1283               	bcf	3,5	;RP0=0, select bank0
 10171  0376  1303               	bcf	3,6	;RP1=0, select bank0
 10172  0377  00D8               	movwf	___fltol@f1+1
 10173  0378  1683               	bsf	3,5	;RP0=1, select bank1
 10174  0379  1303               	bcf	3,6	;RP1=0, select bank1
 10175  037A  0845               	movf	sprintf@fval^(0+128),w
 10176  037B  1283               	bcf	3,5	;RP0=0, select bank0
 10177  037C  1303               	bcf	3,6	;RP1=0, select bank0
 10178  037D  00D7               	movwf	___fltol@f1
 10179  037E  160A  158A  2524  120A  118A  	fcall	___fltol
 10180  0383  1283               	bcf	3,5	;RP0=0, select bank0
 10181  0384  1303               	bcf	3,6	;RP1=0, select bank0
 10182  0385  085A               	movf	?___fltol+3,w
 10183  0386  1683               	bsf	3,5	;RP0=1, select bank1
 10184  0387  1303               	bcf	3,6	;RP1=0, select bank1
 10185  0388  00BA               	movwf	(sprintf@val+3)^(0+128)
 10186  0389  1283               	bcf	3,5	;RP0=0, select bank0
 10187  038A  1303               	bcf	3,6	;RP1=0, select bank0
 10188  038B  0859               	movf	?___fltol+2,w
 10189  038C  1683               	bsf	3,5	;RP0=1, select bank1
 10190  038D  1303               	bcf	3,6	;RP1=0, select bank1
 10191  038E  00B9               	movwf	(sprintf@val+2)^(0+128)
 10192  038F  1283               	bcf	3,5	;RP0=0, select bank0
 10193  0390  1303               	bcf	3,6	;RP1=0, select bank0
 10194  0391  0858               	movf	?___fltol+1,w
 10195  0392  1683               	bsf	3,5	;RP0=1, select bank1
 10196  0393  1303               	bcf	3,6	;RP1=0, select bank1
 10197  0394  00B8               	movwf	(sprintf@val+1)^(0+128)
 10198  0395  1283               	bcf	3,5	;RP0=0, select bank0
 10199  0396  1303               	bcf	3,6	;RP1=0, select bank0
 10200  0397  0857               	movf	?___fltol,w
 10201  0398  1683               	bsf	3,5	;RP0=1, select bank1
 10202  0399  1303               	bcf	3,6	;RP1=0, select bank1
 10203  039A  00B7               	movwf	sprintf@val^(0+128)
 10204  039B                     l3358:	
 10205                           
 10206                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1158:      
      +                          fval -= (double)val;
 10207  039B  083A               	movf	(sprintf@val+3)^(0+128),w
 10208  039C  00F7               	movwf	___xxtofl@val+3
 10209  039D  0839               	movf	(sprintf@val+2)^(0+128),w
 10210  039E  00F6               	movwf	___xxtofl@val+2
 10211  039F  0838               	movf	(sprintf@val+1)^(0+128),w
 10212  03A0  00F5               	movwf	___xxtofl@val+1
 10213  03A1  0837               	movf	sprintf@val^(0+128),w
 10214  03A2  00F4               	movwf	___xxtofl@val
 10215  03A3  3000               	movlw	0
 10216  03A4  160A  158A  2644  120A  118A  	fcall	___xxtofl
 10217  03A9  0877               	movf	?___xxtofl+3,w
 10218  03AA  1683               	bsf	3,5	;RP0=1, select bank1
 10219  03AB  1303               	bcf	3,6	;RP1=0, select bank1
 10220  03AC  00A3               	movwf	(___flsub@a+3)^(0+128)
 10221  03AD  0876               	movf	?___xxtofl+2,w
 10222  03AE  00A2               	movwf	(___flsub@a+2)^(0+128)
 10223  03AF  0875               	movf	?___xxtofl+1,w
 10224  03B0  00A1               	movwf	(___flsub@a+1)^(0+128)
 10225  03B1  0874               	movf	?___xxtofl,w
 10226  03B2  00A0               	movwf	___flsub@a^(0+128)
 10227  03B3  0848               	movf	(sprintf@fval+3)^(0+128),w
 10228  03B4  00A7               	movwf	(___flsub@b+3)^(0+128)
 10229  03B5  0847               	movf	(sprintf@fval+2)^(0+128),w
 10230  03B6  00A6               	movwf	(___flsub@b+2)^(0+128)
 10231  03B7  0846               	movf	(sprintf@fval+1)^(0+128),w
 10232  03B8  00A5               	movwf	(___flsub@b+1)^(0+128)
 10233  03B9  0845               	movf	sprintf@fval^(0+128),w
 10234  03BA  00A4               	movwf	___flsub@b^(0+128)
 10235  03BB  160A  158A  2301  120A  118A  	fcall	___flsub
 10236  03C0  1683               	bsf	3,5	;RP0=1, select bank1
 10237  03C1  1303               	bcf	3,6	;RP1=0, select bank1
 10238  03C2  0823               	movf	(?___flsub+3)^(0+128),w
 10239  03C3  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10240  03C4  0822               	movf	(?___flsub+2)^(0+128),w
 10241  03C5  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10242  03C6  0821               	movf	(?___flsub+1)^(0+128),w
 10243  03C7  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10244  03C8  0820               	movf	?___flsub^(0+128),w
 10245  03C9  00C5               	movwf	sprintf@fval^(0+128)
 10246  03CA                     l3360:	
 10247                           
 10248                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1159:      
      +                          eexp = 0;
 10249  03CA  01C3               	clrf	sprintf@eexp^(0+128)
 10250  03CB  01C4               	clrf	(sprintf@eexp+1)^(0+128)
 10251  03CC                     l3362:	
 10252                           
 10253                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1162:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10254  03CC  01CC               	clrf	sprintf@c^(0+128)
 10255  03CD  0ACC               	incf	sprintf@c^(0+128),f
 10256  03CE                     l3368:	
 10257                           
 10258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1163:      
      +                          if(val < dpowers[c])
 10259  03CE  084C               	movf	sprintf@c^(0+128),w
 10260  03CF  00AD               	movwf	??_sprintf^(0+128)
 10261  03D0  3001               	movlw	1
 10262  03D1                     u5325:	
 10263  03D1  1003               	clrc
 10264  03D2  0DAD               	rlf	??_sprintf^(0+128),f
 10265  03D3  3EFF               	addlw	-1
 10266  03D4  1D03               	skipz
 10267  03D5  2BD1               	goto	u5325
 10268  03D6  1003               	clrc
 10269  03D7  0D2D               	rlf	??_sprintf^(0+128),w
 10270  03D8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10271  03D9  0084               	movwf	4
 10272  03DA  160A  158A  200A  120A  118A  	fcall	stringdir
 10273  03DF  00AE               	movwf	(??_sprintf+1)^(0+128)
 10274  03E0  160A  158A  200A  120A  118A  	fcall	stringdir
 10275  03E5  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 10276  03E6  160A  158A  200A  120A  118A  	fcall	stringdir
 10277  03EB  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 10278  03EC  160A  158A  200A  120A  118A  	fcall	stringdir
 10279  03F1  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 10280  03F2  0831               	movf	(??_sprintf+4)^(0+128),w
 10281  03F3  023A               	subwf	(sprintf@val+3)^(0+128),w
 10282  03F4  1D03               	skipz
 10283  03F5  2C00               	goto	u5335
 10284  03F6  0830               	movf	(??_sprintf+3)^(0+128),w
 10285  03F7  0239               	subwf	(sprintf@val+2)^(0+128),w
 10286  03F8  1D03               	skipz
 10287  03F9  2C00               	goto	u5335
 10288  03FA  082F               	movf	(??_sprintf+2)^(0+128),w
 10289  03FB  0238               	subwf	(sprintf@val+1)^(0+128),w
 10290  03FC  1D03               	skipz
 10291  03FD  2C00               	goto	u5335
 10292  03FE  082E               	movf	(??_sprintf+1)^(0+128),w
 10293  03FF  0237               	subwf	sprintf@val^(0+128),w
 10294  0400                     u5335:	
 10295  0400  1803               	skipnc
 10296  0401  2C03               	goto	u5331
 10297  0402  2C04               	goto	u5330
 10298  0403                     u5331:	
 10299  0403  2C05               	goto	l3372
 10300  0404                     u5330:	
 10301  0404  2C0F               	goto	l3374
 10302  0405                     l3372:	
 10303  0405  3001               	movlw	1
 10304  0406  00AD               	movwf	??_sprintf^(0+128)
 10305  0407  082D               	movf	??_sprintf^(0+128),w
 10306  0408  07CC               	addwf	sprintf@c^(0+128),f
 10307  0409  300A               	movlw	10
 10308  040A  064C               	xorwf	sprintf@c^(0+128),w
 10309  040B  1D03               	btfss	3,2
 10310  040C  2C0E               	goto	u5341
 10311  040D  2C0F               	goto	u5340
 10312  040E                     u5341:	
 10313  040E  2BCE               	goto	l3368
 10314  040F                     u5340:	
 10315  040F                     l3374:	
 10316                           
 10317                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1168:     w
      +                          idth -= prec + c + eexp;
 10318  040F  084C               	movf	sprintf@c^(0+128),w
 10319  0410  074A               	addwf	sprintf@prec^(0+128),w
 10320  0411  00AD               	movwf	??_sprintf^(0+128)
 10321  0412  084B               	movf	(sprintf@prec+1)^(0+128),w
 10322  0413  1803               	skipnc
 10323  0414  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 10324  0415  00AE               	movwf	(??_sprintf^(0+128)+1)
 10325  0416  0843               	movf	sprintf@eexp^(0+128),w
 10326  0417  072D               	addwf	??_sprintf^(0+128),w
 10327  0418  00AF               	movwf	(??_sprintf+2)^(0+128)
 10328  0419  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10329  041A  1803               	skipnc
 10330  041B  0A44               	incf	(sprintf@eexp+1)^(0+128),w
 10331  041C  072E               	addwf	(??_sprintf+1)^(0+128),w
 10332  041D  00B0               	movwf	(??_sprintf+3)^(0+128)
 10333  041E  082F               	movf	(??_sprintf+2)^(0+128),w
 10334  041F  02BD               	subwf	sprintf@width^(0+128),f
 10335  0420  0830               	movf	(??_sprintf+3)^(0+128),w
 10336  0421  1C03               	skipc
 10337  0422  03BE               	decf	(sprintf@width+1)^(0+128),f
 10338  0423  02BE               	subwf	(sprintf@width+1)^(0+128),f
 10339                           
 10340                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1169:     i
      +                          f(
 10341  0424  084A               	movf	sprintf@prec^(0+128),w
 10342  0425  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10343  0426  1903               	btfsc	3,2
 10344  0427  2C29               	goto	u5351
 10345  0428  2C2A               	goto	u5350
 10346  0429                     u5351:	
 10347  0429  2C30               	goto	l3378
 10348  042A                     u5350:	
 10349  042A                     l3376:	
 10350                           
 10351                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1174:      
      +                          width--;
 10352  042A  30FF               	movlw	255
 10353  042B  07BD               	addwf	sprintf@width^(0+128),f
 10354  042C  1803               	skipnc
 10355  042D  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10356  042E  30FF               	movlw	255
 10357  042F  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10358  0430                     l3378:	
 10359                           
 10360                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1175:     i
      +                          f(flag & 0x03)
 10361  0430  3003               	movlw	3
 10362  0431  053B               	andwf	sprintf@flag^(0+128),w
 10363  0432  00AD               	movwf	??_sprintf^(0+128)
 10364  0433  3000               	movlw	0
 10365  0434  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10366  0435  00AE               	movwf	(??_sprintf+1)^(0+128)
 10367  0436  082D               	movf	??_sprintf^(0+128),w
 10368  0437  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10369  0438  1903               	btfsc	3,2
 10370  0439  2C3B               	goto	u5361
 10371  043A  2C3C               	goto	u5360
 10372  043B                     u5361:	
 10373  043B  2C51               	goto	l3388
 10374  043C                     u5360:	
 10375  043C                     l3380:	
 10376                           
 10377                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1176:      
      +                          width--;
 10378  043C  30FF               	movlw	255
 10379  043D  07BD               	addwf	sprintf@width^(0+128),f
 10380  043E  1803               	skipnc
 10381  043F  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10382  0440  30FF               	movlw	255
 10383  0441  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10384  0442  2C51               	goto	l3388
 10385  0443                     l3382:	
 10386                           
 10387                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1207:      
      +                           ((*sp++ = (' ')));
 10388  0443  3020               	movlw	32
 10389  0444  1683               	bsf	3,5	;RP0=1, select bank1
 10390  0445  1303               	bcf	3,6	;RP1=0, select bank1
 10391  0446  00AD               	movwf	??_sprintf^(0+128)
 10392  0447  0849               	movf	sprintf@sp^(0+128),w
 10393  0448  0084               	movwf	4
 10394  0449  082D               	movf	??_sprintf^(0+128),w
 10395  044A  1383               	bcf	3,7	;select IRP bank0
 10396  044B  0080               	movwf	0
 10397  044C                     l3384:	
 10398  044C  3001               	movlw	1
 10399  044D  00AD               	movwf	??_sprintf^(0+128)
 10400  044E  082D               	movf	??_sprintf^(0+128),w
 10401  044F  07C9               	addwf	sprintf@sp^(0+128),f
 10402  0450  2C3C               	goto	l3380
 10403  0451                     l3388:	
 10404                           
 10405                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1206:      
      +                          while(width > 0) {
 10406  0451  083E               	movf	(sprintf@width+1)^(0+128),w
 10407  0452  3A80               	xorlw	128
 10408  0453  00FF               	movwf	btemp+1
 10409  0454  3080               	movlw	128
 10410  0455  027F               	subwf	btemp+1,w
 10411  0456  1D03               	skipz
 10412  0457  2C5A               	goto	u5375
 10413  0458  3001               	movlw	1
 10414  0459  023D               	subwf	sprintf@width^(0+128),w
 10415  045A                     u5375:	
 10416  045A  1803               	skipnc
 10417  045B  2C5D               	goto	u5371
 10418  045C  2C5E               	goto	u5370
 10419  045D                     u5371:	
 10420  045D  2C43               	goto	l3382
 10421  045E                     u5370:	
 10422  045E                     l3390:	
 10423                           
 10424                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1214:     i
      +                          f(flag & 0x03)
 10425  045E  3003               	movlw	3
 10426  045F  1683               	bsf	3,5	;RP0=1, select bank1
 10427  0460  1303               	bcf	3,6	;RP1=0, select bank1
 10428  0461  053B               	andwf	sprintf@flag^(0+128),w
 10429  0462  00AD               	movwf	??_sprintf^(0+128)
 10430  0463  3000               	movlw	0
 10431  0464  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10432  0465  00AE               	movwf	(??_sprintf+1)^(0+128)
 10433  0466  082D               	movf	??_sprintf^(0+128),w
 10434  0467  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10435  0468  1903               	btfsc	3,2
 10436  0469  2C6B               	goto	u5381
 10437  046A  2C6C               	goto	u5380
 10438  046B                     u5381:	
 10439  046B  2D1E               	goto	l339
 10440  046C                     u5380:	
 10441  046C                     l3392:	
 10442                           
 10443                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1216:      
      +                          ((*sp++ = ('-')));
 10444  046C  302D               	movlw	45
 10445  046D  00AD               	movwf	??_sprintf^(0+128)
 10446  046E  0849               	movf	sprintf@sp^(0+128),w
 10447  046F  0084               	movwf	4
 10448  0470  082D               	movf	??_sprintf^(0+128),w
 10449  0471  1383               	bcf	3,7	;select IRP bank0
 10450  0472  0080               	movwf	0
 10451  0473                     l3394:	
 10452  0473  3001               	movlw	1
 10453  0474  00AD               	movwf	??_sprintf^(0+128)
 10454  0475  082D               	movf	??_sprintf^(0+128),w
 10455  0476  07C9               	addwf	sprintf@sp^(0+128),f
 10456  0477  2D1E               	goto	l339
 10457  0478                     l3396:	
 10458                           
 10459                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1226:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1227:      
      +                          tmpval.vd = val/dpowers[c];
 10460  0478  084C               	movf	sprintf@c^(0+128),w
 10461  0479  00AD               	movwf	??_sprintf^(0+128)
 10462  047A  3001               	movlw	1
 10463  047B                     u5395:	
 10464  047B  1003               	clrc
 10465  047C  0DAD               	rlf	??_sprintf^(0+128),f
 10466  047D  3EFF               	addlw	-1
 10467  047E  1D03               	skipz
 10468  047F  2C7B               	goto	u5395
 10469  0480  1003               	clrc
 10470  0481  0D2D               	rlf	??_sprintf^(0+128),w
 10471  0482  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10472  0483  0084               	movwf	4
 10473  0484  160A  158A  200A  120A  118A  	fcall	stringdir
 10474  0489  1283               	bcf	3,5	;RP0=0, select bank0
 10475  048A  1303               	bcf	3,6	;RP1=0, select bank0
 10476  048B  00A0               	movwf	___lldiv@divisor
 10477  048C  160A  158A  200A  120A  118A  	fcall	stringdir
 10478  0491  00A1               	movwf	___lldiv@divisor+1
 10479  0492  160A  158A  200A  120A  118A  	fcall	stringdir
 10480  0497  00A2               	movwf	___lldiv@divisor+2
 10481  0498  160A  158A  200A  120A  118A  	fcall	stringdir
 10482  049D  00A3               	movwf	___lldiv@divisor+3
 10483  049E  1683               	bsf	3,5	;RP0=1, select bank1
 10484  049F  1303               	bcf	3,6	;RP1=0, select bank1
 10485  04A0  083A               	movf	(sprintf@val+3)^(0+128),w
 10486  04A1  1283               	bcf	3,5	;RP0=0, select bank0
 10487  04A2  1303               	bcf	3,6	;RP1=0, select bank0
 10488  04A3  00A7               	movwf	___lldiv@dividend+3
 10489  04A4  1683               	bsf	3,5	;RP0=1, select bank1
 10490  04A5  1303               	bcf	3,6	;RP1=0, select bank1
 10491  04A6  0839               	movf	(sprintf@val+2)^(0+128),w
 10492  04A7  1283               	bcf	3,5	;RP0=0, select bank0
 10493  04A8  1303               	bcf	3,6	;RP1=0, select bank0
 10494  04A9  00A6               	movwf	___lldiv@dividend+2
 10495  04AA  1683               	bsf	3,5	;RP0=1, select bank1
 10496  04AB  1303               	bcf	3,6	;RP1=0, select bank1
 10497  04AC  0838               	movf	(sprintf@val+1)^(0+128),w
 10498  04AD  1283               	bcf	3,5	;RP0=0, select bank0
 10499  04AE  1303               	bcf	3,6	;RP1=0, select bank0
 10500  04AF  00A5               	movwf	___lldiv@dividend+1
 10501  04B0  1683               	bsf	3,5	;RP0=1, select bank1
 10502  04B1  1303               	bcf	3,6	;RP1=0, select bank1
 10503  04B2  0837               	movf	sprintf@val^(0+128),w
 10504  04B3  1283               	bcf	3,5	;RP0=0, select bank0
 10505  04B4  1303               	bcf	3,6	;RP1=0, select bank0
 10506  04B5  00A4               	movwf	___lldiv@dividend
 10507  04B6  160A  158A  2453  120A  118A  	fcall	___lldiv
 10508  04BB  1283               	bcf	3,5	;RP0=0, select bank0
 10509  04BC  1303               	bcf	3,6	;RP1=0, select bank0
 10510  04BD  0823               	movf	?___lldiv+3,w
 10511  04BE  1683               	bsf	3,5	;RP0=1, select bank1
 10512  04BF  1303               	bcf	3,6	;RP1=0, select bank1
 10513  04C0  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10514  04C1  1283               	bcf	3,5	;RP0=0, select bank0
 10515  04C2  1303               	bcf	3,6	;RP1=0, select bank0
 10516  04C3  0822               	movf	?___lldiv+2,w
 10517  04C4  1683               	bsf	3,5	;RP0=1, select bank1
 10518  04C5  1303               	bcf	3,6	;RP1=0, select bank1
 10519  04C6  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10520  04C7  1283               	bcf	3,5	;RP0=0, select bank0
 10521  04C8  1303               	bcf	3,6	;RP1=0, select bank0
 10522  04C9  0821               	movf	?___lldiv+1,w
 10523  04CA  1683               	bsf	3,5	;RP0=1, select bank1
 10524  04CB  1303               	bcf	3,6	;RP1=0, select bank1
 10525  04CC  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10526  04CD  1283               	bcf	3,5	;RP0=0, select bank0
 10527  04CE  1303               	bcf	3,6	;RP1=0, select bank0
 10528  04CF  0820               	movf	?___lldiv,w
 10529  04D0  1683               	bsf	3,5	;RP0=1, select bank1
 10530  04D1  1303               	bcf	3,6	;RP1=0, select bank1
 10531  04D2  00BF               	movwf	sprintf@tmpval^(0+128)
 10532  04D3                     l3398:	
 10533                           
 10534                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1228:      
      +                          tmpval.vd %= 10;
 10535  04D3  3000               	movlw	0
 10536  04D4  1283               	bcf	3,5	;RP0=0, select bank0
 10537  04D5  1303               	bcf	3,6	;RP1=0, select bank0
 10538  04D6  00A3               	movwf	___llmod@divisor+3
 10539  04D7  3000               	movlw	0
 10540  04D8  00A2               	movwf	___llmod@divisor+2
 10541  04D9  3000               	movlw	0
 10542  04DA  00A1               	movwf	___llmod@divisor+1
 10543  04DB  300A               	movlw	10
 10544  04DC  00A0               	movwf	___llmod@divisor
 10545  04DD  1683               	bsf	3,5	;RP0=1, select bank1
 10546  04DE  1303               	bcf	3,6	;RP1=0, select bank1
 10547  04DF  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10548  04E0  1283               	bcf	3,5	;RP0=0, select bank0
 10549  04E1  1303               	bcf	3,6	;RP1=0, select bank0
 10550  04E2  00A7               	movwf	___llmod@dividend+3
 10551  04E3  1683               	bsf	3,5	;RP0=1, select bank1
 10552  04E4  1303               	bcf	3,6	;RP1=0, select bank1
 10553  04E5  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10554  04E6  1283               	bcf	3,5	;RP0=0, select bank0
 10555  04E7  1303               	bcf	3,6	;RP1=0, select bank0
 10556  04E8  00A6               	movwf	___llmod@dividend+2
 10557  04E9  1683               	bsf	3,5	;RP0=1, select bank1
 10558  04EA  1303               	bcf	3,6	;RP1=0, select bank1
 10559  04EB  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10560  04EC  1283               	bcf	3,5	;RP0=0, select bank0
 10561  04ED  1303               	bcf	3,6	;RP1=0, select bank0
 10562  04EE  00A5               	movwf	___llmod@dividend+1
 10563  04EF  1683               	bsf	3,5	;RP0=1, select bank1
 10564  04F0  1303               	bcf	3,6	;RP1=0, select bank1
 10565  04F1  083F               	movf	sprintf@tmpval^(0+128),w
 10566  04F2  1283               	bcf	3,5	;RP0=0, select bank0
 10567  04F3  1303               	bcf	3,6	;RP1=0, select bank0
 10568  04F4  00A4               	movwf	___llmod@dividend
 10569  04F5  160A  158A  23A4  120A  118A  	fcall	___llmod
 10570  04FA  1283               	bcf	3,5	;RP0=0, select bank0
 10571  04FB  1303               	bcf	3,6	;RP1=0, select bank0
 10572  04FC  0823               	movf	?___llmod+3,w
 10573  04FD  1683               	bsf	3,5	;RP0=1, select bank1
 10574  04FE  1303               	bcf	3,6	;RP1=0, select bank1
 10575  04FF  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10576  0500  1283               	bcf	3,5	;RP0=0, select bank0
 10577  0501  1303               	bcf	3,6	;RP1=0, select bank0
 10578  0502  0822               	movf	?___llmod+2,w
 10579  0503  1683               	bsf	3,5	;RP0=1, select bank1
 10580  0504  1303               	bcf	3,6	;RP1=0, select bank1
 10581  0505  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10582  0506  1283               	bcf	3,5	;RP0=0, select bank0
 10583  0507  1303               	bcf	3,6	;RP1=0, select bank0
 10584  0508  0821               	movf	?___llmod+1,w
 10585  0509  1683               	bsf	3,5	;RP0=1, select bank1
 10586  050A  1303               	bcf	3,6	;RP1=0, select bank1
 10587  050B  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10588  050C  1283               	bcf	3,5	;RP0=0, select bank0
 10589  050D  1303               	bcf	3,6	;RP1=0, select bank0
 10590  050E  0820               	movf	?___llmod,w
 10591  050F  1683               	bsf	3,5	;RP0=1, select bank1
 10592  0510  1303               	bcf	3,6	;RP1=0, select bank1
 10593  0511  00BF               	movwf	sprintf@tmpval^(0+128)
 10594  0512                     l3400:	
 10595                           
 10596                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1229:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
 10597  0512  083F               	movf	sprintf@tmpval^(0+128),w
 10598  0513  3E30               	addlw	48
 10599  0514  00AD               	movwf	??_sprintf^(0+128)
 10600  0515  0849               	movf	sprintf@sp^(0+128),w
 10601  0516  0084               	movwf	4
 10602  0517  082D               	movf	??_sprintf^(0+128),w
 10603  0518  1383               	bcf	3,7	;select IRP bank0
 10604  0519  0080               	movwf	0
 10605  051A  3001               	movlw	1
 10606  051B  00AD               	movwf	??_sprintf^(0+128)
 10607  051C  082D               	movf	??_sprintf^(0+128),w
 10608  051D  07C9               	addwf	sprintf@sp^(0+128),f
 10609  051E                     l339:	
 10610                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1230:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1232:    }
 10611                           
 10612                           
 10613                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1222:    wh
      +                          ile(c--) {
 10614  051E  3001               	movlw	1
 10615  051F  02CC               	subwf	sprintf@c^(0+128),f
 10616  0520  0A4C               	incf	sprintf@c^(0+128),w
 10617  0521  1D03               	btfss	3,2
 10618  0522  2D24               	goto	u5401
 10619  0523  2D25               	goto	u5400
 10620  0524                     u5401:	
 10621  0524  2C78               	goto	l3396
 10622  0525                     u5400:	
 10623  0525  2D39               	goto	l3408
 10624  0526                     l3402:	
 10625                           
 10626                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1234:     (
      +                          (*sp++ = ('0')));
 10627  0526  3030               	movlw	48
 10628  0527  1683               	bsf	3,5	;RP0=1, select bank1
 10629  0528  1303               	bcf	3,6	;RP1=0, select bank1
 10630  0529  00AD               	movwf	??_sprintf^(0+128)
 10631  052A  0849               	movf	sprintf@sp^(0+128),w
 10632  052B  0084               	movwf	4
 10633  052C  082D               	movf	??_sprintf^(0+128),w
 10634  052D  1383               	bcf	3,7	;select IRP bank0
 10635  052E  0080               	movwf	0
 10636  052F                     l3404:	
 10637  052F  3001               	movlw	1
 10638  0530  00AD               	movwf	??_sprintf^(0+128)
 10639  0531  082D               	movf	??_sprintf^(0+128),w
 10640  0532  07C9               	addwf	sprintf@sp^(0+128),f
 10641  0533                     l3406:	
 10642                           
 10643                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1235:     e
      +                          exp--;
 10644  0533  30FF               	movlw	255
 10645  0534  07C3               	addwf	sprintf@eexp^(0+128),f
 10646  0535  1803               	skipnc
 10647  0536  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10648  0537  30FF               	movlw	255
 10649  0538  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10650  0539                     l3408:	
 10651                           
 10652                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1233:    wh
      +                          ile(eexp > 0) {
 10653  0539  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10654  053A  3A80               	xorlw	128
 10655  053B  00FF               	movwf	btemp+1
 10656  053C  3080               	movlw	128
 10657  053D  027F               	subwf	btemp+1,w
 10658  053E  1D03               	skipz
 10659  053F  2D42               	goto	u5415
 10660  0540  3001               	movlw	1
 10661  0541  0243               	subwf	sprintf@eexp^(0+128),w
 10662  0542                     u5415:	
 10663  0542  1803               	skipnc
 10664  0543  2D45               	goto	u5411
 10665  0544  2D46               	goto	u5410
 10666  0545                     u5411:	
 10667  0545  2D26               	goto	l3402
 10668  0546                     u5410:	
 10669  0546                     l3410:	
 10670                           
 10671                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1237:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10672  0546  1683               	bsf	3,5	;RP0=1, select bank1
 10673  0547  1303               	bcf	3,6	;RP1=0, select bank1
 10674  0548  084B               	movf	(sprintf@prec+1)^(0+128),w
 10675  0549  3A80               	xorlw	128
 10676  054A  00FF               	movwf	btemp+1
 10677  054B  3080               	movlw	128
 10678  054C  027F               	subwf	btemp+1,w
 10679  054D  1D03               	skipz
 10680  054E  2D51               	goto	u5425
 10681  054F  3009               	movlw	9
 10682  0550  024A               	subwf	sprintf@prec^(0+128),w
 10683  0551                     u5425:	
 10684  0551  1C03               	skipc
 10685  0552  2D54               	goto	u5421
 10686  0553  2D55               	goto	u5420
 10687  0554                     u5421:	
 10688  0554  2D5C               	goto	l3414
 10689  0555                     u5420:	
 10690  0555                     l3412:	
 10691                           
 10692                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1238:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
 10693  0555  3008               	movlw	8
 10694  0556  1683               	bsf	3,5	;RP0=1, select bank1
 10695  0557  1303               	bcf	3,6	;RP1=0, select bank1
 10696  0558  00AD               	movwf	??_sprintf^(0+128)
 10697  0559  082D               	movf	??_sprintf^(0+128),w
 10698  055A  00CC               	movwf	sprintf@c^(0+128)
 10699  055B  2D62               	goto	l346
 10700  055C                     l3414:	
 10701                           
 10702                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1240:     c
      +                           = (char)prec;
 10703  055C  1683               	bsf	3,5	;RP0=1, select bank1
 10704  055D  1303               	bcf	3,6	;RP1=0, select bank1
 10705  055E  084A               	movf	sprintf@prec^(0+128),w
 10706  055F  00AD               	movwf	??_sprintf^(0+128)
 10707  0560  082D               	movf	??_sprintf^(0+128),w
 10708  0561  00CC               	movwf	sprintf@c^(0+128)
 10709  0562                     l346:	
 10710                           
 10711                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1241:    pr
      +                          ec -= (int)c;
 10712  0562  084C               	movf	sprintf@c^(0+128),w
 10713  0563  00AD               	movwf	??_sprintf^(0+128)
 10714  0564  01AE               	clrf	(??_sprintf^(0+128)+1)
 10715  0565  082D               	movf	??_sprintf^(0+128),w
 10716  0566  02CA               	subwf	sprintf@prec^(0+128),f
 10717  0567  082E               	movf	(??_sprintf+1)^(0+128),w
 10718  0568  1C03               	skipc
 10719  0569  03CB               	decf	(sprintf@prec+1)^(0+128),f
 10720  056A  02CB               	subwf	(sprintf@prec+1)^(0+128),f
 10721  056B                     l3416:	
 10722                           
 10723                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1245:    if
      +                          (c)
 10724  056B  084C               	movf	sprintf@c^(0+128),w
 10725  056C  1903               	btfsc	3,2
 10726  056D  2D6F               	goto	u5431
 10727  056E  2D70               	goto	u5430
 10728  056F                     u5431:	
 10729  056F  2D7B               	goto	l3422
 10730  0570                     u5430:	
 10731  0570                     l3418:	
 10732                           
 10733                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1247:     (
      +                          (*sp++ = ('.')));
 10734  0570  302E               	movlw	46
 10735  0571  00AD               	movwf	??_sprintf^(0+128)
 10736  0572  0849               	movf	sprintf@sp^(0+128),w
 10737  0573  0084               	movwf	4
 10738  0574  082D               	movf	??_sprintf^(0+128),w
 10739  0575  1383               	bcf	3,7	;select IRP bank0
 10740  0576  0080               	movwf	0
 10741  0577                     l3420:	
 10742  0577  3001               	movlw	1
 10743  0578  00AD               	movwf	??_sprintf^(0+128)
 10744  0579  082D               	movf	??_sprintf^(0+128),w
 10745  057A  07C9               	addwf	sprintf@sp^(0+128),f
 10746  057B                     l3422:	
 10747                           
 10748                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
 10749  057B  084C               	movf	sprintf@c^(0+128),w
 10750  057C  120A  158A  249D  120A  118A  	fcall	_scale
 10751  0581  1283               	bcf	3,5	;RP0=0, select bank0
 10752  0582  1303               	bcf	3,6	;RP1=0, select bank0
 10753  0583  0847               	movf	?_scale+3,w
 10754  0584  1683               	bsf	3,5	;RP0=1, select bank1
 10755  0585  1303               	bcf	3,6	;RP1=0, select bank1
 10756  0586  00B5               	movwf	(_sprintf$1211+3)^(0+128)
 10757  0587  1283               	bcf	3,5	;RP0=0, select bank0
 10758  0588  1303               	bcf	3,6	;RP1=0, select bank0
 10759  0589  0846               	movf	?_scale+2,w
 10760  058A  1683               	bsf	3,5	;RP0=1, select bank1
 10761  058B  1303               	bcf	3,6	;RP1=0, select bank1
 10762  058C  00B4               	movwf	(_sprintf$1211+2)^(0+128)
 10763  058D  1283               	bcf	3,5	;RP0=0, select bank0
 10764  058E  1303               	bcf	3,6	;RP1=0, select bank0
 10765  058F  0845               	movf	?_scale+1,w
 10766  0590  1683               	bsf	3,5	;RP0=1, select bank1
 10767  0591  1303               	bcf	3,6	;RP1=0, select bank1
 10768  0592  00B3               	movwf	(_sprintf$1211+1)^(0+128)
 10769  0593  1283               	bcf	3,5	;RP0=0, select bank0
 10770  0594  1303               	bcf	3,6	;RP1=0, select bank0
 10771  0595  0844               	movf	?_scale,w
 10772  0596  1683               	bsf	3,5	;RP0=1, select bank1
 10773  0597  1303               	bcf	3,6	;RP1=0, select bank1
 10774  0598  00B2               	movwf	_sprintf$1211^(0+128)
 10775  0599                     l3424:	
 10776                           
 10777                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1253:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
 10778  0599  0835               	movf	(_sprintf$1211+3)^(0+128),w
 10779  059A  1283               	bcf	3,5	;RP0=0, select bank0
 10780  059B  1303               	bcf	3,6	;RP1=0, select bank0
 10781  059C  00B1               	movwf	___flmul@a+3
 10782  059D  1683               	bsf	3,5	;RP0=1, select bank1
 10783  059E  1303               	bcf	3,6	;RP1=0, select bank1
 10784  059F  0834               	movf	(_sprintf$1211+2)^(0+128),w
 10785  05A0  1283               	bcf	3,5	;RP0=0, select bank0
 10786  05A1  1303               	bcf	3,6	;RP1=0, select bank0
 10787  05A2  00B0               	movwf	___flmul@a+2
 10788  05A3  1683               	bsf	3,5	;RP0=1, select bank1
 10789  05A4  1303               	bcf	3,6	;RP1=0, select bank1
 10790  05A5  0833               	movf	(_sprintf$1211+1)^(0+128),w
 10791  05A6  1283               	bcf	3,5	;RP0=0, select bank0
 10792  05A7  1303               	bcf	3,6	;RP1=0, select bank0
 10793  05A8  00AF               	movwf	___flmul@a+1
 10794  05A9  1683               	bsf	3,5	;RP0=1, select bank1
 10795  05AA  1303               	bcf	3,6	;RP1=0, select bank1
 10796  05AB  0832               	movf	_sprintf$1211^(0+128),w
 10797  05AC  1283               	bcf	3,5	;RP0=0, select bank0
 10798  05AD  1303               	bcf	3,6	;RP1=0, select bank0
 10799  05AE  00AE               	movwf	___flmul@a
 10800  05AF  1683               	bsf	3,5	;RP0=1, select bank1
 10801  05B0  1303               	bcf	3,6	;RP1=0, select bank1
 10802  05B1  0848               	movf	(sprintf@fval+3)^(0+128),w
 10803  05B2  1283               	bcf	3,5	;RP0=0, select bank0
 10804  05B3  1303               	bcf	3,6	;RP1=0, select bank0
 10805  05B4  00AD               	movwf	___flmul@b+3
 10806  05B5  1683               	bsf	3,5	;RP0=1, select bank1
 10807  05B6  1303               	bcf	3,6	;RP1=0, select bank1
 10808  05B7  0847               	movf	(sprintf@fval+2)^(0+128),w
 10809  05B8  1283               	bcf	3,5	;RP0=0, select bank0
 10810  05B9  1303               	bcf	3,6	;RP1=0, select bank0
 10811  05BA  00AC               	movwf	___flmul@b+2
 10812  05BB  1683               	bsf	3,5	;RP0=1, select bank1
 10813  05BC  1303               	bcf	3,6	;RP1=0, select bank1
 10814  05BD  0846               	movf	(sprintf@fval+1)^(0+128),w
 10815  05BE  1283               	bcf	3,5	;RP0=0, select bank0
 10816  05BF  1303               	bcf	3,6	;RP1=0, select bank0
 10817  05C0  00AB               	movwf	___flmul@b+1
 10818  05C1  1683               	bsf	3,5	;RP0=1, select bank1
 10819  05C2  1303               	bcf	3,6	;RP1=0, select bank1
 10820  05C3  0845               	movf	sprintf@fval^(0+128),w
 10821  05C4  1283               	bcf	3,5	;RP0=0, select bank0
 10822  05C5  1303               	bcf	3,6	;RP1=0, select bank0
 10823  05C6  00AA               	movwf	___flmul@b
 10824  05C7  120A  158A  213C  120A  118A  	fcall	___flmul
 10825  05CC  1283               	bcf	3,5	;RP0=0, select bank0
 10826  05CD  1303               	bcf	3,6	;RP1=0, select bank0
 10827  05CE  082D               	movf	?___flmul+3,w
 10828  05CF  00DA               	movwf	___fltol@f1+3
 10829  05D0  082C               	movf	?___flmul+2,w
 10830  05D1  00D9               	movwf	___fltol@f1+2
 10831  05D2  082B               	movf	?___flmul+1,w
 10832  05D3  00D8               	movwf	___fltol@f1+1
 10833  05D4  082A               	movf	?___flmul,w
 10834  05D5  00D7               	movwf	___fltol@f1
 10835  05D6  160A  158A  2524  120A  118A  	fcall	___fltol
 10836  05DB  1283               	bcf	3,5	;RP0=0, select bank0
 10837  05DC  1303               	bcf	3,6	;RP1=0, select bank0
 10838  05DD  085A               	movf	?___fltol+3,w
 10839  05DE  1683               	bsf	3,5	;RP0=1, select bank1
 10840  05DF  1303               	bcf	3,6	;RP1=0, select bank1
 10841  05E0  00BA               	movwf	(sprintf@val+3)^(0+128)
 10842  05E1  1283               	bcf	3,5	;RP0=0, select bank0
 10843  05E2  1303               	bcf	3,6	;RP1=0, select bank0
 10844  05E3  0859               	movf	?___fltol+2,w
 10845  05E4  1683               	bsf	3,5	;RP0=1, select bank1
 10846  05E5  1303               	bcf	3,6	;RP1=0, select bank1
 10847  05E6  00B9               	movwf	(sprintf@val+2)^(0+128)
 10848  05E7  1283               	bcf	3,5	;RP0=0, select bank0
 10849  05E8  1303               	bcf	3,6	;RP1=0, select bank0
 10850  05E9  0858               	movf	?___fltol+1,w
 10851  05EA  1683               	bsf	3,5	;RP0=1, select bank1
 10852  05EB  1303               	bcf	3,6	;RP1=0, select bank1
 10853  05EC  00B8               	movwf	(sprintf@val+1)^(0+128)
 10854  05ED  1283               	bcf	3,5	;RP0=0, select bank0
 10855  05EE  1303               	bcf	3,6	;RP1=0, select bank0
 10856  05EF  0857               	movf	?___fltol,w
 10857  05F0  1683               	bsf	3,5	;RP0=1, select bank1
 10858  05F1  1303               	bcf	3,6	;RP1=0, select bank1
 10859  05F2  00B7               	movwf	sprintf@val^(0+128)
 10860                           
 10861                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
 10862  05F3  2EF5               	goto	l3434
 10863  05F4                     l3426:	
 10864                           
 10865                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1255:     t
      +                          mpval.vd = val/dpowers[c];
 10866  05F4  084C               	movf	sprintf@c^(0+128),w
 10867  05F5  00AD               	movwf	??_sprintf^(0+128)
 10868  05F6  3001               	movlw	1
 10869  05F7                     u5445:	
 10870  05F7  1003               	clrc
 10871  05F8  0DAD               	rlf	??_sprintf^(0+128),f
 10872  05F9  3EFF               	addlw	-1
 10873  05FA  1D03               	skipz
 10874  05FB  2DF7               	goto	u5445
 10875  05FC  1003               	clrc
 10876  05FD  0D2D               	rlf	??_sprintf^(0+128),w
 10877  05FE  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10878  05FF  0084               	movwf	4
 10879  0600  160A  158A  200A  120A  118A  	fcall	stringdir
 10880  0605  1283               	bcf	3,5	;RP0=0, select bank0
 10881  0606  1303               	bcf	3,6	;RP1=0, select bank0
 10882  0607  00A0               	movwf	___lldiv@divisor
 10883  0608  160A  158A  200A  120A  118A  	fcall	stringdir
 10884  060D  00A1               	movwf	___lldiv@divisor+1
 10885  060E  160A  158A  200A  120A  118A  	fcall	stringdir
 10886  0613  00A2               	movwf	___lldiv@divisor+2
 10887  0614  160A  158A  200A  120A  118A  	fcall	stringdir
 10888  0619  00A3               	movwf	___lldiv@divisor+3
 10889  061A  1683               	bsf	3,5	;RP0=1, select bank1
 10890  061B  1303               	bcf	3,6	;RP1=0, select bank1
 10891  061C  083A               	movf	(sprintf@val+3)^(0+128),w
 10892  061D  1283               	bcf	3,5	;RP0=0, select bank0
 10893  061E  1303               	bcf	3,6	;RP1=0, select bank0
 10894  061F  00A7               	movwf	___lldiv@dividend+3
 10895  0620  1683               	bsf	3,5	;RP0=1, select bank1
 10896  0621  1303               	bcf	3,6	;RP1=0, select bank1
 10897  0622  0839               	movf	(sprintf@val+2)^(0+128),w
 10898  0623  1283               	bcf	3,5	;RP0=0, select bank0
 10899  0624  1303               	bcf	3,6	;RP1=0, select bank0
 10900  0625  00A6               	movwf	___lldiv@dividend+2
 10901  0626  1683               	bsf	3,5	;RP0=1, select bank1
 10902  0627  1303               	bcf	3,6	;RP1=0, select bank1
 10903  0628  0838               	movf	(sprintf@val+1)^(0+128),w
 10904  0629  1283               	bcf	3,5	;RP0=0, select bank0
 10905  062A  1303               	bcf	3,6	;RP1=0, select bank0
 10906  062B  00A5               	movwf	___lldiv@dividend+1
 10907  062C  1683               	bsf	3,5	;RP0=1, select bank1
 10908  062D  1303               	bcf	3,6	;RP1=0, select bank1
 10909  062E  0837               	movf	sprintf@val^(0+128),w
 10910  062F  1283               	bcf	3,5	;RP0=0, select bank0
 10911  0630  1303               	bcf	3,6	;RP1=0, select bank0
 10912  0631  00A4               	movwf	___lldiv@dividend
 10913  0632  160A  158A  2453  120A  118A  	fcall	___lldiv
 10914  0637  1283               	bcf	3,5	;RP0=0, select bank0
 10915  0638  1303               	bcf	3,6	;RP1=0, select bank0
 10916  0639  0823               	movf	?___lldiv+3,w
 10917  063A  1683               	bsf	3,5	;RP0=1, select bank1
 10918  063B  1303               	bcf	3,6	;RP1=0, select bank1
 10919  063C  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10920  063D  1283               	bcf	3,5	;RP0=0, select bank0
 10921  063E  1303               	bcf	3,6	;RP1=0, select bank0
 10922  063F  0822               	movf	?___lldiv+2,w
 10923  0640  1683               	bsf	3,5	;RP0=1, select bank1
 10924  0641  1303               	bcf	3,6	;RP1=0, select bank1
 10925  0642  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10926  0643  1283               	bcf	3,5	;RP0=0, select bank0
 10927  0644  1303               	bcf	3,6	;RP1=0, select bank0
 10928  0645  0821               	movf	?___lldiv+1,w
 10929  0646  1683               	bsf	3,5	;RP0=1, select bank1
 10930  0647  1303               	bcf	3,6	;RP1=0, select bank1
 10931  0648  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10932  0649  1283               	bcf	3,5	;RP0=0, select bank0
 10933  064A  1303               	bcf	3,6	;RP1=0, select bank0
 10934  064B  0820               	movf	?___lldiv,w
 10935  064C  1683               	bsf	3,5	;RP0=1, select bank1
 10936  064D  1303               	bcf	3,6	;RP1=0, select bank1
 10937  064E  00BF               	movwf	sprintf@tmpval^(0+128)
 10938  064F                     l3428:	
 10939                           
 10940                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1256:     t
      +                          mpval.vd %= 10;
 10941  064F  3000               	movlw	0
 10942  0650  1283               	bcf	3,5	;RP0=0, select bank0
 10943  0651  1303               	bcf	3,6	;RP1=0, select bank0
 10944  0652  00A3               	movwf	___llmod@divisor+3
 10945  0653  3000               	movlw	0
 10946  0654  00A2               	movwf	___llmod@divisor+2
 10947  0655  3000               	movlw	0
 10948  0656  00A1               	movwf	___llmod@divisor+1
 10949  0657  300A               	movlw	10
 10950  0658  00A0               	movwf	___llmod@divisor
 10951  0659  1683               	bsf	3,5	;RP0=1, select bank1
 10952  065A  1303               	bcf	3,6	;RP1=0, select bank1
 10953  065B  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10954  065C  1283               	bcf	3,5	;RP0=0, select bank0
 10955  065D  1303               	bcf	3,6	;RP1=0, select bank0
 10956  065E  00A7               	movwf	___llmod@dividend+3
 10957  065F  1683               	bsf	3,5	;RP0=1, select bank1
 10958  0660  1303               	bcf	3,6	;RP1=0, select bank1
 10959  0661  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10960  0662  1283               	bcf	3,5	;RP0=0, select bank0
 10961  0663  1303               	bcf	3,6	;RP1=0, select bank0
 10962  0664  00A6               	movwf	___llmod@dividend+2
 10963  0665  1683               	bsf	3,5	;RP0=1, select bank1
 10964  0666  1303               	bcf	3,6	;RP1=0, select bank1
 10965  0667  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10966  0668  1283               	bcf	3,5	;RP0=0, select bank0
 10967  0669  1303               	bcf	3,6	;RP1=0, select bank0
 10968  066A  00A5               	movwf	___llmod@dividend+1
 10969  066B  1683               	bsf	3,5	;RP0=1, select bank1
 10970  066C  1303               	bcf	3,6	;RP1=0, select bank1
 10971  066D  083F               	movf	sprintf@tmpval^(0+128),w
 10972  066E  1283               	bcf	3,5	;RP0=0, select bank0
 10973  066F  1303               	bcf	3,6	;RP1=0, select bank0
 10974  0670  00A4               	movwf	___llmod@dividend
 10975  0671  160A  158A  23A4  120A  118A  	fcall	___llmod
 10976  0676  1283               	bcf	3,5	;RP0=0, select bank0
 10977  0677  1303               	bcf	3,6	;RP1=0, select bank0
 10978  0678  0823               	movf	?___llmod+3,w
 10979  0679  1683               	bsf	3,5	;RP0=1, select bank1
 10980  067A  1303               	bcf	3,6	;RP1=0, select bank1
 10981  067B  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10982  067C  1283               	bcf	3,5	;RP0=0, select bank0
 10983  067D  1303               	bcf	3,6	;RP1=0, select bank0
 10984  067E  0822               	movf	?___llmod+2,w
 10985  067F  1683               	bsf	3,5	;RP0=1, select bank1
 10986  0680  1303               	bcf	3,6	;RP1=0, select bank1
 10987  0681  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10988  0682  1283               	bcf	3,5	;RP0=0, select bank0
 10989  0683  1303               	bcf	3,6	;RP1=0, select bank0
 10990  0684  0821               	movf	?___llmod+1,w
 10991  0685  1683               	bsf	3,5	;RP0=1, select bank1
 10992  0686  1303               	bcf	3,6	;RP1=0, select bank1
 10993  0687  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10994  0688  1283               	bcf	3,5	;RP0=0, select bank0
 10995  0689  1303               	bcf	3,6	;RP1=0, select bank0
 10996  068A  0820               	movf	?___llmod,w
 10997  068B  1683               	bsf	3,5	;RP0=1, select bank1
 10998  068C  1303               	bcf	3,6	;RP1=0, select bank1
 10999  068D  00BF               	movwf	sprintf@tmpval^(0+128)
 11000  068E                     l3430:	
 11001                           
 11002                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1257:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
 11003  068E  083F               	movf	sprintf@tmpval^(0+128),w
 11004  068F  3E30               	addlw	48
 11005  0690  00AD               	movwf	??_sprintf^(0+128)
 11006  0691  0849               	movf	sprintf@sp^(0+128),w
 11007  0692  0084               	movwf	4
 11008  0693  082D               	movf	??_sprintf^(0+128),w
 11009  0694  1383               	bcf	3,7	;select IRP bank0
 11010  0695  0080               	movwf	0
 11011  0696  3001               	movlw	1
 11012  0697  00AD               	movwf	??_sprintf^(0+128)
 11013  0698  082D               	movf	??_sprintf^(0+128),w
 11014  0699  07C9               	addwf	sprintf@sp^(0+128),f
 11015  069A                     l3432:	
 11016                           
 11017                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1258:     v
      +                          al %= dpowers[c];
 11018  069A  084C               	movf	sprintf@c^(0+128),w
 11019  069B  00AD               	movwf	??_sprintf^(0+128)
 11020  069C  3001               	movlw	1
 11021  069D                     u5455:	
 11022  069D  1003               	clrc
 11023  069E  0DAD               	rlf	??_sprintf^(0+128),f
 11024  069F  3EFF               	addlw	-1
 11025  06A0  1D03               	skipz
 11026  06A1  2E9D               	goto	u5455
 11027  06A2  1003               	clrc
 11028  06A3  0D2D               	rlf	??_sprintf^(0+128),w
 11029  06A4  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11030  06A5  0084               	movwf	4
 11031  06A6  160A  158A  200A  120A  118A  	fcall	stringdir
 11032  06AB  1283               	bcf	3,5	;RP0=0, select bank0
 11033  06AC  1303               	bcf	3,6	;RP1=0, select bank0
 11034  06AD  00A0               	movwf	___llmod@divisor
 11035  06AE  160A  158A  200A  120A  118A  	fcall	stringdir
 11036  06B3  00A1               	movwf	___llmod@divisor+1
 11037  06B4  160A  158A  200A  120A  118A  	fcall	stringdir
 11038  06B9  00A2               	movwf	___llmod@divisor+2
 11039  06BA  160A  158A  200A  120A  118A  	fcall	stringdir
 11040  06BF  00A3               	movwf	___llmod@divisor+3
 11041  06C0  1683               	bsf	3,5	;RP0=1, select bank1
 11042  06C1  1303               	bcf	3,6	;RP1=0, select bank1
 11043  06C2  083A               	movf	(sprintf@val+3)^(0+128),w
 11044  06C3  1283               	bcf	3,5	;RP0=0, select bank0
 11045  06C4  1303               	bcf	3,6	;RP1=0, select bank0
 11046  06C5  00A7               	movwf	___llmod@dividend+3
 11047  06C6  1683               	bsf	3,5	;RP0=1, select bank1
 11048  06C7  1303               	bcf	3,6	;RP1=0, select bank1
 11049  06C8  0839               	movf	(sprintf@val+2)^(0+128),w
 11050  06C9  1283               	bcf	3,5	;RP0=0, select bank0
 11051  06CA  1303               	bcf	3,6	;RP1=0, select bank0
 11052  06CB  00A6               	movwf	___llmod@dividend+2
 11053  06CC  1683               	bsf	3,5	;RP0=1, select bank1
 11054  06CD  1303               	bcf	3,6	;RP1=0, select bank1
 11055  06CE  0838               	movf	(sprintf@val+1)^(0+128),w
 11056  06CF  1283               	bcf	3,5	;RP0=0, select bank0
 11057  06D0  1303               	bcf	3,6	;RP1=0, select bank0
 11058  06D1  00A5               	movwf	___llmod@dividend+1
 11059  06D2  1683               	bsf	3,5	;RP0=1, select bank1
 11060  06D3  1303               	bcf	3,6	;RP1=0, select bank1
 11061  06D4  0837               	movf	sprintf@val^(0+128),w
 11062  06D5  1283               	bcf	3,5	;RP0=0, select bank0
 11063  06D6  1303               	bcf	3,6	;RP1=0, select bank0
 11064  06D7  00A4               	movwf	___llmod@dividend
 11065  06D8  160A  158A  23A4  120A  118A  	fcall	___llmod
 11066  06DD  1283               	bcf	3,5	;RP0=0, select bank0
 11067  06DE  1303               	bcf	3,6	;RP1=0, select bank0
 11068  06DF  0823               	movf	?___llmod+3,w
 11069  06E0  1683               	bsf	3,5	;RP0=1, select bank1
 11070  06E1  1303               	bcf	3,6	;RP1=0, select bank1
 11071  06E2  00BA               	movwf	(sprintf@val+3)^(0+128)
 11072  06E3  1283               	bcf	3,5	;RP0=0, select bank0
 11073  06E4  1303               	bcf	3,6	;RP1=0, select bank0
 11074  06E5  0822               	movf	?___llmod+2,w
 11075  06E6  1683               	bsf	3,5	;RP0=1, select bank1
 11076  06E7  1303               	bcf	3,6	;RP1=0, select bank1
 11077  06E8  00B9               	movwf	(sprintf@val+2)^(0+128)
 11078  06E9  1283               	bcf	3,5	;RP0=0, select bank0
 11079  06EA  1303               	bcf	3,6	;RP1=0, select bank0
 11080  06EB  0821               	movf	?___llmod+1,w
 11081  06EC  1683               	bsf	3,5	;RP0=1, select bank1
 11082  06ED  1303               	bcf	3,6	;RP1=0, select bank1
 11083  06EE  00B8               	movwf	(sprintf@val+1)^(0+128)
 11084  06EF  1283               	bcf	3,5	;RP0=0, select bank0
 11085  06F0  1303               	bcf	3,6	;RP1=0, select bank0
 11086  06F1  0820               	movf	?___llmod,w
 11087  06F2  1683               	bsf	3,5	;RP0=1, select bank1
 11088  06F3  1303               	bcf	3,6	;RP1=0, select bank1
 11089  06F4  00B7               	movwf	sprintf@val^(0+128)
 11090  06F5                     l3434:	
 11091                           
 11092                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(c--) {
 11093  06F5  3001               	movlw	1
 11094  06F6  02CC               	subwf	sprintf@c^(0+128),f
 11095  06F7  0A4C               	incf	sprintf@c^(0+128),w
 11096  06F8  1D03               	btfss	3,2
 11097  06F9  2EFB               	goto	u5461
 11098  06FA  2EFC               	goto	u5460
 11099  06FB                     u5461:	
 11100  06FB  2DF4               	goto	l3426
 11101  06FC                     u5460:	
 11102  06FC  2F0E               	goto	l3442
 11103  06FD                     l3436:	
 11104                           
 11105                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1262:     (
      +                          (*sp++ = ('0')));
 11106  06FD  3030               	movlw	48
 11107  06FE  00AD               	movwf	??_sprintf^(0+128)
 11108  06FF  0849               	movf	sprintf@sp^(0+128),w
 11109  0700  0084               	movwf	4
 11110  0701  082D               	movf	??_sprintf^(0+128),w
 11111  0702  1383               	bcf	3,7	;select IRP bank0
 11112  0703  0080               	movwf	0
 11113  0704                     l3438:	
 11114  0704  3001               	movlw	1
 11115  0705  00AD               	movwf	??_sprintf^(0+128)
 11116  0706  082D               	movf	??_sprintf^(0+128),w
 11117  0707  07C9               	addwf	sprintf@sp^(0+128),f
 11118  0708                     l3440:	
 11119                           
 11120                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1263:     p
      +                          rec--;
 11121  0708  30FF               	movlw	255
 11122  0709  07CA               	addwf	sprintf@prec^(0+128),f
 11123  070A  1803               	skipnc
 11124  070B  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11125  070C  30FF               	movlw	255
 11126  070D  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11127  070E                     l3442:	
 11128                           
 11129                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1261:    wh
      +                          ile(prec) {
 11130  070E  084A               	movf	sprintf@prec^(0+128),w
 11131  070F  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11132  0710  1D03               	btfss	3,2
 11133  0711  2F13               	goto	u5471
 11134  0712  2F14               	goto	u5470
 11135  0713                     u5471:	
 11136  0713  2EFD               	goto	l3436
 11137  0714                     u5470:	
 11138  0714  2FDA               	goto	l3490
 11139  0715                     l3444:	
 11140                           
 11141                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1316:   if(
      +                          prec == 0 && val == 0)
 11142  0715  084A               	movf	sprintf@prec^(0+128),w
 11143  0716  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11144  0717  1D03               	btfss	3,2
 11145  0718  2F1A               	goto	u5481
 11146  0719  2F1B               	goto	u5480
 11147  071A                     u5481:	
 11148  071A  2F29               	goto	l354
 11149  071B                     u5480:	
 11150  071B                     l3446:	
 11151  071B  083A               	movf	(sprintf@val+3)^(0+128),w
 11152  071C  0439               	iorwf	(sprintf@val+2)^(0+128),w
 11153  071D  0438               	iorwf	(sprintf@val+1)^(0+128),w
 11154  071E  0437               	iorwf	sprintf@val^(0+128),w
 11155  071F  1D03               	skipz
 11156  0720  2F22               	goto	u5491
 11157  0721  2F23               	goto	u5490
 11158  0722                     u5491:	
 11159  0722  2F29               	goto	l354
 11160  0723                     u5490:	
 11161  0723                     l3448:	
 11162                           
 11163                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1317:    pr
      +                          ec++;
 11164  0723  3001               	movlw	1
 11165  0724  07CA               	addwf	sprintf@prec^(0+128),f
 11166  0725  1803               	skipnc
 11167  0726  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11168  0727  3000               	movlw	0
 11169  0728  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11170  0729                     l354:	
 11171                           
 11172                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1365:   if(
      +                          c < prec)
 11173  0729  084B               	movf	(sprintf@prec+1)^(0+128),w
 11174  072A  3A80               	xorlw	128
 11175  072B  3C80               	sublw	128
 11176  072C  1D03               	skipz
 11177  072D  2F30               	goto	u5505
 11178  072E  084A               	movf	sprintf@prec^(0+128),w
 11179  072F  024C               	subwf	sprintf@c^(0+128),w
 11180  0730                     u5505:	
 11181  0730  1803               	skipnc
 11182  0731  2F33               	goto	u5501
 11183  0732  2F34               	goto	u5500
 11184  0733                     u5501:	
 11185  0733  2F3B               	goto	l3452
 11186  0734                     u5500:	
 11187  0734                     l3450:	
 11188                           
 11189                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1366:    c 
      +                          = (char)prec;
 11190  0734  1683               	bsf	3,5	;RP0=1, select bank1
 11191  0735  1303               	bcf	3,6	;RP1=0, select bank1
 11192  0736  084A               	movf	sprintf@prec^(0+128),w
 11193  0737  00AD               	movwf	??_sprintf^(0+128)
 11194  0738  082D               	movf	??_sprintf^(0+128),w
 11195  0739  00CC               	movwf	sprintf@c^(0+128)
 11196  073A  2F53               	goto	l3456
 11197  073B                     l3452:	
 11198  073B  1683               	bsf	3,5	;RP0=1, select bank1
 11199  073C  1303               	bcf	3,6	;RP1=0, select bank1
 11200  073D  084B               	movf	(sprintf@prec+1)^(0+128),w
 11201  073E  3A80               	xorlw	128
 11202  073F  00AD               	movwf	??_sprintf^(0+128)
 11203  0740  3080               	movlw	128
 11204  0741  022D               	subwf	??_sprintf^(0+128),w
 11205  0742  1D03               	skipz
 11206  0743  2F46               	goto	u5515
 11207  0744  084C               	movf	sprintf@c^(0+128),w
 11208  0745  024A               	subwf	sprintf@prec^(0+128),w
 11209  0746                     u5515:	
 11210  0746  1803               	skipnc
 11211  0747  2F49               	goto	u5511
 11212  0748  2F4A               	goto	u5510
 11213  0749                     u5511:	
 11214  0749  2F53               	goto	l3456
 11215  074A                     u5510:	
 11216  074A                     l3454:	
 11217                           
 11218                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1368:    pr
      +                          ec = c;
 11219  074A  1683               	bsf	3,5	;RP0=1, select bank1
 11220  074B  1303               	bcf	3,6	;RP1=0, select bank1
 11221  074C  084C               	movf	sprintf@c^(0+128),w
 11222  074D  00AD               	movwf	??_sprintf^(0+128)
 11223  074E  01AE               	clrf	(??_sprintf^(0+128)+1)
 11224  074F  082D               	movf	??_sprintf^(0+128),w
 11225  0750  00CA               	movwf	sprintf@prec^(0+128)
 11226  0751  082E               	movf	(??_sprintf+1)^(0+128),w
 11227  0752  00CB               	movwf	(sprintf@prec+1)^(0+128)
 11228  0753                     l3456:	
 11229                           
 11230                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1371:   if(
      +                          width && flag & 0x03)
 11231  0753  1683               	bsf	3,5	;RP0=1, select bank1
 11232  0754  1303               	bcf	3,6	;RP1=0, select bank1
 11233  0755  083D               	movf	sprintf@width^(0+128),w
 11234  0756  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11235  0757  1903               	btfsc	3,2
 11236  0758  2F5A               	goto	u5521
 11237  0759  2F5B               	goto	u5520
 11238  075A                     u5521:	
 11239  075A  2F6D               	goto	l3462
 11240  075B                     u5520:	
 11241  075B                     l3458:	
 11242  075B  3003               	movlw	3
 11243  075C  053B               	andwf	sprintf@flag^(0+128),w
 11244  075D  00AD               	movwf	??_sprintf^(0+128)
 11245  075E  3000               	movlw	0
 11246  075F  053C               	andwf	(sprintf@flag+1)^(0+128),w
 11247  0760  00AE               	movwf	(??_sprintf+1)^(0+128)
 11248  0761  082D               	movf	??_sprintf^(0+128),w
 11249  0762  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11250  0763  1903               	btfsc	3,2
 11251  0764  2F66               	goto	u5531
 11252  0765  2F67               	goto	u5530
 11253  0766                     u5531:	
 11254  0766  2F6D               	goto	l3462
 11255  0767                     u5530:	
 11256  0767                     l3460:	
 11257                           
 11258                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1372:    wi
      +                          dth--;
 11259  0767  30FF               	movlw	255
 11260  0768  07BD               	addwf	sprintf@width^(0+128),f
 11261  0769  1803               	skipnc
 11262  076A  0ABE               	incf	(sprintf@width+1)^(0+128),f
 11263  076B  30FF               	movlw	255
 11264  076C  07BE               	addwf	(sprintf@width+1)^(0+128),f
 11265  076D                     l3462:	
 11266                           
 11267                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1374:   if(
      +                          flag & 0x4000) {
 11268  076D  1F3C               	btfss	(sprintf@flag+1)^(0+128),6
 11269  076E  2F70               	goto	u5541
 11270  076F  2F71               	goto	u5540
 11271  0770                     u5541:	
 11272  0770  2F8C               	goto	l3470
 11273  0771                     u5540:	
 11274  0771                     l3464:	
 11275                           
 11276                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1375:    if
      +                          (width > prec)
 11277  0771  084B               	movf	(sprintf@prec+1)^(0+128),w
 11278  0772  3A80               	xorlw	128
 11279  0773  00AD               	movwf	??_sprintf^(0+128)
 11280  0774  083E               	movf	(sprintf@width+1)^(0+128),w
 11281  0775  3A80               	xorlw	128
 11282  0776  022D               	subwf	??_sprintf^(0+128),w
 11283  0777  1D03               	skipz
 11284  0778  2F7B               	goto	u5555
 11285  0779  083D               	movf	sprintf@width^(0+128),w
 11286  077A  024A               	subwf	sprintf@prec^(0+128),w
 11287  077B                     u5555:	
 11288  077B  1803               	skipnc
 11289  077C  2F7E               	goto	u5551
 11290  077D  2F7F               	goto	u5550
 11291  077E                     u5551:	
 11292  077E  2F88               	goto	l3468
 11293  077F                     u5550:	
 11294  077F                     l3466:	
 11295                           
 11296                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1376:     w
      +                          idth -= prec;
 11297  077F  1683               	bsf	3,5	;RP0=1, select bank1
 11298  0780  1303               	bcf	3,6	;RP1=0, select bank1
 11299  0781  084A               	movf	sprintf@prec^(0+128),w
 11300  0782  02BD               	subwf	sprintf@width^(0+128),f
 11301  0783  084B               	movf	(sprintf@prec+1)^(0+128),w
 11302  0784  1C03               	skipc
 11303  0785  03BE               	decf	(sprintf@width+1)^(0+128),f
 11304  0786  02BE               	subwf	(sprintf@width+1)^(0+128),f
 11305  0787  2F8C               	goto	l3470
 11306  0788                     l3468:	
 11307                           
 11308                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1378:     w
      +                          idth = 0;
 11309  0788  1683               	bsf	3,5	;RP0=1, select bank1
 11310  0789  1303               	bcf	3,6	;RP1=0, select bank1
 11311  078A  01BD               	clrf	sprintf@width^(0+128)
 11312  078B  01BE               	clrf	(sprintf@width+1)^(0+128)
 11313  078C                     l3470:	
 11314                           
 11315                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1407:   if(
      +                          width > c)
 11316  078C  083E               	movf	(sprintf@width+1)^(0+128),w
 11317  078D  3A80               	xorlw	128
 11318  078E  3C80               	sublw	128
 11319  078F  1D03               	skipz
 11320  0790  2F93               	goto	u5565
 11321  0791  083D               	movf	sprintf@width^(0+128),w
 11322  0792  024C               	subwf	sprintf@c^(0+128),w
 11323  0793                     u5565:	
 11324  0793  1803               	skipnc
 11325  0794  2F96               	goto	u5561
 11326  0795  2F97               	goto	u5560
 11327  0796                     u5561:	
 11328  0796  2FA3               	goto	l3474
 11329  0797                     u5560:	
 11330  0797                     l3472:	
 11331                           
 11332                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1408:    wi
      +                          dth -= c;
 11333  0797  1683               	bsf	3,5	;RP0=1, select bank1
 11334  0798  1303               	bcf	3,6	;RP1=0, select bank1
 11335  0799  084C               	movf	sprintf@c^(0+128),w
 11336  079A  00AD               	movwf	??_sprintf^(0+128)
 11337  079B  01AE               	clrf	(??_sprintf^(0+128)+1)
 11338  079C  082D               	movf	??_sprintf^(0+128),w
 11339  079D  02BD               	subwf	sprintf@width^(0+128),f
 11340  079E  082E               	movf	(??_sprintf+1)^(0+128),w
 11341  079F  1C03               	skipc
 11342  07A0  03BE               	decf	(sprintf@width+1)^(0+128),f
 11343  07A1  02BE               	subwf	(sprintf@width+1)^(0+128),f
 11344  07A2  2FA7               	goto	l3476
 11345  07A3                     l3474:	
 11346                           
 11347                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1410:    wi
      +                          dth = 0;
 11348  07A3  1683               	bsf	3,5	;RP0=1, select bank1
 11349  07A4  1303               	bcf	3,6	;RP1=0, select bank1
 11350  07A5  01BD               	clrf	sprintf@width^(0+128)
 11351  07A6  01BE               	clrf	(sprintf@width+1)^(0+128)
 11352  07A7                     l3476:	
 11353                           
 11354                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1448:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1450:    if(w
      +                          idth
 11355  07A7  083D               	movf	sprintf@width^(0+128),w
 11356  07A8  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11357  07A9  1903               	btfsc	3,2
 11358  07AA  2FAC               	goto	u5571
 11359  07AB  2FAD               	goto	u5570
 11360  07AC                     u5571:	
 11361  07AC  2FC4               	goto	l3484
 11362  07AD                     u5570:	
 11363  07AD                     l3478:	
 11364                           
 11365                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1456:      
      +                          ((*sp++ = (' ')));
 11366  07AD  3020               	movlw	32
 11367  07AE  00AD               	movwf	??_sprintf^(0+128)
 11368  07AF  0849               	movf	sprintf@sp^(0+128),w
 11369  07B0  0084               	movwf	4
 11370  07B1  082D               	movf	??_sprintf^(0+128),w
 11371  07B2  1383               	bcf	3,7	;select IRP bank0
 11372  07B3  0080               	movwf	0
 11373  07B4                     l3480:	
 11374  07B4  3001               	movlw	1
 11375  07B5  00AD               	movwf	??_sprintf^(0+128)
 11376  07B6  082D               	movf	??_sprintf^(0+128),w
 11377  07B7  07C9               	addwf	sprintf@sp^(0+128),f
 11378  07B8                     l3482:	
 11379  07B8  30FF               	movlw	255
 11380  07B9  07BD               	addwf	sprintf@width^(0+128),f
 11381  07BA  1803               	skipnc
 11382  07BB  0ABE               	incf	(sprintf@width+1)^(0+128),f
 11383  07BC  30FF               	movlw	255
 11384  07BD  07BE               	addwf	(sprintf@width+1)^(0+128),f
 11385  07BE  083D               	movf	sprintf@width^(0+128),w
 11386  07BF  043E               	iorwf	(sprintf@width+1)^(0+128),w
 11387  07C0  1D03               	btfss	3,2
 11388  07C1  2FC3               	goto	u5581
 11389  07C2  2FC4               	goto	u5580
 11390  07C3                     u5581:	
 11391  07C3  2FAD               	goto	l3478
 11392  07C4                     u5580:	
 11393  07C4                     l3484:	
 11394                           
 11395                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1464:    if
      +                          (flag & 0x03)
 11396  07C4  3003               	movlw	3
 11397  07C5  053B               	andwf	sprintf@flag^(0+128),w
 11398  07C6  00AD               	movwf	??_sprintf^(0+128)
 11399  07C7  3000               	movlw	0
 11400  07C8  053C               	andwf	(sprintf@flag+1)^(0+128),w
 11401  07C9  00AE               	movwf	(??_sprintf+1)^(0+128)
 11402  07CA  082D               	movf	??_sprintf^(0+128),w
 11403  07CB  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11404  07CC  1903               	btfsc	3,2
 11405  07CD  2FCF               	goto	u5591
 11406  07CE  2FD0               	goto	u5590
 11407  07CF                     u5591:	
 11408  07CF  2FDA               	goto	l3490
 11409  07D0                     u5590:	
 11410  07D0                     l3486:	
 11411                           
 11412                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1465:     (
      +                          (*sp++ = ('-')));
 11413  07D0  302D               	movlw	45
 11414  07D1  00AD               	movwf	??_sprintf^(0+128)
 11415  07D2  0849               	movf	sprintf@sp^(0+128),w
 11416  07D3  0084               	movwf	4
 11417  07D4  082D               	movf	??_sprintf^(0+128),w
 11418  07D5  1383               	bcf	3,7	;select IRP bank0
 11419  07D6  0080               	movwf	0
 11420  07D7  160A  118A  2D13   	goto	l3246
 11421  07DA                     l3490:	
 11422                           
 11423                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 553:  while
      +                          ((c = *f++)) {
 11424  07DA  3001               	movlw	1
 11425  07DB  07A8               	addwf	sprintf@f^(0+128),f
 11426  07DC  30FF               	movlw	-1
 11427  07DD  0728               	addwf	sprintf@f^(0+128),w
 11428  07DE  0084               	movwf	4
 11429  07DF  160A  158A  200A  120A  118A  	fcall	stringdir
 11430  07E4  00AD               	movwf	??_sprintf^(0+128)
 11431  07E5  082D               	movf	??_sprintf^(0+128),w
 11432  07E6  00CC               	movwf	sprintf@c^(0+128)
 11433  07E7  084C               	movf	sprintf@c^(0+128),w
 11434  07E8  1D03               	btfss	3,2
 11435  07E9  2FEB               	goto	u5601
 11436  07EA  2FEE               	goto	u5600
 11437  07EB                     u5601:	
 11438  07EB  160A  118A  2D06   	goto	l3242
 11439  07EE                     u5600:	
 11440  07EE                     l3492:	
 11441                           
 11442                           ;C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\doprnt.c: 1564:  *sp 
      +                          = 0;
 11443  07EE  0849               	movf	sprintf@sp^(0+128),w
 11444  07EF  0084               	movwf	4
 11445  07F0  1383               	bcf	3,7	;select IRP bank0
 11446  07F1  0180               	clrf	0
 11447  07F2                     l369:	
 11448  07F2  0008               	return
 11449  07F3                     __end_of_sprintf:	


Data Sizes:
    Strings     21
    Constant    144
    Data        0
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     10      10
    BANK0            80     80      80
    BANK1            80     45      66
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> string2(BANK1[5]), string1(BANK1[5]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    LCD_WRITE_STRING@a	PTR unsigned char  size(2) Largest target is 15
		 -> STR_3(CODE[15]), string2(BANK1[5]), string1(BANK1[5]), 


Critical Paths under _main in COMMON

    _main->_LCD_SET_CURSOR
    _main->_LCD_WRITE_STRING
    _sprintf->__div_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwdiv
    _LCD_WRITE_STRING->_LCD_WRITE_CHAR
    _LCD_SET_CURSOR->_LCD_CMD
    _LCD_INIT->_LCD_CMD

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   38698
                                             76 BANK0      4     4      0
                           _ADC_init
                        _EUSART_Init
                           _LCD_INIT
                     _LCD_SET_CURSOR
                   _LCD_WRITE_STRING
                          _Port_init
                            ___flmul
                           ___xxtofl
                            _sprintf
                   _start_conversion
 ---------------------------------------------------------------------------------
 (1) _start_conversion                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32269
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _Port_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_WRITE_STRING                                     7     5      2     340
                                              6 COMMON     4     2      2
                                              0 BANK0      3     3      0
                     _LCD_WRITE_CHAR
 ---------------------------------------------------------------------------------
 (2) _LCD_WRITE_CHAR                                       3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_SET_CURSOR                                       4     3      1     384
                                              6 COMMON     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             2     2      0      22
                                              6 COMMON     2     2      0
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _LCD_CMD                                              3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Init                                          2     1      1     120
                                              3 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             6     3      3     316
                                              3 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _EUSART_Init
   _LCD_INIT
     _LCD_CMD
   _LCD_SET_CURSOR
     _LCD_CMD
   _LCD_WRITE_STRING
     _LCD_WRITE_CHAR
   _Port_init
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _start_conversion

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      A       A       1       76.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     2D      42       7       82.5%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9C      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Feb 12 09:21:41 2020

          ?_LCD_WRITE_CHAR 0071                          l9 1974                          pc 0002  
              __CFG_CP$OFF 0000                         l21 1BA3                         l30 1A6A  
                       l24 198B                         l18 19AF               ___awdiv@sign 0026  
                       fsr 0004        ___wmul@multiplicand 0076        __Umul8_16@word_mpld 0022  
        ?_LCD_WRITE_STRING 0077                        l130 11B2                        l140 11EB  
                      l132 11B7                        l108 0819                        l141 11F0  
                      l133 11BC                        l150 121D                        l142 11F5  
                      l134 11C1                        l126 0013                        l151 1222  
                      l143 11FA                        l135 11C6                        l144 11FF  
                      l153 1273                        l145 1204                        l137 11E1  
                      l146 1209                        l138 125B                        l170 19FD  
                      l147 120E                        l139 11E6                        l148 1213  
                      l308 15C3                        l149 1218                        l168 19ED  
                      l409 1CBA                        l601 10E2                        l354 0729  
                      l346 0562                        l339 051E                        l700 12D7  
                      l373 19BC                        l526 1D23                        l286 0FFF  
                      l375 19D4                        l543 11AF                        l279 025A  
                      l560 1AEB                        l704 137E                        l544 1112  
                      l561 1B00                        l721 1449                        l713 14FB  
                      l369 07F2                        l706 1355                        l554 11A0  
                      l802 0C08                        l731 148F                        l547 1170  
                      l539 1C52                        l564 1DBE                        l572 194C  
                      l725 146D                        l629 1BF9                        l742 14EF  
                      l734 14CD                        l590 10EF                        l559 1ACF  
                      l567 1E2A                        l743 14FB                        l583 1D8A  
                      l591 1061                        l568 1E43                        l576 1D9F  
                      l840 1EAD                        l808 0C90                        l746 1B50  
                      l586 1D9F                        l834 1E68                        l594 10B2  
                      l836 1EFF                        l862 1A14                        l854 195E  
                      l847 1EC9                        l679 1AB0                        l848 1ED5  
                      l864 1A26                        l689 004D                        l796 0C9C  
             __CFG_CPD$OFF 0000                        _isr 1008                        fsr0 0004  
       ??_LCD_WRITE_STRING 0020                        indf 0000               ___awmod@sign 007A  
             ___flmul@aexp 003C               ___flmul@bexp 003D   __end_of_start_conversion 0014  
             ___flmul@sign 0037               ___flmul@temp 0042               ___flmul@prod 003E  
          __end_of_LCD_CMD 1975               ?_EUSART_Init 0074               __CFG_LVP$OFF 0000  
             ___fltol@exp1 0061                       l3000 1AC7                       l3002 1AE3  
                     l3010 1DA0                       l3004 1AFD                       l3020 1E02  
                     l3012 1DB6                       l3100 1E47                       l2300 1A22  
                     l3006 1AFF                       l3022 1E06                       l3014 1DD2  
                     l3030 1942                       l3102 1E4C                       l2310 1CC7  
                     l3024 1E40                       l3016 1DDA                       l3032 194A  
                     l3040 1D31                       l3120 1E96                       l3112 1E79  
                     l3104 1E50                       l2400 1A98                       l2320 1CD8  
                     l2312 1CC9                       l2304 1CBB                       l3210 1261  
                     l3202 11CB                       l3026 1E42                       l3018 1DDE  
                     l3034 194C                       l3050 1D58                       l3130 1ECD  
                     l3122 1EA4                       l3114 1E7E                       l3106 1E60  
                     l2402 1A9E                       l2330 1CF0                       l2322 1CDE  
                     l2314 1CCD                       l2306 1CBE                       l3212 1267  
                     l2500 1309                       l3060 1D66                       l3052 1D5A  
                     l3044 1D3A                       l3140 1EF7                       l3132 1ED7  
                     l3124 1EB4                       l3116 1E8B                       l3108 1E70  
                     l2404 1A9F                       l2420 0028                       l2412 0014  
                     l2332 1D01                       l2324 1CE1                       l2340 1D15  
                     l2316 1CD2                       l2308 1CC2                       l3300 1649  
                     l3214 126E                       l3206 1227                       l3230 19E0  
                     l3150 199E                       l2510 131D                       l2502 130D  
                     l3070 1D8F                       l3054 1D5E                       l3062 1D78  
                     l3046 1D4F                       l3038 1D24                       l3134 1EED  
                     l3126 1EBF                       l3118 1E92                       l2406 1AA6  
                     l2422 002C                       l2414 001A                       l2430 0049  
                     l2342 1D1A                       l2334 1D07                       l2326 1CE8  
                     l2318 1CD6                       l2350 1BFB                       l3310 1689  
                     l3302 164D                       l3216 126F                       l3208 125C  
                     l3232 19E5                       l3160 1B5D                       l3152 19A4  
                     l3144 198D                       l2600 1494                       l2520 1362  
                     l2504 1311                       l2512 1321                       l2440 1285  
                     l3072 1D94                       l3048 1D50                       l3080 1BBE  
                     l3136 1EF2                       l3128 1EC3                       l2408 1AAC  
                     l2424 0036                       l2416 001D                       l2344 1D1F  
                     l2336 1D08                       l2328 1CEC                       l2360 1C0F  
                     l2352 1BFF                       l3400 0512                       l3320 16E8  
                     l3312 169C                       l3304 1651                       l3240 14FF  
                     l3218 1270                       l3234 19F2                       l3170 1B7B  
                     l3162 1B63                       l3154 19A9                       l3146 1992  
                     l2610 14D2                       l2602 1499                       l2522 1364  
                     l2530 1376                       l2514 1322                       l2506 1315  
                     l2450 1299                       l2442 1286                       l2434 1274  
                     l3082 1BC2                       l3090 1BF1                       l3074 1BA4  
                     l3138 1EF6                       l2290 1A01                       l2426 003C  
                     l2418 0024                       l2338 1D0F                       l2370 1C27  
                     l2362 1C15                       l2354 1C04                       l3410 0546  
                     l3402 0526                       l3322 1733                       l3314 16BF  
                     l3306 1678                       l3330 1794                       l3250 151C  
                     l3242 1506                       l3236 19F7                       l3228 19D6  
                     l3180 1B97                       l3172 1B7F                       l3164 1B6B  
                     l3156 1B51                       l3148 1997                       l2620 14E9  
                     l2612 14D7                       l2604 14A7                       l2540 13A7  
                     l2532 1382                       l2524 1368                       l2516 1339  
                     l2508 1319                       l2460 12AF                       l2444 128B  
                     l2452 129B                       l2436 127B                       l3068 1D7F  
                     l3084 1BD4                       l3076 1BAE                       l2292 1A03  
                     l2700 0AFC                       l2428 0043                       l2380 1C49  
                     l2372 1C31                       l2364 1C18                       l2356 1C06  
                     l2348 1BFA                       l3420 0577                       l3412 0555  
                     l3404 052F                       l3340 02AB                       l3332 17A3  
                     l3324 175A                       l3316 16C3                       l3308 1683  
                     l3260 155C                       l3252 152C                       l3244 150C  
                     l3182 1B9D                       l3174 1B85                       l3166 1B71  
                     l3158 1B54                       l3190 1A4C                       l2622 14EB  
                     l2614 14DF                       l2606 14AB                       l2550 13BE  
                     l2542 13AB                       l2534 1387                       l2526 1369  
                     l2518 1359                       l2470 12C4                       l2462 12B5  
                     l2454 12A3                       l2446 1290                       l2438 1281  
                     l3094 1B01                       l3086 1BE2                       l3078 1BB1  
                     l2294 1A0A                       l2710 0BB4                       l2702 0B29  
                     l2630 0943                       l2390 1A75                       l2382 1C4E  
                     l2374 1C37                       l2366 1C1F                       l2358 1C0A  
                     l3430 068E                       l3422 057B                       l3414 055C  
                     l3406 0533                       l3350 0312                       l3342 02BA  
                     l3334 17EA                       l3326 1763                       l3318 16C9  
                     l3270 1582                       l3254 1530                       l3262 156C  
                     l3246 1513                       l3238 0010                       l3176 1B8B  
                     l3168 1B75                       l3184 1A27                       l3192 0802  
                     l2624 14F6                       l2616 14E4                       l2608 14C9  
                     l2560 1421                       l2552 13BF                       l2544 13AF  
                     l2528 1372                       l2480 12E1                       l2472 12CC  
                     l2464 12B9                       l2456 12A8                       l2448 1298  
                     l3096 1B05                       l3088 1BEB                       l2296 1A0E  
                     l2720 0BD9                       l2712 0BBD                       l2704 0B39  
                     l2640 0958                       l2632 0949                       l2392 1A78  
                     l2800 0217                       l2376 1C3E                       l2368 1C23  
                     l3440 0708                       l3432 069A                       l3424 0599  
                     l3416 056B                       l3408 0539                       l3360 03CA  
                     l3344 02E3                       l3336 025B                       l3328 178C  
                     l3280 15C1                       l3272 1597                       l3264 157A  
                     l3256 1545                       l3248 1518                       l3520 081A  
                     l3178 1B91                       l3186 1A2A                       l3194 0806  
                     l2626 14FA                       l2618 14E5                       l2570 1456  
                     l2562 1427                       l2554 13C8                       l2546 13B8  
                     l2538 1390                       l2490 12F5                       l2482 12E5  
                     l2474 12CD                       l2466 12BA                       l2458 12AE  
                     l2298 1A1D                       l2730 0BF1                       l2722 0BE2  
                     l2714 0BCB                       l2706 0B66                       l2650 0975  
                     l2642 0960                       l2634 094D                       l2394 1A7F  
                     l2386 1A6B                       l2378 1C44                       l2810 0CAD  
                     l3450 0734                       l3442 070E                       l3426 05F4  
                     l3434 06F5                       l3418 0570                       l3362 03CC  
                     l3354 035D                       l3346 02EC                       l3338 0284  
                     l3290 15F3                       l3274 15AA                       l3266 157B  
                     l3258 1558                       l3530 0842                       l3522 0824  
                     l3188 1A46                       l3196 0809                       l2580 1471  
                     l2564 142C                       l2548 13BA                       l2556 13CD  
                     l2492 12F9                       l2484 12E9                       l2468 12BF  
                     l2476 12CF                       l2740 0C20                       l2732 0C05  
                     l2716 0BD4                       l2724 0BE8                       l2708 0B8C  
                     l2660 098C                       l2652 0979                       l2644 0962  
                     l2636 094E                       l2628 093C                       l2396 1A83  
                     l2388 1A6F                       l2804 0CA0                       l3460 0767  
                     l3452 073B                       l3436 06FD                       l3428 064F  
                     l3380 043C                       l3372 0405                       l3348 02F4  
                     l3356 0366                       l3292 15F7                       l3444 0715  
                     l3284 15C5                       l3276 15AE                       l3268 157F  
                     l3540 0901                       l3532 0845                       l3524 082F  
                     l3198 11B1                       l2582 1474                       l2574 145F  
                     l2558 13E3                       l2566 143B                       l2590 1481  
                     l2494 12FD                       l2486 12ED                       l2478 12DD  
                     l2910 10FD                       l2902 10D7                       l2750 0C5B  
                     l2742 0C24                       l2726 0BEC                       l2718 0BD8  
                     l2662 098E                       l2654 097A                       l2646 096A  
                     l2638 0953                       l2398 1A87                       l2822 0E26  
                     l2806 0CA4                       l3470 078C                       l3462 076D  
                     l3454 074A                       l3446 071B                       l3438 0704  
                     l3390 045E                       l3382 0443                       l3374 040F  
                     l3358 039B                       l3294 1605                       l3622 15D9  
                     l3286 15E1                       l3278 15BF                       l3550 092F  
                     l3542 0909                       l3534 088D                       l3526 0836  
                     l3624 11D3                       l2592 1482                       l2584 1476  
                     l2576 1468                       l2568 1451                       l2496 1301  
                     l2488 12F1                       l2920 1113                       l2904 10E7  
                     l2760 0C88                       l2752 0C6A                       l2744 0C3D  
                     l2736 0C0D                       l2728 0BED                       l2680 09FF  
                     l2672 09A9                       l2664 0996                       l2656 097F  
                     l2648 096F                       l2840 0FD3                       l2816 0D97  
                     l2808 0CA6                       l3480 07B4                       l3472 0797  
                     l3464 0771                       l3456 0753                       l3448 0723  
                     l3392 046C                       l3384 044C                       l3376 042A  
                     l3368 03CE                       l3296 1609                       l3288 15EF  
                     l3544 0912                       l3536 08D5                       l3528 083D  
                     l3626 122F                       l2770 1963                       l2594 1486  
                     l2586 147B                       l2578 146C                       l2498 1305  
                     l2930 1140                       l2922 111B                       l2914 1106  
                     l2762 0C89                       l2754 0C74                       l2738 0C12  
                     l2746 0C43                       l2690 0A7C                       l2682 0A2B  
                     l2674 09B9                       l2666 099B                       l2658 0984  
                     l2850 195B                       l2834 0F44                       l2818 0D9E  
                     l2826 0E53                       l3482 07B8                       l3474 07A3  
                     l3466 077F                       l3458 075B                       l3394 0473  
                     l3378 0430                       l3298 1630                       l3490 07DA  
                     l3546 091A                       l3538 08EB                       l2772 1965  
                     l2780 1979                       l2596 148C                       l2588 147D  
                     l2940 1174                       l2932 1152                       l2924 112C  
                     l2908 10F0                       l2764 0C94                       l2756 0C76  
                     l2748 0C50                       l2692 0A99                       l2684 0A47  
                     l2676 09C6                       l2668 09A0                       l2852 195D  
                     l2844 194E                       l2836 0F4B                       l2828 0E5A  
                     l3484 07C4                       l3476 07A7                       l3468 0788  
                     l3396 0478                       l3388 0451                       l3492 07EE  
                     l3548 0923                       l2774 1966                       l2782 197B  
                     l2934 1160                       l2926 112E                       l2870 1068  
                     l2862 104F                       l2758 0C84                       l2694 0AA9  
                     l2686 0A63                       l2678 09E3                       l2846 194F  
                     l3486 07D0                       l3478 07AD                       l3398 04D3  
                     l2776 1969                       l2768 1960                       l2784 1980  
                     l2960 19B0                       l2936 1161                       l2928 1137  
                     l2880 1099                       l2872 1077                       l2856 1033  
                     l2696 0AC6                       l2688 0A6C                       l2848 1955  
                     l2778 1976                       l2970 19D0                       l2962 19B2  
                     l2954 1195                       l2946 117C                       l2938 116A  
                     l2882 10A3                       l2874 1079                       l2858 1046  
                     l2698 0ADF                       l2794 0166                       l2786 0051  
                     l2980 1C75                       l2964 19B6                       l2956 11A5  
                     l2948 118E                       l2884 10A4                       l2876 1082  
                     l2868 1062                       l2796 016C                       l2788 0057  
                     l2990 1CA3                       l2982 1C79                       l2974 1C53  
                     l2966 19C3                       l2894 10BE                       l2886 10AC  
                     l2878 108B                       l2992 1CAC                       l2984 1C82  
                     l2976 1C65                       l2968 19CA                       l2888 10B6  
                     l2896 10D0                       l2986 1C94                       l2978 1C68  
                     l2994 1CB2                       l2988 1CA2                       l2998 1AB1  
                     ?_isr 0071                       STR_1 18AF                       STR_2 18AF  
                     STR_3 18A0                       u3000 1C27                       u3001 1C26  
                     u3010 1C31                       u3011 1C30                       u3110 1AAC  
                     u3030 1C44                       u3111 1AAB                       u3031 1C43  
                     u3015 1C2D                       u3200 1290                       u4000 0C88  
                     u3120 001A                       u3040 1C49                       u3201 128F  
                     u4001 0C87                       u3105 1AA0                       u3121 0019  
                     u3041 1C48                       u3025 1C38                       u3210 12AE  
                     u3050 1A75                       u4010 0057                       u3211 12AD  
                     u3051 1A74                       u4011 0056                       u3300 1359  
                     u3220 12B9                       u3140 002C                       u4100 0CAD  
                     u3301 1358                       u3221 12B8                       u3141 002B  
                     u4101 0CAC                       u3310 1368                       u3230 12BF  
                     u3070 1A87                       u3150 0036                       u3311 1367  
                     u3231 12BE                       u3071 1A86                       u3151 0035  
                     u3135 001E                       u3240 12C4                       u5000 1EC3  
                     u3241 12C3                       u5001 1EC2                       u3065 1A79  
                     u4025 0074                       u3410 13E3                       u3330 137E  
                     u3250 12DD                       u5010 1EC9                       u3090 1A98  
                     u3170 0049                       u4050 016C                       u3411 13E2  
                     u3331 137D                       u3251 12DC                       u5011 1EC8  
                     u3091 1A97                       u3171 0048                       u3155 0032  
                     u4051 016B                       u4035 00D0                       u4115 0CCF  
                     u5100 1A6A                       u3500 147B                       u3340 1382  
                     u3260 12E1                       u3180 1285                       u5020 1ECD  
                     u4220 0F4B                       u4140 0D9E                       u5101 1A69  
                     u3501 147A                       u3421 13FA                       u3413 13DF  
                     u3405 13C1                       u3341 1381                       u3325 136B  
                     u3261 12E0                       u3181 1284                       u5021 1ECC  
                     u3085 1A88                       u3165 003D                       u4045 0125  
                     u4221 0F4A                       u4205 0EB8                       u4141 0D9D  
                     u4125 0D0B                       u5110 1261                       u3510 1481  
                     u3430 140E                       u3422 13FB                       u3350 1387  
                     u3270 1339                       u3190 128B                       u5030 1EE2  
                     u4310 1099                       u5111 1260                       u3511 1480  
                     u3431 140F                       u3423 1400                       u3351 1386  
                     u3271 1338                       u3191 128A                       u4311 1098  
                     u3095 1A94                       u4215 0F03                       u4135 0D56  
                     u5120 19E5                       u3600 14D7                       u3520 1486  
                     u3440 142C                       u3432 1414                       u3424 1401  
                     u3280 1344                       u5040 1EF2                       u4400 10E7  
                     u5200 15F3                       u5121 19E4                       u3601 14D6  
                     u3521 1485                       u3441 142B                       u3433 1415  
                     u3425 1406                       u3361 1399                       u3281 1342  
                     u5041 1EF1                       u4401 10E6                       u4305 1084  
                     u4065 0189                       u5201 15F2                       u5130 19F7  
                     u3610 14E4                       u3530 148C                       u3450 1451  
                     u3426 1407                       u3370 13AB                       u3362 13A0  
                     u3290 1345                       u5050 1EF6                       u4410 10FD  
                     u4330 10B2                       u4090 0CA4                       u5210 1630  
                     u5131 19F6                       u3611 14E3                       u3531 148B  
                     u3451 1450                       u3371 13AA                       u3363 13A7  
                     u3275 1335                       u5051 1EF5                       u5035 1EDD  
                     u4411 10FC                       u4331 10B1                       u4315 1095  
                     u4075 01D6                       u4235 0F5E                       u4155 0DB1  
                     u4091 0CA3                       u5211 162F                       u5060 1992  
                     u3620 14E9                       u3540 1493                       u3460 1456  
                     u3380 13AF                       u4500 118D                       u4420 1111  
                     u4340 10B6                       u3700 099B                       u4260 1955  
                     u2900 1CF0                       u4180 0E5A                       u5300 02BA  
                     u5220 1678                       u5140 150C                       u5061 1991  
                     u3621 14E8                       u3541 1492                       u3461 1455  
                     u3381 13AE                       u4501 118C                       u4421 1110  
                     u4341 10B5                       u4325 10A5                       u3701 099A  
                     u4085 0222                       u4261 1954                       u2901 1CEF  
                     u4245 0F9A                       u4181 0E59                       u4165 0DED  
                     u5301 02B9                       u5221 1677                       u5141 150B  
                     u5070 19A4                       u3630 14FA                       u3550 1499  
                     u3390 13BE                       u4510 1194                       u4350 10BD  
                     u2830 1A0E                       u3710 09A0                       u4270 195B  
                     u5310 02E3                       u5230 16C3                       u5150 152C  
                     u5071 19A3                       u3631 14F9                       u3551 1498  
                     u3391 13BD                       u4511 1193                       u4351 10BC  
                     u2831 1A0D                       u3711 099F                       u4271 195A  
                     u4255 0FD6                       u4175 0E29                       u5311 02E2  
                     u5231 16C2                       u5151 152B                       u5080 1A34  
                     u3560 14AB                       u3480 146C                       u4600 1C79  
                     u4440 1152                       u4280 1046                       u3640 094D  
                     u2920 1D01                       u5400 0525                       u5240 175A  
                     u5160 156C                       u3561 14AA                       u3481 146B  
                     u4601 1C78                       u4441 1151                       u4281 1045  
                     u3801 0AEE                       u3721 09F1                       u3641 094C  
                     u2921 1D00                       u5401 0524                       u5305 02B6  
                     u5241 1759                       u5161 156B                       u5090 1A58  
                     u3570 14BA                       u3490 1471                       u4530 11A5  
                     u4370 10CF                       u4290 1060                       u2850 1A22  
                     u3802 0AF5                       u3722 09F8                       u3650 0953  
                     u5410 0546                       u5330 0404                       u5250 178C  
                     u5170 157A                       u3491 1470                       u3475 1461  
                     u4531 11A4                       u4435 1139                       u4371 10CE  
                     u4291 105F                       u2851 1A21                       u3811 0B1B  
                     u3803 0AFC                       u3731 0A0D                       u3723 09FF  
                     u3651 0952                       u2915 1CF1                       u4195 0E7C  
                     u5411 0545                       u5331 0403                       u5251 178B  
                     u5171 1579                       u4700 1DDE                       u3580 14C9  
                     u4620 1C94                       u4540 19B6                       u4460 1170  
                     u4380 10D6                       u3812 0B22                       u3732 0A14  
                     u3660 0958                       u2940 1D15                       u2860 1CC2  
                     u5500 0734                       u5420 0555                       u5340 040F  
                     u5260 17A3                       u5180 15BE                       u4701 1DDD  
                     u3581 14C8                       u4621 1C93                       u4541 19B5  
                     u4525 1197                       u4461 116F                       u4445 114E  
                     u4381 10D5                       u4365 10BF                       u2845 1A15  
                     u3821 0B48                       u3813 0B29                       u3741 0A39  
                     u3733 0A1B                       u3661 0957                       u2941 1D14  
                     u2925 1CFD                       u2861 1CC1                       u5501 0733  
                     u5421 0554                       u5341 040E                       u5325 03D1  
                     u5261 17A2                       u5181 15BD                       u3590 14D2  
                     u4470 1174                       u3910 0BEC                       u3830 0B72  
                     u3822 0B4F                       u3742 0A40                       u3670 0979  
                     u2950 1D1A                       u2870 1CCD                       u5510 074A  
                     u5430 0570                       u5350 042A                       u5270 025B  
                     u5190 15EF                       u4711 1DED                       u3591 14D1  
                     u3575 14B5                       u4615 1C7B                       u4471 1173  
                     u4455 1163                       u3911 0BEB                       u3823 0B56  
                     u3751 0A55                       u3743 0A47                       u3671 0978  
                     u2951 1D19                       u2935 1D09                       u2871 1CCC  
                     u5511 0749                       u5431 056F                       u5415 0542  
                     u5351 0429                       u5335 0400                       u5271 17FA  
                     u5191 15EC                       u4720 1E06                       u4712 1DEE  
                     u4640 1CB2                       u4480 117B                       u3920 0BF1  
                     u3752 0A5C                       u3680 097F                       u2880 1CDE  
                     u2960 1BFF                       u5600 07EE                       u5520 075B  
                     u5360 043C                       u5280 0284                       u4721 1E05  
                     u4713 1DF3                       u4641 1CB1                       u4625 1C90  
                     u4481 117A                       u3921 0BF0                       u3905 0BDB  
                     u3841 0B7E                       u3753 0A63                       u3681 097E  
                     u2881 1CDD                       u2961 1BFE                       u5601 07EB  
                     u5521 075A                       u5505 0730                       u5425 0551  
                     u5361 043B                       u5281 0283                       u5265 179F  
                     u4650 1AC7                       u4714 1DF4                       u4810 1D77  
                     u4570 19D0                       u3930 0C05                       u3850 0B9A  
                     u3842 0B85                       u3690 0984                       u2970 1C0A  
                     u5530 0767                       u5370 045E                       u5290 02AB  
                     u4651 1AC6                       u4731 1E15                       u4715 1DF9  
                     u4811 1D76                       u4635 1CA4                       u4571 19CF  
                     u4555 19BD                       u4395 10D9                       u3931 0C04  
                     u3843 0B8C                       u3835 0B6D                       u3771 0A8B  
                     u3691 0983                       u2971 1C09                       u5531 0766  
                     u5515 0746                       u5371 045D                       u5291 02AA  
                     u5275 17F5                       u4660 1AE3                       u4740 1E40  
                     u4732 1E16                       u4716 1DFA                       u4820 1D7E  
                     u4580 1C65                       u3940 0C0C                       u3772 0A92  
                     u2980 1C15                       u5540 0771                       u5460 06FC  
                     u5380 046C                       u4661 1AE2                       u4741 1E3F  
                     u4733 1E1B                       u4821 1D7D                       u4805 1D67  
                     u4581 1C64                       u4565 19C4                       u3941 0C0B  
                     u3861 0BA6                       u3781 0AB8                       u3773 0A99  
                     u3765 0A65                       u2981 1C14                       u5541 0770  
                     u5461 06FB                       u5445 05F7                       u5381 046B  
                     u4670 1AFD                       u4734 1E1C                       u4750 194A  
                     u4910 1BF1                       u3950 0C12                       u3862 0BAD  
                     u3782 0ABF                       u5550 077F                       u5470 0714  
                     u5630 083D                       u4671 1AFC                       u4735 1E21  
                     u4751 1949                       u4911 1BF0                       u4495 117D  
                     u3951 0C11                       u3863 0BB4                       u3855 0B95  
                     u3783 0AC6                       u2895 1CE2                       u5551 077E  
                     u5471 0713                       u5455 069D                       u5375 045A  
                     u5631 083C                       u4736 1E22                       u4680 1DB6  
                     u4840 1D8F                       u4760 1D31                       u4920 1E4C  
                     u3960 0C24                       u5560 0797                       u5480 071B  
                     u4745 1E3C                       u4681 1DB5                       u4841 1D8E  
                     u4761 1D30                       u4905 1BE3                       u4921 1E4B  
                     u3961 0C23                       u5561 0796                       u5481 071A  
                     u4690 1DD2                       u4850 1D94                       u4770 1D48  
                     u4930 1E50                       u3970 0C33                       u3890 0BD8  
                     u5570 07AD                       u5490 0723                       u5707 1970  
                     u4675 1AF9                       u4691 1DD1                       u4851 1D93  
                     u4835 1D81                       u4595 1C6A                       u4931 1E4F  
                     u3891 0BD7                       u3875 0BB6                       u3795 0AC8  
                     u2995 1C19                       u5571 07AC                       u5555 077B  
                     u5491 0722                       u5395 047B                       u4780 1D5E  
                     u4860 1BAE                       u4940 1E70                       u3980 0C50  
                     u5580 07C4                       u4781 1D5D                       u4861 1BAD  
                     u4941 1E6F                       u3981 0C4F                       u3885 0BCD  
                     u5581 07C3                       u5565 0793                       u4790 1D65  
                     u3990 0C6A                       u5590 07D0                       u5647 197E  
                     u4791 1D64                       u4775 1D43                       u3991 0C69  
                     u3975 0C2E                       u5591 07CF                       i1l96 102C  
                     u4880 1BC2                       u4960 1E91                       u5657 1987  
                     u4881 1BC1                       u4961 1E90                       u3985 0C4C  
                     u4890 1BD4                       u5667 1B58                       u4891 1BD3  
                     u4875 1BB3                       u4955 1E83                       u3995 0C66  
                     u4980 1EB3                       u5677 1B67                       u4981 1EB2  
                     u5687 1B73                       u4895 1BD0                       u4975 1EA5  
                     u5697 1B7D                       u4995 1EB8               __CFG_WRT$OFF 0000  
                     _main 081A                       _pot1 00D7                       _pot2 00D6  
                     btemp 007E                       start 000C           __end_of_ADC_init 1274  
            __CFG_IESO$OFF 0000               _sprintf$1211 00B2           __end_of_LCD_INIT 1BA4  
                    ??_isr 0071              ___fltol@sign1 0060            __end_of___fladd 14FC  
                    ?_main 0071            __end_of___awdiv 1D24            __end_of___flneg 194D  
            __CFG_WDTE$OFF 0000            __end_of___awmod 1C53            __end_of___flmul 0C9D  
          __end_of___flsub 1B51            __end_of___fltol 1DA0                      _ANSEL 0188  
          __end_of___lldiv 1CBB            ___awdiv@divisor 0020            __end_of___llmod 1BFA  
          __end_of___lwdiv 1AB1            __end_of___lwmod 004E            ___awdiv@counter 0025  
                    _PORTA 0005                      _PORTB 0006                      _PORTD 0008  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
            _start_another 00D5             __CFG_FCMEN$OFF 0000            __end_of_dpowers 18A0  
                    _scale 0C9D            __end_of_isdigit 195F                      _volt1 00D1  
                    _volt2 00CD             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07F3  
           __CFG_MCLRE$OFF 0000            __initialization 07F3               __end_of_main 093C  
           ADC_init@int_on 0075                     ??_main 006C                  ??_LCD_CMD 0074  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0024                     ?_scale 0044  
                   _ADRESH 001E           ___awdiv@dividend 0022                     _ANSELH 0189  
                   i1l3510 100E                     i1l3512 1019                     i1l3514 101F  
                   i1l3516 1023                     i1l3508 1008                     i1l3518 1029  
                   u561_20 100E                     u561_21 100D                     u562_20 1019  
                   u562_21 1018           __end_of___xxtofl 1F00             __CFG_PWRTE$OFF 0000  
         ??_LCD_SET_CURSOR 0078           __end_of__powers_ 1844                     ___flge 1DA0  
                   ___fleq 1AB1                  ??___fladd 0060                     ___wmul 19B0  
                ??___awdiv 0024                  ??___flneg 0078                  ??___awmod 0078  
                ??___flmul 0032                  ??___flsub 007B                  ??___fltol 005B  
                ??___lldiv 0074                  ??___llmod 0074                  ??___lwdiv 007A  
                ??___lwmod 0078                     _fround 004E           ___awdiv@quotient 0027  
          ___awmod@divisor 0074            ___awmod@counter 0079               EUSART_Init@a 0075  
             EUSART_Init@b 0074                  ??_isdigit 0074         __size_of__Umul8_16 0029  
                   saved_w 007E         __size_of_Port_init 0018                  ?_ADC_init 0074  
                ??_sprintf 00AD                 ___flge@ff1 0020                 ___flge@ff2 0024  
             ___xxtofl@arg 0026       __size_of_EUSART_Init 0029                  ?_LCD_INIT 0071  
             ___xxtofl@exp 0025               ___xxtofl@val 0074                 ___fleq@ff1 0020  
               ___fleq@ff2 0024    __end_of__initialization 07FC                 ___flneg@f1 0074  
         ??_LCD_WRITE_CHAR 0074                 ___fltol@f1 0057             __pcstackCOMMON 0071  
            __end_of_scale 1000            ADC_init@channel 0074                 __div_to_l_ 10F0  
               ??_ADC_init 0077          ?_start_conversion 0071            __div_to_l_@exp1 007A  
          __div_to_l_@cntr 0079                    ??_scale 0048            __div_to_l_@quot 0075  
             sprintf@width 00BD         ??_start_conversion 0074                 __pbssBANK1 00CD  
               ??_LCD_INIT 0077  __size_of_LCD_WRITE_STRING 0044              __div_to_l_@f1 0020  
            __div_to_l_@f2 0024          __end_of__Umul8_16 1A27          __end_of_Port_init 081A  
               __pmaintext 081A                    ?___flge 0020                    ?___fleq 0020  
                  ?___wmul 0074                 __pintentry 0004                    ?_fround 0044  
                  _LCD_CMD 195F                  ?___xxtofl 0074            LCD_SET_CURSOR@a 0079  
          LCD_SET_CURSOR@b 0077                 __stringtab 1800          LCD_WRITE_STRING@a 0077  
        LCD_WRITE_STRING@i 0079          __end_of__npowers_ 1878                 _scale$1210 0052  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 1274  
    ADC_init@left_or_right 0076                    ___awdiv 1CBB                    ___flneg 1942  
                  ___awmod 1BFA                    ___flmul 093C                    ___flsub 1B01  
                  ___fltol 1D24                    ___lldiv 1C53            __size_of___wmul 0025  
                  ___llmod 1BA4                    ___lwdiv 1A6B                    ___lwmod 0014  
          __size_of_fround 020D                    __ptext1 0010                    __ptext2 14FC  
                  __ptext3 0C9D                    __ptext4 1BFA                    __ptext5 1CBB  
                  __ptext6 194D                    __ptext7 004E                    __ptext8 0014  
                  __ptext9 1A6B                ?__div_to_l_ 0020                    _dpowers 1878  
                  _isdigit 194D               __size_of_isr 002B                 ??___xxtofl 0020  
         ___awmod@dividend 0076                    _sprintf 14FC                    clrloop0 1001  
                  _string1 00DD                    _string2 00D8       end_of_initialization 07FC  
          ___lldiv@divisor 0020            ___lldiv@counter 0079                  _RCSTAbits 0018  
                  psplit$0 B002B             __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024  
            ??__tdiv_to_l_ 0074                  _PORTDbits 0008                ___fladd@grs 006B  
            ___xxtofl@sign 0024          __size_of_ADC_init 00C4           _LCD_WRITE_STRING 1A27  
              ___flmul@grs 0038                  _TXSTAbits 0098          __size_of_LCD_INIT 0053  
      __size_of__div_to_l_ 00C0               ADC_init@Fosc 0079             __end_of___flge 1E44  
           __end_of___fleq 1B01             __end_of___wmul 19D5                _BAUDCTLbits 0187  
        pnum$text2_split_1 002B             __end_of_fround 025B        start_initialization 07F3  
      __end_of__tdiv_to_l_ 10F0                __end_of_isr 1033              ??_EUSART_Init 0075  
          LCD_WRITE_CHAR@a 0076            ___llmod@divisor 0020            ___llmod@counter 0075  
 __CFG_FOSC$INTRC_NOCLKOUT 0000  __size_of_start_conversion 0004                   ??___flge 0074  
                 ??___fleq 0074                   ??___wmul 0078                  __Umul8_16 19FE  
                _Port_init 0802                   ??_fround 0048              sprintf@tmpval 00BF  
                ___fladd@a 005C                  ___fladd@b 0058                   LCD_CMD@a 0076  
                 ?_LCD_CMD 0071                 fround@prec 0057    __size_of_LCD_SET_CURSOR 0024  
                ___flmul@a 002E                  ___flmul@b 002A                  ___flsub@a 00A0  
                ___flsub@b 00A4                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BC               _isdigit$1009 0074  
              sprintf@flag 00BB                sprintf@eexp 00C3                sprintf@fval 00C5  
              sprintf@prec 00CA        __end_of_EUSART_Init 19FE           ___lwdiv@dividend 0022  
                 ?___fladd 0058                   ?___awdiv 0020                   ?___flneg 0074  
                 ?___awmod 0074                   ?___flmul 002A                   ?___flsub 00A0  
                 ?___fltol 0057                   ?___lldiv 0020                   ?___llmod 0020  
                __npowers_ 1844                 ?__Umul8_16 0074                   ?___lwdiv 0020  
                 ?___lwmod 0074    __size_of_LCD_WRITE_CHAR 0017                 ?_Port_init 0071  
                __pstrings 1800                __tdiv_to_l_ 1033               ??__div_to_l_ 0074  
                 ?_isdigit 0071                   _ADC_init 11B0           ___lwdiv@quotient 0024  
                 ?_sprintf 00A8             __size_of_scale 0363     LCD_SET_CURSOR@temporal 007A  
                 _LCD_INIT 1B51          interrupt_function 0004             ___wmul@product 0078  
                clear_ram0 1000                   _PIE1bits 008C                   _PIR1bits 000C  
       __end_of__div_to_l_ 11B0   __end_of_LCD_WRITE_STRING 1A6B                 _ADCON0bits 001F  
              __stringbase 180F                 _ADCON1bits 009F          ___wmul@multiplier 0074  
         __size_of_LCD_CMD 0016                _EUSART_Init 19D5           _start_conversion 0010  
              ??__Umul8_16 0076           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059                ??_Port_init 0074  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003A                _fround$1208 0053                _fround$1209 004F  
       __end_of__stringtab 1810             _LCD_SET_CURSOR 198C                 sprintf@val 00B7  
                 ___xxtofl 1E44           __size_of_isdigit 0012            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0026                   __ptext10 093C                   __ptext11 19FE  
                 __ptext20 1274                   __ptext12 1033                   __ptext21 1942  
                 __ptext13 10F0                   __ptext30 19D5                   __ptext22 1DA0  
                 __ptext14 1E44                   __ptext31 11B0                   __ptext23 1AB1  
                 __ptext15 19B0                   __ptext32 1008                   __ptext24 0802  
                 __ptext16 1BA4                   __ptext25 1A27                   __ptext17 1C53  
                 __ptext26 1975                   __ptext18 1D24                   __ptext27 198C  
                 __ptext19 1B01                   __ptext28 1B51                   __ptext29 195F  
        __CFG_BOR4V$BOR40V 0000                   __powers_ 1810           __size_of_sprintf F2F7  
            __size_of_main 0122                  pnum$text2 000B             _LCD_WRITE_CHAR 1975  
   __end_of_LCD_SET_CURSOR 19B0                 _INTCONbits 000B                   isdigit@c 0075  
                 scale@scl 0056                   intlevel1 0000                  sprintf@ap 00B6  
         __tdiv_to_l_@exp1 002D           __tdiv_to_l_@cntr 002C                  sprintf@sp 00C9  
         __tdiv_to_l_@quot 0028           ___lwmod@dividend 0076           ___lldiv@dividend 0024  
                stringcode 180A     __end_of_LCD_WRITE_CHAR 198C            ?_LCD_SET_CURSOR 0077  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0074                   sprintf@c 00CC  
                 sprintf@f 00A8           ___lldiv@quotient 0075            ___lwmod@divisor 0074  
          ___lwmod@counter 0079                   stringdir 180A                   stringtab 1800  
            ___fladd@signs 0068               ___fladd@aexp 0069               ___fladd@bexp 006A  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
